{"version":3,"sources":["Stores/StickerStore.js","Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/NotificationsControl.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/SharedDocument.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Popup/CreatePollDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["store","StickerStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","reset","stickerSet","hint","onUpdate","update","authorization_state","sticker_set_ids","_this$stickerSet","id","is_installed","some","x","assign","emit","onClientUpdate","timestamp","foundStickers","stickers","addTdLibListener","TdLibController","addListener","removeTdLibListener","removeListener","setMaxListeners","Infinity","EventEmitter","window","sticker","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","send","@type","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsControl","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItem_default","button","listItem","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","loadChatContents","getGroupChatMembers","loadUsersContent","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","counters","list","scrollHeight","offsetHeight","_this$props6","migratedCounters","_this$props7","onOpenGroupInCommon","onOpenSharedDocument","onOpenSharedMedia","_this$props8","_counters$map","el","_counters$map2","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","Components_ColumnRight_ChatDetailsHeader","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isMeChat","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","Photo_default","Videocam_default","InsertDriveFile_default","Headset_default","InsertLink_default","Mic_default","Group_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","getChatUserId","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedDocument","handleOpenMessage","handleCloseContextMenu","messageId","handleForward","forwardMessages","handleDelete","can_be_deleted_for_all_users","openDeleteDialog","canBeDeletedForAllUsers","revoke","handleContextMenu","_ref","left","top","stopPropagation","contextMenu","clientX","clientY","_x","handleRevokeChange","handleCloseDelete","handleDeleteContinue","can_be_deleted_only_for_self","onContextMenu","getMedia","openMedia","Popover_default","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList_default","root","menuListRoot","MenuItem_default","transitionDuration","DialogContent_default","DialogContentText_default","FormControlLabel_default","control","Checkbox_default","label","minWidth","SharedDocumentHeader","title","headerBackButton","SharedDocuments","isDocumentMessage","insertByOrder","array","element","comparator","toConsumableArray","slice","messageComparatorDesc","right","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","onUpdateNewMessage","loadMessageContents","onUpdateDeleteMessages","_this$state3","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","onLoadMigratedNext","loadIncomplete","fromMessageId","incomplete","_args","undefined","loading","migrateCompleted","query","sender_user_id","from_message_id","offset","finally","messages","setItems","_args2","completed","handleScroll","listRef","_this$state4","Tile_SharedMedia_SharedDocument","onScroll","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","ChatInfo","onClientUpdateChatId","nextChatId","sharedDocuments","userChatId","openSharedMedia","openSharedDocuments","openGroupInCommon","getCounters","loadChatCounters","loadMigratedCounters","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","_x2","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","ColumnRight_SharedMedia_SharedDocuments","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","Date","includes","splice","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","offset_date","offset_message_id","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","filterDuplicateMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","Search_SearchCaption","closeSearchIconButton","default","ThemePicker","target","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","iconButton","AttachFile_default","disabled","canSendPhotos","canSendDocuments","canSendPolls","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","option","onDelete","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","replace","POLL_OPTION_MAX_LENGTH","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","fontSize","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","userSelect","isValidPoll","poll","question","options","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","every","isValidOption","PollStore","now","source1","source2","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","clear","Components_Popup_CreatePollOption","canAddOption","contentRoot","flexGrow","POLL_QUESTION_HINT_LENGTH","dividerRoot","listRoot","disableTypography","typographyRoot","ReplyTile","onClientUpdatePhotoBlob","fileId","src","getSrc","isBlurred","isBlurredThumbnail","isVideoNote","hasVideoNote","reply-tile-photo-round","reply-tile-photo-loading","media-blurred","draggable","alt","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getTitle","getReplyPhotoSize","accentBackgroundLight","Components_Tile_ReplyTile","accentColorMain","replyContentSubtitle","accentStyles","InputBoxHeader","Reply_default","replyIcon","Components_Message_Reply","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","__webpack_require__","bind","InputBoxControl","onClientUpdateStickerSend","item","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","replyToMessageId","setInputFocus","getChatDraftReplyToMessageId","openPasteDialog","setDraft","draft","getChatDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","input_message_text","handleSubmit","attachPhotoRef","click","handleAttachPhotoComplete","files","Array","from","file","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","setTyping","data","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteContinue","handleClosePaste","blob","sending_state","getSize","PHOTO_SIZE","is_downloading_completed","updatePhotoBlob","clearDraft","invokeScheduledAction","newChatDraftMessage","t0","alert","JSON","stringify","_x3","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","_x4","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","InsertEmoticon_default","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Popup_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","basicGroup","Components_ColumnMiddle_InputBoxControl","is_member","can_send_messages","is_channel","ColumnMiddle_NotificationsCommandControl","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","other","objectWithoutProperties","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","selectedItems","values","Symbol","iterator","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","VolumeOff_default","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","placement","&[x-placement*=\"bottom\"] $arrow","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","prevMessageId","stateClassName","messageStatusSucceeded","messageStatusFailed","messageStatusPending","light","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","smallPhoto","float","Media_Photo","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","selectMessage","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","_this$props12","edit_date","forward_info","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Check_default","messageSelectTick","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","unpinned_message_id","handleUnpin","pinnedMessage","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","is_outgoing","replaceMessage","handleScrollBehavior","viewMessages","newState","scrollDownVisible","insertPrevious","filterMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","last_message","scrollBehaviorNone","prevHistory","_ref5","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","separatorMessageId","throttle","historyEquals","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatFullInfo","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","getStickersLink","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","set_id","dialogTitleRoot","disablePointerEvents","Popup_ShareStickerSetButton","shareButtonRoot","flexWrap","flexDirection","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Components_ColumnMiddle_Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","isStopped","isPaused","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","handleSave","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.485683c3.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATIONS_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATIONS_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ctor', this.props.counters);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.componentDidMount');\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            classes,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedDocument,\n            onOpenSharedMedia,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n        console.log('ChatDetails.render counters', counters, migratedCounters);\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {isGroup && <MoreListItem chatId={chatId} />}\n                                {popup && !isGroup && (\n                                    <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedMedia}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenSharedDocument}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className={classes.listItem}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className={classes.listItem} onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                            <Divider />\n                        </>\n                    )}\n                    <List>{items}</List>\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedDocument: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { getChatShortTitle, isPrivateChat } from '../../../Utils/Chat';\nimport { getMedia, openMedia } from '../../../Utils/Message';\nimport { forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocument.css';\n\nconst styles = {\n    menuListRoot: {\n        minWidth: 150\n    }\n};\n\nclass SharedDocument extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n            openDeleteDialog: false,\n            revoke: false\n        };\n    }\n\n    handleOpenMessage = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_deleted_for_all_users } = message;\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: can_be_deleted_for_all_users,\n            revoke: can_be_deleted_for_all_users\n        });\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { chatId, messageId } = this.props;\n        const { revoke } = this.state;\n\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [messageId],\n            revoke: revoke\n        });\n    };\n\n    render() {\n        const { chatId, classes, messageId, t } = this.props;\n        const { contextMenu, left, top, openDeleteDialog, revoke } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const count = 1;\n\n        return (\n            <div className='shared-document' onContextMenu={this.handleContextMenu}>\n                {getMedia(message, () => openMedia(chatId, messageId, true))}\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList classes={{ root: classes.menuListRoot }} onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>\n                        {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                            <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {can_be_deleted_for_all_users && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport { between } from '../../../Utils/Common';\nimport { isSupergroup } from '../../../Utils/Chat';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedDocuments.css';\n\nconst styles = {\n    headerBackButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nfunction SharedDocumentHeader({ classes, title, onClick, onClose }) {\n    return (\n        <div className='header-master'>\n            <IconButton className={classes.headerBackButton} onClick={onClose}>\n                <ArrowBackIcon />\n            </IconButton>\n            <div className='header-status grow cursor-pointer' onClick={onClick}>\n                <span className='header-status-content'>{title}</span>\n            </div>\n        </div>\n    );\n}\n\nclass SharedDocuments extends React.Component {\n    constructor(props) {\n        console.log('SharedDocuments.ctor');\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: []\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    isDocumentMessage = message => {\n        if (!message) return false;\n\n        const { content } = message;\n        if (!content) return false;\n\n        return content['@type'] === 'messageDocument';\n    };\n\n    insertByOrder = (array, element, comparator) => {\n        let i = 0;\n        for (; i < array.length && comparator(array[i], element) < 0; i++) {}\n\n        return [...array.slice(0, i), element, ...array.slice(i)];\n    };\n\n    messageComparatorDesc = (left, right) => {\n        return left.id - right.id;\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (new_content['@type'] === 'messageDocument') {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: this.insertByOrder(items, message, this.messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (new_content['@type'] === 'messageDocument') {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: this.insertByOrder(migratedItems, message, this.messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id, content } = message;\n\n        if (chat_id !== chatId) return;\n        // console.log(`SharedDocuments.onUpdateNewMessage chat_id=${chat_id} message_id=${message.id}`, this.state.items);\n\n        if (content['@type'] !== 'messageDocument') return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext();\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.onLoadNext();\n    };\n\n    onLoadMigratedNext = async (loadIncomplete = true) => {\n        const { chatId, migratedChatId } = this.props;\n        const { migratedItems: items } = this.state;\n\n        if (!isSupergroup(chatId)) return;\n        if (!migratedChatId) return;\n\n        if (this.loading) return;\n        if (this.migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: { '@type': 'searchMessagesFilterDocument' }\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.migratedItems !== items) return;\n\n        this.migrateCompleted = result.messages.length === 0;\n        if (this.migrateCompleted) return;\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ migratedItems: items.concat(result.messages.filter(this.isDocumentMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadMigratedNext(false);\n        }\n    };\n\n    onLoadNext = async (loadIncomplete = true) => {\n        // console.log('SharedDocuments.onLoadNext');\n        const { chatId } = this.props;\n        const { items } = this.state;\n\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter: { '@type': 'searchMessagesFilterDocument' }\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (this.state.items !== items) return;\n\n        this.completed = result.messages.length === 0;\n        if (this.completed) {\n            this.onLoadMigratedNext(true);\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: items.concat(result.messages.filter(this.isDocumentMessage)) });\n\n        const incomplete = result.messages.length > 0 && result.messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n        if (loadIncomplete && incomplete) {\n            this.onLoadNext(false);\n        }\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            if (!this.completed) {\n                this.onLoadNext();\n            } else {\n                this.onLoadMigratedNext();\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    render() {\n        const { classes, t, onClose } = this.props;\n        const { items, migratedItems } = this.state;\n        // console.log('SharedDocuments.render', items, migratedItems, this.state);\n\n        const messages = items\n            .concat(migratedItems)\n            .map(x => (\n                <SharedDocument key={`chat_id=${x.chat_id}_message_id=${x.id}`} chatId={x.chat_id} messageId={x.id} />\n            ));\n\n        return (\n            <>\n                <SharedDocumentHeader\n                    classes={classes}\n                    title={t('DocumentsTitle')}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                />\n                <div ref={this.listRef} className='shared-documents-list' onScroll={this.handleScroll}>\n                    {messages}\n                </div>\n            </>\n        );\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log('ChatDetails.ChatInfo.ctor');\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedDocuments = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openSharedMedia: false,\n            openSharedDocuments: false,\n            openGroupInCommon: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        console.log('ChatInfo.loadMigratedCounters');\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        console.log('ChatInfo.loadMigratedCounters chat', chat);\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    render() {\n        console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedDocuments,\n            openSharedMedia,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenSharedDocument={this.handleOpenSharedDocuments}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    replyContentSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorMain)}>{title}</div>\n                        )}\n                        <div className={classNames('reply-content-subtitle', classes.replyContentSubtitle)}>\n                            {content}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.primary.main\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n        this.handleInput();\n\n        if (!text) return;\n        if (!text.trim()) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense\n                                fallback={\n                                    <IconButton className={classes.iconButton} aria-label='Emoticon'>\n                                        <InsertEmoticonIcon />\n                                    </IconButton>\n                                }>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton\n                                color='primary'\n                                className={classes.iconButton}\n                                aria-label='Send'\n                                onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        forwardMessages(id, messageIds);\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageStatus.css';\nimport PropTypes from 'prop-types';\n\nconst styles = theme => ({\n    messageStatusFailed: {\n        background: theme.palette.error.light\n    },\n    messageStatusPending: {\n        background: theme.palette.primary.light\n    },\n    messageStatusSucceeded: {\n        background: theme.palette.primary.light\n    }\n});\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            prevChatId: props.chatId,\n            prevMessageId: props.messageId,\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                sendingState: props.sendingState\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.removeListener('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { sendingState, unread } = this.state;\n\n        let stateClassName = classNames('message-status-succeeded', classes.messageStatusSucceeded);\n        if (sendingState) {\n            stateClassName =\n                sendingState['@type'] === 'messageSendingStateFailed'\n                    ? classNames('message-status-failed', classes.messageStatusFailed)\n                    : classNames('message-status-pending', classes.messageStatusPending);\n        }\n\n        return unread && <i className={classNames('message-status-icon', stateClassName)} />;\n    }\n}\n\nMessageStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object\n};\n\nexport default withStyles(styles, { withTheme: true })(MessageStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    messageSelectTick: {\n        background: theme.palette.primary.main,\n        color: 'white'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            console.log('Message.shouldComponentUpdate true');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <div className='message-left-padding'>\n                        <CheckMarkIcon className={classNames('message-select-tick', classes.messageSelectTick)} />\n                        {this.unread && (\n                            <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                        )}\n                    </div>\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: 0,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `MessagesList.getSnapshotBeforeUpdate\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${scrollTop}\n        //     list.scrollHeight=${scrollHeight}\n        //     list.offsetHeight=${offsetHeight}`\n        // );\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n        // console.log(\n        //     `MessagesList.componentDidUpdate\n        //     chat_id=${chatId} message_id=${messageId}\n        //     prevProps.chat_id=${prevProps.chatId} prevProps.message_id=${prevProps.messageId}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('MessagesList.shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('MessagesList.shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('MessagesList.shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('MessagesList.shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('MessagesList.shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('MessagesList.shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('MessagesList.shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('MessagesList.shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('MessagesList.shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('MessagesList.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.insertPrevious(filterMessages(history), newState, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            MessagesList.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        // console.log('MessagesList.handleScroll');\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= 0) {\n            // console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            // console.log('SCROLL HANDLESCROLL onLoadPrevious', list.scrollTop, list.offsetHeight, list.scrollHeight, history);\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                // console.log('MessagesList.handleScroll scrollDownVisible=true');\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `MessagesList.handleScrollBehavior\n        //     chatId=${chatId} messageId=${messageId}\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.scrollHeight=${scrollHeight}\n        //     snapshot.offsetHeight=${offsetHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `MessagesList.keepScrollPosition after\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        let separatorMessageId = 0;\n        this.replace(separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n\n                  // return m;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}