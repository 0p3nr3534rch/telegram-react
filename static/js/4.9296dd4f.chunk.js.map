{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Utils/Animatior.js","Assets/Icons/Smile.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Assets/Icons/Share.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Assets/Icons/FullScreen.js","Components/Player/Hint.js","Components/Player/Progress.js","Components/Player/Player.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","this","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","Animator","duration","options","start","stopped","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","n","sin","PI","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","onUpdateUserStatus","update","userId","user_id","user","UserStore","get","online","isUserOnline","getChatUserId","chatId","on","off","size","borderSize","style","width","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","onUpdateChatPhoto","chat_id","photo","store","FileStore","getStore","loadChatContent","onUpdateChatTitle","handleSelect","event","onSelect","stopPropagation","handleLoad","nextProps","nextState","ChatStore","showOnline","showSavedMessages","small","dialog","big","t","isDeletedPrivateChat","classNames","onClick","pointer","DeletedAccount","fontSize","isMeChat","chat","letters","getChatLetters","src","getSrc","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","text","a","navigator","clipboard","writeText","console","error","copyOld","element","successful","document","createElement","contentEditable","readOnly","value","all","position","top","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","appendChild","focus","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","e","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","handleClose","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","key","aria-label","color","Close","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerHTML","innerText","handleSearchKeyDown","keyCode","preventDefault","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","handleClick","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","ListItemText","primary","Typography","variant","noWrap","ListItemSecondaryAction","Switch","onChange","checked","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","clientUpdate","handleOpenChat","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","items","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","List","alignItems","wordWrap","Divider","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","messageId","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","left","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","onContextMenu","getMedia","openMedia","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","Boolean","SpeedDialIcon","icon","openIcon","SharedMediaBase","TypeError","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","index","findIndex","isValidContent","insertByOrder","messageComparatorDesc","slice","onUpdateNewMessage","isValidMessage","loadMessageContents","onUpdateDeleteMessages","callback","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","sender_user_id","from_message_id","offset","finally","messages","total_count","incompleteResults","setItems","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLink","url","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedLinks","web_page","close","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","fileId","thumbnailSize","getSize","minithumbnail","miniSrc","data","thumbSrc","isBlurredThumbnail","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedPhotos","SharedVideo","onClientUpdateVideoThumbnailBlob","video","file","isBlurred","THUMBNAIL_BLURRED_SIZE_90","getDurationString","SharedVideos","SharedVoiceNote","i18n","voiceNote","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","SharedVoiceNotes","voice_note","ChatInfo","onClientUpdatePageWidth","isSmallWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","currentChatId","classes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","filters","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","window","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","r","Status","onUpdateMessageSend","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","last_message","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","handleMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","getViewInfoTitle","is_channel","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","hidden","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","target","isVisibleItem","overScanCount","renderIdsList","nextContext","addEventListener","item","removeEventListener","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","remove","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","onBackspace","handleInput","inputRef","onFocus","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","showBack","Filters","hasObserver","onClientUpdateLanguageChange","setSelection","onClientUpdateCacheLoaded","cachedFilters","onWindowResize","transition","scroll","filtersRef","main","filterRef","scrollWidth","chat_filter_id","filterSelection","filterSelectionRef","transitionStyle","cssText","animator","scrollLeft","clamp","offsetWidth","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleFilterClick","handleWheel","deltaY","throttle","observeResize","LocalizationStore","unobserveResize","observer","ResizeObserver","observe","resizeObserver","unobserve","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","max","CHAT_SLICE_LIMIT","replace","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","blur","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","KeyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getBoldItalicEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","offsetLeft","offsetTop","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","Lottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","json","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","anim","isPaused","goToAndPlay","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","animationData","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","secondary","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","root","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","tabIndex","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","container","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","disabled","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","clearTimeout","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","media","audio","performer","altKey","ctrlKey","metaKey","code","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","alpha","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","track","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","oncanplay","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","getVolumeIcon","onMouseEnter","onMouseLeave","visibility","Slider","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","floor","getTimeString","timeString","Playlist","scrollToActive","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","playlist","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","reverse","HeaderPlayer","player","videoRef","paused","fadeOutVolume","pausedForRecord","fadeInVolume","onClientUpdateMediaSeek","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","play","onClientUpdateMediaBlob","streaming","video_note","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","mime_type","setFileOptions","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","handleCanPlay","hasAudio","muted","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","currentVolume","volumeInterval","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","getMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","file_id","synchronous","handleTest","chunk","filePart","getArrayBuffer","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","Share","FrameCheck","RemoveCheck","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","instantView","newWindow","opener","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","Video","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","forward_info","isOutgoing","inlineMeta","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","isMetaBubble","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","getSticker","mouseDownStickerId","handleMouseUp","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","STICKER_SET","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","iv","RichText","richText","String","email_address","emailAddress","texts","getRichText","object","Anchor","Caption","credit","hasText","isEmptyText","hastCredit","block","need_autoplay","pageBlock","IV_PHOTO_DISPLAY_SIZE","AuthorDate","author","publishDate","hasAuthor","hasDate","rel","dateTime","toISOString","dateFormat","Blockquote","pageBlocks","getPageBlock","Cover","cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevUrl","prevHtml","authorPhoto","ErrorHandler","errorInfo","componentStack","footer","Kicker","kicker","data-before","page_blocks","Paragraph","IV_PHOTO_SIZE","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","articles","publish_date","Subheader","subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","thumbnailSrc","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","cells","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","Location","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","ChatLink","needAutoplay","isLooped","openInstantViewMedia","fileCancel","is_downloading_active","remote","is_uploading_active","cancelUploadFile","download","updateAnimationBlob","setInstantViewViewerContent","updateAudioBlob","updateVideoBlob","is_open","posterPhoto","poster_photo","is_full_width","allow_scrolling","author_photo","zoom","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","blocks","dir","MediaCaption","Hint","onClientUpdateMediaHint","animated","checkTimeout","Progress","waiting","handleWaiting","strokeDasharray","strokeDashoffset","Player","handleSeek","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","PLAYER_VOLUME_STEP","handleFullScreen","handlePictureInPicture","progress","handleSeekProgress","PLAYER_PLAYBACKRATE_STEP","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onClientUpdateMediaShortcut","startStopPlayer","handlePause","buffered","handleLoadedData","handleLoadedMetadata","draggingTime","handleChangeCommitted","isFinite","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","exitFullscreen","requestFullscreen","handleClickRoot","mouseDownRoot","handleMouseDownRoot","handleVolumeChange","onVolumeChange","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","handleProgress","getBufferedTime","end","pictureInPictureElement","mozPictureInPictureElement","webkitPictureInPictureElement","exitPictureInPicture","requestPictureInPicture","onpause","handleLeavePictureInPicture","handleDoubleClick","handleVideoKeyDown","handlePanelEnter","panelEnter","handlePanelLeave","mouseOverTimeout","rootRef","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","mozRequestPictureInPicture","webkitRequestPictureInPicture","mozExitPictureInPicture","webkitExitPictureInPicture","poster","bufferedTime","bufferedValue","durationString","rootStyle","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","pictureInPictureEnabled","mozPictureInPictureEnabled","webkitPictureInPictureEnabled","onDoubleClick","onMouseMove","playsInline","onLoadedMetadata","onLoadedData","onProgress","onWaiting","rail","thumb","active","onChangeCommitted","FullScreen","InstantViewMediaViewerContent","getViewerFile","supportsStreaming","onClientUpdateMediaThumbnailBlob","isPlaying","videoWidth","videoHeight","scale","handleContentClick","prevMedia","getViewerThumbnail","getViewerMinithumbnail","minithumbnailWidth","minithumbnailHeight","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","Provider","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","getMediaPreviewFile","loadNextBuffer","isVideo","isVideoMessage","isAnimation","isAnimationMessage","getMediaMiniPreview","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleWrapperClick","mouseDownTarget","handleWrapperMouseDown","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","inHistory","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.9296dd4f.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main;\n                left += isSmallWidth ? 0 : 7;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                left += main.scrollWidth;\n            }\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter;\n                    left += isSmallWidth ? 0 : 7;\n                    break;\n                } else {\n                    left += filter.scrollWidth;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left}px; width: ${item.scrollWidth - 14}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    {isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        {isSmallWidth ? getFirstLetter(x.title) : x.title}\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[p] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getBoldItalicEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getBoldItalicEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_2.json')\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: true,\n                                    loop: false,\n                                    animationData: data,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                    }\n                                }}\n                                onClick={this.handleAnimationClick}\n                            />\n                        </React.Suspense>\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.on('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        // ChatStore.off('updateChatChatList', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        // console.log('[f] filters', filters);\n\n        const filtersMap = new Map();\n        for (let i = 0; i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        // console.log('[f] recommended', recommendedFilters);\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.json()));\n\n            this.setState(\n                {\n                    data\n                }\n            );\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.anim) return;\n        if (!lottie.anim.isPaused) return;\n\n        lottie.anim.goToAndPlay(0);\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        // console.log('[f] filters.render');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            <React.Suspense fallback={null}>\n                                <Lottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        autoplay: true,\n                                        loop: false,\n                                        animationData: data,\n                                        renderer: 'svg',\n                                        rendererSettings: {\n                                            preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                            clearCanvas: false,\n                                            progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                            hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        }\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n\n        setTimeout(() => {\n            const { innerText } = this.newMessageRef.current;\n            console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        console.log('[recorder] stop', this.recorder, cancelled);\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        console.log('[recorder] handleRecord', this.recorder);\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            console.log('[recorder] stream start', this.recorder);\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            console.log('[recorder] stream ready', this.recorder);\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n            console.log('[recorder] onstart', this.recorder);\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            console.log('[recorder] onstop', this.recorder, cancelled);\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        console.log('[recorder] start', this.recorder);\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message),\n            mimeType: this.getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { chatId, messageId, value } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) return;\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = message => {\n        const { chat_id, id } = message;\n\n        const { src: prevSrc } = this.state;\n\n        const src = this.getMediaSrc(message);\n        const mimeType = this.getMediaMimeType(message);\n        const playing = Boolean(src);\n        const { playlist } = PlayerStore;\n\n        this.setState(\n            {\n                message,\n                playlist,\n                playing,\n                src,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                }\n                player.currentTime = this.startTime;\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        chatId: chat_id,\n                        messageId: id\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        const { streaming } = TdLibController;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        if (streaming) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    if (streaming) return;\n\n                    const { audio: file } = audio;\n                    if (file) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(PlayerStore.message);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaMimeType = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    return audio.mime_type;\n                }\n\n                if (voice_note) {\n                    return voice_note.mime_type;\n                }\n\n                if (video_note) {\n                    return 'video/mp4';\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        return web_page.audio.mime_type;\n                    }\n\n                    if (web_page.voice_note) {\n                        return web_page.voice_note.mime_type;\n                    }\n\n                    if (web_page.video_note) {\n                        return 'video/mp4';\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const { audio: file } = audio;\n                    if (file) {\n                        let src = getSrc(file);\n                        if (!src && TdLibController.streaming) {\n                            src = `/streaming/file_id=${file.id}`;\n                            setFileOptions(src, { fileId: file.id, size: file.size, mimeType: audio.mime_type });\n                        }\n\n                        return src;\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src, mimeType } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                >\n                    {source}\n                </video>\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\nimport { getArrayBuffer } from '../../Utils/File';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = async event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { audio } = content;\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { id: file_id } = file;\n\n        const result = await TdLibController.send({\n            '@type': 'downloadFile',\n            file_id,\n            priority: 1,\n            offset: 10 * 1024,\n            limit: 1024,\n            synchronous: true\n        });\n\n        const blob = await TdLibController.send({\n            '@type': 'readFilePart',\n            file_id,\n            offset: 10 * 1024,\n            count: 1024\n        });\n\n        console.log('[file] result', result, blob);\n    };\n\n    handleTest = async () => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { video } = content;\n        if (!video) return;\n\n        const { video: file } = video;\n        if (!file) return;\n\n        const { size } = file;\n\n        const chunk = 512 * 1024;\n        const count = size / chunk;\n\n        for (let i = 0; i < count; i++) {\n            console.log('[d] filePart', file.id, chunk * i);\n            await TdLibController.send({\n                '@type': 'downloadFile',\n                file_id: file.id,\n                priority: 1,\n                offset: chunk * i,\n                limit: chunk,\n                synchronous: true\n            });\n\n            const filePart = await TdLibController.send({\n                '@type': 'readFilePart',\n                file_id: file.id,\n                offset: chunk * i,\n                count: chunk\n            });\n\n            const buffer = await getArrayBuffer(filePart.data);\n        }\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleTest}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary='Test' />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\nimport { getEntities, getFormattedText, getText, getTwitterInstagramEntities } from '../../../Utils/Message';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply, replyMessage, forwardMessages\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        d='M5,14 C5.55228475,14 6,14.4477153 6,15 L6,18 L9,18 C9.55228475,18 10,18.4477153 10,19 C10,19.5522847 9.55228475,20 9,20 L5,20 C4.44771525,20 4,19.5522847 4,19 L4,15 C4,14.4477153 4.44771525,14 5,14 Z M19,14 C19.5522847,14 20,14.4477153 20,15 L20,15 L20,19 C20,19.5522847 19.5522847,20 19,20 L19,20 L15,20 C14.4477153,20 14,19.5522847 14,19 C14,18.4477153 14.4477153,18 15,18 L15,18 L18,18 L18,15 C18,14.4477153 18.4477153,14 19,14 Z M9,4 C9.55228475,4 10,4.44771525 10,5 C10,5.55228475 9.55228475,6 9,6 L9,6 L6,6 L6,9 C6,9.55228475 5.55228475,10 5,10 C4.44771525,10 4,9.55228475 4,9 L4,9 L4,5 C4,4.44771525 4.44771525,4 5,4 L5,4 Z M19,4 C19.5522847,4 20,4.44771525 20,5 L20,9 C20,9.55228475 19.5522847,10 19,10 C18.4477153,10 18,9.55228475 18,9 L18,6 L15,6 C14.4477153,6 14,5.55228475 14,5 C14,4.44771525 14.4477153,4 15,4 L19,4 Z'\n    />,\n    'FullScreen'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Hint.css';\n\nclass Hint extends React.Component {\n    state = { text: null };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaHint', this.onClientUpdateMediaHint);\n    }\n\n    onClientUpdateMediaHint = update => {\n        const { fileId, text } = update;\n        if (fileId !== this.props.fileId) return;\n\n        const { animated } = this.state;\n\n        clearTimeout(this.checkTimeout);\n        this.setState({\n            text,\n            animated: false\n        }, () => {\n            this.checkTimeout = setTimeout(() => {\n                if (this.state.text !== text) return;\n\n                this.setState({\n                    animated: true\n                })\n            }, 250);\n        });\n    };\n\n    handleAnimationEnd = event => {\n        this.setState({\n            text: null,\n            animated: false\n        })\n    }\n\n    render() {\n        const { animated, text } = this.state;\n        if (!text) return null;\n\n        return (\n            <div className={classNames('player-hint', { 'player-hint-animated': animated })} onAnimationEnd={this.handleAnimationEnd}>\n                <span>{text}</span>\n            </div>\n        );\n    }\n}\n\nHint.propTypes = {\n    fileId: PropTypes.number\n};\n\nexport default Hint;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './Progress.css';\n\nclass Progress extends React.Component {\n    state = {\n        waiting: false\n    };\n\n    componentDidMount() {\n        this.handleWaiting();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.waiting !== this.props.waiting) {\n            this.handleWaiting();\n        }\n    }\n\n    handleWaiting = () => {\n        const { waiting } = this.props;\n        if (!waiting) {\n            if (this.state.waiting) {\n                this.setState({\n                    waiting: false\n                });\n            }\n            return;\n        }\n\n        setTimeout(() => {\n            if (!this.props.waiting) return;\n\n            this.setState({\n                waiting: true\n            })\n        }, 250);\n    };\n\n    render() {\n        const { waiting } = this.state;\n\n        if (!waiting) return null;\n\n        return (\n            <div className='player-progress'>\n                <svg viewBox='0 0 54 54' height='54' width='54'>\n                    <circle stroke='white' fill='transparent' strokeWidth='3' strokeDasharray='120 100' strokeDashoffset='25' strokeLinecap='round' r='21' cx='27' cy='27'/>\n                </svg>\n            </div>\n        );\n    }\n\n}\n\nProgress.propTypes = {\n    waiting: PropTypes.bool\n};\n\nexport default Progress;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport PictureInPictureIcon from '@material-ui/icons/PictureInPicture';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport Hint from './Hint';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport {\n    PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Player.css';\n\nclass Player extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.rootRef = React.createRef();\n        this.contentRef = React.createRef();\n        this.videoRef = React.createRef();\n\n        this.state = {\n            duration: 0,\n            currentTime: 0,\n            volume: PlayerStore.volume,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true,\n            hidden: false\n        };\n    }\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    handleVolume = volume => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = this.state;\n\n        video.volume = volume;\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    load() {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        video.load();\n\n        this.setState({\n            duration: 0,\n            currentTime: 0,\n            play: true,\n            dragging: false,\n            buffered: null,\n            waiting: true\n        });\n    }\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n    };\n\n    handleTimeUpdate = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        })\n    };\n\n    handleLoadedData = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime: 0,\n            volume,\n            waiting: true,\n            buffered\n        });\n\n        return;\n        const stream = video.captureStream();\n\n        const v2 = document.getElementById('v2');\n        v2.srcObject = stream;\n    };\n\n    handleChange = (event, value) => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = this.contentRef.current;\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.mouseDownRoot = false;\n        this.startStopPlayer();\n    }\n\n    handleMouseDownRoot = event => {\n        this.mouseDownRoot = true;\n        event.stopPropagation();\n    }\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleMute = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleProgress = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    getBufferedTime = (time, buffered) => {\n        if (!buffered || !buffered.length) {\n            return 0;\n        }\n\n        for (let i = 0; i < buffered.length; i++) {\n            const start = buffered.start(i);\n            const end = buffered.end(i);\n            if (start <= time && time < end) {\n                return end;\n            }\n        }\n\n        return 0;\n    }\n\n    handleWaiting = () => {\n        this.setState({\n            waiting: true\n        });\n    };\n\n    handleCanPlay = () => {\n        this.setState({\n            waiting: false\n        }, () => {\n            const video = this.videoRef.current;\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePictureInPicture = async () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n        if (!video.duration) return;\n\n        const pictureInPictureElement = document.pictureInPictureElement || document.mozPictureInPictureElement || document.webkitPictureInPictureElement;\n        if (pictureInPictureElement) {\n            this.exitPictureInPicture();\n            return;\n        }\n\n        try {\n            const pipWindow = await this.requestPictureInPicture(video);\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaViewerContent',\n                content: null\n            });\n            video.onpause = event => {\n                event.target.play();\n                event.target.onpause = null;\n            };\n            video.addEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n        } catch (error) { }\n    };\n\n    handleLeavePictureInPicture = event => {\n        const video = this.videoRef.current;\n\n        if (!video) event.target.src = null;\n        event.target.removeEventListener('leavepictureinpicture', this.handleLeavePictureInPicture);\n    };\n\n    async requestPictureInPicture(element) {\n        const method = element.requestPictureInPicture || element.mozRequestPictureInPicture || element.webkitRequestPictureInPicture;\n        if (!method) return null;\n\n        return method.call(element);\n    }\n\n    exitPictureInPicture() {\n        const method = document.exitPictureInPicture || document.mozExitPictureInPicture || document.webkitExitPictureInPicture;\n\n        method && method.call(document);\n    }\n\n    handleDoubleClick = event => {\n        this.handleFullScreen(event);\n    };\n\n    handleVideoKeyDown = event => {\n        event.preventDefault();\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    render() {\n        const { children, src, className, style, width, height, poster, fileId } = this.props;\n        const { waiting, volume, duration, currentTime, play, dragging, draggingTime, buffered, hidden } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = this.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n        const rootStyle = {\n            ...style,\n            width,\n            height\n        }\n\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n        const pictureInPictureEnabled = document.pictureInPictureEnabled || document.mozPictureInPictureEnabled || document.webkitPictureInPictureEnabled;\n\n        return (\n            <div\n                ref={this.rootRef}\n                className={classNames('player', className)}\n                onMouseDown={this.handleMouseDownRoot}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}\n                style={rootStyle}>\n                <div ref={this.contentRef} className='player-content' onMouseMove={this.handleMouseOver}>\n                    <video\n                        className='player-video'\n                        ref={this.videoRef}\n                        autoPlay={false}\n                        controls={false}\n                        playsInline={true}\n                        src={src}\n                        poster={poster}\n                        onLoadedMetadata={this.handleLoadedMetadata}\n                        onLoadedData={this.handleLoadedData}\n                        onCanPlay={this.handleCanPlay}\n                        onPlay={this.handlePlay}\n                        onPause={this.handlePause}\n                        onEnded={this.handleEnded}\n                        onTimeUpdate={this.handleTimeUpdate}\n                        onVolumeChange={this.handleVolumeChange}\n                        onProgress={this.handleProgress}\n                        onWaiting={this.handleWaiting}\n                        onKeyDown={this.handleVideoKeyDown}\n                    >\n                        {children}\n                    </video>\n                    <Hint fileId={fileId}/>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={e => e.stopPropagation()}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {this.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlayer.propTypes = {\n    fileId: PropTypes.number\n};\n\n//export default React.forwardRef((props, ref) => (<Player forwardedRef={ref} {...props}/>));\n\nexport default Player;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, src, mimeType, thumbnailWidth, thumbnailHeight, thumbnail, minithumbnail, isPlaying, supportsStreaming } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying &&\n                            ((thumbnailSrc || miniSrc) ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc || miniSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        // setTimeout(() => KeyboardManager.add(this.keyboardHandler), 0);\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', url, url === prevProps.url);\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMiniPreview, getMediaPreviewFile, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { setFileOptions } from '../../registerServiceWorker';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            if (thumbnail){\n                thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n            }\n            const [minithumbnailWidth, minithumbnailHeight, minithumbnail] = getMediaMiniPreview(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail,\n                minithumbnailWidth,\n                minithumbnailHeight,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = message.content;\n                if (video) {\n                    src = `/streaming/file_id=${file.id}`;\n                    setFileOptions(src, { fileId: file.id, size: file.size, mimeType: video.mime_type });\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            minithumbnail,\n            thumbnail,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight }) : Boolean(miniSrc);\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying &&\n                        ((thumbnailSrc || miniSrc) ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            isSmallWidth\n        } = this.state;\n\n        // console.log('[p] mainPage.render');\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}