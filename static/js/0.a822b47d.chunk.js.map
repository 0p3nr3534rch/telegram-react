{"version":3,"sources":["Utils/Chat.js","Utils/BasicGroup.js","Utils/Supergroup.js","Stores/FileStore.js","Utils/File.js","Stores/MessageStore.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Location.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Message/Media/Poll.js","Actions/Poll.js","Components/Message/Media/Venue.js","Utils/Message.js","Components/Theme.js","Utils/User.js","Stores/SupergroupStore.js","Stores/PlayerStore.js","Components/Tile/ChatStatus.js","Components/Tile/ChatTileControl.js","Utils/Media.js","Stores/BasicGroupStore.js","Components/Viewer/FileProgress.js","Components/Tile/UserTileControl.js","Components/Message/Media/Photo.js","Components/Message/Media/Sticker.js","Components/Message/MessageAuthor.js","Stores/StickerStore.js","Utils/Currency.js","Utils/ServiceMessage.js","Components/Tile/DocumentTile.js","Components/Message/Media/Animation.js","Components/ColumnMiddle/NotificationsControl.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/Audio.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Video.js","Components/Message/Media/VideoNote.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Dialog/CreatePollOption.js","Utils/Poll.js","Stores/PollStore.js","Components/Dialog/CreatePollDialog.js","Components/ColumnMiddle/InputBoxHeader.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBoxControl.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommandControl.js","Components/ColumnMiddle/Footer.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js"],"names":["getChatTypingString","chatId","chat","ChatStore","get","type","typingManager","getTypingManager","id","typingString","inputTypingManager","actions","size","values","next","value","action","getPrivateChatTypingString","firstUser","concat","secondUser","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","keys","Symbol","iterator","done","userId","UserStore","err","return","first_name","second_name","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getGroupChatTypingString","getMessageSenderFullName","message","isServiceMessage","sender_user_id","user","getUserFullName","getMessageSenderName","chat_id","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","t","arguments","length","key","getContent","getChatUnreadMessageIcon","is_outgoing","last_read_outbox_message_id","getChatUnreadCount","unread_count","getChatUnreadMentionCount","unread_mention_count","isChatMuted","use_default_mute_for","notification_settings","mute_for","notificationSettings","ApplicationStore","getNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","onlineCount","getOnlineMemberCount","getBasicGroupStatus","user_id","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getSupergroupStatus","getChatSubtitle","showSavedMessages","isMeChat","chatTypingString","getChatLetters","title","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","phone_number","getChatBio","bio","description","isPrivateChat","isGroupChat","isChannelChat","isChatMember","is_member","getChatTitle","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","TdLibController","send","@type","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getChatUserId","getPhotoFromChat","profile_photo","photo","canSendFiles","can_send_media_messages","getChatShortTitle","getGroupChatMembersCount","canClearHistory","Boolean","canDeleteChat","canSendPhotos","canSendDocuments","canSendPolls","canSendMessages","can_send_messages","getChatDraft","draft_message","input_message_text","text","getChatDraftReplyToMessageId","replyToMessageId","reply_to_message_id","console","log","__webpack_require__","d","__webpack_exports__","useReadFile","store","FileStore","_this","Object","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","onUpdate","_ref","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","update","wrap","_context","prev","t0","set","file","onUpdateFile","emit","abrupt","onUpdateAuthorizationState","stop","_x","apply","onClientUpdate","addTdLibListener","addListener","removeTdLibListener","removeListener","_ref2","_callee2","_context2","authorization_state","initDB","_x2","handleDownloads","handleUploads","arr","idb_key","local","downloads","has","is_downloading_completed","items","delete","getStore","forEach","item","handleChat","handleMessage","handleSticker","handleUser","error","remote","uploads","is_uploading_completed","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","updateUserPhotoBlob","content","animation","handleAnimation","audio","handleAudio","handlePhoto","document","handleDocument","game","handleGame","location","handleLocation","sticker","web_page","video","video_note","voice_note","handleVideo","handleVoiceNote","handleVideoNote","venue","obj","i","sizes","photoSize","source","updatePhotoBlob","album_cover_thumbnail","updateAudioThumbnailBlob","THUMBNAIL_PRIORITY","updateAudioBlob","thumbnail","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","messageId","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","updateAnimationThumbnailBlob","updateAnimationBlob","deleteLocalFile","fileId","getBlob","blobItems","setBlob","blob","deleteBlob","locationItems","setLocationFile","getBlobUrl","urls","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callbacks","db","WeakMap","Map","setMaxListeners","Infinity","callback","initiatingDB","push","openDB","catch","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","_this2","_ref3","_callee4","response","_context4","file_id","sent","data","_x4","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","EventEmitter","getSizeString","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","_file","PRELOAD_AUDIO_SIZE","loadAnimationContent","_file3","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","loadUserContent","loadDocumentContent","_file5","PRELOAD_DOCUMENT_SIZE","loadGameContent","loadLocationContent","zoom","LOCATION_ZOOM","width","LOCATION_WIDTH","height","LOCATION_HEIGHT","scale","LOCATION_SCALE","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","getPhotoSize","loadPhotoThumbnailContent","getPhotoThumbnailSize","loadStickerContent","_file10","PRELOAD_STICKER_SIZE","loadVideoContent","_file12","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","_file14","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","_file16","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","loadPhoto","loadUsersContent","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__","saveOrDownload","fileName","mime","saveData","can_be_downloaded","getMediaPreviewFile","getMediaFile","PHOTO_SIZE","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","loadProfileMediaViewerContent","photos","_photo9","small","big","_photo10","getProfilePhoto","_photo11","preloadProfileMediaViewerContent","ids","loadChatContent","loadChatsContent","loadDraftContent","loadStickerSetContent","stickerSet","loadStickersContent","stickers","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","message_id","reply_markup","edit_date","views","old_content","new_content","is_listened","is_viewed","old_message_id","sending_state","error_code","error_message","selected","selectedItems","clear","deletedMessage","Contact","_this$props","props","openMedia","last_name","fullName","number","formatPhoneNumber","react_default","className","UserTileControl","onClick","React","Component","Game","displaySize","Animation","fitPhotoSize","getFitSize","Photo","_this$props2","classes","formattedText","getFormattedText","classNames","accentBackgroundLight","accentColorDark","defaultProps","PHOTO_DISPLAY_SIZE","withStyles","theme","objectSpread","accentStyles","Location","onClientUpdateLocationBlob","forceUpdate","on","src","longitude","latitude","rel","draggable","alt","Room_default","fontSize","color","PollRadio","chosen","beingChosen","hidden","onChange","poll-radio-hidden","Radio_default","root","radioRoot","checked","checkedIcon","RadioButtonChecked_default","icon","CircularProgress_default","thickness","progressRoot","position","top","left","pointerEvents","padding","PollPercentage","classCallCheck","possibleConstructorReturn","getPrototypeOf","updateAnimation","stopAnimation","handle","requestAnimationFrame","onAnimationFrame","cancelAnimationFrame","_this$state","state","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","setState","animated","Math","floor","prevPropsValue","nextProps","nextState","nextContext","closed","prevProps","prevState","snapshot","poll-percentage-subtitle","Fragment","PollOption","getTitleString","canBeSelected","handleClick","onVote","stopPropagation","handleCancel","onUnvote","option","maxVoterCount","voter_count","vote_percentage","is_chosen","is_being_chosen","Message_Media_PollPercentage","Message_Media_PollRadio","defineProperty","borderColor","LinearProgress_default","bar","progressBar","variant","max","enhance","compose","backgroundColor","margin","right","bottom","transition","borderStyle","withTheme","withTranslation","Poll","dialog","contextMenu","getTotalVoterCountString","handleVote","optionIds","option_ids","setPollAnswer","handleUnvote","poll","handleCloseContextMenu","is_closed","cancelPollAnswer","handleStopPoll","_this$props3","stopPoll","handleDialog","handleCloseDialog","handleContextMenu","preventDefault","clientX","clientY","_this$props4","question","options","total_voter_count","canUnvote","canStopPoll","can_be_edited","every","toConsumableArray","onContextMenu","Message_Media_PollOption","Popover_default","onClose","anchorReference","anchorPosition","anchorOrigin","vertical","horizontal","transformOrigin","MenuList_default","e","MenuItem_default","Dialog_default","transitionDuration","aria-labelledby","DialogTitle_default","DialogContent_default","DialogContentText_default","DialogActions_default","Button_default","Venue","address","Message_Media_Location","getTitle","substring","start","end","entities","beforeEntityText","offset","entityText","startsWith","decodedUrl","decodeURI","hashtag","command","afterEntityText","getText","caption","getWebPage","getDateHint","getMedia","Audio","Message_Media_Contact","Document","Message_Media_Game","Message_Media_Poll","Sticker","Message_Media_Venue","Video","VideoNote","VoiceNote","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getUnread","getSenderUserId","filterMessages","reduce","accumulator","current","ttl","getServiceMessageContent","emoji","isMediaContent","isVideoMessage","isLottieMessage","file_name","endsWith","isAnimationMessage","isContentOpened","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","regenerator_default","openVideo","openVideoNote","openVoiceNote","openChatPhoto","openUser","openContact","openGame","isDeletedMessage","getReplyPhotoSize","palette","divider","primary","main","background","light","isUserBlocked","getUserLetters","getUserStatusOrder","getProfilePhotoDateHint","dateformat__WEBPACK_IMPORTED_MODULE_0__","dateformat__WEBPACK_IMPORTED_MODULE_0___default","n","_Common__WEBPACK_IMPORTED_MODULE_1__","_Constants__WEBPACK_IMPORTED_MODULE_2__","_Stores_UserStore__WEBPACK_IMPORTED_MODULE_3__","SERVICE_NOTIFICATIONS_USER_ID","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","is_blocked","expires","userProfilePhoto","smallPhotoSize","PROFILE_PHOTO_SMALL_SIZE","bigPhotoSize","PROFILE_PHOTO_BIG_SIZE","added_date","setFullInfo","supergroup_full_info","fullInfoItems","RepeatEnum","freeze","NONE","REPEAT","REPEAT_ONE","PlayerStore","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","close","playlist","time","videoStream","getPlaylist","volume","Cookies","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","duration","currentTime","timestamp","stream","_this$message","findIndex","useRepeatShuffle","_this$message2","nextIndex","getRandomInt","_assertThisInitialize","currentPlaylist","_messages","total_count","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_6__","totalCount","query","from_message_id","limit","_x3","cookies","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","player","ChatStatus","onUpdateUserStatus","online","borderSize","iconIndicator","default","borderRadius","overflow","boxSizing","ChatTileControl","onFastUpdatingComplete","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","showOnline","pointer","BookmarkBorder_default","tileColor","abs","Components_Tile_ChatStatus","statusRoot","statusIcon","zIndex","isBlurredThumbnail","_Constants__WEBPACK_IMPORTED_MODULE_0__","THUMBNAIL_BLURRED_SIZE","performer","trimmedTitle","trim","trimmedPerformer","basic_group","basic_group_full_info","groupId","group","basicgroup","circleStyle","circle","FileProgress","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","currentFile","nextFile","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","cancelButton","completeIcon","_this$getProgressPara","_this$getProgressPara2","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_7___default","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_8___default","onClientUpdateUserBlob","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","onClientUpdatePhotoBlob","thumbnailSize","showProgress","isBlurred","photoStyle","_Users_evgeny_telegram_react_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","media-blurred","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","PHOTO_THUMBNAIL_SIZE","onClientUpdateStickerBlob","onClientUpdateStickerThumbnailBlob","blur","fitSize","stickerStyle","STICKER_DISPLAY_SIZE","MessageAuthor","openChat","openUserCommand","openChatCommand","react__WEBPACK_IMPORTED_MODULE_5___default","StickerStore","sticker_set_ids","_this$stickerSet","is_installed","assign","hint","source1","source2","currency","Currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","getString","total_amount","author","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","DocumentTile","onClientUpdateDocumentThumbnailBlob","document-tile-background","_Components_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_8__","startStopPlayer","videoRef","inView","focused","openMediaViewer","openProfileMediaViewer","play","pause","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateFocusWindow","onClientUpdateMessagesInView","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","createRef","hasFocus","_this$props$animation","mime_type","isGif","ref","poster","muted","autoPlay","loop","playsInline","NotificationsControl","onUpdateChatNotificationSettings","isMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","prevChatId","debounce","NOTIFICATIONS_DEBOUNCE_DELAY_MS","DocumentAction","isDownloadingActive","isUploadingActive","sizeString","ArrowDownward_default","InsertDriveFile_default","data-name","data-ext","Message_Media_DocumentAction","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","_this$props5","_Tile_DocumentTile__WEBPACK_IMPORTED_MODULE_9__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_icons_Pause__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_icons_PlayArrow__WEBPACK_IMPORTED_MODULE_7___default","_AudioAction__WEBPACK_IMPORTED_MODULE_10__","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","_this$state2","_this$state3","durationString","getDurationString","currentTimeString","audioDuration","_this$state4","_this$state5","onClientUpdateVideoThumbnailBlob","_this$props$video","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","_this$props6","_this$props$videoNote","video-note-playing","onCanPlay","_material_ui_core_CircularProgress__WEBPACK_IMPORTED_MODULE_9___default","_MediaStatus__WEBPACK_IMPORTED_MODULE_11__","_material_ui_icons_VolumeOff__WEBPACK_IMPORTED_MODULE_7___default","_Viewer_FileProgress__WEBPACK_IMPORTED_MODULE_10__","_material_ui_icons_ArrowDownward__WEBPACK_IMPORTED_MODULE_8___default","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","AttachButton","anchorEl","handleMenuClick","currentTarget","handleMenuClose","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","IconButton_default","iconButton","aria-label","AttachFile_default","Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","disabled","ListItemIcon_default","Photo_default","ListItemText_default","inset","Poll_default","focusNode","node","toEnd","childNodes","lastNode","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","scrollTop","scrollHeight","focus","utils","special","navigational","isSpecial","keyCode","isNavigational","CreatePollOption","optionTextRef","innerText","handleDelete","onDelete","handleInput","dataset","maxLength","remainLength","handleKeyDown","hasSelection","toString","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","handlePaste","selectionString","pasteText","clipboardData","getData","replace","substr","execCommand","POLL_OPTION_MAX_LENGTH","contentEditable","suppressContentEditableWarning","placeholder","data-length","POLL_OPTION_LENGTH","data-max-length","onInput","onKeyDown","onPaste","Close_default","POLL_OPTION_HINT_LENGTH","Typography_Typography","align","counterRoot","withSaveRef","minWidth","userSelect","withRestoreRef","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","PollStore","_this$poll","CreatePollDialog","handleClientUpdateNewPoll","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","innerHTML","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleClose","hasPollData","handleConfirmationDone","handleSend","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","_this3","Components_Dialog_CreatePollOption","el","canAddOption","dialogRoot","contentRoot","Typography_default","flexGrow","POLL_QUESTION_HINT_LENGTH","Divider_default","dividerRoot","List_default","listRoot","ListItem_default","listItem","button","disableTypography","typographyRoot","InputBoxHeader","Reply_default","replyIcon","Message_Reply","closeIconButton","OutputTypingManager","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","lazy","all","bind","InputBoxControl","onClientUpdateStickerSend","newMessageRef","textContent","thumbnailWidth","thumbnailHeight","onSendInternal","onClientUpdateReply","currentChatId","setInputFocus","onClientUpdateChatId","nextChatId","openPasteDialog","setDraft","element","draft","setChatDraftMessage","chatDraftMessage","draftMessage","getNewChatDraftMessage","newDraft","getInputText","previousDraft","previousReplyToMessageId","disable_web_page_preview","clear_draft","handleSubmit","attachPhotoRef","handleAttachPhotoComplete","files","Array","readImageSize","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","handleKeyUp","setTyping","name","photoWidth","photoHeight","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","indexOf","getAsFile","plainText","handlePasteContinue","handleClosePaste","asyncToGenerator","clearDraft","invokeScheduledAction","input_message_content","newChatDraftMessage","alert","JSON","stringify","handleEmojiSelect","native","regex","match","t1","performance","emojiRegex","exec","getChatId","Components_ColumnMiddle_InputBoxHeader","Suspense","fallback","onKeyUp","multiple","accept","ColumnMiddle_AttachButton","Send_default","Components_Dialog_CreatePollDialog","FooterCommand","onCommand","Button_Button_default","NotificationsCommandControl","Components_ColumnMiddle_FooterCommand","Footer","onUpdateBasicGroup","onUpdateSupergroup","handleJoin","handleDeleteAndExit","remove_from_chat_list","Components_ColumnMiddle_InputBoxControl","ColumnMiddle_NotificationsCommandControl","VoiceNoteSlider","reset","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider_default","slider","thumbWrapper","thumb","min","maxWidth","Pause_default","PlayArrow_default","Message_Media_VoiceNoteSlider","ReplyTile","isVideoNote","reply-tile-photo-round","reply-tile-photo-loading","Reply","onGetMessageResult","handleOpen","onMouseDown","Components_Tile_ReplyTile"],"mappings":"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","file":"static/js/0.a822b47d.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport UserStore from '../Stores/UserStore';\nimport ChatStore from '../Stores/ChatStore';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport InputBoxControl from '../Components/ColumnMiddle/Footer';\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    const user = UserStore.get(message.sender_user_id);\n    if (!user) return null;\n\n    return getUserFullName(user);\n}\n\nfunction getMessageSenderName(message) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id);\n}\n\nfunction getLastMessageSenderName(chat) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction getChatUnreadMessageIcon(chat) {\n    if (!chat) return false;\n    if (!chat.last_message) return false;\n\n    return chat.last_message.is_outgoing && chat.last_message.id > chat.last_read_outbox_message_id;\n}\n\nfunction getChatUnreadCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_count) return null;\n\n    return chat.unread_count;\n}\n\nfunction getChatUnreadMentionCount(chat) {\n    if (!chat) return null;\n    if (!chat.unread_mention_count) return null;\n\n    return chat.unread_mention_count;\n}\n\nfunction isChatMuted(chat) {\n    return getChatMuteFor(chat) > 0;\n}\n\nfunction getChatMuteFor(chat) {\n    if (!chat) return 0;\n\n    if (chat.use_default_mute_for) {\n        switch (chat.type) {\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopePrivateChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                const notificationSettings = ApplicationStore.getNotificationSettings(\n                    'notificationSettingsScopeGroupChats'\n                );\n                if (notificationSettings) {\n                    return notificationSettings.mute_for;\n                }\n\n                return 0;\n            }\n        }\n    } else {\n        if (!chat.notification_settings) return 0;\n\n        return chat.notification_settings.mute_for;\n    }\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat) {\n    if (!chat) return null;\n\n    let title = chat.title || 'Deleted account';\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.phone_number;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n    if (!chat.type) return;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeSecret': {\n            TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: chat.type.user_id\n            });\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: chat.type.basic_group_id\n            });\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: chat.type.supergroup_id\n            });\n            break;\n        }\n    }\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendFiles(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_media_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return 'Saved Messages';\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPhotos(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendDocuments(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                const { status } = supergroup;\n                if (status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return false;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return true;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return false;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return !supergroup.is_channel;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            return status.can_send_media_messages;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendPolls(chatId) {\n    return true;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (basicGroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate': {\n            return true;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (supergroup.is_channel) {\n                            return false;\n                        } else {\n                            return true;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (supergroup.status.can_send_messages) {\n                            return true;\n                        } else {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    console.log('getChatDraft', replyToMessageId);\n    return replyToMessageId;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    getChatUnreadMessageIcon,\n    getChatUnreadCount,\n    getChatUnreadMentionCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatMember,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canSendFiles,\n    canSendMessages,\n    canSendPhotos,\n    canSendDocuments,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (status && (status['@type'] === 'chatMemberStatusBanned' || status['@type'] === 'chatMemberStatusLeft')) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getSupergroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.callbacks = [];\n\n        this.db = null;\n        this.urls = new WeakMap();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n        if (!update.authorization_state) return;\n\n        if (update.authorization_state['@type'] === 'authorizationStateWaitTdlibParameters') {\n            await this.initDB();\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(obj.chat_id, obj.id, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                const chatId = obj ? obj.chat_id : 0;\n                const messageId = obj ? obj.id : 0;\n\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(obj.chat_id, obj.id, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        console.log('[FileStore] start initDB');\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (useReadFile) {\n            (async file => {\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n                console.log(`readFile file_id=${file.id} result`, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return null;\n\n    let size = file.size;\n    if (!size) return null;\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n    if (!message) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n    if (!message) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n    if (!message) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n    if (!message) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n    if (!message) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n    if (!message) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n    if (!message) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location: location,\n            zoom: LOCATION_ZOOM,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            scale: LOCATION_SCALE,\n            chat_id: message.chat_id\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const photoSize = getPhotoThumbnailSize(photo.sizes);\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n    if (!message) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n    if (!message) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(message.chat_id, message.id, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadDraftContent,\n    loadUserContent,\n    loadChatContent,\n    loadChatsContent,\n    loadUsersContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass MessageStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.selectedItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateNewMessage':\n                this.set(update.message);\n                this.emit('updateNewMessage', update);\n                break;\n            case 'updateDeleteMessages':\n                this.emit('updateDeleteMessages', update);\n                break;\n            case 'updateMessageEdited': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        message.reply_markup = update.reply_markup;\n                        message.edit_date = update.edit_date;\n                    }\n                }\n                this.emit('updateMessageEdited', update);\n                break;\n            }\n            case 'updateMessageViews': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message && update.views > message.views) {\n                        message.views = update.views;\n                    }\n                }\n                this.emit('updateMessageViews', update);\n                break;\n            }\n            case 'updateMessageContent': {\n                const chat = this.items.get(update.chat_id);\n                if (chat) {\n                    const message = chat.get(update.message_id);\n                    if (message) {\n                        update.old_content = message.content;\n                        message.content = update.new_content;\n                    }\n                }\n                this.emit('updateMessageContent', update);\n                break;\n            }\n            case 'updateMessageContentOpened': {\n                const { chat_id, message_id } = update;\n\n                const message = this.get(chat_id, message_id);\n                if (message) {\n                    const { content } = message;\n                    switch (content['@type']) {\n                        case 'messageVoiceNote': {\n                            message.content.is_listened = true;\n                            break;\n                        }\n                        case 'messageVideoNote': {\n                            message.content.is_viewed = true;\n                            break;\n                        }\n                    }\n                }\n\n                this.emit('updateMessageContentOpened', update);\n                break;\n            }\n            case 'updateMessageSendSucceeded': {\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n\n                this.set(update.message);\n                this.emit('updateMessageSendSucceeded', update);\n                break;\n            }\n            case 'updateMessageSendFailed': {\n                if (update.message.sending_state) {\n                    update.message.sending_state.error_code = update.error_code;\n                    update.message.sending_state.error_message = update.error_message;\n                }\n\n                const chat = this.items.get(update.message.chat_id);\n                if (chat) {\n                    const message = chat.get(update.old_message_id);\n                    if (message) {\n                        message.sending_state = update.message.sending_state;\n                        if (message.sending_state) {\n                            message.sending_state.error_code = update.error_code;\n                            message.sending_state.error_message = update.error_message;\n                        }\n                    }\n                    if (update.old_message_id !== update.message.id) {\n                        this.set(update.message);\n                    }\n                }\n                this.emit('updateMessageSendFailed', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMessageHighlighted': {\n                this.emit('clientUpdateMessageHighlighted', update);\n                break;\n            }\n            case 'clientUpdateMessageSelected': {\n                if (update.selected) {\n                    this.selectedItems.set(`chatId=${update.chatId}_messageId=${update.messageId}`, {\n                        chatId: update.chatId,\n                        messageId: update.messageId\n                    });\n                } else {\n                    this.selectedItems.delete(`chatId=${update.chatId}_messageId=${update.messageId}`);\n                }\n\n                this.emit('clientUpdateMessageSelected', update);\n                break;\n            }\n            case 'clientUpdateClearSelection': {\n                this.selectedItems.clear();\n\n                this.emit('clientUpdateClearSelection', update);\n                break;\n            }\n            case 'clientUpdateChatId': {\n                if (this.selectedItems.size > 0) {\n                    this.selectedItems.clear();\n\n                    this.emit('clientUpdateClearSelection', { '@type': 'clientUpdateClearSelection' });\n                }\n\n                break;\n            }\n            case 'clientUpdateReply': {\n                this.emit('clientUpdateReply', update);\n                break;\n            }\n            case 'clientUpdateMessagesInView': {\n                this.emit('clientUpdateMessagesInView', update);\n                break;\n            }\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    load(chatId, messageId) {\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(message => {\n                this.set(message);\n                this.emit('getMessageResult', message);\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                this.set(deletedMessage);\n                this.emit('getMessageResult', deletedMessage);\n            });\n    }\n\n    get(chatId, messageId) {\n        let chat = this.items.get(chatId);\n        if (!chat) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        let message = chat.get(messageId);\n        if (!message) {\n            //this.load(chatId, messageId);\n            return null;\n        }\n\n        return message;\n    }\n\n    set(message) {\n        let chat = this.items.get(message.chat_id);\n        if (!chat) {\n            chat = new Map();\n            this.items.set(message.chat_id, chat);\n        }\n\n        chat.set(message.id, message);\n    }\n\n    setItems(messages) {\n        for (let i = 0; i < messages.length; i++) {\n            this.set(messages[i]);\n        }\n    }\n}\n\nconst store = new MessageStore();\nwindow.message = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTileControl from '../../Tile/UserTileControl';\nimport { formatPhoneNumber } from '../../../Utils/Common';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, openMedia } = this.props;\n        if (!contact) return null;\n\n        const { user_id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(user_id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id: user_id,\n            first_name: first_name,\n            last_name: last_name\n        };\n\n        const fullName = getUserFullName(user);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className='contact'>\n                <div className='contact-tile'>\n                    <UserTileControl userId={user_id} user={user} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {user_id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>{number}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Contact;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Photo from './Photo';\nimport Animation from './Animation';\nimport { accentStyles } from '../../Theme';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Game.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { classes, game } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text);\n\n        return (\n            <div className='game'>\n                <div className={classNames('game-border', classes.accentBackgroundLight)} />\n                <div className='game-wrapper'>\n                    {title && <div className={classNames('game-title', classes.accentColorDark)}>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withStyles(styles)(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location } = this.props;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { location } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <a href={source} target='_blank' rel='noopener noreferrer'>\n                <div className='location-wrapper'>\n                    <img className='location-image' draggable={false} alt={source} src={src} />\n                    <div className='location-icon'>\n                        <RoomIcon fontSize='large' color='primary' />\n                    </div>\n                </div>\n            </a>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nconst styles = {\n    progressRoot: {\n        position: 'absolute',\n        top: 8,\n        left: 8,\n        pointerEvents: 'none'\n    },\n    radioRoot: {\n        padding: 6\n    },\n    icon: {\n        color: 'transparent'\n    }\n};\n\nclass PollRadio extends React.Component {\n    render() {\n        const { classes, chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    classes={{ root: classes.radioRoot }}\n                    color='primary'\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? classes.icon : null }} />}\n                />\n                {beingChosen && <CircularProgress size={20} thickness={4.4} classes={{ root: classes.progressRoot }} />}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool.isRequired,\n    beingChosen: PropTypes.bool.isRequired,\n    hidden: PropTypes.bool\n};\n\nexport default withStyles(styles)(PollRadio);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className={classNames('poll-percentage', { 'poll-percentage-subtitle': !chosen })}>\n                {!closed && chosen ? (\n                    <a className='poll-percentage-action' onClick={onClick}>\n                        {animated + '%'}\n                    </a>\n                ) : (\n                    <>{animated + '%'}</>\n                )}\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport { borderStyle } from '../../Theme';\nimport './PollOption.css';\n\nconst styles = theme => ({\n    progressRoot: {\n        backgroundColor: 'transparent',\n        margin: '2px 0 0 38px',\n        position: 'absolute',\n        left: 0,\n        right: 0,\n        bottom: 0\n    },\n    progressBar: {\n        transition: 'transform .2s linear'\n    },\n    ...borderStyle(theme)\n});\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    handleCancel = event => {\n        const { onUnvote } = this.props;\n\n        event.stopPropagation();\n\n        onUnvote();\n    };\n\n    render() {\n        const { classes, option, onChange, canBeSelected, closed, maxVoterCount, t } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage\n                            value={vote_percentage}\n                            chosen={is_chosen}\n                            closed={closed}\n                            onClick={this.handleCancel}\n                        />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <div className={classNames('poll-option-bottom-border', { [classes.borderColor]: canBeSelected })} />\n                <LinearProgress\n                    classes={{ root: classes.progressRoot, bar: classes.progressBar }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    onUnvote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Popover from '@material-ui/core/Popover';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport PollOption from './PollOption';\nimport { cancelPollAnswer, setPollAnswer, stopPoll } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport './Poll.css';\n\nclass Poll extends React.Component {\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleVote = index => {\n        const { chatId, messageId } = this.props;\n\n        setPollAnswer(chatId, messageId, [index]);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, poll } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.handleCloseContextMenu();\n        }\n\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { dialog } = this.state;\n\n        if (dialog) {\n            this.setState({ dialog: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleDialog = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            dialog: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseDialog = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ dialog: false });\n    };\n\n    handleContextMenu = event => {\n        const { poll } = this.props;\n        const { is_closed } = poll;\n        if (is_closed) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            this.setState({\n                contextMenu: true,\n                left: event.clientX,\n                top: event.clientY\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        const { left, top, contextMenu, dialog } = this.state;\n        const { question, options, total_voter_count, is_closed } = poll;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const canUnvote = !is_closed && options.some(x => x.is_chosen || x.is_being_chosen);\n        const canStopPoll = message && message.can_be_edited;\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n\n        return (\n            <div className='poll' onContextMenu={this.handleContextMenu}>\n                <div className='poll-question'>\n                    <span className='poll-question-title'>{question}</span>\n                    <span className='subtitle'>{is_closed ? t('FinalResults') : t('AnonymousPoll')}</span>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                            onUnvote={this.handleUnvote}\n                        />\n                    ))}\n                </div>\n                <div className='poll-total-count subtitle'>{this.getTotalVoterCountString(total_voter_count, t)}</div>\n                <Popover\n                    open={contextMenu && (canUnvote || canStopPoll)}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canUnvote && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canStopPoll && <MenuItem onClick={this.handleDialog}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCloseDialog}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDialog} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia } = this.props;\n        if (!venue) return null;\n\n        const { title, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location chatId={chatId} messageId={messageId} location={location} openMedia={openMedia} />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{title}</div>\n                    </a>\n                    <div className='venue-subtitle'>{address}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from 'dateformat';\nimport Audio from '../Components/Message/Media/Audio';\nimport Animation from '../Components/Message/Media/Animation';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport { getChatTitle } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../Constants';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getAuthor(message) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(user);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message);\n}\n\nfunction getTitle(message) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(user);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction getFormattedText(text) {\n    if (text['@type'] !== 'formattedText') return null;\n    if (!text.text) return null;\n    if (!text.entities) return text.text;\n\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < text.entities.length; i++) {\n        let beforeEntityText = substring(text.text, index, text.entities[i].offset);\n        if (beforeEntityText) {\n            result.push(beforeEntityText);\n        }\n\n        let entityText = substring(\n            text.text,\n            text.entities[i].offset,\n            text.entities[i].offset + text.entities[i].length\n        );\n        switch (text.entities[i].type['@type']) {\n            case 'textEntityTypeUrl': {\n                let url = entityText.startsWith('http') ? entityText : 'http://' + entityText;\n                let decodedUrl;\n                try {\n                    decodedUrl = decodeURI(entityText);\n                } catch (error) {\n                    console.error('uri: ' + entityText + '\\n' + error);\n                    decodedUrl = entityText;\n                }\n\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {decodedUrl}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                let url = text.entities[i].type.url.startsWith('http')\n                    ? text.entities[i].type.url\n                    : 'http://' + text.entities[i].type.url;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={url}\n                        title={url}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeBold':\n                result.push(<strong key={text.entities[i].offset}>{entityText}</strong>);\n                break;\n            case 'textEntityTypeItalic':\n                result.push(<em key={text.entities[i].offset}>{entityText}</em>);\n                break;\n            case 'textEntityTypeCode':\n                result.push(<code key={text.entities[i].offset}>{entityText}</code>);\n                break;\n            case 'textEntityTypePre':\n                result.push(\n                    <pre key={text.entities[i].offset}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                break;\n            case 'textEntityTypeMention':\n                result.push(\n                    <a key={text.entities[i].offset} onClick={stopPropagation} href={`#/im?p=${entityText}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeMentionName':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`#/im?p=u${text.entities[i].type.user_id}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeHashtag':\n                let hashtag = entityText.length > 0 && entityText[0] === '#' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://search_hashtag?hashtag=${hashtag}`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeEmailAddress':\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`mailto:${entityText}`}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            case 'textEntityTypeBotCommand':\n                let command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a\n                        key={text.entities[i].offset}\n                        onClick={stopPropagation}\n                        href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += beforeEntityText.length + entityText.length;\n    }\n\n    if (index < text.text.length) {\n        let afterEntityText = text.text.substring(index);\n        if (afterEntityText) {\n            result.push(afterEntityText);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message) {\n    if (!message) return null;\n\n    let text = [];\n\n    const { content } = message;\n\n    if (\n        content &&\n        content['@type'] === 'messageText' &&\n        content.text &&\n        content.text['@type'] === 'formattedText' &&\n        content.text.text\n    ) {\n        text = getFormattedText(content.text);\n    } else {\n        //text.push('[' + message.content['@type'] + ']');//JSON.stringify(x);\n        if (content && content.caption && content.caption['@type'] === 'formattedText' && content.caption.text) {\n            text.push('\\n');\n            let formattedText = getFormattedText(content.caption);\n            if (formattedText) {\n                text = text.concat(formattedText);\n            }\n        }\n    }\n\n    return text;\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    let date = new Date(message.date * 1000);\n\n    return dateFormat(date, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(message) {\n    if (!message) return null;\n    if (!message.date) return null;\n\n    const date = new Date(message.date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction getMedia(message, openMedia) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return <Animation chatId={chat_id} messageId={id} animation={content.animation} openMedia={openMedia} />;\n        case 'messageAudio':\n            return <Audio chatId={chat_id} messageId={id} audio={content.audio} openMedia={openMedia} />;\n        case 'messageContact':\n            return <Contact chatId={chat_id} messageId={id} contact={content.contact} openMedia={openMedia} />;\n        case 'messageDocument':\n            return <Document chatId={chat_id} messageId={id} document={content.document} openMedia={openMedia} />;\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return <Location chatId={chat_id} messageId={id} location={content.location} openMedia={openMedia} />;\n        case 'messagePhoto':\n            return <Photo chatId={chat_id} messageId={id} photo={content.photo} openMedia={openMedia} />;\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} />;\n        case 'messageSticker':\n            return <Sticker chatId={chat_id} messageId={id} sticker={content.sticker} openMedia={openMedia} />;\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return <Venue chatId={chat_id} messageId={id} venue={content.venue} openMedia={openMedia} />;\n        case 'messageVideo':\n            return <Video chatId={chat_id} messageId={id} video={content.video} openMedia={openMedia} />;\n        case 'messageVideoNote':\n            return <VideoNote chatId={chat_id} messageId={id} videoNote={content.video_note} openMedia={openMedia} />;\n        case 'messageVoiceNote':\n            return <VoiceNote chatId={chat_id} messageId={id} voiceNote={content.voice_note} openMedia={openMedia} />;\n        default:\n            return '[' + content['@type'] + ']';\n    }\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            const user = UserStore.get(sender_user_id);\n            return getUserFullName(user);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(location) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${LOCATION_WIDTH},${LOCATION_HEIGHT}&scale=${LOCATION_SCALE}&zoom=${LOCATION_ZOOM}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    // download file at loadMediaViewerContent instead\n    // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.userId);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        ApplicationStore.setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    ApplicationStore.setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    getMedia,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst borderStyle = theme => ({\n    borderColor: {\n        borderColor: theme.palette.divider\n    }\n});\n\nconst accentStyles = theme => ({\n    accentColorDark: {\n        color: theme.palette.primary.main\n    },\n    accentBackgroundLight: {\n        background: theme.palette.primary.light\n    }\n});\n\nexport { borderStyle, accentStyles };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from 'dateformat';\nimport { getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(user) {\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name && user.last_name) return `${user.first_name} ${user.last_name}`;\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n    if (!user.type) return null;\n\n    switch (user.type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (user.first_name) return user.first_name;\n            if (user.last_name) return user.last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return 'Deleted account';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(user) {\n    if (!user) return null;\n\n    let title = getUserFullName(user);\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return user.first_name ? user.first_name.charAt(0) : user.last_name ? user.last_name.charAt(0) : '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { id, sizes } = userProfilePhoto;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const smallPhotoSize = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const bigPhotoSize = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id: id,\n        small: smallPhotoSize.photo,\n        big: bigPhotoSize.photo\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass SupergroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateSupergroup':\n                this.set(update.supergroup);\n\n                this.emit(update['@type'], update);\n                break;\n            case 'updateSupergroupFullInfo':\n                this.setFullInfo(update.supergroup_id, update.supergroup_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(id) {\n        return this.items.get(id);\n    }\n\n    set(supergroup) {\n        this.items.set(supergroup.id, supergroup);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new SupergroupStore();\nwindow.supergroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport Cookies from 'universal-cookie';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const cookies = new Cookies();\n        let playbackRate = cookies.get('playbackRate');\n        let volume = cookies.get('volume');\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.playlist = null;\n                this.message = null;\n                this.time = null;\n                this.videoStream = null;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (!message) return;\n\n                this.message = message;\n\n                this.emit(update['@type'], update);\n\n                this.getPlaylist(chatId, messageId);\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                const cookies = new Cookies();\n                cookies.set('volume', volume);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                const cookies = new Cookies();\n                cookies.set('playbackRate', playbackRate);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './ChatStatus.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderRadius: '50%',\n        overflow: 'hidden'\n    },\n    icon: {\n        background: 'transparent',\n        width: '100%',\n        height: '100%',\n        boxSizing: 'border-box'\n    },\n    iconIndicator: {\n        width: '100%',\n        height: '100%',\n        borderRadius: '50%',\n        background: '#80d066'\n    }\n});\n\nclass ChatStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId: userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({\n            online: isUserOnline(user)\n        });\n    };\n\n    render() {\n        const { classes, size, borderSize, className } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className={classNames(className, classes.root)} style={{ width: size, height: size }}>\n                <div className={classes.icon} style={{ padding: borderSize }}>\n                    <div className={classes.iconIndicator} />\n                </div>\n            </div>\n        );\n    }\n}\n\nChatStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nChatStatus.defaultProps = {\n    size: 12,\n    borderSize: 2\n};\n\nexport default withStyles(styles)(ChatStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ChatStatus from './ChatStatus';\nimport { getChatLetters, getChatUserId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTileControl.css';\n\nconst styles = {\n    statusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    },\n    statusIcon: {}\n};\n\nclass ChatTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!update.photo) {\n            this.forceUpdate();\n        } else {\n            const store = FileStore.getStore();\n            loadChatContent(store, chat);\n        }\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    render() {\n        const { classes, chatId, showOnline, showSavedMessages, onSelect } = this.props;\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            const className = classNames('tile-photo', 'tile_color_4', { pointer: onSelect });\n            return (\n                <div className={className} onClick={this.handleSelect}>\n                    <div className='tile-saved-messages'>\n                        <BookmarkBorderIcon />\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat);\n        const blob = photo && photo.small ? FileStore.getBlob(photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return (\n            <div className='chat-tile' onClick={this.handleSelect}>\n                {src ? (\n                    <img className={className} src={src} draggable={false} alt='' />\n                ) : (\n                    <div className={className}>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {showOnline && isPrivateChat(chatId) && (\n                    <ChatStatus classes={{ root: classes.statusRoot, icon: classes.statusIcon }} chatId={chatId} />\n                )}\n            </div>\n        );\n    }\n}\n\nChatTileControl.propTypes = {\n    classes: PropTypes.object,\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool\n};\n\nChatTileControl.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withStyles(styles, { withTheme: true })(ChatTileControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE } from '../Constants';\n\nfunction isBlurredThumbnail(thumbnail) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < THUMBNAIL_BLURRED_SIZE;\n}\n\nfunction getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport { isBlurredThumbnail, getAudioTitle };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo':\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nconst circleStyle = { circle: 'file-progress-circle' };\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `FileProgress.render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className='file-progress' style={style}>\n                        <div className='file-progress-icon'>{completeIcon}</div>\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-indicator'>\n                        <CircularProgress\n                            classes={circleStyle}\n                            variant='static'\n                            value={progress}\n                            size={42}\n                            thickness={2}\n                        />\n                    </div>\n                    {cancelButton && (\n                        <div className='file-progress-icon'>\n                            <CloseIcon />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    <div className='file-progress-icon'>{icon}</div>\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.object,\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getUserLetters } from '../../Utils/User';\nimport { loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTileControl.css';\n\nclass UserTileControl extends Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.removeListener('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId === update.userId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    //console.log('UserTileControl.onClientUpdateChatBlob user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId) {\n                    if (!update.photo) {\n                        //console.log('UserTileControl.onUpdateChatPhoto user_id=' + userId);\n                        this.forceUpdate();\n                    } else {\n                        const store = FileStore.getStore();\n                        loadChatContent(store, chat);\n                    }\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === userId && !chat.photo) {\n                    //console.log('UserTileControl.onUpdateChatTitle user_id=' + userId);\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, onSelect } = this.props;\n        let { user } = this.props;\n        if (!userId && !user) return null;\n\n        user = UserStore.get(userId) || user;\n        if (!user) return null;\n\n        const { profile_photo } = user;\n\n        const letters = getUserLetters(user);\n        const blob = profile_photo && profile_photo.small ? FileStore.getBlob(profile_photo.small.id) : null;\n        const src = FileStore.getBlobUrl(blob);\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n        const className = classNames('tile-photo', { [tileColor]: !blob }, { pointer: onSelect });\n\n        return src ? (\n            <img className={className} src={src} draggable={false} alt='' onClick={this.handleSelect} />\n        ) : (\n            <div className={className} onClick={this.handleSelect}>\n                <span className='tile-text'>{letters}</span>\n            </div>\n        );\n    }\n}\n\nUserTileControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    user: PropTypes.object,\n    onSelect: PropTypes.func\n};\n\nexport default UserTileControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n        const photoSize = getSize(photo.sizes, size);\n        const thumbnail = getSize(photo.sizes, thumbnailSize);\n\n        this.state = {\n            photoSize: photoSize,\n            thumbnail: thumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize } = this.state;\n        const { fileId } = update;\n\n        if (!photoSize) return;\n\n        if (photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, showProgress, style } = this.props;\n        const { thumbnail, photoSize } = this.state;\n\n        if (!photoSize) return null;\n\n        const src = getSrc(photoSize.photo);\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        return (\n            <div className='photo' style={photoStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='photo-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('photo-image', { 'media-blurred': isBlurred })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Sticker.css';\n\nclass Sticker extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.removeListener('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, blur, sticker: source, style, openMedia } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (!fitSize) return null;\n\n        const stickerStyle = {\n            width: fitSize.width,\n            height: fitSize.height,\n            ...style\n        };\n\n        return (\n            <div className={classNames('sticker', className)} style={stickerStyle} onClick={openMedia}>\n                {src ? (\n                    <img className='sticker-image' draggable={false} src={src} alt='' />\n                ) : (\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(user);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.stickerSet = null;\n        this.hint = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.assign(this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.primary.main,\n        borderRadius: '50%',\n        width: 48,\n        height: 48\n    }\n});\n\nclass DocumentTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { classes, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const className = classNames('tile-photo', { 'document-tile-background': !thumbnailSrc });\n\n        return (\n            <div className='document-tile' onClick={openMedia}>\n                {thumbnailSrc ? (\n                    <img className={className} src={thumbnailSrc} draggable={false} alt='' />\n                ) : (\n                    <div className={classes.background} />\n                )}\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={thumbnailSrc}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={completeIcon}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nexport default withStyles(styles, { withTheme: true })(DocumentTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t } = this.props;\n        const { thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = isBlurredThumbnail(thumbnail);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div className='animation' style={style} onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='media-viewer-content-image' style={style} src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-image'\n                            src={src}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                            style={style}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport {\n    MUTED_VALUE_MAX,\n    NOTIFICATIONS_DEBOUNCE_DELAY_MS,\n    MUTED_VALUE_MIN\n} from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass NotificationsControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n        const chat = ChatStore.get(chatId);\n        const isMuted = isChatMuted(chat);\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isMuted\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(this.setChatNotificationSettings, NOTIFICATIONS_DEBOUNCE_DELAY_MS);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n            const chat = ChatStore.get(chatId);\n            const isMuted = isChatMuted(chat);\n\n            return {\n                prevChatId: props.chatId,\n                isMuted: isMuted\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        ApplicationStore.removeListener('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        if (!update.chat_id) return;\n        if (update.chat_id !== chatId) return;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n\n        this.setState({ isMuted: isChatMuted(chat) });\n    };\n\n    onUpdateScopeNotificationSettings = (update) => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (\n                    chat.type['@type'] === 'chatTypeBasicGroup' ||\n                    chat.type['@type'] === 'chatTypeSupergroup'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (\n                    chat.type['@type'] === 'chatTypePrivate' ||\n                    chat.type['@type'] === 'chatTypeSecret'\n                ) {\n                    this.setState({ isMuted: isChatMuted(chat) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.notification_settings) return;\n\n        const isMutedPrev = isChatMuted(chat);\n        if (isMutedPrev === isMuted) {\n            return;\n        }\n\n        const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n        const newNotificationSettings = {\n            ...chat.notification_settings,\n            use_default_mute_for: false,\n            mute_for: muteFor\n        };\n\n        TdLibController.send({\n            '@type': 'setChatNotificationSettings',\n            chat_id: chatId,\n            notification_settings: newNotificationSettings\n        });\n    };\n}\n\nexport default NotificationsControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { file, prevFile } = this.state;\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, file_name } = document;\n        const file = document.document;\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={<InsertDriveFileIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\nimport InsertDriveFileIcon from './Document';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={title}>\n                            {title}\n                        </a>\n                    </div>\n                    <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    audio: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('updateFile', this.onUpdateFile);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                timeString: this.getTimeString(update.currentTime, update.duration || duration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia } = this.props;\n        const { thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize(thumbnail || { width: width, height: height }, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const style = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height\n        };\n\n        const file = thumbnail ? thumbnail.photo : null;\n        const blob = file ? FileStore.getBlob(file.id) || file.blob : null;\n        const src = FileStore.getBlobUrl(blob);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        return (\n            <div className='video' style={style} onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', { 'media-blurred': isBlurred })}\n                    style={style}\n                    src={src}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.focused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.removeListener('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.removeListener('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (this.inView && this.focused && !this.openMediaViewer && !this.openProfileMediaViewer) {\n                //console.log('clientUpdate player play message_id=' + this.props.messageId);\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                //console.log('clientUpdate player pause message_id=' + this.props.messageId);\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.focused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', { 'media-blurred': isBlurred })}\n                                style={style}\n                                src={thumbnailSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<ArrowDownwardIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport PollIcon from '@material-ui/icons/Poll';\nimport { canSendDocuments, canSendPhotos, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        margin: '8px 0'\n    }\n};\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton}\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon className='inputbox-attach-icon' />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendPhotos(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText inset primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendDocuments(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText inset primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText inset primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { borderStyle } from '../Theme';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    counterRoot: {\n        position: 'absolute',\n        right: 24,\n        bottom: 6,\n        minWidth: 28,\n        userSelect: 'none'\n    },\n    ...borderStyle(theme)\n});\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength } = this.state;\n\n        return (\n            <div className='create-poll-option'>\n                <div\n                    ref={this.optionTextRef}\n                    id='create-poll-option-text'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Option')}\n                    data-length={POLL_OPTION_LENGTH}\n                    data-max-length={POLL_OPTION_MAX_LENGTH}\n                    onInput={this.handleInput}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                />\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className={classNames('create-poll-option-bottom-border', { [classes.borderColor]: true })} />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className={classes.counterRoot}\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { EventEmitter } from 'events';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.poll = null;\n\n        this.addTdLibListener();\n        this.setMaxListeners(Infinity);\n    }\n\n    onUpdate = update => {};\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    id: Date.now(),\n                    question: '',\n                    options: []\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.addListener('update', this.onUpdate);\n        TdLibController.addListener('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.removeListener('update', this.onUpdate);\n        TdLibController.removeListener('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options } = this.poll;\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text)\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nconst styles = theme => ({\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    contentRoot: {\n        width: 300\n    },\n    dividerRoot: {\n        margin: '8px -24px'\n    },\n    listRoot: {\n        margin: '0 -24px'\n    },\n    listItem: {\n        padding: '11px 24px',\n        color: '#8e9396',\n        height: 48\n    },\n    typographyRoot: {}\n});\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.removeListener('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.removeListener('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.removeListener('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.removeListener('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertHTML', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const options = poll ? poll.options : [];\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className={classes.dividerRoot} />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: classes.listRoot }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className={classes.listItem}\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Send')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className={classes.dialogRoot}\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: classes.contentRoot }}>{t('CancelPollAlertText')}</DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withStyles(styles),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from '../Message/Reply';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nconst styles = theme => ({\n    replyIcon: {\n        padding: 12,\n        color: theme.palette.action.active\n    },\n    closeIconButton: {\n        margin: 0\n    }\n});\n\nclass InputBoxHeader extends React.Component {\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateReply',\n            chatId: this.props.chatId,\n            messageId: 0\n        });\n    };\n\n    render() {\n        const { classes, chatId, messageId } = this.props;\n        if (!chatId) return null;\n        if (!messageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <ReplyIcon className={classes.replyIcon} />\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply chatId={chatId} messageId={messageId} />\n                </div>\n                <div className='inputbox-header-right-column'>\n                    <IconButton className={classes.closeIconButton} aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport emojiRegex from 'emoji-regex';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport SendIcon from '@material-ui/icons/Send';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Dialog/CreatePollDialog';\n//import EmojiPickerButton from './../ColumnMiddle/EmojiPickerButton';\nimport InputBoxHeader from './InputBoxHeader';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport { PHOTO_SIZE } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxControl.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nconst styles = theme => ({\n    iconButton: {\n        margin: '8px 0'\n    },\n    closeIconButton: {\n        margin: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass InputBoxControl extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = ApplicationStore.getChatId();\n\n        this.innerHTML = null;\n        this.state = {\n            chatId: chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            openPasteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.openPasteDialog !== openPasteDialog) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        //console.log('Perf componentDidMount');\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.setInputFocus();\n        this.setDraft();\n        this.handleInput();\n    }\n\n    componentWillUnmount() {\n        const newChatDraftMessage = this.getNewChatDraftMessage(this.state.chatId, this.state.replyToMessageId);\n        this.setChatDraftMessage(newChatDraftMessage);\n\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        MessageStore.removeListener('clientUpdateReply', this.onClientUpdateReply);\n        StickerStore.removeListener('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n    }\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.onSendInternal(content, true, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.innerHTML = null;\n        this.setState({\n            chatId: update.nextChatId,\n            replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n            openPasteDialog: false\n        });\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const draft = getChatDraft(chatId);\n        if (draft) {\n            element.innerText = draft.text;\n            this.innerHTML = draft.text;\n        } else {\n            element.innerText = null;\n            this.innerHTML = null;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        //console.log('Perf componentDidUpdate');\n        this.setChatDraftMessage(snapshot);\n\n        if (prevState.chatId !== this.state.chatId) {\n            this.setInputFocus();\n            this.setDraft();\n            this.handleInput();\n        }\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        if (prevState.chatId === this.state.chatId) return null;\n\n        return this.getNewChatDraftMessage(prevState.chatId, prevState.replyToMessageId);\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            if (this.newMessageRef.current) {\n                const element = this.newMessageRef.current;\n\n                if (element.childNodes.length > 0) {\n                    const range = document.createRange();\n                    range.setStart(element.childNodes[0], element.childNodes[0].length);\n                    range.collapse(true);\n\n                    const selection = window.getSelection();\n                    selection.removeAllRanges();\n                    selection.addRange(range);\n                }\n                element.focus();\n            }\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getNewChatDraftMessage = (chatId, replyToMessageId) => {\n        let chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const newDraft = this.getInputText();\n\n        let previousDraft = '';\n        let previousReplyToMessageId = 0;\n        const { draft_message } = chat;\n        if (draft_message && draft_message.input_message_text && draft_message.input_message_text.text) {\n            const { reply_to_message_id, input_message_text } = draft_message;\n\n            previousReplyToMessageId = reply_to_message_id;\n            if (input_message_text && input_message_text.text) {\n                previousDraft = input_message_text.text.text;\n            }\n        }\n\n        if (newDraft !== previousDraft || replyToMessageId !== previousReplyToMessageId) {\n            const draftMessage = {\n                '@type': 'draftMessage',\n                reply_to_message_id: replyToMessageId,\n                input_message_text: {\n                    '@type': 'inputMessageText',\n                    text: {\n                        '@type': 'formattedText',\n                        text: newDraft,\n                        entities: null\n                    },\n                    disable_web_page_preview: true,\n                    clear_draft: false\n                }\n            };\n\n            return { chatId: chatId, draftMessage: draftMessage };\n        }\n\n        return null;\n    };\n\n    handleSubmit = () => {\n        let text = this.getInputText();\n\n        this.newMessageRef.current.innerText = null;\n        this.newMessageRef.current.textContent = null;\n        this.innerHTML = null;\n\n        if (!text) return;\n\n        const content = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: text,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        this.onSendInternal(content, false, result => {});\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = () => {\n        let files = this.attachPhotoRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            readImageSize(file, result => {\n                this.handleSendPhoto(result);\n            });\n        });\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = () => {\n        let files = this.attachDocumentRef.current.files;\n        if (files.length === 0) return;\n\n        Array.from(files).forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    getInputText() {\n        let innerText = this.newMessageRef.current.innerText;\n        let innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        return innerText;\n    }\n\n    handleKeyUp = () => {\n        const { chatId } = this.state;\n\n        if (isMeChat(chatId)) return;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.newMessageRef.current.innerHTML = '';\n        }\n\n        if (!innerText) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    };\n\n    handleKeyDown = e => {\n        const innerText = this.newMessageRef.current.innerText;\n        const innerHTML = this.newMessageRef.current.innerHTML;\n        this.innerHTML = innerHTML;\n\n        if (e.key === 'Enter' && !e.shiftKey) {\n            e.preventDefault();\n            this.handleSubmit();\n        }\n    };\n\n    handleSendPhoto = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessagePhoto',\n            photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n            width: file.photoWidth,\n            height: file.photoHeight\n        };\n\n        this.onSendInternal(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.onSendInternal(poll, true, () => {});\n    };\n\n    handleSendDocument = file => {\n        if (!file) return;\n\n        const content = {\n            '@type': 'inputMessageDocument',\n            document: { '@type': 'inputFileBlob', name: file.name, data: file }\n        };\n\n        this.onSendInternal(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handlePaste = event => {\n        const items = (event.clipboardData || event.originalEvent.clipboardData).items;\n\n        const files = [];\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].kind.indexOf('file') === 0) {\n                files.push(items[i].getAsFile());\n            }\n        }\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.files = files;\n            this.setState({ openPasteDialog: true });\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n            this.innerHTML = plainText;\n            return;\n        }\n    };\n\n    handlePasteContinue = () => {\n        this.handleClosePaste();\n\n        const files = this.files;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            this.handleSendDocument(file);\n        });\n\n        this.files = null;\n    };\n\n    handleClosePaste = () => {\n        this.setState({ openPasteDialog: false });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (message && message.sending_state && message.sending_state['@type'] === 'messageSendingStatePending') {\n            if (message.content && message.content['@type'] === 'messagePhoto' && message.content.photo) {\n                let size = getSize(message.content.photo.sizes, PHOTO_SIZE);\n                if (!size) return;\n\n                let file = size.photo;\n                if (file && file.local && file.local.is_downloading_completed && !file.blob) {\n                    file.blob = blob;\n                    FileStore.updatePhotoBlob(message.chat_id, message.id, file.id);\n                }\n            }\n        }\n    };\n\n    onSendInternal = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    const newChatDraftMessage = this.getNewChatDraftMessage(\n                        this.state.chatId,\n                        this.state.replyToMessageId\n                    );\n                    this.setChatDraftMessage(newChatDraftMessage);\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.newMessageRef.current.innerText += emoji.native;\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const stickers = await TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        });\n        console.log('Matched stickers', match[0], stickers);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickersHint',\n            hint: {\n                emoji: match[0],\n                stickers\n            }\n        });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatId, replyToMessageId, openPasteDialog } = this.state;\n\n        const content = this.innerHTML !== null ? this.innerHTML : null;\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'inputbox')}>\n                    <InputBoxHeader chatId={chatId} messageId={replyToMessageId} />\n                    <div className='inputbox-wrapper'>\n                        <div className='inputbox-left-column'>\n                            <React.Suspense fallback={<div/>}>\n                                <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                            </React.Suspense>\n                        </div>\n                        <div className='inputbox-middle-column'>\n                            <div\n                                id='inputbox-message'\n                                ref={this.newMessageRef}\n                                key={new Date()}\n                                placeholder={t('Message')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                                onInput={this.handleInput}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='inputbox-right-column'>\n                            <input\n                                ref={this.attachDocumentRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                onChange={this.handleAttachDocumentComplete}\n                            />\n                            <input\n                                ref={this.attachPhotoRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                multiple='multiple'\n                                accept='image/*'\n                                onChange={this.handleAttachPhotoComplete}\n                            />\n                            <AttachButton\n                                chatId={chatId}\n                                onAttachPhoto={this.handleAttachPhoto}\n                                onAttachDocument={this.handleAttachDocument}\n                                onAttachPoll={this.handleAttachPoll}\n                            />\n\n                            {/*<IconButton>*/}\n                            {/*<KeyboardVoiceIcon />*/}\n                            {/*</IconButton>*/}\n                            <IconButton className={classes.iconButton} aria-label='Send' onClick={this.handleSubmit}>\n                                <SendIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <Dialog\n                    transitionDuration={0}\n                    open={openPasteDialog}\n                    onClose={this.handleClosePaste}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('AppName')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.files && this.files.length > 1\n                                ? 'Are you sure you want to send files?'\n                                : 'Are you sure you want to send file?'}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePaste} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handlePasteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(InputBoxControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport './FooterCommand.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { classes, command, onCommand } = this.props;\n\n        return (\n            <div className={classNames(classes.borderColor, 'footer-command-wrapper')}>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className={classes.button} onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(FooterCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FooterCommand from './FooterCommand';\nimport NotificationsControl from './NotificationsControl';\n\nclass NotificationsCommandControl extends NotificationsControl {\n    constructor(props){\n        super(props);\n    }\n\n    render() {\n        const { isMuted } = this.state;\n        const command = isMuted ? 'unmute' : 'mute';\n\n        return (\n            <FooterCommand\n                command={command}\n                onCommand={this.handleSetChatNotifications}/>\n        );\n    }\n\n}\n\nexport default NotificationsCommandControl;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport InputBoxControl from './InputBoxControl';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommandControl from './NotificationsCommandControl';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.chatId !== this.props.chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                if (basicGroup && basicGroup.status) {\n                    switch (basicGroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return null;\n                        }\n                        case 'chatMemberStatusMember': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (basicGroup.status.is_member) {\n                                if (!basicGroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBoxControl />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup && supergroup.status) {\n                    switch (supergroup.status['@type']) {\n                        case 'chatMemberStatusAdministrator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusBanned': {\n                            return <FooterCommand command='delete and exit' onCommand={this.handleDeleteAndExit} />;\n                        }\n                        case 'chatMemberStatusCreator': {\n                            return <InputBoxControl />;\n                        }\n                        case 'chatMemberStatusLeft': {\n                            return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                        }\n                        case 'chatMemberStatusMember': {\n                            if (supergroup.is_channel) {\n                                return <NotificationsCommandControl chatId={chatId} />;\n                            } else {\n                                return <InputBoxControl />;\n                            }\n                        }\n                        case 'chatMemberStatusRestricted': {\n                            if (supergroup.status.is_member) {\n                                if (!supergroup.status.can_send_messages) {\n                                    return null;\n                                }\n\n                                return <InputBoxControl />;\n                            } else {\n                                return <FooterCommand command='join' onCommand={this.handleJoin} />;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Slider from '@material-ui/lab/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nconst styles = {\n    slider: {\n        maxWidth: 216\n    },\n    track: {\n        transition: 'width 0ms linear 0ms, height 0ms linear 0ms, transform 0ms linear 0ms'\n    },\n    thumbWrapper: {\n        transition: 'transform 0ms linear 0ms'\n    },\n    thumb: {\n        transition: 'transform 0ms linear 0ms, box-shadow 0ms linear 0ms'\n    }\n};\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                currentTime: update.currentTime,\n                duration: update.duration || duration,\n                value: this.getValue(update.currentTime, update.duration || duration, active)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value: this.getValue(active ? currentTime : 0, duration, true)\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className={classes.slider}\n                    classes={{\n                        track: classes.track,\n                        thumbWrapper: classes.thumbWrapper,\n                        thumb: classes.thumb\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default withStyles(styles)(VoiceNoteSlider);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport FileProgress from '../../Viewer/FileProgress';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.removeListener('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, classes } = this.props;\n        const { playing } = this.state;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        //const title = getAudioTitle(audio);\n\n        return (\n            <div className='document'>\n                <DocumentTile\n                    thumbnail={null}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<ArrowDownwardIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func.isRequired\n};\n\nexport default VoiceNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.removeListener('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const src = getSrc(photo);\n        const isBlurred = isBlurredThumbnail(photo);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n\n        return (\n            <div className='reply-tile'>\n                <img\n                    className={classNames(\n                        'reply-tile-photo',\n                        { 'reply-tile-photo-round': isVideoNote },\n                        { 'reply-tile-photo-loading': !src },\n                        { 'media-blurred': isBlurred }\n                    )}\n                    draggable={false}\n                    src={src}\n                    alt=''\n                />\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object.isRequired\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize } from '../../Utils/Message';\nimport { accentStyles } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId);\n    };\n\n    render() {\n        const { classes, t, chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        let title = !message ? null : getTitle(message);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                    {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                    <div className='reply-content'>\n                        {title && (\n                            <div className={classNames('reply-content-title', classes.accentColorDark)}>{title}</div>\n                        )}\n                        <div className='reply-content-subtitle'>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Reply);\n"],"sourceRoot":""}