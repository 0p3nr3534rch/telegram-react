{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLinkTile.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Broom.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Message/Meta.js","Components/Message/Album/AlbumItem.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Album/GroupedMessages.js","Components/Message/UnreadSeparator.js","Components/Tile/EmptyTile.js","Components/Message/Album/Album.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/Message/Album/DocumentAlbum.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/Popup/ClearHistoryDialog.js","Components/Popup/DeleteMessagesDialog.js","Components/Popup/LeaveChatDialog.js","Components/Additional/NotificationTimer.js","Components/Actions.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","ForwardTargetChat","chatId","selected","onSelect","t","shortTitle","getChatShortTitle","ChatTile","withTranslation","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","user_id","UserStore","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","store","getStore","loadChatsContent","messageIds","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","size","height","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","forceUpdate","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","onFastUpdatingComplete","onUpdateChatTitle","nextProps","nextState","ChatStore","showSavedMessages","isVerified","isChatVerified","title","defaultProps","DialogStatus","onUpdateUserStatus","chat","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","big","showTitle","isSavedMessages","isMeChat","ChatDetailsHeader","backButton","info","isPrivateChat","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","alignItems","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","groupsInCommon","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","hasGroupsInCommon","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","padding","scroll","filtersRef","item","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","groupsInCommonFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","nextContext","openMedia","minithumbnail","miniSrc","data","thumbSrc","getSrc","src","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","thumbnailSize","prevPhoto","getSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLinkTile","isBlurred","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Boolean","tileColor","abs","charCodeAt","draggable","alt","SharedLink","webPage","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","description","animation","video_note","display_url","videoNote","album_cover_minithumbnail","album_cover_thumbnail","getPhotoSize","urlEntities","isValidEntity","showLinks","oneLinkText","offset","links","entityText","substring","mail","typeUrl","getTitleFromUrl","SafeLink","getFormattedText","getFirstLetter","entity","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","userId","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","overScanCount","SharedMediaContent","items","some","scrollTop","list","listRef","offsetTop","viewportHeight","offsetParent","offsetHeight","renderIds","getRenderIds","onUpdateMessageSend","getSource","isValidContent","slice","SHARED_MESSAGE_SLICE_LIMIT","rowHeight","getRowHeight","params","loading","completed","migrateCompleted","getFilter","handleScroll","onLoadNext","handleVirtScroll","setScrollPosition","isVisibleItem","prevScrollTop","loadIncomplete","lastMessages","messages","fromMessageId","requestId","from_message_id","finally","currentParams","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","onLoadMigratedNext","handleOpen","popup","renderIdsList","contentHeight","controls","itemHeight","getItemHeight","getItemTemplate","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","web_page","onOpen","voice_note","ChatDetails","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","divider","dividerRef","scrollTo","behavior","mediaRef","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isMe","isGroupChat","users","member","user","sort","y","getUserStatusOrder","User","getUrlMentionHashtagEntities","bioText","bioEntities","openChatTitle","onScroll","List","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","handleSelect","getChatUserId","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedMedia","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","handleDeleteChat","leaveChat","dialog","isLastPinned","ApplicationStore","deleteChat","canDeleteChat","deleteChatTitle","getDeleteChatTitle","isSelected","getChatId","isUnread","isArchived","showOnline","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","clearDataUrls","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","small","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","log","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","loadChatContent","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","loaded","onClientUpdateDocumentThumbnailBlob","wallpaper","handleLoad","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","onUpdateChatPhoto","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","handleSaveCache","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","fontSize","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","Reply","onGetMessageResult","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","editContent","sendPhoto","iSize","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","handleUnpin","canClearHistory","unpinMessage","canUnpinMessage","Broom","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","connectionState","getConnectionState","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","handleSearchChat","localize","str","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","clearInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","FrameCheck","Copy","RemoveCheck","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","AlbumItem","getAlbumItem","Photo","Video","inlineMeta","getWebPage","Document","onClientUpdateClearSelection","highlighted","tagName","handleSelection","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","MessageGroupedLayoutAttempt","lineCounts","heights","GroupedMessagePosition","minX","maxX","minY","maxY","w","h","flags","spanSize","siblingHeights","leftSpanOffset","GroupedMessages","posArray","positions","maxSizeWidth","hasSibling","scale","end","sum","desiredWidth","totalWidth","totalHeight","paddingsWidth","maxSizeHeight","averageAspectRatio","proportions","forceCalc","getWidthHeight","isLast","maxAspectRation","firstLine","secondLine","thirdLine","fourthLine","croppedRatios","attempts","multiHeight","optimal","optimalDiff","maxHeight","attempt","minLineHeight","MAX_VALUE","c","lineHeight","spanLeft","posToFix","ratio","pos","position1","position2","POSITION_FLAG_LEFT","POSITION_FLAG_RIGHT","secondWidth","firstWidth","position3","thirdHeight","secondHeight","rightWidth","leftWidth","firstHeight","position4","h0","w0","w2","w1","h1","h2","side","byMinSize","lastSide","lastSize","currentSide","EmptyTile","Album","oldEmojiMatches","emojiMatches","grouped","calculate","albumHistoryEquals","showTail","showUnreadSeparator","forward_info","m","hasCaption","meta","handleDateClick","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","handleSelectUser","handleSelectChat","withBubble","tailRounded","onMouseOver","onMouseOut","handleMouseOut","onAnimationEnd","handleAnimationEnd","handleReplyClick","prevMessageIds","PHOTO_DISPLAY_SIZE","showData","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","Animation","stretch","smallPhoto","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","getEmojiMatches","mouseDown","mouseOut","openReply","isMetaBubble","sender_name","getMessageStyle","withRef","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","DocumentAlbum","lastSelected","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","SCROLL_TO_POSITION","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","hasLastMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","currentHistory","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","scrollToPosition","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","scrollPosition","last_read_inbox_message_id","highlightMessage","loadDraftContent","getChatMedia","scrollMessage","getScrollMessage","viewAction","hasFocus","getMessagePhoto","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isFirstUnread","isServiceMessage","forwardInfoEquals","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","media_album_id","albumAdded","album","ALBUM_MESSAGES_LIMIT","nextMessage","showMessageDate","isNextFirstUnread","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","disableEnforceFocus","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","MEDIA_VIEWER_VIDEO_MAX_SIZE","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","revoke","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateChatBlob","onClientUpdateUserBlob","handlePhotoClick","onPrevious","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","ClearHistoryDialog","handleRevokeChange","canBeDeletedForAllUsers","DeleteMessagesDialog","LeaveChatDialog","getDeleteDialogText","NotificationTimer","handleTimer","seconds","expire","timerId","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","Actions","onClientUpdateDeleteMessages","handleClearHistoryContinue","request","handleLeaveContinue","getLeaveChatNotification","isChatMember","isCreator","handleDeleteMessagesContinue","clientUpdateType","persist","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.3c9fedcc.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open={true}\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\nimport './NotificationsListItem.css';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        className='notifications-checkbox'\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const groupsInCommonFilter = this.filterRef.get('groupsInCommon');\n        if (selectedIndex === 6 && groupsInCommonFilter) {\n            item = groupsInCommonFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote, groupsInCommon } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0) +\n            (groupsInCommon.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0\n            || groupsInCommon.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className={classNames('tabs', 'shared-media-tabs')}>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    {groupsInCommon.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('groupsInCommon', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 6})}\n                            onMouseDown={e => this.handleFilterClick(e, 6)}>\n                            <span>{t('SharedGroupsTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        const { prevPhoto } = state;\n        if (photo !== prevPhoto) {\n            return {\n                prevPhoto: photo,\n\n                contextMenu: false,\n                left: 0,\n                top: 0,\n\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo.minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, photo, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (photo !== nextProps.photo) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { hasVideoNote } from '../../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedLinkTile.css';\n\nclass SharedLinkTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.file || thumbnail.photo;\n        if (!file) return;\n\n        if (update.fileId === file.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, thumbnail, minithumbnail, title } = this.props;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(thumbnail ? thumbnail.file || thumbnail.photo : null);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <div className={classNames('shared-link-tile', { [tileColor]: !hasSrc })}>\n                {hasSrc? (\n                    <img\n                        className={classNames(\n                            'shared-link-tile-photo',\n                            { 'shared-link-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                ) : (\n                    <span>{title}</span>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedLinkTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    title: PropTypes.string\n};\n\nexport default SharedLinkTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport SafeLink from '../../Additional/SafeLink';\nimport SharedLinkTile from './SharedLinkTile';\nimport { getFirstLetter, getPhotoSize } from '../../../Utils/Common';\nimport { getFormattedText, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport { PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, webPage, caption, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (webPage !== nextProps.webPage) {\n            return true;\n        }\n\n        if (caption !== nextProps.caption) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    static isValidEntity(entity) {\n        if (!entity) return false;\n\n        const { type } = entity;\n        if (!type) return false;\n\n        return (\n            type['@type'] === 'textEntityTypeUrl' ||\n            type['@type'] === 'textEntityTypeTextUrl' ||\n            type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let thumbnail = null;\n        let minithumbnail = null;\n        let content = null;\n        let { display_url, description, photo, title, url, animation, audio, document, sticker, video, video_note: videoNote } = webPage || {\n            title: '',\n            description: {\n                '@type': 'formattedText',\n                text: '',\n                entities: []\n            },\n            photo: null,\n            animation: null,\n            audio: null,\n            document: null,\n            sticker: null,\n            video: null,\n            video_note: null,\n            url: ''\n        };\n\n        if (animation) {\n            minithumbnail = animation.minithumbnail;\n            thumbnail = animation.thumbnail;\n        } else if (audio) {\n            minithumbnail = audio.album_cover_minithumbnail;\n            thumbnail = audio.album_cover_thumbnail;\n        } else if (document) {\n            minithumbnail = document.minithumbnail;\n            thumbnail = document.thumbnail;\n        } else if (sticker) {\n            minithumbnail = sticker.minithumbnail;\n            thumbnail = sticker.thumbnail;\n        } else if (video) {\n            minithumbnail = video.minithumbnail;\n            thumbnail = video.thumbnail;\n        } else if (videoNote) {\n            minithumbnail = videoNote.minithumbnail;\n            thumbnail = videoNote.thumbnail;\n        }\n\n        if (!thumbnail && !minithumbnail && photo) {\n            minithumbnail = photo.minithumbnail;\n            thumbnail = getPhotoSize(photo.sizes, PHOTO_SIZE);\n        }\n\n        let { text, caption } = message.content;\n        text = text || caption;\n        if (text) {\n            const { entities } = text;\n            if (entities && entities.length > 0) {\n                const longTextMaxLength = 40;\n                const urlEntities = entities.filter(SharedLink.isValidEntity);\n                const showLinks = urlEntities.length > 1 || text.text.length > longTextMaxLength;\n                const oneLinkText = entities.length === 1 && entities[0].offset === 0 && entities[0].length === text.text.length;\n\n                const links =\n                    urlEntities.map((x, i) => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink key={i} className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n\n                if (showLinks) {\n                    let d = (urlEntities.length > 0 && urlEntities[0].offset > 0 ? text.text.substring(0, urlEntities[0].offset) : text.text) || description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && !oneLinkText && <div className='web-page-description'>{d}</div>}\n                            <div>{links}</div>\n                        </>);\n                } else {\n                    let d = description.text || '';\n                    d = d.trim();\n                    content = (\n                        <>\n                            {d && <div className='web-page-description'>{d}</div>}\n                            <div className='shared-link-text'>{getFormattedText(text, x => x, { isValidEntity: SharedLink.isValidEntity })}</div>\n                        </>);\n                }\n\n                if (webPage) {\n                    title = title || this.getTitleFromUrl(url);\n                }\n            }\n        }\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <SharedLinkTile\n                        minithumbnail={minithumbnail}\n                        thumbnail={thumbnail}\n                        title={getFirstLetter(this.getTitleFromUrl(url))}\n                    />\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n    caption: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, voiceNote, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (voiceNote !== nextProps.voiceNote) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, video, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (video !== nextProps.video) {\n            return true;\n        }\n\n        if (showOpenMessage !== nextProps.showOpenMessage) {\n            return true;\n        }\n\n        if (contextMenu !== nextState.contextMenu) {\n            return true;\n        }\n\n        if (left !== nextState.left) {\n            return true;\n        }\n\n        if (top !== nextState.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object,\n    showOpenMessage: PropTypes.bool,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../../Tile/Chat';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { loadChatsContent, loadMessageContents } from '../../../Utils/File';\nimport { openMedia } from '../../../Utils/Message';\nimport { openChat } from '../../../Actions/Client';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaContent.css';\n\nconst overScanCount = 5;\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0\n        }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getItemHeight(item) {\n        if (!item) return undefined;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { content } = item;\n                switch (content['@type']) {\n                    case 'messagePhoto': {\n                        return undefined;\n                    }\n                    case 'messageVideo': {\n                        return undefined;\n                    }\n                    case 'messageDocument': {\n                        return 78;\n                    }\n                    case 'messageAudio': {\n                        return 94;\n                    }\n                    case 'messageVoiceNote': {\n                        return 74;\n                    }\n                    default: {\n                        return undefined;\n                    }\n                }\n            }\n            case 'chat': {\n                return 74;\n            }\n            default: {\n                return undefined;\n            }\n        }\n    }\n\n    static getRowHeight(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return undefined;\n            }\n            case 2: {\n                return 78;\n            }\n            case 3: {\n                return 94;\n            }\n            case 4: {\n                return undefined;\n            }\n            case 5: {\n                return 74;\n            }\n            case 6: {\n                return 74;\n            }\n        }\n\n        return undefined;\n    }\n\n    static getItemTemplate = (selectedIndex, item, onOpen) => {\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                const { chat_id, id, content } = item;\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={onOpen}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                const { chat_id, id } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        caption={content.caption}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                const { chat_id, id, content } = item;\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={onOpen}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 6: {\n                const { id } = item;\n                return (\n                    <ListItem\n                        button\n                        key={`chat_id=${id}`}\n                        className='groups-in-common-item'>\n                        <Chat chatId={id} onSelect={onOpen} />\n                    </ListItem>\n                );\n            }\n        }\n\n        return null;\n    };\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n            case 6: {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && (content['@type'] === 'messageDocument' || content['@type'] === 'messageAudio');\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text, caption } = content;\n        if (web_page) return true;\n        if (!text && !caption) return false;\n\n        const { entities } = text || caption;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' };\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' };\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' };\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' };\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' };\n            }\n            case 6: {\n                return null;\n            }\n        }\n\n        return null;\n    }\n\n    static getSource(selectedIndex, media) {\n        if (!media) {\n            return [];\n        }\n\n        switch (selectedIndex) {\n            case 1: {\n                return media.photoAndVideo || [];\n            }\n            case 2: {\n                return media.document || [];\n            }\n            case 3: {\n                return media.audio || [];\n            }\n            case 4: {\n                return media.url || [];\n            }\n            case 5: {\n                return media.voiceNote || [];\n            }\n            case 6: {\n                return media.groupsInCommon || [];\n            }\n        }\n\n        return [];\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n            const groupsInCommon = media ? media.groupsInCommon : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            } else if (groupsInCommon.length > 0) {\n                selectedIndex = 6;\n            }\n            const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                renderIds: new Map(),\n                rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n                items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                groupsInCommon,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.onWindowResize);\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.onWindowResize);\n\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        const { items, selectedIndex } = this.state;\n        if (!items.some(x => x.id === message_id)) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onWindowResize = event => {\n        const { items, scrollTop } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n        this.setState({ ...renderIds });\n    };\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { scrollTop } = this.state;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n        const hasGroupsInCommon = groupsInCommon.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote\n            || selectedIndex === 6 && !hasGroupsInCommon;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            } else if (hasGroupsInCommon) {\n                selectedIndex = 6;\n            }\n        }\n\n        const source = SharedMediaContent.getSource(selectedIndex, media).filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n        const items = source.slice(0, SHARED_MESSAGE_SLICE_LIMIT);\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        this.setState({\n            selectedIndex,\n            renderIds: this.getRenderIds(items, viewportHeight, scrollTop - offsetTop),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            },\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            switch (this.state.selectedIndex) {\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5: {\n                    loadMessageContents(store, items);\n                    break;\n                }\n                case 6: {\n                    loadChatsContent(store, items);\n                    break;\n                }\n            }\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(currentChatId);\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n        const groupsInCommon = media ? media.groupsInCommon : [];\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        } else if (selectedIndex === 6) {\n            source = groupsInCommon;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            renderIds: new Map(),\n            rowHeight: SharedMediaContent.getRowHeight(selectedIndex),\n            items: source.slice(0, SHARED_MESSAGE_SLICE_LIMIT),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon,\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    handleScroll = (event, container) => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    handleVirtScroll = (event, container) => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        this.setScrollPosition(container.scrollTop);\n    };\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { rowHeight } = this.state;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    setScrollPosition = scrollTop => {\n        const { items, scrollTop: prevScrollTop, rowHeight } = this.state;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const offsetTop = list.offsetTop;\n        const viewportHeight = list.offsetParent.offsetHeight;\n\n        if (Math.abs(scrollTop - prevScrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(items, viewportHeight, scrollTop - offsetTop);\n\n            this.setState({\n                scrollTop,\n                ...renderIds\n            });\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading, messages: lastMessages } = params;\n\n        if (selectedIndex === 6) return;\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        let fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        if (lastMessages) {\n            fromMessageId = lastMessages.length > 0 ? lastMessages[lastMessages.length - 1].id : 0;\n        }\n        params.loading = true;\n        params.requestId = new Date();\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { params: currentParams } = this.state;\n        if (!currentParams || currentParams.requestId !== params.requestId) {\n            return;\n        }\n\n        const { messages } = result;\n        params.messages = messages;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext(params, loadIncomplete) {\n\n    }\n\n    handleOpen = item => {\n        const { popup } = this.props;\n\n        switch (item['@type']) {\n            case 'message': {\n                const { chat_id, id } = item;\n\n                openMedia(chat_id, id, false);\n                break;\n            }\n            case 'chat': {\n                const { id } = item;\n                openChat(id);\n\n                if (popup) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateDialogChatId',\n                        chatId: 0\n                    });\n                }\n            }\n        }\n    };\n\n    render() {\n        const {\n            selectedIndex,\n            items = [],\n            renderIds,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote,\n            groupsInCommon\n        } = this.state;\n\n        // console.log('[vlist] render', [selectedIndex, items, renderIds]);\n\n        const hasItems = photoAndVideo && photoAndVideo.length > 0\n            || document && document.length > 0\n            || audio && audio.length > 0\n            || url && url.length > 0\n            || voiceNote && voiceNote.length > 0\n            || groupsInCommon && groupsInCommon.length > 0;\n        if (!hasItems) {\n            return (<div ref={this.listRef}/>);\n        }\n\n        if (selectedIndex === 2 || selectedIndex === 3 || selectedIndex === 5) {\n            let contentHeight = 0;\n            const controls = items.map((x, index) => {\n                const { chat_id, id } = x;\n                const itemHeight = SharedMediaContent.getItemHeight(x);\n                if (!itemHeight) {\n                    return null;\n                }\n                contentHeight += itemHeight;\n\n                return ((!renderIds.size || renderIds.has(index)) && (\n                    <div key={`chat_id=${chat_id}_message_id=${id}`} className='shared-media-virt-item' style={{ top: contentHeight - itemHeight }}>\n                        {SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x))}\n                    </div>\n                ));\n            });\n\n            return (\n                <div ref={this.listRef} className='shared-media-virt-content' style={{ height: contentHeight }}>\n                    {controls}\n                </div>\n            );\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => SharedMediaContent.getItemTemplate(selectedIndex, x, () => this.handleOpen(x)))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n        if (divider.offsetTop === list.scrollTop) return;\n\n        if (list.scrollTop < divider.offsetTop) {\n            list.scrollTo({\n                top: divider.offsetTop,\n                behavior: 'smooth'\n            });\n        } else {\n            list.scrollTop = divider.offsetTop + 70;\n            setTimeout(() => {\n                list.scrollTo({\n                    top: divider.offsetTop,\n                    behavior: 'smooth'\n                });\n            }, 0);\n        }\n        // requestAnimationFrame(() => {\n        //     list.scrollTo({\n        //         top: divider.offsetTop,\n        //         behavior: 'smooth'\n        //     });\n        // });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n\n        media.handleVirtScroll(event, list);\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        let openChatTitle = t('SendMessage');\n        if (isChannelChat(chatId)) {\n            openChatTitle = t('OpenChannel');\n        } else if (isGroupChat(chatId)) {\n            openChatTitle = t('OpenGroup');\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={t('Bio')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                            secondary={t('Username')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {openChatTitle.toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId} popup={popup}/>\n                    {/*{(photoCount > 0 ||*/}\n                    {/*    videoCount > 0 ||*/}\n                    {/*    documentCount > 0 ||*/}\n                    {/*    audioCount > 0 ||*/}\n                    {/*    urlCount > 0 ||*/}\n                    {/*    voiceAndVideoNoteCount > 0 ||*/}\n                    {/*    groupInCommonCount > 0) && (*/}\n                    {/*    <>*/}\n                            {/*<Divider />*/}\n                            {/*<List className='shared-media-list'>*/}\n                            {/*    {photoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedPhotos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <PhotoIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {photoCount === 1 ? '1 photo' : `${photoCount} photos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {videoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVideos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <VideocamIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {videoCount === 1 ? '1 video' : `${videoCount} videos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {documentCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedDocuments}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertDriveFileIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {documentCount === 1 ? '1 file' : `${documentCount} files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {audioCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedAudios}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <HeadsetIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {urlCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedLinks}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertLinkIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {voiceAndVideoNoteCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <MicIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {voiceAndVideoNoteCount === 1*/}\n                            {/*                            ? '1 voice message'*/}\n                            {/*                            : `${voiceAndVideoNoteCount} voice messages`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {groupInCommonCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenGroupInCommon}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <GroupIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {groupInCommonCount === 1*/}\n                            {/*                            ? '1 group in common'*/}\n                            {/*                            : `${groupInCommonCount} groups in common`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                    {/*{items.length > 0 && (*/}\n                    {/*    <>*/}\n                    {/*        <Divider />*/}\n                    {/*        <List>{items}</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d=\"M19.36,2.72L20.78,4.14L15.06,9.85C16.13,11.39 16.28,13.24 15.38,14.44L9.06,8.12C10.26,7.22 12.11,7.37 13.65,8.44L19.36,2.72M5.93,17.57C3.92,15.56 2.69,13.16 2.35,10.92L7.23,8.83L14.67,16.27L12.58,21.15C10.34,20.81 7.94,19.58 5.93,17.57Z\" />,\n    'Broom'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList, canClearHistory,\n    canDeleteChat,\n    getDeleteChatTitle,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    leaveChat,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    handleDeleteChat = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        leaveChat(chatId)\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        {/*{clearHistory && (*/}\n                        {/*    <MenuItem onClick={this.handleClearHistory}>*/}\n                        {/*        <ListItemIcon>*/}\n                        {/*            <BroomIcon />*/}\n                        {/*        </ListItemIcon>*/}\n                        {/*        <ListItemText primary={t('ClearHistory')} />*/}\n                        {/*    </MenuItem>*/}\n                        {/*)}*/}\n                        {deleteChat && deleteChatTitle && (\n                            <MenuItem onClick={this.handleDeleteChat}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={deleteChatTitle} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>\n                    {items}\n                </div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        this.clear();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clearDataUrls();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            date: new Date(),\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        const promises = [];\n        promises.push(CacheManager.remove('cache').catch(error => null));\n        promises.push(CacheManager.remove('files').catch(error => null));\n        promises.push(CacheManager.remove('filters').catch(error => null));\n        promises.push(CacheManager.remove('contacts').catch(error => null));\n        promises.push(CacheManager.remove('register').catch(error => null));\n\n        Promise.all(promises)\n    }\n\n    clearDataUrls() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div className='tabs'>\n                <div className='tabs-bottom-border'/>\n                <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                    <div\n                        ref={r => this.filterRef.set('chatListMain', r)}\n                        className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                        onMouseDown={this.handleMainClick}\n                        title={isSmallWidth ? t('FilterAllChats') : null}>\n                        <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                    </div>\n                    {filters.map(x => (\n                        <div\n                            key={x.id}\n                            ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                            className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                            onMouseDown={e => this.handleFilterClick(e, x.id)}\n                            title={isSmallWidth ? x.title : null}>\n                            <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                        </div>))}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' },\n            params: {\n                loading: false,\n                completed: false\n            }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList,\n            params: {\n                loading: false,\n                completed: false\n            }\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList, params } = this.state;\n        if (!chats) return;\n\n        const { loading } = params;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n\n    }\n\n    async onLoadNext(replace = false, limit = CHAT_SLICE_LIMIT) {\n        const { type } = this.props;\n        const { chats, chatList, params } = this.state;\n\n        // console.log('[folders] onLoadNext', chatList, limit);\n        if (params.loading) {\n            // console.log('[folders] onLoadNext cancel loading', chatList);\n            return;\n        }\n\n        if (params.completed) {\n            // console.log('[folders] onLoadNext cancel loaded', chatList);\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS start', type, offsetOrder, offsetChatId);\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            params.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        // if (type === 'chatListMain') console.log('[folders] GETCHATS stop', replace, type, result);\n\n        if (params !== this.state.params) {\n            // console.log('[folders] onLoadNext cancel', chatList);\n            return;\n        }\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        params.completed = !result.chat_ids.length;\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext(false, CHAT_SLICE_LIMIT - result.chat_ids.length);\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n\n                if (result.chat_ids.length && result.chat_ids.length < limit) {\n                    this.onLoadNext(false, limit - result.chat_ids.length);\n                }\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        // console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport { CHAT_SLICE_LIMIT } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.handleSaveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    async saveCache() {\n        const promises = [];\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        promises.push(TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListArchive' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: CHAT_SLICE_LIMIT\n        }));\n        const [mainChats, archiveChats] = await Promise.all(promises);\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChats.chat_ids, archiveChats.chat_ids);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                {/*<div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>*/}\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const photo = photoSize.photo || photoSize.file;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const photo = photoSize.photo || photoSize.file;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Save') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    async editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        return TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = async (caption, content) => {\n        if (content) {\n            const message = await this.editMessageMedia(content);\n            if (message) {\n                const { content: editContent } = message;\n                switch (editContent['@type']) {\n                    case 'messagePhoto': {\n                        const { photo: sendPhoto } = content;\n                        if (!sendPhoto) break;\n\n                        const { data: blob } = sendPhoto;\n                        if (!blob) break;\n\n                        const { photo } = editContent;\n                        if (!photo) break;\n\n                        const iSize = photo.sizes.find(x => x.type === 'i');\n                        if (!iSize) break;\n\n                        const { photo: file } = iSize;\n                        if (file) {\n                            FileStore.setBlob(file.id, blob);\n                        }\n                        break;\n                    }\n                }\n            }\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport BroomIcon from '../../Assets/Icons/Broom';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport { clearHistory, leaveChat } from '../../Actions/Chat';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getViewInfoTitle, isPrivateChat, getDeleteChatTitle } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleButtonClick = async event => {\n        const { currentTarget: anchorEl } = event;\n\n        const chatId = AppStore.getChatId();\n        const chat = await TdLibController.send({ '@type': 'getChat', chat_id: chatId });\n        ChatStore.set(chat);\n\n        this.setState({ anchorEl });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        clearHistory(AppStore.getChatId());\n    };\n\n    handleDeleteChat = () => {\n        this.handleMenuClose();\n\n        leaveChat(AppStore.getChatId());\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const deleteChatTitle = getDeleteChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <BroomIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && deleteChatTitle && (\n                        <MenuItem onClick={this.handleDeleteChat}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={deleteChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle\n} from '../../Utils/Chat';\nimport { openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Header.css';\n\nclass Header extends Component {\n    state = {\n        authorizationState: AppStore.getAuthorizationState(),\n        connectionState: AppStore.getConnectionState()\n    };\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n        } = this.state;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return control;\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CheckBoxOutlinedIcon from '@material-ui/icons/CheckBoxOutlined';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n        onClose(event);\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={true}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Document from '../Media/Document';\nimport Photo from '../Media/Photo';\nimport Video from '../Media/Video';\nimport './AlbumItem.css';\nimport MessageMenu from '../MessageMenu';\nimport MessageStore from '../../../Stores/MessageStore';\nimport { getText, getWebPage, openMedia } from '../../../Utils/Message';\nimport { selectMessage } from '../../../Actions/Client';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport Meta from '../Meta';\n\nclass AlbumItem extends React.Component {\n\n    state = {\n        contextMenu: false\n    };\n\n    getAlbumItem = (message, displaySize) => {\n        const { chat_id, id, content, date, edit_date, views } = message;\n\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                return (\n                    <Photo\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                    );\n            }\n            case 'messageVideo': {\n                return (\n                    <Video\n                        type='message'\n                        chatId={chat_id}\n                        messageId={id}\n                        video={content.video}\n                        displaySize={displaySize}\n                        style={{ width: '100%', height: '100%' }}\n                        openMedia={this.openMedia}/>\n                );\n            }\n            case 'messageDocument': {\n                const inlineMeta = (\n                    <Meta\n                        className='meta-hidden'\n                        key={`${chat_id}_${id}_meta`}\n                        chatId={chat_id}\n                        messageId={id}\n                        date={date}\n                        editDate={edit_date}\n                        views={views}\n                    />\n                );\n\n                const webPage = getWebPage(message);\n                const text = getText(message, !!webPage ? null : inlineMeta, x => x);\n\n                return (\n                    <>\n                        <Document\n                            type='message'\n                            chatId={chat_id}\n                            messageId={id}\n                            document={content.document}\n                            displaySize={displaySize}\n                            style={{ width: '100%', height: '100%' }}\n                            openMedia={this.openMedia}/>\n                        { text && text.length > 0 && (\n                            <div className={'message-text'}>\n                                {text}\n                            </div>\n                        )}\n                    </>\n                );\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        // MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    componentWillUnmount() {\n        // MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            console.log('[cm] handleOpenContextMenu');\n            // if (MessageStore.selectedItems.size > 1) {\n            //     return;\n            // }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    openMedia = event => {\n        if (MessageStore.selectedItems.size > 0) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { message } = this.props;\n        if (!message) return;\n\n        const { chat_id, id } = message;\n\n        openMedia(chat_id, id);\n    };\n\n    handleSelection = event => {\n        // if (!this.mouseDown) return;\n\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { message } = this.props;\n        const { chat_id: chatId, id: messageId } = message;\n\n        if (MessageStore.selectedItems.size === 0) return;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { message, position, displaySize } = this.props;\n        const { contextMenu, copyLink, top, left, selected } = this.state;\n\n        const { chat_id, id } = message;\n\n        // const r = Math.floor(Math.random() * 256);\n        // const g = Math.floor(Math.random() * 256);\n        // const b = Math.floor(Math.random() * 256);\n        // const background = null; //`rgb(${r},${g},${b})`;\n\n        let style = {};\n        let className = 'album-document-item';\n        if (position) {\n            style = { width: position.width, height: position.height * displaySize };\n            className = 'album-item'\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames(className, { 'item-selected': selected })}\n                    onClick={this.handleSelection}\n                    onContextMenu={this.handleOpenContextMenu}\n                    style={style}>\n                    <div className='album-item-wrapper'>{this.getAlbumItem(message, displaySize)}</div>\n                    {selected && (\n                        <div className='album-item-selection'>\n                            <div className='album-item-selection-mark'>\n                                <CheckMarkIcon className='album-item-select-tick' />\n                            </div>\n                        </div>\n                    )}\n                </div>\n                <MessageMenu\n                    chatId={chat_id}\n                    messageId={id}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </>\n        );\n    }\n}\n\nAlbumItem.propTypes = {\n    message: PropTypes.object,\n    position: PropTypes.object,\n    displaySize: PropTypes.number\n};\n\nexport default AlbumItem;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/// based on https://github.com/evgeny-nadymov/telegram-wp/blob/master/TelegramClient.WP81/Views/Controls/GroupedMessages.cs\n\nconst POSITION_FLAG_LEFT = 1;\nconst POSITION_FLAG_RIGHT = 2;\nconst POSITION_FLAG_TOP = 4;\nconst POSITION_FLAG_BOTTOM = 8;\n\nclass MessageGroupedLayoutAttempt {\n    constructor(lineCounts, heights) {\n        this.lineCounts = lineCounts;\n        this.heights = heights;\n    }\n}\n\nclass GroupedMessagePosition {\n    aspectRatio;\n    isEdge;\n    flags;\n    isLast;\n    leftSpanOffset;\n    minX;\n    maxX;\n    minY;\n    maxY;\n    height;\n    width;\n    siblingHeights;\n    spanSize;\n\n    set(minX, maxX, minY, maxY, w, h, flags) {\n        this.minX = minX;\n        this.maxX = maxX;\n        this.minY = minY;\n        this.maxY = maxY;\n        this.spanSize = w;\n        this.width = w;\n        this.height = h;\n        this.flags = flags;\n    }\n\n    getInfo() {\n        return `minX=${this.minX}\\nmaxX=${this.maxX}\\nminY=${this.minY}\\nmaxY=${this.maxY}\\nspanSize=${this.spanSize}\\nwidth=${this.width}\\nheight=${this.height}\\nflags=${this.flags}\\nsiblingHeights=${this.siblingHeights}\\nleftSpanOffset=${this.leftSpanOffset}`;\n    }\n}\n\nclass GroupedMessages {\n\n    constructor() {\n        this.posArray = [];\n        this.positions = new Map();\n        this.maxSizeWidth = 800;\n        this.hasSibling = false;\n        this.scale = 1.0;\n    }\n\n    multiHeight(array, start, end) {\n        let sum = 0.0;\n        for (let i = start; i < end; i++) {\n            sum += array[i];\n        }\n\n        return 800.0 * this.scale / sum;\n    }\n\n    calculate(messages, desiredWidth) {\n        this.posArray = [];\n        this.positions = new Map();\n        this.messages = messages;\n\n        if (!messages) return;\n        const { length } = messages;\n        if (length <= 1) {\n            return;\n        }\n\n        this.totalWidth = 0;\n        this.totalHeight = 0.0;\n\n        this.scale = desiredWidth / this.maxSizeWidth;\n        this.maxSizeWidth = desiredWidth;\n\n        const firstSpanAdditionalSize = Math.trunc(200 * this.scale);\n        const minHeight = Math.trunc(120 * this.scale);\n        const minWidth = Math.trunc(96 * this.scale);\n        const paddingsWidth = Math.trunc(32 * this.scale);\n        const maxSizeHeight = 814.0 * this.scale;\n        let averageAspectRatio = 1.0;\n        let proportions = '';\n        const isOut = false;\n        let maxX = 0;\n        let forceCalc = false;\n\n        for (let i = 0; i < length; i++) {\n            const message = messages[i];\n            const { w, h } = GroupedMessages.getWidthHeight(message);\n\n            const position = new GroupedMessagePosition();\n            position.isLast = i === messages.length - 1;\n            position.aspectRatio = w / h;\n            if (position.aspectRatio > 1.2) {\n                proportions += 'w';\n            } else if (position.aspectRatio < 0.8) {\n                proportions += 'n';\n            } else {\n                proportions += 'q';\n            }\n\n            averageAspectRatio += position.aspectRatio;\n            if (position.aspectRatio > 2.0) {\n                forceCalc = true;\n            }\n\n            this.positions.set(message, position);\n            this.posArray.push(position);\n        }\n\n        const maxAspectRation = this.maxSizeWidth / maxSizeHeight;\n        averageAspectRatio = averageAspectRatio / length;\n\n        if (!forceCalc && (length === 2 || length === 3 || length === 4)){\n            switch (length) {\n                case 2: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n\n                    if (proportions === 'ww' && averageAspectRatio > 1.4 * maxAspectRation && position1.aspectRatio - position2.aspectRatio < 0.2) {\n                        const height = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, Math.min(this.maxSizeWidth / position2.aspectRatio, maxSizeHeight / 2.0))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position2.set(0, 0, 1, 1, this.maxSizeWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = height * 2;\n                    } else if (proportions === 'ww' || proportions === 'qq') {\n                        const width = this.maxSizeWidth / 2;\n                        const height = Math.round(Math.min(width / position1.aspectRatio, Math.min(width / position2.aspectRatio, maxSizeHeight))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, width, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, width, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = width + width;\n                        this.totalHeight = height;\n                    } else {\n                        let secondWidth = Math.max(0.4 * this.maxSizeWidth, Math.round((this.maxSizeWidth / position1.aspectRatio / (1.0 / position1.aspectRatio + 1.0 / position2.aspectRatio))));\n                        let firstWidth = this.maxSizeWidth - secondWidth;\n                        if (firstWidth < minWidth) {\n                            const diff = minWidth - firstWidth;\n                            firstWidth = minWidth;\n                            secondWidth -= diff;\n                        }\n\n                        const height = Math.min(maxSizeHeight, Math.round(Math.min(firstWidth / position1.aspectRatio, secondWidth / position2.aspectRatio))) / maxSizeHeight;\n                        position1.set(0, 0, 0, 0, firstWidth, height, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, secondWidth, height, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        maxX = 1;\n\n                        this.totalWidth = firstWidth + secondWidth;\n                        this.totalHeight = height;\n                    }\n\n                    break;\n                }\n                case 3: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    if (proportions[0] === 'n')\n                    {\n                        const thirdHeight = Math.min(maxSizeHeight * 0.5, Math.round(position2.aspectRatio * this.maxSizeWidth / (position3.aspectRatio + position2.aspectRatio)));\n                        const secondHeight = maxSizeHeight - thirdHeight;\n                        const rightWidth = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.5, Math.round(Math.min(thirdHeight * position3.aspectRatio, secondHeight * position2.aspectRatio))));\n\n                        const leftWidth = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - rightWidth));\n                        position1.set(0, 0, 0, 1, leftWidth, 1.0, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM | POSITION_FLAG_TOP);\n                        position2.set(1, 1, 0, 0, rightWidth, secondHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, rightWidth, thirdHeight / maxSizeHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position3.spanSize = this.maxSizeWidth;\n\n                        position1.siblingHeights = [thirdHeight / maxSizeHeight, secondHeight / maxSizeHeight];\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - rightWidth;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - leftWidth;\n                            position3.leftSpanOffset = leftWidth;\n                        }\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = leftWidth + rightWidth;\n                        this.totalHeight = 1.0;\n                    }\n                    else\n                    {\n                        const firstHeight = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, (maxSizeHeight) * 0.66)) / maxSizeHeight;\n                        position1.set(0, 1, 0, 0, this.maxSizeWidth, firstHeight, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        const width = this.maxSizeWidth / 2;\n                        const secondHeight = Math.min(maxSizeHeight - firstHeight, Math.round(Math.min(width / position2.aspectRatio, width / position3.aspectRatio))) / maxSizeHeight;\n                        position2.set(0, 0, 1, 1, width, secondHeight, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, width, secondHeight, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 1;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = firstHeight + secondHeight;\n                    }\n\n                    break;\n                }\n                case 4: {\n                    const position1 = this.posArray[0];\n                    const position2 = this.posArray[1];\n                    const position3 = this.posArray[2];\n                    const position4 = this.posArray[3];\n                    if (proportions[0] === 'w') {\n                        const h0 = Math.round(Math.min(this.maxSizeWidth / position1.aspectRatio, maxSizeHeight * 0.66)) / maxSizeHeight;\n                        position1.set(0, 2, 0, 0, this.maxSizeWidth, h0, POSITION_FLAG_LEFT | POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n\n                        let h = Math.round(this.maxSizeWidth / (position2.aspectRatio + position3.aspectRatio + position4.aspectRatio));\n                        const w0 = Math.max(minWidth, Math.min(this.maxSizeWidth * 0.4, h * position2.aspectRatio));\n                        const w2 = Math.max(Math.max(minWidth, this.maxSizeWidth * 0.33), h * position4.aspectRatio);\n                        const w1 = this.maxSizeWidth - w0 - w2;\n                        h = Math.min(maxSizeHeight - h0, h);\n                        h /= maxSizeHeight;\n                        position2.set(0, 0, 1, 1, w0, h, POSITION_FLAG_LEFT | POSITION_FLAG_BOTTOM);\n                        position3.set(1, 1, 1, 1, w1, h, POSITION_FLAG_BOTTOM);\n                        position4.set(2, 2, 1, 1, w2, h, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        maxX = 2;\n\n                        this.totalWidth = this.maxSizeWidth;\n                        this.totalHeight = h0 + h;\n                    } else {\n                        const w = Math.max(minWidth, Math.round(maxSizeHeight / (1.0 / position2.aspectRatio + 1.0 / position3.aspectRatio + 1.0 / position4.aspectRatio)));\n                        const h0 = Math.min(0.33, Math.max(minHeight, w / position2.aspectRatio) / maxSizeHeight);\n                        const h1 = Math.min(0.33, Math.max(minHeight, w / position3.aspectRatio) / maxSizeHeight);\n                        const h2 = 1.0 - h0 - h1;\n                        const w0 = Math.round(Math.min(maxSizeHeight * position1.aspectRatio + paddingsWidth, this.maxSizeWidth - w));\n\n                        position1.set(0, 0, 0, 2, w0, h0 + h1 + h2, POSITION_FLAG_LEFT | POSITION_FLAG_TOP | POSITION_FLAG_BOTTOM);\n                        position2.set(1, 1, 0, 0, w, h0, POSITION_FLAG_RIGHT | POSITION_FLAG_TOP);\n                        position3.set(0, 1, 1, 1, w, h1, POSITION_FLAG_RIGHT);\n                        position3.spanSize = this.maxSizeWidth;\n                        position4.set(0, 1, 2, 2, w, h2, POSITION_FLAG_RIGHT | POSITION_FLAG_BOTTOM);\n                        position4.spanSize = this.maxSizeWidth;\n\n                        if (isOut) {\n                            position1.spanSize = this.maxSizeWidth - w;\n                        } else {\n                            position2.spanSize = this.maxSizeWidth - w0;\n                            position3.leftSpanOffset = w0;\n                            position4.leftSpanOffset = w0;\n                        }\n                        position1.siblingHeights = [ h0, h1, h2 ];\n                        this.hasSibling = true;\n                        maxX = 1;\n\n                        this.totalWidth = w + w0;\n                        this.totalHeight = h0 + h1 + h2;\n                    }\n                    break;\n                }\n            }\n        } else {\n            const croppedRatios = new Array(this.posArray.length);\n            for (let i = 0; i < length; i++) {\n                if (averageAspectRatio > 1.1) {\n                    croppedRatios[i] = Math.max(1.0, this.posArray[i].aspectRatio);\n                } else {\n                    croppedRatios[i] = Math.min(1.0, this.posArray[i].aspectRatio);\n                }\n                croppedRatios[i] = Math.max(0.66667, Math.min(1.7, croppedRatios[i]));\n            }\n\n            let firstLine;\n            let secondLine;\n            let thirdLine;\n            let fourthLine;\n            const attempts = [];\n            for (firstLine = 1; firstLine < croppedRatios.length; firstLine++) {\n                secondLine = croppedRatios.length - firstLine;\n                if (firstLine > 3 || secondLine > 3) {\n                    continue;\n                }\n                attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, croppedRatios.length)]));\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 1; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    thirdLine = croppedRatios.length - firstLine - secondLine;\n                    if (firstLine > 3 || secondLine > (averageAspectRatio < 0.85 ? 4 : 3) || thirdLine > 3) {\n                        continue;\n                    }\n                    attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, croppedRatios.length)]));\n                }\n            }\n\n            for (firstLine = 1; firstLine < croppedRatios.length - 2; firstLine++) {\n                for (secondLine = 1; secondLine < croppedRatios.length - firstLine; secondLine++) {\n                    for (thirdLine = 1; thirdLine < croppedRatios.length - firstLine - secondLine; thirdLine++) {\n                        fourthLine = croppedRatios.length - firstLine - secondLine - thirdLine;\n                        if (firstLine > 3 || secondLine > 3 || thirdLine > 3 || fourthLine > 3) {\n                            continue;\n                        }\n                        attempts.push(new MessageGroupedLayoutAttempt([firstLine, secondLine, thirdLine, fourthLine], [this.multiHeight(croppedRatios, 0, firstLine), this.multiHeight(croppedRatios, firstLine, firstLine + secondLine), this.multiHeight(croppedRatios, firstLine + secondLine, firstLine + secondLine + thirdLine), this.multiHeight(croppedRatios, firstLine + secondLine + thirdLine, croppedRatios.length)]));\n                    }\n                }\n            }\n\n            let optimal = null;\n            let optimalDiff = 0.0;\n            let maxHeight = this.maxSizeWidth / 3 * 4;\n            for (let i = 0; i < attempts.length; i++) {\n                const attempt = attempts[i];\n                let height = 0;\n                let minLineHeight = Number.MAX_VALUE;\n                for (let j = 0; j < attempt.heights.length; j++) {\n                    height += attempt.heights[j];\n                    if (attempt.heights[j] < minLineHeight) {\n                        minLineHeight = attempt.heights[j];\n                    }\n                }\n\n                let diff = Math.abs(height - maxHeight);\n                if (attempt.lineCounts.length > 1) {\n                    if (attempt.lineCounts[0] > attempt.lineCounts[1] || (attempt.lineCounts.length > 2 && attempt.lineCounts[1] > attempt.lineCounts[2]) || (attempt.lineCounts.length > 3 && attempt.lineCounts[2] > attempt.lineCounts[3])) {\n                        diff *= 1.5;\n                    }\n                }\n\n                if (minLineHeight < minWidth) {\n                    diff *= 1.5;\n                }\n\n                if (optimal === null || diff < optimalDiff) {\n                    optimal = attempt;\n                    optimalDiff = diff;\n                }\n            }\n\n            if (optimal === null) {\n                return;\n            }\n\n            let index = 0;\n            let y = 0.0;\n\n            for (let i = 0; i < optimal.lineCounts.length; i++) {\n                let c = optimal.lineCounts[i];\n                let lineHeight = optimal.heights[i];\n                let spanLeft = this.maxSizeWidth;\n                let posToFix = null;\n                maxX = Math.max(maxX, c - 1);\n                for (let j = 0; j < c; j++) {\n                    let ratio = croppedRatios[index];\n                    let width = Math.trunc(ratio * lineHeight);\n                    spanLeft -= width;\n                    let pos = this.posArray[index];\n                    let flags = 0;\n                    if (i === 0) {\n                        flags |= POSITION_FLAG_TOP;\n                    }\n                    if (i === optimal.lineCounts.length - 1) {\n                        flags |= POSITION_FLAG_BOTTOM;\n                    }\n                    if (j === 0) {\n                        flags |= POSITION_FLAG_LEFT;\n                        if (isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    if (j === c - 1) {\n                        flags |= POSITION_FLAG_RIGHT;\n                        if (!isOut) {\n                            posToFix = pos;\n                        }\n                    }\n                    pos.set(j, j, i, i, width, lineHeight / maxSizeHeight, flags);\n                    index++;\n                }\n                posToFix.width += spanLeft;\n                posToFix.spanSize += spanLeft;\n                y += lineHeight;\n            }\n\n            this.totalWidth = this.maxSizeWidth;\n            this.totalHeight = y / maxSizeHeight;\n        }\n    }\n\n    static getWidthHeight(message) {\n        let w = 0;\n        let h = 0;\n        let sizes = [];\n        switch (message.content['@type']){\n            case 'messagePhoto': {\n                const { photo, minithumbnail } = message.content;\n                if (photo) {\n                    sizes = photo.sizes;\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                }\n\n                break;\n            }\n            case 'messageVideo': {\n                const { video, thumbnail, minithumbnail } = message.content;\n                if (video) {\n                    const { width, height } = video;\n                    sizes.push({ width, height });\n                } else if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                }\n\n                break;\n            }\n            case 'messageDocument': {\n                const { thumbnail, minithumbnail } = message.content;\n                if (minithumbnail) {\n                    sizes.push(minithumbnail);\n                } else if (thumbnail) {\n                    sizes.push(thumbnail);\n                } else {\n                    sizes.push({ width: 90, height: 90 });\n                }\n\n                break;\n            }\n        }\n\n        const photoSize = GroupedMessages.getPhotoSize(sizes, 1280);\n        if (photoSize) {\n            w = photoSize.width;\n            h = photoSize.height;\n        }\n\n        return { w, h };\n    }\n\n    static getPhotoSize(sizes, side, byMinSize) {\n        if (!sizes || !sizes.length) return null;\n\n        let lastSide = 0;\n        let lastSize = null;\n        for (let i = 0; i < sizes.length; i++) {\n            const { width: w, height: h } = sizes[i];\n\n            if (byMinSize) {\n                const currentSide = h >= w ? w : h;\n                if (!lastSize || (side > 100 && side > lastSide && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n\n            } else {\n                const currentSide = w >= h ? w : h;\n                if (!lastSize || (side > 100 && currentSide <= side && lastSide < currentSide)) {\n                    lastSide = currentSide;\n                    lastSize = sizes[i];\n                }\n            }\n        }\n\n        return lastSize;\n    }\n}\n\nexport default GroupedMessages;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Album.css';\n\nclass Album extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds, emojiMatches, selected } = this.props;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n            const grouped = new GroupedMessages();\n            grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n            return {\n                grouped,\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        // MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        // MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    // onClientUpdateMessageHighlighted = update => {\n    //     const { chatId, messageIds } = this.props;\n    //     const { selected, highlighted } = this.state;\n    //\n    //     if (selected) return;\n    //\n    //     if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n    //         if (highlighted) {\n    //             this.setState({ highlighted: false }, () => {\n    //                 setTimeout(() => {\n    //                     this.setState({ highlighted: true });\n    //                 }, 0);\n    //             });\n    //         } else {\n    //             this.setState({ highlighted: true });\n    //         }\n    //     } else if (highlighted) {\n    //         this.setState({ highlighted: false });\n    //     }\n    // };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({ selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)) });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const grouped = new GroupedMessages();\n        grouped.calculate(messageIds.map(x => MessageStore.get(chatId, x)), displaySize);\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches, grouped });\n        } else {\n            this.setState({ grouped });\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n        const { grouped } = this.state;\n        if (!grouped) {\n            return null;\n        }\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': !hasCaption\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = { width: grouped.totalWidth - 2 - 2 };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = grouped.messages.map(x => (\n            <AlbumItem\n                key={x.id}\n                message={x}\n                position={grouped.positions.get(x)}\n                displaySize={displaySize}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    { 'album-caption': hasCaption },\n                                    { 'album-title': hasTitle }\n                                    )}>\n                                    <div className='album-wrapper' style={{ width: grouped.totalWidth }}>\n                                        {items}\n                                    </div>\n                                </div>\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default Album;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId) && !(isMeChat(chatId) && !isOutgoing);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isMeChat(chatId) && forward_info) {\n                switch (forward_info.origin['@type']) {\n                    case 'messageForwardOriginHiddenUser': {\n                        tile = <UserTile small firstName={forward_info.origin.sender_name} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginUser': {\n                        tile = <UserTile small userId={forward_info.origin.sender_user_id} onSelect={this.handleSelectUser} />;\n                        break;\n                    }\n                    case 'messageForwardOriginChannel': {\n                        tile = <ChatTile small chatId={forward_info.origin.chat_id} onSelect={this.handleSelectChat} />;\n                        break;\n                    }\n                }\n            } else if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />;\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />;\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser forwardInfo={forward_info}/>\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    sendingState: PropTypes.object,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n}\n\nMessage.defaultProps = {\n    sendingState: null,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showDate: false\n}\n\n// const enhance = compose(\n//     withSaveRef(),\n//     withTranslation(),\n//     withRestoreRef()\n// );\n\nconst message = withTranslation(['translation', 'local'], { withRef: true })(Message);\n\nexport default message;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nServiceMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showUnreadSeparator: PropTypes.bool\n}\n\nServiceMessage.defaultProps = {\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport AlbumItem from './AlbumItem';\nimport DayMeta from '../DayMeta';\nimport Forward from '../Forward';\nimport GroupedMessages from './GroupedMessages';\nimport UnreadSeparator from '../UnreadSeparator';\nimport MessageAuthor from '../MessageAuthor';\nimport Reply from '../Reply';\nimport Meta from '../Meta';\nimport ChatTile from '../../Tile/ChatTile';\nimport EmptyTile from '../../Tile/EmptyTile';\nimport UserTile from '../../Tile/UserTile';\nimport { getMedia } from '../../../Utils/Media';\nimport { albumHistoryEquals } from '../../../Utils/Common';\nimport { selectMessage } from '../../../Actions/Client';\nimport { getText, getWebPage, showMessageForward } from '../../../Utils/Message';\nimport { isChannelChat, isPrivateChat } from '../../../Utils/Chat';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './DocumentAlbum.css';\n\nclass DocumentAlbum extends React.Component {\n    state = { };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { messageIds, emojiMatches, selected } = this.props;\n\n        if (!albumHistoryEquals(nextProps.messageIds, messageIds)) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displaySize, chatId, messageIds } = props;\n\n        if (messageIds !== state.prevMessageIds) {\n\n            return {\n                prevMessageIds: messageIds\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        // MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageIds } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageIds.some(x => x === update.messageId)) {\n            this.setState({\n                selected: messageIds.every(x => MessageStore.hasSelectedMessage(chatId, x)),\n                lastSelected: messageIds.length > 0 && MessageStore.hasSelectedMessage(chatId, messageIds[messageIds.length - 1])\n            });\n        }\n    };\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageIds, displaySize } = this.props;\n        const { emojiMatches: oldEmojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (!messageIds.some(x => x === message_id)) return;\n\n        const emojiMatches = null; //getEmojiMatches(chatId, messageId);\n        if (emojiMatches !== oldEmojiMatches) {\n            this.setState({ emojiMatches });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelection = () => {\n        // if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageIds } = this.props;\n        const { selected } = this.state;\n\n        if (selected) {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], false);\n            }\n        } else {\n            for (let i = 0; i < messageIds.length; i++) {\n                selectMessage(chatId, messageIds[i], true);\n            }\n        }\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { chatId, messageIds, displaySize, showUnreadSeparator, showTitle, showDate, t = x => x } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            lastSelected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        if (!messageIds.length) {\n            return null;\n        }\n\n        let messageId = messageIds[messageIds.length - 1];\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const webPage = getWebPage(message);\n        let text = null;\n        for (let i = 0; i < messageIds.length; i++) {\n            const m = MessageStore.get(chatId, messageIds[i]);\n            const t = getText(m, !!webPage ? null : inlineMeta, t);\n            if (t && t.length) {\n                if (text !== null) {\n                    text = null;\n                    break;\n                } else {\n                    text = t;\n                    messageId = messageIds[i];\n                }\n            }\n        }\n        const hasCaption = text !== null && text.length > 0;\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': false\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        // const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = {  };\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n        const tailRounded = !hasCaption && (content['@type'] === 'messageAnimation' || content['@type'] === 'messageVideo' || content['@type'] === 'messagePhoto');\n\n        const items = messageIds.map(x => MessageStore.get(chatId, x)).map(m => (\n            <AlbumItem\n                key={m.id}\n                message={m}\n                position={null}\n                displaySize={displaySize}\n            />));\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', 'message-album', {\n                        'message-rounded': showTitle && showTail && tailRounded,\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-album-last-selected': lastSelected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail && !tailRounded,\n                        'message-group-tail-rounded': !showTitle && showTail && tailRounded,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames(\n                                    'message-content', {\n                                        'message-bubble': withBubble,\n                                        'message-bubble-out': withBubble && isOutgoing\n                                    })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                <div className={classNames(\n                                    'album',\n                                    'document-album',\n                                    { 'album-caption': false },\n                                    { 'album-title': hasTitle }\n                                )}>\n                                    <div className='album-wrapper'>\n                                        {items}\n                                    </div>\n                                </div>\n                                {/*<div*/}\n                                {/*    className={classNames('message-text', {*/}\n                                {/*        'message-text-1emoji': emojiMatches === 1,*/}\n                                {/*        'message-text-2emoji': emojiMatches === 2,*/}\n                                {/*        'message-text-3emoji': emojiMatches === 3*/}\n                                {/*    })}>*/}\n                                {/*    {text}*/}\n                                {/*</div>*/}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDocumentAlbum.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageIds: PropTypes.arrayOf(PropTypes.number).isRequired,\n    displaySize: PropTypes.number,\n    showTitle: PropTypes.bool,\n    showTail: PropTypes.bool,\n    showUnreadSeparator: PropTypes.bool,\n    showDate: PropTypes.bool\n};\n\nDocumentAlbum.defaultProps = {\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showTitle: false,\n    showTail: false,\n    showUnreadSeparator: false,\n    showData: false\n};\n\nexport default DocumentAlbum;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport Album from '../Message/Album/Album';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals, getScrollMessage } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages, forwardInfoEquals } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat, isMeChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { ALBUM_MESSAGES_LIMIT, MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\nimport DocumentAlbum from '../Message/Album/DocumentAlbum';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    SCROLL_TO_POSITION: 'SCROLL_TO_POSITION',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    hasLastMessage() {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return false;\n\n        const { last_message } = chat;\n        if (!last_message) return true;\n\n        return history.length > 0 && history[history.length - 1].id === last_message.id;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.hasLastMessage()) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.hasLastMessage()) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        const scrollPosition = null; //ChatStore.getScrollPosition(chatId);\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 1;\n            let fromMessageId = 0;\n            if (unread && chat.last_read_inbox_message_id) {\n                fromMessageId = chat.last_read_inbox_message_id;\n            } else if (messageId) {\n                fromMessageId = messageId;\n            } else if (scrollPosition) {\n                fromMessageId = scrollPosition.messageId;\n            }\n            const offset = unread || messageId || scrollPosition ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit = unread || messageId || scrollPosition ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset,\n                limit\n            }).catch(error => {\n                return {\n                    '@type': 'messages',\n                    messages: [],\n                    total_count: 0\n                };\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            } else if (scrollPosition) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_POSITION;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot, scrollPosition);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChatId !== chatId) {\n            if (previousChat) {\n                TdLibController.send({\n                    '@type': 'closeChat',\n                    chat_id: previousChatId\n                });\n\n                const scrollMessage = getScrollMessage(this.snapshot, this.itemsRef);\n                console.log('[scroll] start setScrollPosition', [previousChatId, previousChat, this.snapshot, scrollMessage]);\n                const message = this.messages[scrollMessage.index];\n                if (message) {\n                    const { chatId, messageId } = message.props;\n                    console.log('[scroll] stop setScrollPosition', [previousChatId, previousChat], { chatId, messageId, offset: scrollMessage.offset });\n                    ChatStore.setScrollPosition(previousChatId, { chatId, messageId, offset: scrollMessage.offset });\n                }\n            }\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        // console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit\n        }).finally(() => {\n            this.loading = false;\n        });\n        // console.log('[p] getChatHistory result', fromMessageId, limit, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.loading = true;\n        requestAnimationFrame(() => {\n            this.loading = false;\n            this.insertNext(filterMessages(result.messages), state => {\n                if (filterMessages(result.messages).length > 0) {\n                    this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                    setTimeout(() => {\n                        const { history: currentHistory } = this.state;\n                        // console.log('[h] check', currentHistory.length);\n                        if (currentHistory.length >= MESSAGE_SLICE_LIMIT * 3) {\n                            // console.log('[h] trunk', currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3).length);\n                            this.setState({\n                                history: currentHistory.slice(0, MESSAGE_SLICE_LIMIT * 3)\n                            });\n                        }\n                    }, 100);\n                }\n                if (!result.messages.length) {\n                    this.onLoadMigratedHistory();\n                }\n            });\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            return result;\n        });\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: fromMessageId === 0? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), state => {\n            if (filterMessages(result.messages).length > 0) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.hasLastMessage()) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n        const limit = history.length < MESSAGE_SLICE_LIMIT? MESSAGE_SLICE_LIMIT * 2 : MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -limit - 1,\n            limit: limit + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n            if (filterMessages(result.messages).length > 0) {\n                setTimeout(() => {\n                    const { history: currentHistory } = this.state;\n                    if (currentHistory.length > MESSAGE_SLICE_LIMIT * 3) {\n                        this.setState({\n                            history: currentHistory.slice(currentHistory.length - MESSAGE_SLICE_LIMIT * 3)\n                        }, () => {\n                            this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, this.snapshot);\n                        });\n                    }\n                }, 0);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({\n            history: history.concat(this.state.history)//.slice(0, 100)\n        }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({\n            history: this.state.history.concat(history),\n            ...newState\n        }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.hasLastMessage() && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot, position) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_POSITION: {\n                this.scrollToPosition(position);\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     snapshot.scrollTop=${snapshot.scrollTop}\n        //     snapshot.scrollHeight=${snapshot.scrollHeight}\n        //     snapshot.offsetHeight=${snapshot.offsetHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToPosition = position => {\n        console.log('[scroll] scrollToPosition', this.props.chatId, position);\n        const { messageId, offset } = position;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - offset;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    if (list.offsetHeight < node.offsetHeight) {\n                        // scroll to the message top\n                        list.scrollTop = node.offsetTop;\n                    } else {\n                        // scroll message to the center of screen\n                        list.scrollTop = node.offsetTop - list.offsetHeight / 2.0 + node.offsetHeight / 2.0;\n                    }\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst, isFirstUnread) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content, forward_info } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isFirstUnread) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                (isMeChat(chat_id) && !forwardInfoEquals(forward_info, prevMessage.forward_info)) ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        this.itemsMap.clear();\n        // this.messages = clearHistory\n        //     ? null\n        //     : history.map((x, i) => {\n        //         /// history[4] id=5 prev\n        //         /// history[5] id=6 current\n        //         /// history[6] id=7 next\n        //         /// ...\n        //         /// history[9] id=10\n        //\n        //         const prevMessage = i > 0 ? history[i - 1] : null;\n        //         const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n        //\n        //         const showDate = this.showMessageDate(x, prevMessage, i === 0);\n        //\n        //         let m = null;\n        //         if (isServiceMessage(x)) {\n        //             m = (\n        //                 <ServiceMessage\n        //                     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n        //                     ref={el => this.itemsMap.set(i, el)}\n        //                     chatId={x.chat_id}\n        //                     messageId={x.id}\n        //                     showUnreadSeparator={separatorMessageId === x.id}\n        //                 />\n        //             );\n        //         } else {\n        //             const isFirstUnread = separatorMessageId === x.id;\n        //             const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n        //             const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n        //             const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n        //\n        //             const showTail = !nextMessage\n        //                 || isServiceMessage(nextMessage)\n        //                 || nextMessage.content['@type'] === 'messageSticker'\n        //                 || nextMessage.content['@type'] === 'messageVideoNote'\n        //                 || x.sender_user_id !== nextMessage.sender_user_id\n        //                 || x.is_outgoing !== nextMessage.is_outgoing\n        //                 || nextShowTitle;\n        //\n        //             m = (\n        //                 <Message\n        //                     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n        //                     ref={el => this.itemsMap.set(i, el)}\n        //                     chatId={x.chat_id}\n        //                     messageId={x.id}\n        //                     sendingState={x.sending_state}\n        //                     showTitle={showTitle}\n        //                     showTail={showTail}\n        //                     showUnreadSeparator={separatorMessageId === x.id}\n        //                     showDate={showDate}\n        //                 />\n        //             );\n        //         }\n        //\n        //         return m;\n        //       });\n\n        if (clearHistory) {\n            this.messages = null;\n        } else {\n            this.messages = [];\n            for (let i = 0; i < history.length; i++) {\n                const message = history[i];\n                const { chat_id, media_album_id, ttl, content, is_outgoing } = message;\n                let albumAdded = false;\n                if (media_album_id !== '0' && !ttl) {\n                    const album = [message];\n                    for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                        if (history[j].media_album_id === media_album_id) {\n                            album.push(history[j]);\n                        } else {\n                            break;\n                        }\n                    }\n\n                    if (album.length > 1) {\n                        const x = message;\n                        const prevMessage = i > 0 ? history[i - 1] : null;\n                        const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n\n                        const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || x.sender_user_id !== nextMessage.sender_user_id\n                            || (isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info))\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        this.messages.push((\n                            <Album\n                                key={`chat_id=${chat_id} media_album_id=${media_album_id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                chatId={chat_id}\n                                messageIds={album.map(x => x.id)}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                                showDate={showDate}\n                            />));\n                        i += (album.length - 1);\n                        albumAdded = true;\n                    }\n                }\n                // else if (content['@type'] === 'messageDocument' && !ttl) {\n                //     const album = [message];\n                //     for (let j = i + 1; j < i + ALBUM_MESSAGES_LIMIT && j < history.length; j++) {\n                //         if (history[j].content['@type'] === content['@type'] && history[j].is_outgoing === is_outgoing) {\n                //             album.push(history[j]);\n                //         } else {\n                //             break;\n                //         }\n                //     }\n                //\n                //     if (album.length > 1) {\n                //         const x = message;\n                //         const prevMessage = i > 0 ? history[i - 1] : null;\n                //         const nextMessage = i + album.length < history.length ? history[i + album.length] : null;\n                //\n                //         const showDate = this.showMessageDate(x, prevMessage, i === 0);\n                //\n                //         const isFirstUnread = separatorMessageId === x.id;\n                //         const isNextFirstUnread = nextMessage ? separatorMessageId === nextMessage.id : false;\n                //         const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                //         const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n                //\n                //         const showTail = !nextMessage\n                //             || isServiceMessage(nextMessage)\n                //             || nextMessage.content['@type'] === 'messageSticker'\n                //             || nextMessage.content['@type'] === 'messageVideoNote'\n                //             || x.sender_user_id !== nextMessage.sender_user_id\n                //             || x.is_outgoing !== nextMessage.is_outgoing\n                //             || nextShowTitle;\n                //\n                //         this.messages.push((\n                //             <DocumentAlbum\n                //                 key={`chat_id=${chat_id} media_album_id=${album.map(x => x.id).join('_')} date=${showDate} title=${showTitle} tail=${showTail}`}\n                //                 chatId={chat_id}\n                //                 messageIds={album.map(x => x.id)}\n                //                 showTitle={showTitle}\n                //                 showTail={showTail}\n                //                 showUnreadSeparator={album.map(x => x.id).some(x => x.id === separatorMessageId)}\n                //                 showDate={showDate}\n                //             />));\n                //         i += (album.length - 1);\n                //         albumAdded = true;\n                //     }\n                // }\n\n                if (!albumAdded) {\n                    /// history[4] id=5 prev\n                    /// history[5] id=6 current\n                    /// history[6] id=7 next\n                    /// ...\n                    /// history[9] id=10\n\n                    const x = message;\n                    const prevMessage = i > 0 ? history[i - 1] : null;\n                    const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                    const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                    let m = null;\n                    if (isServiceMessage(x)) {\n                        m = (\n                            <ServiceMessage\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                            />\n                        );\n                    } else {\n                        const isFirstUnread = separatorMessageId === x.id;\n                        const isNextFirstUnread = nextMessage && separatorMessageId === nextMessage.id;\n                        const showTitle = this.showMessageTitle(x, prevMessage, i === 0, isFirstUnread);\n                        const nextShowTitle = this.showMessageTitle(nextMessage, x, false, isNextFirstUnread);\n\n                        const showTail = !nextMessage\n                            || isServiceMessage(nextMessage)\n                            || nextMessage.content['@type'] === 'messageSticker'\n                            || nextMessage.content['@type'] === 'messageVideoNote'\n                            || x.sender_user_id !== nextMessage.sender_user_id\n                            || isMeChat(x.chat_id) && !forwardInfoEquals(x.forward_info, nextMessage.forward_info)\n                            || x.is_outgoing !== nextMessage.is_outgoing\n                            || nextShowTitle;\n\n                        m = (\n                            <Message\n                                key={`chat_id=${x.chat_id} id=${x.id} date=${showDate} title=${showTitle} tail=${showTail}`}\n                                ref={el => this.itemsMap.set(i, el)}\n                                chatId={x.chat_id}\n                                messageId={x.id}\n                                sendingState={x.sending_state}\n                                showTitle={showTitle}\n                                showTail={showTail}\n                                showUnreadSeparator={separatorMessageId === x.id}\n                                showDate={showDate}\n                            />\n                        );\n                    }\n\n                    this.messages.push(m);\n                }\n            }\n        }\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='sticker-set-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableEnforceFocus={true}\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <div className='dialog-background'/>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                {/*<div className='dialog-background2'/>*/}\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <>\n                <div className='media-viewer-content'>\n                    {content}\n                    {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                </div>\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'/>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass ClearHistoryDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n        const { prevChatId } = state;\n\n        const chat = ChatStore.get(chatId);\n\n        const { can_be_deleted_for_all_users: canBeDeletedForAllUsers } = chat;\n\n        if (prevChatId !== chatId) {\n            return {\n                prevChatId: chatId,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <div>\n                            <DialogContentText id='delete-dialog-description'>\n                                Are you sure you want clear history?\n                            </DialogContentText>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Also delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all members'\n                                        }\n                                        style={{ marginLeft: 0 }}\n                                    />\n                                )\n                            }\n                        </div>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nClearHistoryDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(ClearHistoryDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { getChatShortTitle, isChannelChat, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\n\nclass DeleteMessagesDialog extends React.Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageIds } = props;\n        const { prevChatId, prevMessageIds } = state;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        if (prevChatId !== chatId && prevMessageIds !== messageIds) {\n            return {\n                prevChatId: chatId,\n                prevMessageIds: messageIds,\n                canBeDeletedForAllUsers,\n                revoke: canBeDeletedForAllUsers\n            }\n        }\n\n        return null;\n    }\n\n    handleRevokeChange = () => {\n        const { revoke } = this.state;\n\n        this.setState({ revoke: !revoke });\n    };\n\n    render() {\n        const { chatId, messageIds, onClose, t } = this.props;\n        const { canBeDeletedForAllUsers, revoke } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={() => onClose(false, revoke)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {count === 1\n                            ? 'Do you want to delete this message?'\n                            : `Do you want to delete ${count} messages?`}\n                    </DialogContentText>\n                    { isSupergroup(chatId) ? (\n                        <DialogContentText>\n                            { !isChannelChat(chatId) && (count === 1\n                                ? 'This will delete it for everyone in this chat'\n                                : 'This will delete them for everyone in this chat')\n                            }\n                        </DialogContentText>\n                    ) : (\n                        <>\n                            {\n                                canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                        control={\n                                            <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                        }\n                                        label={\n                                            isPrivateChat(chatId)\n                                                ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                                : 'Delete for all'\n                                        }\n                                    />\n                                )}\n                        </>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false, revoke)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true, revoke)} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nDeleteMessagesDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(DeleteMessagesDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Button from '@material-ui/core/Button';\nimport ChatTile from '../Tile/ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { chatId, onClose, t } = this.props;\n\n        return (\n            <Dialog\n                open={true}\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nLeaveChatDialog.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(LeaveChatDialog);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport ClearHistoryDialog from './Popup/ClearHistoryDialog';\nimport DeleteMessagesDialog from './Popup/DeleteMessagesDialog';\nimport LeaveChatDialog from './Popup/LeaveChatDialog';\nimport NotificationTimer from './Additional/NotificationTimer';\nimport { isChatMember, isCreator } from '../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport MessageStore from '../Stores/MessageStore';\nimport { clearSelection } from '../Actions/Client';\n\nclass Actions extends React.PureComponent {\n    state = {\n        leaveChat: null,\n        clearHistory: null,\n        deleteMessages: null\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.on('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateRequestLeaveChat', this.onClientUpdateLeaveChat);\n        AppStore.off('clientUpdateRequestClearHistory', this.onClientUpdateClearHistory);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        this.setState({\n            deleteMessages: {\n                chatId,\n                messageIds\n            }\n        });\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { chatId } = update;\n\n        this.setState({ leaveChat : { chatId } });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = update;\n\n        this.setState({ clearHistory : { chatId } });\n    };\n\n    handleClearHistoryContinue = (result, revoke) => {\n        const { t } = this.props;\n\n        const { clearHistory } = this.state;\n        if (!clearHistory) return;\n\n        this.setState({ clearHistory: null });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false,\n            revoke\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, [request]);\n    };\n\n    handleLeaveContinue = result => {\n        const { leaveChat } = this.state;\n        if (!leaveChat) return;\n\n        const { chatId } = leaveChat;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.setState({ leaveChat: null });\n\n        if (!result) return;\n\n        const message = this.getLeaveChatNotification(chatId);\n        const requests = [];\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n            case 'chatTypeSupergroup': {\n                if (isCreator(chatId)) {\n                    requests.push({\n                        '@type': 'setChatMemberStatus',\n                        chat_id: chatId,\n                        user_id: UserStore.getMyId(),\n                        status: {\n                            '@type': 'chatMemberStatusCreator',\n                            is_member: false\n                        }\n                    });\n                } else if (isChatMember(chatId)) {\n                    requests.push({ '@type': 'leaveChat', chat_id: chatId });\n                }\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                requests.push({ '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true });\n            }\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, requests);\n    };\n\n    handleDeleteMessagesContinue = (result, revoke) => {\n        const { deleteMessages } = this.state;\n        if (!deleteMessages) return;\n\n        const { chatId, messageIds } = deleteMessages;\n\n        clearSelection();\n        this.setState({ deleteMessages: null });\n\n        if (!result) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke\n        });\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, requests) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                for (let i = 0; i < requests.length; i++) {\n                    await TdLibController.send(requests[i]);\n                }\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    render() {\n        const { leaveChat, clearHistory, deleteMessages } = this.state;\n        if (leaveChat) {\n            const { chatId } = leaveChat;\n\n            return (\n                <LeaveChatDialog\n                    chatId={chatId}\n                    onClose={this.handleLeaveContinue} />\n                );\n        } else if (clearHistory) {\n            const { chatId } = clearHistory;\n\n            return (\n                <ClearHistoryDialog\n                    chatId={chatId}\n                    onClose={this.handleClearHistoryContinue} />\n                );\n        } else if (deleteMessages) {\n            const { chatId, messageIds } = deleteMessages;\n\n            return (\n                <DeleteMessagesDialog\n                    chatId={chatId}\n                    messageIds={messageIds}\n                    onClose={this.handleDeleteMessagesContinue} />\n                );\n        }\n\n        return null;\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(Actions);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\nimport Actions from './Actions';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Actions/>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}