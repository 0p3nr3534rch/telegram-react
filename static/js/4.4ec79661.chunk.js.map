{"version":3,"sources":["Stores/FileStore.js","Utils/File.js","Utils/Chat.js","Utils/BasicGroup.js","Utils/Channel.js","Utils/Supergroup.js","Components/Additional/MentionLink.js","Utils/Message.js","Components/Message/Media/Call.js","Components/Message/Media/Contact.js","Components/Message/Media/Game.js","Components/Message/Media/Venue.js","Utils/Media.js","Assets/Icons/Close.js","Stores/PlayerStore.js","Utils/User.js","Components/Viewer/FileProgress.js","Workers/BlobInflator.js","Workers/Helpers.js","Components/Message/Media/Sticker.js","Stores/StickerStore.js","Stores/BasicGroupStore.js","Components/Tile/UserTile.js","Components/Message/Media/Photo.js","Utils/Date.js","Components/Additional/SafeLink.js","Stores/InstantViewStore.js","Assets/Icons/Download.js","Components/Message/MessageAuthor.js","Components/Tile/User.js","Components/Message/Media/Animation.js","Assets/Icons/PlayArrow.js","Utils/Currency.js","Utils/ServiceMessage.js","Utils/Url.js","Components/Message/Media/Audio.js","Assets/Icons/Pause.js","Components/Tile/DocumentTile.js","Components/Message/Media/AudioAction.js","Components/Message/Media/Location.js","Components/Message/Media/Video.js","Components/Message/Media/MediaStatus.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/DeletedAccount.js","Actions/Poll.js","Components/Tile/UserStatus.js","Stores/PollStore.js","Utils/Poll.js","Utils/Punycode.js","Components/Message/Media/VideoNote.js","Components/Tile/VoiceNoteTile.js","Assets/Icons/Smile.js","Components/Message/Media/FireworksControl.js","Assets/Icons/Check.js","Components/Message/Media/PollRadio.js","Components/Message/Media/PollPercentage.js","Components/Message/Media/PollOption.js","Components/Tile/UserPlaceholder.js","Components/Popup/PollOptionResult.js","Components/Popup/PollOptionResults.js","Components/Popup/PollResultsDialog.js","Components/Message/Media/Poll.js","Assets/Icons/Document.js","Components/Message/Media/DocumentAction.js","Components/Message/Media/Document.js","Components/Message/Media/VoiceNoteSlider.js","Components/Message/Media/VoiceNote.js","Workers/pako.worker.js","Notifications.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Actions/Chat.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedDocument.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/Tile/SharedMedia/SharedLink.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/Archive.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Additional/KeyboardManager.js","Assets/Icons/Delete.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/Main.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Done.js","Assets/Icons/Send.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageMenu.js","Components/Message/UnreadSeparator.js","Actions/InstantView.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/IVContext.js","Components/InstantView/RichText/RichText.js","Utils/InstantView.js","Components/InstantView/Blocks/Anchor.js","Components/InstantView/Blocks/Caption.js","Components/InstantView/Blocks/Animation.js","Components/InstantView/Blocks/AuthorDate.js","Components/InstantView/Blocks/Blockquote.js","Components/InstantView/Blocks/Collage.js","Components/InstantView/Blocks/Cover.js","Components/InstantView/Blocks/Details.js","Components/InstantView/Blocks/Divider.js","Components/Additional/IframeResizer.js","Components/InstantView/Blocks/Embedded.js","Components/InstantView/Blocks/EmbeddedPost.js","Components/InstantView/Blocks/ErrorHandler.js","Components/InstantView/Blocks/Footer.js","Components/InstantView/Blocks/Header.js","Components/InstantView/Blocks/Kicker.js","Components/InstantView/Blocks/ListItem.js","Components/InstantView/Blocks/List.js","Components/InstantView/Blocks/Paragraph.js","Components/InstantView/Blocks/Photo.js","Components/InstantView/Blocks/Preformatted.js","Components/InstantView/Blocks/PullQuote.js","Components/InstantView/Blocks/RelatedArticle.js","Components/InstantView/Blocks/RelatedArticles.js","Components/InstantView/Blocks/Slideshow.js","Components/InstantView/Blocks/Subheader.js","Components/InstantView/Blocks/Subtitle.js","Components/InstantView/Blocks/Title.js","Components/InstantView/RichText/Bold.js","Components/InstantView/RichText/EmailAddress.js","Components/InstantView/RichText/Fixed.js","Components/InstantView/RichText/Icon.js","Components/InstantView/RichText/Italic.js","Components/InstantView/RichText/Marked.js","Components/InstantView/RichText/PhoneNumber.js","Components/InstantView/RichText/Plain.js","Components/InstantView/RichText/Strikethrough.js","Components/InstantView/RichText/Subscript.js","Components/InstantView/RichText/Superscript.js","Components/InstantView/RichText/Anchor.js","Components/InstantView/RichText/Texts.js","Components/InstantView/RichText/Underline.js","Components/InstantView/RichText/Url.js","Components/InstantView/Blocks/Table.js","Components/InstantView/Blocks/TableCell.js","Components/InstantView/Blocks/Map.js","Components/InstantView/Blocks/Audio.js","Components/InstantView/Blocks/ChatLink.js","Components/InstantView/Blocks/Video.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Assets/Icons/Share.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["useReadFile","store","reset","callbacks","db","urls","WeakMap","dataUrls","Map","items","blobItems","locationItems","downloads","uploads","onUpdate","update","a","onUpdateAuthorizationState","set","file","onUpdateFile","emit","onClientUpdate","addTdLibListener","TdLibController","on","removeTdLibListener","off","authorization_state","initDB","handleDownloads","handleUploads","arr","id","idb_key","local","has","is_downloading_completed","get","delete","getStore","forEach","item","handleAnimation","handleAudio","handleChat","handleDocument","handleGame","handleLocation","handleMessage","handlePageBlockMap","handlePhoto","handleSticker","handleVideo","handleVideoNote","handleVoiceNote","handleUser","console","error","remote","is_uploading_completed","chat","getLocalFile","updateChatPhotoBlob","getRemoteFile","FILE_PRIORITY","user","updateUserPhotoBlob","message","content","animation","audio","photo","document","game","location","sticker","web_page","video","video_note","voice_note","venue","obj","chatId","chat_id","messageId","thumbnail","source","updateAnimationThumbnailBlob","THUMBNAIL_PRIORITY","updateAnimationBlob","album_cover_thumbnail","updateAudioThumbnailBlob","updateAudioBlob","updateDocumentThumbnailBlob","updateDocumentBlob","locationId","getLocationId","getLocationFile","updateLocationBlob","pageBlockMap","IV_LOCATION_WIDTH","IV_LOCATION_HEIGHT","i","sizes","length","photoSize","updatePhotoBlob","updateStickerThumbnailBlob","updateStickerBlob","voiceNote","voice","updateVoiceNoteBlob","videoNote","updateVideoNoteThumbnailBlob","updateVideoNoteBlob","updateVideoThumbnailBlob","updateVideoBlob","deleteLocalFile","fileId","getBlob","setBlob","blob","deleteBlob","setLocationFile","getDataUrl","setDataUrl","dataUrl","deleteDataUrl","getBlobUrl","url","URL","createObjectURL","deleteBlobUrl","clientUpdate","callback","this","initiatingDB","push","openDB","catch","log","Promise","resolve","reject","request","window","indexedDB","open","onsuccess","result","onerror","transaction","objectStore","faultCallback","send","file_id","response","data","then","Blob","event","target","priority","some","x","filter","only_if_pending","message_ids","revoke","userId","EventEmitter","getSizeString","size","toFixed","getFileSize","saveBlob","filename","navigator","msSaveBlob","blobURL","tempLink","createElement","style","display","href","setAttribute","download","body","appendChild","click","removeChild","revokeObjectURL","loadReplies","messageIds","messages","map","MessageStore","setItems","loadReplyContents","FileStore","loadAnimationThumbnailContent","loadAudioThumbnailContent","loadPhotoContent","loadDocumentThumbnailContent","loadGameThumbnailContent","loadStickerThumbnailContent","loadVideoThumbnailContent","loadVideoNoteThumbnailContent","loadAudioContent","useFileSize","PRELOAD_AUDIO_SIZE","loadAnimationContent","PRELOAD_ANIMATION_SIZE","loadContactContent","contact","user_id","UserStore","loadUserContent","loadDocumentContent","PRELOAD_DOCUMENT_SIZE","loadGameContent","width","height","zoom","LOCATION_ZOOM","scale","LOCATION_SCALE","loadLocationContent","LOCATION_WIDTH","LOCATION_HEIGHT","loadBigPhotoContent","getSize","PHOTO_BIG_SIZE","displaySize","PHOTO_SIZE","getPhotoSize","loadPhotoThumbnailContent","thumbSize","getPhotoThumbnailSize","loadStickerContent","PRELOAD_STICKER_SIZE","loadVideoContent","PRELOAD_VIDEO_SIZE","loadVideoNoteContent","PRELOAD_VIDEONOTE_SIZE","loadVoiceNoteContent","PRELOAD_VOICENOTE_SIZE","loadMessageContents","users","replies","sender_user_id","reply_to_message_id","loadPhoto","loadUsersContent","keys","saveMedia","media","file_name","saveOrDownload","saveAnimation","saveDocument","savePhoto","saveVideo","fileName","mime","type","saveData","can_be_downloaded","getViewerThumbnail","getViewerFile","getMediaPreviewFile","getMediaFile","cancelLoadMediaViewerContent","cancelGetRemoteFile","loadMediaViewerContent","useSizeLimit","cancelPreloadMediaViewerContent","index","history","preloadMediaViewerContent","loadUserFileContent","loadChatFileContent","ChatStore","loadProfileMediaViewerContent","photos","small","big","getChatUserId","getProfilePhoto","preloadProfileMediaViewerContent","profile_photo","ids","loadChatContent","loadChatPhotoContent","loadChatsContent","loadDraftContent","draft_message","loadRecentStickersContent","recent","loadStickersContent","stickers","loadStickerSetContent","stickerSet","loadBackgroundsContent","backgrounds","background","loadBackgroundContent","full","is_animated","isGifMimeType","mimeType","toLowerCase","getSrc","getDownloadedSize","is_downloading_active","downloaded_size","getUploadedSize","is_uploading_active","uploaded_size","getExtension","parts","split","pop","loadInstantViewContent","instantView","page_blocks","pageBlock","loadPageBlockContent","b","caption","author","loadRichTextContent","text","credit","cover","header","poster_photo","author_photo","footer","kicker","loadPageBlockMapContent","IV_PHOTO_SIZE","articles","subheader","subtitle","cells","row","title","t","texts","getAnimationData","fileReader","FileReader","onload","JSON","parse","onabort","readAsText","canUnpinMessage","pinned_message_id","isChatArchived","chat_list","canSetChatChatList","is_sponsored","isMeChat","SERVICE_NOTIFICATIONS_USER_ID","draftEquals","draft1","draft2","inputMessageText1","input_message_text","replyToMessageId1","inputMessageText2","formattedText1","formattedText2","text1","entities1","entities","text2","entities2","offset","every","entitiesEquals","getChatTypingString","typingManager","getTypingManager","typingString","inputTypingManager","actions","values","next","value","action","getPrivateChatTypingString","firstUser","secondUser","first_name","second_name","getGroupChatTypingString","getMessageSenderFullName","k","isServiceMessage","getUserFullName","getMessageSenderName","getUserShortName","getLastMessageSenderName","last_message","getLastMessageContent","key","getContent","showChatUnreadMentionCount","unread_mention_count","showChatUnreadCount","is_marked_as_unread","unread_count","isChatUnread","isChatMuted","notification_settings","use_default_mute_for","mute_for","settings","NotificationStore","isChannelChat","getScopeNotificationSettings","getChatMuteFor","getMessageDate","date","Date","dayStart","setHours","dateFormat","now","day","getDay","weekStart","getDate","setDate","getLastMessageDate","showChatDraft","getChatSubtitleWithoutTyping","basicGroup","BasicGroupStore","basic_group_id","status","count","member_count","is_member","onlineCount","getOnlineMemberCount","getBasicGroupStatus","getUserStatus","supergroup","SupergroupStore","supergroup_id","is_channel","fullInfo","getFullInfo","getChannelStatus","getSupergroupStatus","getChatSubtitle","showSavedMessages","chatTypingString","getChatLetters","letters","getLetters","charAt","isAccentChatSubtitleWithoutTyping","isUserOnline","isAccentChatSubtitle","getChatUsername","username","getChatPhoneNumber","formatPhoneNumber","phone_number","getChatBio","description","bio","isPrivateChat","isGroupChat","isChatMember","getChatTitle","isDeletedPrivateChat","getMyId","getGroupChatMembers","fallbackValue","members","getChatFullInfo","hasBasicGroupId","basicGroupId","isSupergroup","getSupergroupId","hasSupergroupId","supergroupId","getPhotoFromChat","canSendMediaMessages","globalPermissions","permissions","can_send_media_messages","getChatShortTitle","canClearHistory","Boolean","canDeleteChat","canSendPolls","can_send_polls","canSendMessages","can_send_messages","getChatDraft","getChatDraftReplyToMessageId","replyToMessageId","canPinMessages","can_pin_messages","isChatVerified","is_verified","isChatSecret","MentionLink","props","handleClick","stopPropagation","preventDefault","popup","openUser","setState","openChat","handleClose","handleDialogClick","state","children","onClick","Dialog","transitionDuration","onClose","aria-labelledby","DialogTitle","DialogContent","classes","root","DialogContentText","DialogActions","Button","prevUserId","prevUsername","React","Component","defaultProps","withTranslation","isMetaBubble","isMessageUnread","last_read_inbox_message_id","last_read_outbox_message_id","is_outgoing","isMe","getTitle","substring","start","end","searchCurrentChat","AppStore","searchChat","getFormattedText","formattedText","deleteLineBreakAfterPre","entity","textBefore","textBeforeLength","substr","entityKey","entityText","command","rel","SafeLink","textAfter","getText","meta","concat","getWebPage","d","getDateHint","isForwardOriginHidden","forwardInfo","origin","getForwardTitle","sender_name","author_signature","getSenderUserId","filterDuplicateMessages","reduce","accumulator","current","filterMessages","ttl","getServiceMessageContent","poll","question","emoji","isMediaContent","longitude","latitude","isVideoMessage","isLottieMessage","endsWith","isAnimationMessage","isContentOpened","is_listened","is_viewed","getMediaTitle","getAudioTitle","forward_info","getAuthor","hasAudio","hasVideoNote","getSearchMessagesFilter","openAnimation","fileCancel","cancelUploadFile","message_id","setMediaViewerContent","openAudio","openDocument","openPhoto","openSticker","set_id","openVideo","openVideoNote","openVoiceNote","openMedia","openChatPhoto","openContact","openGame","isDeletedMessage","getReplyMinithumbnail","minithumbnail","getReplyPhotoSize","getEmojiMatches","textContent","m","lastIndex","emojiMatches","re","emojiRegex","exec","messageComparatorDesc","left","right","checkInclusion","checkIntersection","startIndex","endIndex","checkEntity","removeOffsetAfter","countToRemove","e","addOffsetAfter","countToAdd","removeEntities","entityStart","entityEnd","splice","addTextNode","nodes","node","createTextNode","getNodes","sort","prevEntity","innerText","dataset","getDecodedUrl","getEntities","replace","join","isPre","DOMParser","parseFromString","finalText","childNodes","nodeName","indexOf","language","lastChar","firstChar","c","checkString","checkChar","prevChar","canMessageBeEdited","can_be_edited","showMessageForward","isTextMessage","isMessagePinned","canMessageBeUnvoted","is_closed","options","is_chosen","is_being_chosen","canMessageBeClosed","canMessageBeForwarded","can_be_forwarded","canMessageBeDeleted","can_be_deleted_only_for_self","can_be_deleted_for_all_users","getMessageStyle","fitSize","getFitSize","PHOTO_DISPLAY_SIZE","Call","duration","callTitle","getCallTitle","durationString","getDurationString","Math","floor","className","classNames","IconButton","color","aria-label","fontSize","Contact","last_name","fullName","number","UserTile","firstName","lastName","Game","Animation","fitPhotoSize","Photo","Venue","venueTitle","address","Location","discard_reason","isEditedMedia","isValidAnimatedSticker","sending_state","isBlurredThumbnail","blurredSize","THUMBNAIL_BLURRED_SIZE_90","max","performer","trimmedTitle","trim","trimmedPerformer","getAudioShortTitle","getAudioSubtitle","getStickers","sets","getNeighborStickersFromSets","stickersPerRow","setIndex","findIndex","stickerIndex","prevRows","ceil","toRowColumn","column","prevPrevRow","prevRow","nextRow","nextNextRow","prevColumn","nextColumn","skipPrevRow","skipPrePrevRow","toIndex","totalRows","skipNextRow","skipNextNextRow","setRow","setColumn","getInputMediaThumbnail","getInputMediaCaption","getInputMediaContent","live_period","added_sticker_file_ids","supports_streaming","waveform","getMedia","hasTitle","hasCaption","inlineMeta","Audio","duraton","discardReason","Document","Poll","Sticker","StickerSourceEnum","MESSAGE","Video","VideoNote","VoiceNote","getMediaDocumentFromFile","getRandomInt","name","mime_type","expected_size","getMediaPhotoFromFile","startsWith","readImageSize","has_stickers","createSvgIcon","RepeatEnum","Object","freeze","NONE","REPEAT","REPEAT_ONE","playlist","time","videoStream","close","getPlaylist","volume","savePlayerSettings","repeat","shuffle","playbackRate","playing","moveToNextMedia","moveToPrevMedia","moveNext","currentTime","timestamp","stream","useRepeatShuffle","nextIndex","currentPlaylist","totalCount","query","from_message_id","limit","total_count","loadPlayerSettings","player","localStorage","getItem","Number","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_VOLUME_NORMAL","setItem","stringify","was_online","wasOnline","diff","getTime","minutes","today","hours","yesterday","isUserBlocked","is_blocked","getUserLetters","firstNameSymbol","getFirstLetter","lastNameSymbol","getUserStatusOrder","expires","PROFILE_PHOTO_SMALL_SIZE","PROFILE_PHOTO_BIG_SIZE","getProfilePhotoDateHint","userProfilePhoto","added_date","isDeletedUser","FileProgress","currentFile","nextFile","fileEquals","prevFile","isDownloading","wasActive","isActive","isUploading","upload","getProgressParams","isCompleted","progressSize","completeAnimation","prevPropsFile","nextProps","nextState","icon","thumbnailSrc","nextLocal","nextIdbKey","prevLocal","prevIdbKey","isDownloadingCompleted","receiveIdbKey","mount","file1","file2","local1","remote1","local2","remote2","can_be_deleted","download_offset","downloaded_prefix_size","path","cancelButton","zIndex","completeIcon","inProgress","progress","setTimeout","ANIMATION_DURATION_300MS","circle","variant","thickness","worker","PakoWorker","handlers","inflateBlob","random","toString","slice","postMessage","onmessage","msg","Lottie","lazy","HINTS","PICKER_HEADER","PICKER","PREVIEW","STICKER_SET","UNKNOWN","onClientUpdateInstantViewContent","openIV","InstantViewStore","getCurrent","startStopAnimation","onClientUpdateDialogChatId","dialogChatId","ApplicationStore","onClientUpdateMediaViewerContent","openMediaViewer","mediaViewerContent","onClientUpdateProfileMediaViewerContent","openProfileMediaViewer","profileMediaViewerContent","onClientUpdateStickerPreview","stickerPreview","onClientUpdateMessagesInView","inView","onClientUpdateStickerSet","openedStickerSet","onClientUpdateFocusWindow","focused","windowFocused","onClientUpdateStickerBlob","loadContent","forceUpdate","onClientUpdateStickerThumbnailBlob","autoplay","play","isAnimated","animationData","handleMouseEnter","handleAnimationMouseEnter","entered","lottieRef","loopCount","handleAnimationLoopComplete","handleAnimationMouseOut","createRef","hasFocus","StickerStore","animationDate","hasError","errorInfo","nextContext","blur","prevProps","prevState","snapshot","pause","paused","preview","src","isBlurred","draggable","alt","Suspense","fallback","ref","loop","renderer","rendererSettings","preserveAspectRatio","clearCanvas","progressiveLoad","hideOnTransparent","eventListeners","eventName","onMouseOut","stickerStyle","onMouseEnter","STICKER_DISPLAY_SIZE","hint","sticker_set_ids","is_installed","assign","foundStickers","fullInfoItems","basic_group","setFullInfo","basic_group_full_info","groupId","group","basicgroup","onClientUpdateUserBlob","loaded","onClientUpdateChatBlob","onUpdateChatPhoto","onUpdateChatTitle","handleSelect","onSelect","handleLoad","fistName","dialog","pointer","tileLoaded","tileColor","abs","onLoad","onClientUpdatePhotoBlob","showProgress","miniSrc","thumbSrc","photoStyle","hasSrc","thumbnailSize","prevPhoto","PHOTO_THUMBNAIL_SIZE","token","timezone","timezoneClip","mask","utc","gmt","arguments","kindOf","test","undefined","isNaN","TypeError","maskSlice","String","masks","_","D","y","H","M","s","L","o","getTimezoneOffset","W","getWeek","N","getDayOfWeek","flags","dd","pad","ddd","i18n","dayNames","dddd","mm","mmm","monthNames","mmmm","yy","yyyy","h","hh","HH","MM","ss","l","round","timeNames","tt","T","TT","Z","match","S","val","len","targetThursday","getFullYear","getMonth","firstThursday","ds","getHours","weekDiff","dow","Array","isArray","call","default","shortDate","mediumDate","longDate","fullDate","shortTime","mediumTime","longTime","isoDate","isoTime","isoDateTime","isoUtcDateTime","expiresHeaderFormat","confirm","handleDone","newWindow","opener","handleSafeClick","isTelegramLink","messageLinkInfo","lowerCaseUrl","decodedUrl","safe","displayText","mail","prevUrl","prevDisplayText","isUrlSafe","getHref","viewerContent","prevInstantView","MessageAuthor","openUserCommand","openChatCommand","User","showStatus","startStopPlayer","videoRef","ivInView","openIVMedia","onClientUpdateInstantViewViewerContent","onClientUpdateBlocksInView","blocks","onClientUpdateAnimationBlob","onClientUpdateAnimationThumbnailBlob","setPlayerParams","animationStyle","isGif","poster","muted","autoPlay","playsInline","iv","transform","currency","list","symbol","includes","totalAmount","amount","pow","getPow","serviceMap","isOutgoing","isChannel","member_user_ids","array","separator","ttlString","seconds","days","getTTLString","messageGame","game_message_id","score","passportElementTypes","types","getPassportElementTypeString","messageInvoice","invoice_message_id","invoice","Currency","getString","total_amount","getMessageAuthor","pinnedMessage","pinnedContent","domain_name","regExpRTLO","hasRTLOSymbol","decodedHref","decodeURI","domain","punycode","ToUnicode","regExpDomainExplicit","RegExp","regExpDomain","regExpProtocol","validateUrl","trimmed","domainMatch","protocolMatch","isGoodProtocol","onClientUpdateMediaEnd","active","onClientUpdateMediaPlay","onClientUpdateMediaPause","onClientUpdateMediaActive","PlayerStore","audioTitle","audioSubtitle","DocumentTile","onClientUpdateDocumentThumbnailBlob","AudioAction","timeString","getTimeString","onClientUpdateMediaTime","playerDuration","Infinity","currentTimeString","audioDuration","theme","isDownloadingActive","isUploadingActive","sizeString","onClientUpdateLocationBlob","locationStyle","onClientUpdateVideoThumbnailBlob","videoStyle","MediaStatus","onUpdateMessageContentOpened","isOpened","openedIcon","StickerPreview","prevPropsSticker","loadStickerEmojis","emojis","STICKER_PREVIEW_DISPLAY_SIZE","stroke","strokeWidth","strokeLinejoin","fill","cx","cy","r","setPollAnswer","optionIds","option_ids","cancelPollAnswer","stopPoll","reply_markup","UserStatus","onUpdateUserStatus","isAccent","allow_multiple_answers","is_anonymous","isAnonymous","newType","correct_option_id","option","source1","source2","isValidPoll","POLL_QUESTION_LENGTH","isValidQuestion","noneEmptyOptions","isValidOption","POLL_OPTION_LENGTH","hasPollData","utf16","decode","input","extra","output","charCodeAt","RangeError","encode","fromCharCode","base","damp","tmin","tmax","skew","maxint","encode_digit","flag","adapt","delta","numpoints","firsttime","preserveCase","n","out","bias","basic","j","ic","oldi","w","digit","cp","case_flags","input_length","lastIndexOf","toUpperCase","q","ijv","bcp","Error","ToASCII","domain_array","circleStyle","onClientUpdateMediaCaptureStream","srcObject","updateVideoSrc","videoDuration","onClientUpdateVideoNoteBlob","onClientUpdateVideoNoteThumbnailBlob","handleCanPlay","getTracks","track","stop","onCanPlay","VoiceNoteTile","Particle","fireworks","colorType","side","typeSize","xFinished","finishedStart","rotation","moveX","moveY","ctx","fillStyle","beginPath","arc","PI","save","translate","rotate","radius","tl","tr","br","bl","defaultRadius","moveTo","lineTo","quadraticCurveTo","closePath","roundRect","restore","dt","moveCoef","wasNegative","speedCoef","fallingDownCount","getMeasuredHeight","min","Fireworks","context","particlesCount","fallParticlesCount","particles","canvas","clientHeight","clientWidth","fall","particle","colors","getMeasuredWidth","xOffset","yOffset","started","startedFall","lastUpdateTime","createParticle","draw","newTime","clearRect","p","startFall","requestAnimationFrame","FireworksComponent","onResize","canvasRef","parentNode","attachToParent","detachFromParent","addEventListener","removeEventListener","getContext","position","top","pointerEvents","PollRadio","chosen","beingChosen","hidden","onChange","Radio","colorPrimary","disabled","TouchRippleProps","child","checked","checkedIcon","CircularProgress","PollPercentage","updateAnimation","stopAnimation","handle","onAnimationFrame","cancelAnimationFrame","startTime","from","to","timePassed","ANIMATION_DURATION_200MS","animated","prevPropsValue","closed","PollOption","getTitleString","canBeSelected","onVote","maxVoterCount","isCorrect","voter_count","vote_percentage","isMultiChoosen","Close","Check","LinearProgress","bar","UserPlaceholder","titleWidth","sin","contentWidth","cos","marginLeft","PollOptionResult","ListItem","button","PollOptionResults","handleShowMore","newOffset","newCount","POLL_RESULTS_SLICE_LENGTH","updateVoters","handleCollapse","POLL_RESULTS_FIRST_SLICE_LENGTH","POLL_RESULTS_LEAVE_LENGTH","voters","loadMore","optionId","option_id","user_ids","offset2","isQuiz","results","voterCount","showMoreButton","showMoreCount","showMore","fullWidth","showCollapse","PollResultsDialog","onClientUpdateClosePollResults","handleContextMenu","PollStore","container","paper","onContextMenu","getTotalVoterCountString","handleSubmit","viewResults","handleVote","handleOpenResults","viewResultsPoll","handleCloseResults","fireworksRef","total_voter_count","recent_voter_user_ids","isSelected","showViewResults","showButton","buttonEnabled","recentVoters","marginRight","getOptionType","getOptionIsCorrect","textPrimary","fillRule","mixBlendMode","opacity","DocumentAction","Download","thumb","viewBox","data-name","data-ext","VoiceNoteSlider","getValue","PLAYER_PROGRESS_TIMEOUT_MS","Slider","module","exports","Worker","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","OnlineStatus","online","borderSize","padding","ChatTile","onFastUpdatingComplete","showOnline","DeletedAccount","ForwardTargetChat","selected","shortTitle","copy","element","all","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","select","execCommand","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","currentPackId","OptionStore","suggestedPackId","latinInput","getLatinInput","ForwardDialog","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","savedMessagesPromise","force","chats","savedMessages","chatIds","chat_ids","for_album","publicMessageLink","info","handleCopyLink","link","handleScheduledAction","enqueueSnackbar","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","removeScheduledAction","getForwardPhotoSize","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","targetChats","targetChatId","disable_notifications","from_background","input_message_content","disable_web_page_preview","clear_draft","from_chat_id","as_album","handleChangeSelection","innerHTML","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","hasSearchText","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","toLocaleLowerCase","setSearchFocus","focus","searchResultsMap","filteredResults","foundChats","aria-describedby","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","autoFocus","enhance","compose","withSnackbar","isVerified","DialogStatus","updateSubtitle","find","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","onUpdateBasicGroup","onUpdateSupergroup","prevChatId","externalSubtitle","Chat","onTileSelect","showTitle","isSavedMessages","ChatDetailsHeader","backButton","setChatChatList","chatList","toggleChatIsPinned","isPinned","is_pinned","toggleChatIsMarkedAsUnread","isMarkedAsUnread","toggleChatNotificationSettings","isMuted","muteFor","MUTED_VALUE_MAX","MUTED_VALUE_MIN","newNotificationSettings","getChatCounters","photoCounter","return_local","videoCounter","documentCounter","audioCounter","urlCounter","voiceAndVideoNoteCounter","Notifications","onUpdateChatNotificationSettings","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationsListItem","ListItemIcon","ListItemText","primary","Typography","noWrap","ListItemSecondaryAction","Switch","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isGroup","isBlocked","isMember","Collapse","in","timeout","unmountOnExit","List","component","disablePadding","inset","ChatDetails","loadChatContents","handleUsernameHint","telegramUrlOption","handlePhoneHint","phoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","getContentHeight","scrollHeight","offsetHeight","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedPhotos","onOpenSharedMedia","onOpenSharedVideos","onOpenSharedVoiceNotes","el","photoCount","videoCount","documentCount","audioCount","urlCount","voiceAndVideoNoteCount","groupInCommonCount","group_in_common_count","member","wordWrap","Divider","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","ContextMenu","handleOpenMessage","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","onMouseDown","MenuList","MenuItem","SharedDocument","contextMenu","handleOpenContextMenu","clientX","clientY","handleCloseContextMenu","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","SpeedDialIcon","openIcon","SharedMediaBase","onUpdateMessageContent","migratedChatId","migratedItems","new_content","old_content","between","isValidContent","insertByOrder","onUpdateNewMessage","isValidMessage","onUpdateDeleteMessages","SHARED_MESSAGE_SLICE_LIMIT","onLoadNext","params","loading","completed","migrateCompleted","getSearchFilter","loadIncomplete","fromMessageId","finally","incompleteResults","onLoadMigratedNext","handleScroll","listRef","SCROLL_PRECISION","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","getItemTemplate","searchMessages","getHeader","hasSearch","getListClassName","onScroll","getSearchListClassName","SharedAudios","propTypes","PropTypes","isRequired","func","bool","SharedDocuments","SharedLink","hostname","webPage","display_url","getTitleFromUrl","isValidEntityType","typeUrl","SharedLinks","SharedMedia","handleChange","Tabs","indicatorColor","textColor","scrollable","scrollButtons","Tab","label","minWidth","SharedPhoto","backgroundImage","backgroundSize","SharedPhotos","SharedVideo","SharedVideos","SharedVoiceNote","dateString","toLocaleDateString","month","year","hour","minute","hour12","SharedVoiceNotes","ChatInfo","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","setCounters","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","Archive","openArchive","onClientUpdateClearHistory","clearHistory","contentControl","draft","senderName","x1","y1","x2","y2","strokeLinecap","DialogBadge","showUnreadMentionCount","showUnreadCount","Pin","Status","onUpdateMessageSend","old_message_id","newMessageId","sendingState","onUpdateChatReadOutbox","unread","Pending","Sent","Succeeded","prevMessageId","DialogMeta","previousChatId","contextMenuId","canPinChats","canTogglePin","canToggleArchive","handleMute","pinnedSumMaxOption","isSecret","pinnedSum","handlePin","handleArchive","getViewInfoTitle","handleViewInfo","handleRead","forceRead","force_read","viewMessages","isLastPinned","isUnread","isArchived","Unarchive","Unmute","Mute","Unread","DialogPlaceholder","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","behavior","scrollTo","DialogListItem","DialogsList","onClientUpdateLeaveChat","hiddenChats","authorizationState","loadFirstSlice","isAuthorizationReady","saveCache","onSaveCache","onUpdateChatOrder","order","newChatIds","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","shift","replaceChats","appendChats","newChats","oldChatIds","innerListRef","KeyboardHandler","manager","handler","TopChat","onDelete","Delete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","senderFullName","tile","SectionHeader","multiline","Search","concatSearchResults","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","savedMessagesStrings","recentlyFound","trimmedText","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","keyboardHandler","searchOrLoadContent","KeyboardManager","add","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","messagesCaption","MainMenuButton","handleMenuOpen","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewGroup","handleContacts","handleArchived","handleSaved","handleSettings","handleHelp","getAuthorizationState","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Saved","Help","aria-owns","aria-haspopup","SearchInput","nativeEvent","stopImmediatePropagation","handleInput","inputRef","onFocus","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","handleFocus","searchInput","ANIMATION_DURATION_100MS","SidebarPage","remove","Slide","direction","mountOnEnter","cloneElement","SettingsMenuButton","handleLogOut","logOut","More","LogOut","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","main","palette","FormControl","FormLabel","RadioGroup","FormControlLabel","control","withTheme","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","Edit","Data","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","firstNameRef","lastNameRef","bioRef","userFullInfo","setName","setBio","setUsername","newFirstName","newLastName","newBio","usernameLabel","TextField","defaultValue","Wallpaper","wallpaper","backgroundPosition","ChatBackground","selectedId","wallpapers","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","LocalizationStore","language_packs","tabIndex","inputProps","secondary","native_name","handleMuteFor","property","newSettings","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","Checkbox","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","disableRipple","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","role","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","handleCloseSettings","removeItem","clear","cache","contacts","CacheManager","saveChatsInternal","load","files","parseCache","archiveChats","basicGroups","supergroups","OutputTypingManager","updateChatChatList","archiveChatIds","fileMap","userMap","basicGroupMap","supergroupMap","entries","getCache","readAsDataURL","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","localeCompare","throttle","CacheStore","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","reload","getArchiveTitle","archive","chatsOrder","Dialogs","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","onUpdateChatChatList","prevShowArchive","archiveList","listCurrent","onClientUpdateContacts","openContacts","onClientUpdateSettings","openSettings","meChatId","onClientUpdateArchive","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsHeaderRef","setInitQuery","scrollToTop","visible","handleSaveCache","handleCloseArchive","handleCloseContacts","mainItems","archiveItems","loadCache","mainChatIds","saveChats","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","focusNode","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","optionTextRef","maxLength","remainLength","hasSelection","onFocusNext","isCollapsed","firstChild","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","data-length","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","shiftKey","handleFocusNextOption","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextNode","getHint","addCount","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","allowMultipleAnswers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_HINT_LENGTH","disableTypography","FormGroup","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","urlError","onDone","handleCancel","onCancel","textRef","urlRef","flexDirection","margin","autoComplete","prevOpen","ReplyTile","isVideoNote","Reply","onGetMessageResult","handleOpen","InputBoxHeader","editMessageId","PasteFilesDialog","onConfirm","EditMediaDialog","handleSelectionChange","activeElement","captionRef","saveSelection","newFile","newMedia","onEdit","editMessage","editFile","editMedia","sendAsPhoto","altKey","ctrlKey","metaKey","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","handleSendAsPhoto","setFormattedText","getRangeAt","isEditing","isPhoto","doneLabel","accept","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","setEditMessage","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateStickerSend","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateReply","setInputFocus","beforeEditText","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","getDraftMessage","inputContent","editedMessage","editMessageText","editMessageCaption","attachPhotoRef","handleAttachPhotoComplete","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","sendFile","performance","isMediaEditing","multiple","Done","Send","FooterCommand","onCommand","NotificationsCommand","Footer","handleJoin","handleDeleteAndExit","remove_from_chat_list","NotificationTimer","handleTimer","expire","timerId","clearInterval","setMilliseconds","getMilliseconds","setInterval","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","getLeaveChatTitle","handleUnpin","deleteChat","leaveChatTitle","unpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","isAccentSubtitle","HeaderChat","HeaderCommand","selectedItems","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","code","deletedMessage","getClientData","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","handleDragStart","handleDragEnd","getVolumeIcon","onMouseLeave","visibility","step","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","getIcon","ShuffleButton","onClientUpdateMediaShuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_FAST","Time","Playlist","scrollToActive","itemRefMap","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaPlaylistLoading","onClientUpdateMediaPlaylist","clearTimeout","openTimeout","titleMouseOver","reverse","HeaderPlayer","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","getMediaSrc","onClientUpdateMediaBlob","onClientUpdateMediaClose","handlePrev","handlePlay","handleNext","handleEnded","handleVideoEnded","handleTimeUpdate","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","dateHintStr","dateStr","showPlaybackRate","showRepeat","showShuffle","controls","onPlay","onPause","onTimeUpdate","onEnded","Pause","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","vcard","share_phone_number","handleBlockUser","action_bar","DayMeta","onClientUpdateLanguage","setMonth","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","tooltip","Tooltip","popper","PopperProps","popperOptions","modifiers","arrow","enabled","placement","Meta","editDate","onDateClick","views","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","handleUnvote","copyLink","handleReply","replyMessage","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","canCopyLink","canBeUnvoted","canBeClosed","canBeReplied","canBePinned","canBeEdited","hasSelectedMessage","openInstantView","force_full","setInstantViewContent","WebPage","displaySmallSize","displayExtraSmallSize","site_name","smallPhoto","extraSmallPhoto","float","handleInstantViewClick","instant_view_version","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","shook","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","edit_date","showForward","showReply","suppressTitle","withBubble","onMouseOver","onAnimationEnd","Placeholder","onClientUpdateCacheLoaded","cacheLoaded","dialogsReady","ScrollDownButton","chatPhotoStyle","borderRadius","ServiceMessage","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","getSticker","mouseDownStickerId","handleMouseUp","dict","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","ScrollBehaviorEnum","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","defferedActions","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","scrollDownButtonRef","historyEquals","previousChat","MAX_VALUE","highlightMessage","viewAction","getMessagePhoto","getMessageSticker","oldMessageId","prevMessage","isFirst","MESSAGE_SPLIT_MAX_TIME_S","prevDate","nextMessage","showMessageDate","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","IVContext","createContext","withIV","IVComponent","Consumer","RichText","richText","email_address","emailAddress","getRichText","object","Anchor","Caption","hasText","isEmptyText","hastCredit","block","need_autoplay","IV_PHOTO_DISPLAY_SIZE","AuthorDate","publishDate","hasAuthor","hasDate","dateTime","toISOString","Blockquote","pageBlocks","getPageBlock","Cover","isOpen","IframeResizer","updateIframe","frame","frameRef","doc","contentDocument","write","render","getElementById","injectIframeResizerUrl","iframeResizerUrl","injectTarget","found","getElementsByTagName","resizerScriptElement","resizeIframe","iframeResizerEnable","iframeResizerLib","iframeResizerOptions","iframeResizer","removeListeners","frameBorder","Embedded","setIframeSource","html","isFullWidth","allowScrolling","scrolling","hasWidthHeight","hasSource","srcDoc","allowFullScreen","prevHtml","authorPhoto","ErrorHandler","componentStack","Kicker","data-before","Paragraph","Preformatted","PullQuote","RelatedArticle","hasAuthorDateSeparator","hasAuthorDate","RelatedArticles","publish_date","Subheader","Subtitle","Title","Bold","EmailAddress","Fixed","Icon","emptyPlaceholderSrc","Italic","Marked","PhoneNumber","Plain","string","Strikethrough","Subscript","Superscript","Texts","Underline","Url","isBordered","isStriped","striped","border","rowIndex","TableCell","isHeader","colspan","rowspan","valign","attributes","colSpan","rowSpan","getHorizontalAlignment","getVerticalAlignment","ChatLink","needAutoplay","isLooped","openInstantViewMedia","setInstantViewViewerContent","is_open","posterPhoto","is_full_width","allow_scrolling","is_bordered","is_striped","is_header","is_looped","getInnerBlocks","innerBlocks","apply","getBlockMedia","isValidMediaBlock","Article","forwardedRef","is_rtl","dir","MediaCaption","InstantViewMediaViewerContent","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailBlob","videoWidth","videoHeight","handleContentClick","onVolumeChange","prevMedia","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","saveDisabled","prevPropsFileId","InstantViewMediaViewer","handlePrevious","hasPreviousMedia","hasNextMedia","handleSave","getValidMediaBlocks","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewUrl","hash","scrollToHash","handleBack","hasScroll","instantViewerRef","articleRef","mounted","hiddenElement","details","finished","currentElement","scrollIntoView","Provider","alignItems","transition","MediaInfo","dateHint","tileControl","MediaViewerContent","updateAnimationData","changeSpeed","isVideo","isAnimation","isLottie","MediaViewer","deleteConfirmationOpened","currentMessageId","firstSliceLoaded","inserted","oldHistory","filterMap","currentId","deletedCount","getFilter","loadHistory","MEDIA_SLICE_LIMIT","handleDialogOpen","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","ProfileMediaViewerContent","ProfileMediaInfo","ProfileMediaViewer","currentIndex","inputFile","chatPhoto","getReadWriteStore","prevFileId","currentFileId","inHistory","MainPage","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/4.4ec79661.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getLocationId } from '../Utils/Message';\nimport { FILE_PRIORITY, IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH, THUMBNAIL_PRIORITY } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nconst useReadFile = true;\nconst useDownloadFile = true;\n\nclass FileStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.callbacks = [];\n\n        //this.transactionCount = 0;\n        this.db = null;\n        this.urls = new WeakMap();\n        this.dataUrls = new Map();\n        this.items = new Map();\n        this.blobItems = new Map();\n        this.locationItems = new Map();\n\n        this.downloads = new Map();\n        this.uploads = new Map();\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                await this.onUpdateAuthorizationState(update);\n\n                break;\n            }\n            case 'updateFile': {\n                this.set(update.file);\n\n                this.onUpdateFile(update);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateAudioThumbnailBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateAudioBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateDocumentBlob': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateSendFiles': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdateAuthorizationState = async update => {\n        if (!update) return;\n\n        const { authorization_state } = update;\n        if (!authorization_state) return;\n\n        switch (authorization_state['@type']) {\n            case 'authorizationStateWaitTdlibParameters': {\n                await this.initDB();\n                break;\n            }\n            case 'authorizationStateClosed': {\n                this.reset();\n                break;\n            }\n        }\n    };\n\n    onUpdateFile = update => {\n        if (!update) return;\n\n        const { file } = update;\n        if (!file) return;\n\n        this.handleDownloads(file);\n        this.handleUploads(file);\n    };\n\n    handleDownloads = file => {\n        const { arr, id, idb_key, local } = file;\n        delete file.arr;\n\n        if (!this.downloads.has(id)) return;\n        if (!local.is_downloading_completed) return;\n        if (!useReadFile && !idb_key && !arr) return;\n\n        const items = this.downloads.get(id);\n        if (!items) return;\n\n        this.downloads.delete(id);\n\n        const store = this.getStore();\n\n        items.forEach(item => {\n            switch (item['@type']) {\n                case 'animation': {\n                    this.handleAnimation(store, item, file, arr, null);\n                    break;\n                }\n                case 'audio': {\n                    this.handleAudio(store, item, file, arr, null);\n                    break;\n                }\n                case 'chat': {\n                    this.handleChat(store, item, file, arr);\n                    break;\n                }\n                case 'document': {\n                    this.handleDocument(store, item, file, arr, null);\n                    break;\n                }\n                case 'game': {\n                    this.handleGame(store, item, file, arr, null);\n                    break;\n                }\n                case 'location': {\n                    this.handleLocation(store, item, file, arr, null);\n                    break;\n                }\n                case 'message': {\n                    this.handleMessage(store, item, file, arr);\n                    break;\n                }\n                case 'pageBlockMap': {\n                    this.handlePageBlockMap(store, item, file, arr, null);\n                    break;\n                }\n                case 'photo': {\n                    this.handlePhoto(store, item, file, arr, null);\n                    break;\n                }\n                case 'sticker': {\n                    this.handleSticker(store, item, file, arr, null);\n                    break;\n                }\n                case 'video': {\n                    this.handleVideo(store, item, file, arr, null);\n                    break;\n                }\n                case 'videoNote': {\n                    this.handleVideoNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'voiceNote': {\n                    this.handleVoiceNote(store, item, file, arr, null);\n                    break;\n                }\n                case 'user': {\n                    this.handleUser(store, item, file, arr);\n                    break;\n                }\n                default:\n                    console.error('FileStore.onUpdateFile unhandled item', item);\n                    break;\n            }\n        });\n    };\n\n    handleUploads = file => {\n        const { id, remote } = file;\n        delete file.arr;\n\n        if (!this.uploads.has(id)) return;\n        if (remote.is_uploading_completed) return;\n\n        this.uploads.delete(id);\n    };\n\n    handleChat = (store, chat, file, arr) => {\n        if (!chat) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateChatPhotoBlob(chat.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, chat)\n        );\n    };\n\n    handleUser = (store, user, file, arr) => {\n        if (!user) return;\n\n        this.getLocalFile(\n            store,\n            file,\n            arr,\n            () => this.updateUserPhotoBlob(user.id, file.id),\n            () => this.getRemoteFile(file.id, FILE_PRIORITY, user)\n        );\n    };\n\n    handleMessage = (store, message, file, arr) => {\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.handleAnimation(store, animation, file, arr, message);\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n\n                this.handleAudio(store, audio, file, arr, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.handleDocument(store, document, file, arr, message);\n                break;\n            }\n            case 'messageGame': {\n                const { game } = content;\n\n                this.handleGame(store, game, file, arr, message);\n                break;\n            }\n            case 'messageLocation': {\n                const { location } = content;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.handlePhoto(store, photo, file, arr, message);\n                break;\n            }\n            case 'messageSticker': {\n                const { sticker } = content;\n\n                this.handleSticker(store, sticker, file, arr, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) break;\n\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    this.handleAnimation(store, animation, file, arr, message);\n                }\n\n                if (audio) {\n                    this.handleAudio(store, audio, file, arr, message);\n                }\n\n                if (document) {\n                    this.handleDocument(store, document, file, arr, message);\n                }\n\n                if (photo) {\n                    this.handlePhoto(store, photo, file, arr, message);\n                }\n\n                if (sticker) {\n                    this.handleSticker(store, sticker, file, arr, message);\n                }\n\n                if (video) {\n                    this.handleVideo(store, video, file, arr, message);\n                }\n\n                if (voice_note) {\n                    this.handleVoiceNote(store, voice_note, file, arr, message);\n                }\n\n                if (video_note) {\n                    this.handleVideoNote(store, video_note, file, arr, message);\n                }\n\n                break;\n            }\n            case 'messageVenue': {\n                const { venue } = content;\n                const { location } = venue;\n\n                this.handleLocation(store, location, file, arr, message);\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.handleVideo(store, video, file, arr, message);\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n\n                this.handleVideoNote(store, video_note, file, arr, message);\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n\n                this.handleVoiceNote(store, voice_note, file, arr, message);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    handleAnimation = (store, animation, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (animation.thumbnail) {\n            const source = animation.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || animation)\n                );\n            }\n        }\n\n        if (animation.animation) {\n            const source = animation.animation;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAnimationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || animation)\n                );\n            }\n        }\n    };\n\n    handleAudio = (store, audio, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (audio.album_cover_thumbnail) {\n            const source = audio.album_cover_thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || audio)\n                );\n            }\n        }\n\n        if (audio.audio) {\n            const source = audio.audio;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateAudioBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || audio)\n                );\n            }\n        }\n    };\n\n    handleGame = (store, game, file, arr, message) => {\n        if (!game) return;\n\n        const { animation, photo } = game;\n        if (photo) {\n            this.handlePhoto(store, photo, file, arr, message);\n        }\n\n        if (animation) {\n            this.handleAnimation(store, animation, file, arr, message);\n        }\n    };\n\n    handleDocument = (store, document, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (document.thumbnail) {\n            const { photo: source } = document.thumbnail;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || document)\n                );\n            }\n        }\n\n        if (document.document) {\n            const { document: source } = document;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateDocumentBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || document)\n                );\n            }\n        }\n    };\n\n    handleLocation = (store, location, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const locationId = getLocationId(location);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || location)\n                );\n            }\n        }\n    };\n\n    handlePageBlockMap = (store, pageBlockMap, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        const { location } = pageBlockMap;\n        const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n        if (locationId) {\n            const source = this.getLocationFile(locationId);\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateLocationBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || pageBlockMap)\n                );\n            }\n        }\n    };\n\n    handlePhoto = (store, photo, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (photo) {\n            for (let i = 0; i < photo.sizes.length; i++) {\n                const photoSize = photo.sizes[i];\n                if (photoSize) {\n                    const source = photoSize.photo;\n                    if (source && source.id === file.id) {\n                        this.getLocalFile(\n                            store,\n                            source,\n                            arr,\n                            () => this.updatePhotoBlob(chatId, messageId, file.id),\n                            () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || photo)\n                        );\n                        break;\n                    }\n                }\n            }\n        }\n    };\n\n    handleSticker = (store, sticker, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (sticker.thumbnail) {\n            const source = sticker.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || sticker)\n                );\n            }\n        }\n\n        if (sticker.sticker) {\n            const source = sticker.sticker;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateStickerBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || sticker)\n                );\n            }\n        }\n    };\n\n    handleVoiceNote = (store, voiceNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (voiceNote.voice) {\n            const source = voiceNote.voice;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVoiceNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || voiceNote)\n                );\n            }\n        }\n    };\n\n    handleVideoNote = (store, videoNote, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (videoNote.thumbnail) {\n            const source = videoNote.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n\n        if (videoNote.video) {\n            const source = videoNote.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoNoteBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || videoNote)\n                );\n            }\n        }\n    };\n\n    handleVideo = (store, video, file, arr, obj) => {\n        const chatId = obj ? obj.chat_id : 0;\n        const messageId = obj ? obj.id : 0;\n\n        if (video.thumbnail) {\n            const source = video.thumbnail.photo;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoThumbnailBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, THUMBNAIL_PRIORITY, obj || video)\n                );\n            }\n        }\n\n        if (video.video) {\n            const source = video.video;\n            if (source && source.id === file.id) {\n                this.getLocalFile(\n                    store,\n                    source,\n                    arr,\n                    () => this.updateVideoBlob(chatId, messageId, file.id),\n                    () => this.getRemoteFile(file.id, FILE_PRIORITY, obj || video)\n                );\n            }\n        }\n    };\n\n    async initDB(callback) {\n        /*if (this.store) return;\n            if (this.initiatingDB) return;\n\n            this.initiatingDB = true;\n            this.store = localForage.createInstance({\n                name: 'tdlib'\n            });\n            this.initiatingDB = false;\n\n            return;*/\n        if (this.db) {\n            // console.log('[FileStore] db exists');\n            if (callback) callback();\n            return;\n        }\n\n        if (this.initiatingDB) {\n            // console.log('[FileStore] add callback');\n            if (callback) this.callbacks.push(callback);\n            return;\n        }\n\n        // console.log('[FileStore] start initDB');\n        if (callback) this.callbacks.push(callback);\n\n        this.initiatingDB = true;\n        this.db = await this.openDB().catch(error => console.log('[FileStore] initDB error', error));\n        this.initiatingDB = false;\n\n        // console.log('[FileStore] stop initDB');\n\n        if (this.callbacks.length) {\n            // console.log('[FileStore] invoke callbacks count=' + this.callbacks.length);\n            for (let i = 0; i < this.callbacks.length; i++) {\n                this.callbacks[i]();\n            }\n            this.callbacks = [];\n        }\n    }\n\n    openDB() {\n        return new Promise((resolve, reject) => {\n            const request = window.indexedDB.open('tdlib');\n            request.onsuccess = () => resolve(request.result);\n            request.onerror = () => reject(request.error);\n        });\n    }\n\n    getStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        //console.log('FileStore.getStore ' + this.transactionCount++);\n        return this.db.transaction(['keyvaluepairs'], 'readonly').objectStore('keyvaluepairs');\n    }\n\n    getReadWriteStore() {\n        if (useReadFile) {\n            return undefined;\n        }\n\n        return this.db.transaction(['keyvaluepairs'], 'readwrite').objectStore('keyvaluepairs');\n    }\n\n    deleteLocalFile = (store, file) => {};\n\n    getLocalFile(store, file, arr, callback, faultCallback) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        if (useReadFile) {\n            file = this.get(file.id) || file;\n            if (file && file.local && !file.local.is_downloading_completed) {\n                faultCallback();\n                return;\n            }\n\n            (async file => {\n                // console.log('[fs] readFile file_id=' + file.id);\n                const response = await TdLibController.send({\n                    '@type': 'readFile',\n                    file_id: file.id\n                });\n\n                // console.log(`[fs] readFile result file_id=${file.id}`, file, response);\n                this.setBlob(file.id, response.data);\n            })(file).then(callback, faultCallback);\n\n            return;\n        }\n\n        let idb_key = file.idb_key;\n        if (!idb_key) {\n            file = this.get(file.id) || file;\n            idb_key = file.idb_key;\n        }\n\n        if (!idb_key && !arr) {\n            faultCallback();\n            return;\n        }\n\n        if (arr) {\n            file.blob = new Blob([arr]);\n            this.setBlob(file.id, file.blob);\n            callback();\n            return;\n        }\n\n        if (file.blob) {\n            //callback();\n            return;\n        }\n\n        // if (this.getBlob(file.id)){\n        //     return;\n        // }\n\n        const request = store.get(idb_key);\n        request.onsuccess = event => {\n            const blob = event.target.result;\n\n            if (blob) {\n                file.blob = blob;\n                this.setBlob(file.id, file.blob);\n                callback();\n            } else {\n                faultCallback();\n            }\n        };\n        request.onerror = () => {\n            faultCallback();\n        };\n    }\n\n    getRemoteFile(fileId, priority, obj) {\n        if (!useDownloadFile) {\n            return;\n        }\n\n        const items = this.downloads.get(fileId) || [];\n        if (items.some(x => x === obj)) return;\n\n        items.push(obj);\n        this.downloads.set(fileId, items);\n\n        TdLibController.send({\n            '@type': 'downloadFile',\n            file_id: fileId,\n            priority: priority\n        });\n    }\n\n    cancelGetRemoteFile(fileId, obj) {\n        if (!this.downloads.has(fileId)) return;\n\n        if (!obj) {\n            this.downloads.delete(fileId);\n        } else {\n            const items = this.downloads.get(fileId).filter(x => x !== obj);\n            this.downloads.set(fileId, items);\n        }\n\n        TdLibController.send({\n            '@type': 'cancelDownloadFile',\n            file_id: fileId,\n            only_if_pending: false\n        });\n    }\n\n    uploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            let items = this.uploads.get(fileId);\n            items.push(obj);\n        } else {\n            this.uploads.set(fileId, [obj]);\n        }\n\n        console.log('[perf] uploadFile file_id=' + fileId);\n    }\n\n    cancelUploadFile(fileId, obj) {\n        if (this.uploads.has(fileId)) {\n            this.uploads.delete(fileId);\n            console.log('cancel_upload_message id=' + obj.id);\n            TdLibController.send({\n                '@type': 'deleteMessages',\n                chat_id: obj.chat_id,\n                message_ids: [obj.id],\n                revoke: true\n            });\n        }\n    }\n\n    get = fileId => {\n        return this.items.get(fileId);\n    };\n\n    set = file => {\n        this.items.set(file.id, file);\n    };\n\n    getBlob = fileId => {\n        return this.blobItems.get(fileId);\n    };\n\n    setBlob = (fileId, blob) => {\n        this.blobItems.set(fileId, blob);\n    };\n\n    deleteBlob = fileId => {\n        this.blobItems.delete(fileId);\n    };\n\n    getLocationFile = locationId => {\n        const fileId = this.locationItems.get(locationId);\n\n        return this.get(fileId);\n    };\n\n    setLocationFile = (locationId, file) => {\n        this.locationItems.set(locationId, file.id);\n\n        this.set(file);\n    };\n\n    getDataUrl = id => {\n        if (!id) {\n            return null;\n        }\n\n        if (this.dataUrls.has(id)) {\n            return this.dataUrls.get(id);\n        }\n\n        return null;\n    };\n\n    setDataUrl = (id, dataUrl) => {\n        this.dataUrls.set(id, dataUrl);\n    };\n\n    deleteDataUrl = id => {\n        this.dataUrls.delete(id);\n    };\n\n    getBlobUrl = blob => {\n        if (!blob) {\n            return null;\n        }\n\n        if (this.urls.has(blob)) {\n            return this.urls.get(blob);\n        }\n\n        const url = URL.createObjectURL(blob);\n        this.urls.set(blob, url);\n\n        return url;\n    };\n\n    deleteBlobUrl = blob => {\n        if (this.urls.has(blob)) {\n            this.urls.delete(blob);\n        }\n    };\n\n    updatePhotoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdatePhotoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioThumbnailBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioThumbnailBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAudioBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateAudioBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVoiceNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVoiceNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoNoteBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoNoteBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateAnimationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateAnimationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentBlob = (chatId, messageId, fileId) => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDocumentBlob',\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateVideoBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateVideoBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateStickerBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateStickerBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateLocationBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateLocationBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateDocumentThumbnailBlob = (chatId, messageId, fileId) => {\n        this.emit('clientUpdateDocumentThumbnailBlob', {\n            chatId: chatId,\n            messageId: messageId,\n            fileId: fileId\n        });\n    };\n\n    updateUserPhotoBlob(userId, fileId) {\n        this.emit('clientUpdateUserBlob', {\n            userId: userId,\n            fileId: fileId\n        });\n    }\n\n    updateChatPhotoBlob(chatId, fileId) {\n        this.emit('clientUpdateChatBlob', {\n            chatId: chatId,\n            fileId: fileId\n        });\n    }\n}\n\nconst store = new FileStore();\nwindow.file = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getPhotoSize, getPhotoThumbnailSize, getSize } from './Common';\nimport { getChatUserId } from './Chat';\nimport { getProfilePhoto } from './User';\nimport { getLocationId } from './Message';\nimport {\n    FILE_PRIORITY,\n    IV_LOCATION_HEIGHT,\n    IV_LOCATION_WIDTH,\n    IV_PHOTO_SIZE,\n    LOCATION_HEIGHT,\n    LOCATION_SCALE,\n    LOCATION_WIDTH,\n    LOCATION_ZOOM,\n    PHOTO_BIG_SIZE,\n    PHOTO_SIZE,\n    PRELOAD_ANIMATION_SIZE,\n    PRELOAD_AUDIO_SIZE,\n    PRELOAD_DOCUMENT_SIZE,\n    PRELOAD_STICKER_SIZE,\n    PRELOAD_VIDEO_SIZE,\n    PRELOAD_VIDEONOTE_SIZE,\n    PRELOAD_VOICENOTE_SIZE,\n    THUMBNAIL_PRIORITY\n} from '../Constants';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nfunction getSizeString(size) {\n    if (!size) return `0 B`;\n\n    if (size < 1024) {\n        return `${size} B`;\n    }\n\n    if (size < 1024 * 1024) {\n        return `${(size / 1024).toFixed(1)} KB`;\n    }\n\n    if (size < 1024 * 1024 * 1024) {\n        return `${(size / 1024 / 1024).toFixed(1)} MB`;\n    }\n\n    return `${(size / 1024 / 1024 / 1024).toFixed(1)} GB`;\n}\n\nfunction getFileSize(file) {\n    if (!file) return '';\n\n    let size = file.size;\n    if (!size) return '';\n\n    return getSizeString(size);\n}\n\nfunction getBigPhoto(photo) {\n    if (!photo) return null;\n\n    return photo.big;\n}\n\nfunction saveData(data, filename, mime) {\n    let blob = new Blob([data], { type: mime || 'application/octet-stream' });\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nfunction saveBlob(blob, filename) {\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    } else {\n        let blobURL = window.URL.createObjectURL(blob);\n        let tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n        document.body.removeChild(tempLink);\n        window.URL.revokeObjectURL(blobURL);\n    }\n}\n\nasync function loadReplies(store, chatId, messageIds) {\n    if (!chatId) return;\n    if (!messageIds) return;\n    if (!messageIds.length) return;\n\n    const result = await TdLibController.send({\n        '@type': 'getMessages',\n        chat_id: chatId,\n        message_ids: messageIds\n    });\n\n    result.messages = result.messages.map((message, i) => {\n        return (\n            message || {\n                '@type': 'deletedMessage',\n                chat_id: chatId,\n                id: messageIds[i],\n                content: null\n            }\n        );\n    });\n\n    MessageStore.setItems(result.messages);\n\n    for (let i = messageIds.length - 1; i >= 0; i--) {\n        MessageStore.emit('getMessageResult', MessageStore.get(chatId, messageIds[i]));\n    }\n\n    store = FileStore.getStore();\n\n    loadReplyContents(store, result.messages);\n}\n\nfunction loadReplyContents(store, messages) {\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) break;\n\n                    const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n\n                    if (photo) {\n                        loadPhotoContent(store, photo, message);\n                        break;\n                    }\n\n                    if (animation) {\n                        loadAnimationThumbnailContent(store, animation, message);\n                        break;\n                    }\n\n                    if (audio) {\n                        loadAudioThumbnailContent(store, audio, message);\n                        break;\n                    }\n\n                    if (document) {\n                        loadDocumentThumbnailContent(store, document, message);\n                        break;\n                    }\n\n                    if (sticker) {\n                        loadStickerThumbnailContent(store, sticker, message);\n                        break;\n                    }\n\n                    if (video) {\n                        loadVideoThumbnailContent(store, video, message);\n                        break;\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteThumbnailContent(store, video_note, message);\n                        break;\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadAudioContent(store, audio, message, useFileSize = true) {\n    if (!audio) return;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_AUDIO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || audio);\n            }\n        }\n    );\n}\n\nfunction loadAudioThumbnailContent(store, audio, message) {\n    if (!audio) return false;\n\n    const { album_cover_thumbnail: photoSize } = audio;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAudioThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || audio)\n    );\n\n    return true;\n}\n\nfunction loadAnimationContent(store, animation, message, useFileSize = true) {\n    if (!animation) return;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_ANIMATION_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || animation);\n            }\n        }\n    );\n}\n\nfunction loadAnimationThumbnailContent(store, animation, message) {\n    if (!animation) return false;\n\n    const { thumbnail: photoSize } = animation;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateAnimationThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || animation)\n    );\n\n    return true;\n}\n\nfunction loadContactContent(store, contact, message) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { user_id } = contact;\n    const user = UserStore.get(user_id);\n    if (!user) return;\n\n    loadUserContent(store, user);\n}\n\nfunction loadDocumentContent(store, document, message, useFileSize = true) {\n    if (!document) return;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_DOCUMENT_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || document);\n            }\n        }\n    );\n}\n\nfunction loadDocumentThumbnailContent(store, document, message) {\n    if (!document) return false;\n\n    const { thumbnail: photoSize } = document;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateDocumentThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || document)\n    );\n\n    return true;\n}\n\nfunction loadGameContent(store, game, message, useFileSize = true) {\n    if (!game) return;\n\n    const { animation } = game;\n\n    loadAnimationContent(store, animation, message, useFileSize);\n}\n\nfunction loadGameThumbnailContent(store, game, message) {\n    if (!game) return false;\n\n    const { photo, animation } = game;\n    if (loadAnimationThumbnailContent(store, animation, message)) {\n        return true;\n    }\n\n    loadPhotoContent(store, photo, message);\n    return true;\n}\n\nasync function loadPageBlockMapContent(store, pageBlockMap, message) {\n    if (!pageBlockMap) return;\n\n    const { location } = pageBlockMap;\n    const locationId = getLocationId(location, IV_LOCATION_WIDTH, IV_LOCATION_HEIGHT);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: IV_LOCATION_WIDTH,\n            height: IV_LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || pageBlockMap)\n    );\n}\n\nasync function loadLocationContent(store, location, message) {\n    if (!location) return;\n\n    const locationId = getLocationId(location);\n    if (!locationId) return;\n\n    let file = FileStore.getLocationFile(locationId);\n    if (!file) {\n        file = await TdLibController.send({\n            '@type': 'getMapThumbnailFile',\n            location,\n            width: LOCATION_WIDTH,\n            height: LOCATION_HEIGHT,\n            zoom: LOCATION_ZOOM,\n            scale: LOCATION_SCALE,\n            chat_id: message ? message.chat_id : 0\n        });\n        FileStore.setLocationFile(locationId, file);\n\n        store = FileStore.getStore();\n    }\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(file.id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateLocationBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || location)\n    );\n}\n\nfunction loadBigPhotoContent(store, photo, message) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getSize(sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoContent(store, photo, message, displaySize = PHOTO_SIZE) {\n    if (!photo) return;\n\n    const { sizes } = photo;\n    if (!sizes) return;\n\n    const photoSize = getPhotoSize(sizes, displaySize);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, FILE_PRIORITY, message || photo)\n    );\n}\n\nfunction loadPhotoThumbnailContent(store, photo, message) {\n    if (!photo) return false;\n    if (!message) return false;\n\n    const thumbSize = getPhotoThumbnailSize(photo.sizes);\n    if (!thumbSize) return false;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (photoSize === thumbSize) return;\n\n    let { photo: file } = thumbSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updatePhotoBlob(message.chat_id, message.id, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message)\n    );\n\n    return true;\n}\n\nfunction loadStickerContent(store, sticker, message, useFileSize = true) {\n    if (!sticker) return;\n\n    let { sticker: file } = sticker;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_STICKER_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || sticker);\n            }\n        }\n    );\n}\n\nfunction loadStickerThumbnailContent(store, sticker, message) {\n    if (!sticker) return false;\n\n    const { thumbnail: photoSize } = sticker;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateStickerThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || sticker)\n    );\n\n    return true;\n}\n\nfunction loadVideoContent(store, video, message, useFileSize = true) {\n    if (!video) return;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEO_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || video);\n            }\n        }\n    );\n}\n\nfunction loadVideoThumbnailContent(store, video, message) {\n    if (!video) return false;\n\n    const { thumbnail: photoSize } = video;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || video)\n    );\n\n    return true;\n}\n\nfunction loadVideoNoteContent(store, videoNote, message, useFileSize = true) {\n    if (!videoNote) return;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VIDEONOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || videoNote);\n            }\n        }\n    );\n}\n\nfunction loadVideoNoteThumbnailContent(store, videoNote, message) {\n    if (!videoNote) return false;\n\n    const { thumbnail: photoSize } = videoNote;\n    if (!photoSize) return false;\n\n    let { photo: file } = photoSize;\n    if (!file) return false;\n\n    file = FileStore.get(file.id) || file;\n    const { id } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return true;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVideoNoteThumbnailBlob(chatId, messageId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, message || videoNote)\n    );\n\n    return true;\n}\n\nfunction loadVoiceNoteContent(store, voiceNote, message, useFileSize = true) {\n    if (!voiceNote) return;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    const { id, size } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) return;\n\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateVoiceNoteBlob(chatId, messageId, id),\n        () => {\n            if (!useFileSize || (size && size < PRELOAD_VOICENOTE_SIZE)) {\n                FileStore.getRemoteFile(id, FILE_PRIORITY, message || voiceNote);\n            }\n        }\n    );\n}\n\nfunction loadMessageContents(store, messages) {\n    const users = new Map();\n    let chatId = 0;\n    const replies = new Map();\n\n    for (let i = messages.length - 1; i >= 0; i--) {\n        const message = messages[i];\n        if (!message) {\n            continue;\n        }\n\n        const { chat_id, content, sender_user_id, reply_to_message_id } = message;\n\n        if (sender_user_id) {\n            users.set(sender_user_id, sender_user_id);\n        }\n\n        if (reply_to_message_id) {\n            chatId = chat_id;\n            replies.set(reply_to_message_id, reply_to_message_id);\n        }\n\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n\n                    loadAudioContent(store, audio, message);\n                    loadAudioThumbnailContent(store, audio, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadPhotoContent(store, photo, message);\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageContact': {\n                    const { contact } = content;\n\n                    loadContactContent(store, contact, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message);\n                    loadDocumentThumbnailContent(store, document, message);\n                    break;\n                }\n                case 'messageGame': {\n                    const { game } = content;\n\n                    loadGameContent(store, game, message);\n                    loadGameThumbnailContent(store, game, message);\n                    break;\n                }\n                case 'messageLocation': {\n                    const { location } = content;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (audio) {\n                        loadAudioContent(store, audio, message);\n                        loadPhoto = !loadAudioThumbnailContent(store, audio, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message);\n                        loadPhoto = !loadDocumentThumbnailContent(store, document, message);\n                    }\n\n                    if (sticker) {\n                        loadStickerContent(store, sticker, message);\n                        loadPhoto = !loadStickerThumbnailContent(store, sticker, message);\n                    }\n\n                    if (video) {\n                        // loadVideoContent(store, video, message); // start loading only on video click event\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (video_note) {\n                        loadVideoNoteContent(store, video_note, message);\n                        loadPhoto = !loadVideoNoteThumbnailContent(store, video_note, message);\n                    }\n\n                    if (voice_note) {\n                        loadVoiceNoteContent(store, voice_note, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                        loadPhotoContent(store, photo, message);\n                        loadPhotoThumbnailContent(store, photo, message);\n                    }\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    loadPhotoContent(store, photo, message);\n                    loadPhotoThumbnailContent(store, photo, message);\n                    break;\n                }\n                case 'messageSticker': {\n                    const { sticker } = content;\n\n                    loadStickerContent(store, sticker, message);\n                    loadStickerThumbnailContent(store, sticker, message);\n                    break;\n                }\n                case 'messageVenue': {\n                    const { venue } = content;\n                    const { location } = venue;\n\n                    loadLocationContent(store, location, message);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    // loadVideoContent(store, video, message); // start loading only on video click event\n                    loadVideoThumbnailContent(store, video, message);\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n\n                    loadVideoNoteContent(store, video_note, message);\n                    loadVideoNoteThumbnailContent(store, video_note, message);\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n\n                    loadVoiceNoteContent(store, voice_note, message);\n                    break;\n                }\n                default: {\n                    break;\n                }\n            }\n        }\n    }\n\n    loadUsersContent(store, [...users.keys()]);\n    loadReplies(store, chatId, [...replies.keys()]);\n}\n\nexport function saveMedia(media, message) {\n    if (!media) return;\n\n    switch (media['@type']) {\n        case 'animation': {\n            saveAnimation(media, message);\n            break;\n        }\n        case 'document': {\n            saveDocument(media, message);\n            break;\n        }\n        case 'photo': {\n            savePhoto(media, message);\n            break;\n        }\n        case 'video': {\n            saveVideo(media, message);\n            break;\n        }\n    }\n}\n\nfunction saveAnimation(animation, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!animation) return;\n\n    const { animation: file, file_name } = animation;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || animation, () =>\n        FileStore.updateAnimationBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveDocument(document, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!document) return;\n\n    const { document: file, file_name } = document;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || document, () =>\n        FileStore.updateDocumentBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction saveVideo(video, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!video) return;\n\n    const { video: file, file_name } = video;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, file_name || fileId, message || video, () =>\n        FileStore.updateVideoBlob(chatId, messageId, fileId)\n    );\n}\n\nfunction savePhoto(photo, message) {\n    const chatId = message ? message.chat_id : 0;\n    const messageId = message ? message.id : 0;\n\n    if (!photo) return;\n\n    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n    if (!photoSize) return;\n\n    const { photo: file } = photoSize;\n    if (!file) return;\n\n    const { id: fileId } = file;\n\n    saveOrDownload(file, fileId + '.jpg', message || photo, () => FileStore.updatePhotoBlob(chatId, messageId, fileId));\n}\n\nfunction saveOrDownload(file, fileName, obj, callback) {\n    if (!file) return;\n    if (!fileName) return;\n\n    if (file.arr) {\n        saveData(file.arr, fileName);\n        return;\n    }\n\n    let blob = FileStore.getBlob(file.id) || file.blob;\n    if (blob) {\n        saveBlob(blob, fileName);\n        return;\n    }\n\n    download(file, obj, () => {\n        if (callback) callback();\n\n        blob = FileStore.getBlob(file.id) || file.blob;\n        if (blob) {\n            saveBlob(blob, fileName);\n        }\n    });\n}\n\nfunction download(file, obj, callback) {\n    if (!file) return;\n    const { id, local } = file;\n\n    const blob = FileStore.getBlob(id);\n    if (blob) {\n        return;\n    }\n\n    if (local.is_downloading_completed) {\n        const store = FileStore.getStore();\n\n        FileStore.getLocalFile(store, file, null, callback, () => {\n            if (local.can_be_downloaded) {\n                FileStore.getRemoteFile(file.id, FILE_PRIORITY, obj);\n            }\n        });\n        return;\n    }\n\n    if (local.can_be_downloaded) {\n        FileStore.getRemoteFile(id, FILE_PRIORITY, obj);\n    }\n}\n\nfunction getViewerThumbnail(media) {\n    if (!media) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'document': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        case 'photo': {\n            return getViewerFile(media, PHOTO_SIZE);\n        }\n        case 'video': {\n            const { thumbnail } = media;\n            if (thumbnail) {\n                return [thumbnail.width, thumbnail.height, thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaPreviewFile(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation && animation.thumbnail) {\n                return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            return getMediaFile(chatId, messageId, PHOTO_SIZE);\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, video, photo } = web_page;\n\n                if (animation && animation.thumbnail) {\n                    return [animation.thumbnail.width, animation.thumbnail.height, animation.thumbnail.photo];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (video && video.thumbnail) {\n                    return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n                }\n\n                if (photo) {\n                    return getMediaFile(chatId, messageId, PHOTO_SIZE);\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video.thumbnail) {\n                return [video.thumbnail.width, video.thumbnail.height, video.thumbnail.photo];\n            }\n            break;\n        }\n        default: {\n            return [0, 0, null];\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getViewerFile(media, size) {\n    if (!size) return [0, 0, null];\n\n    switch (media['@type']) {\n        case 'animation': {\n            return [media.width, media.height, media.animation];\n        }\n        case 'photo': {\n            const photoSize = getSize(media.sizes, size);\n            if (photoSize) {\n                return [photoSize.width, photoSize.height, photoSize.photo];\n            }\n            break;\n        }\n        case 'document': {\n            return [50, 50, document.document];\n        }\n        case 'video': {\n            return [media.width, media.height, media.video];\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction getMediaFile(chatId, messageId, size) {\n    if (!size) return [0, 0, null];\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return [0, 0, null];\n\n    const { content } = message;\n    if (!content) return [0, 0, null];\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                return [animation.width, animation.height, animation.animation];\n            }\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                return [50, 50, document.document];\n            }\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                const photoSize = getSize(photo.sizes, size);\n                if (photoSize) {\n                    return [photoSize.width, photoSize.height, photoSize.photo];\n                }\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, document, photo, video } = web_page;\n                if (animation) {\n                    return [animation.width, animation.height, animation.animation];\n                }\n\n                if (document) {\n                    return [50, 50, document.document];\n                }\n\n                if (photo) {\n                    const photoSize = getSize(photo.sizes, size);\n                    if (photoSize) {\n                        return [photoSize.width, photoSize.height, photoSize.photo];\n                    }\n                    break;\n                }\n\n                if (video) {\n                    return [video.width, video.height, video.video];\n                }\n            }\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                return [video.width, video.height, video.video];\n            }\n            break;\n        }\n        default: {\n        }\n    }\n\n    return [0, 0, null];\n}\n\nfunction cancelLoadMediaViewerContent(messages) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messagePhoto': {\n                    const { photo } = content;\n                    if (!photo) break;\n\n                    // preview\n                    /*let [previewId, previewPid, previewIdbKey] = getPhotoPreviewFile(message);\n                    if (previewPid) {\n                        let preview = this.getPreviewPhotoSize(message.content.photo.sizes);\n                        if (!preview.blob){\n                            FileStore.getLocalFile(store, preview, null,\n                                () => MessageStore.updateMessagePhoto(message.id),\n                                () => { if (loadRemote)  FileStore.getRemoteFile(previewId, 2, message); },\n                                'load_contents_preview_',\n                                message.id);\n\n                        }\n                    }*/\n\n                    const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n                    if (!photoSize) break;\n\n                    const { photo: file } = photoSize;\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) return;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n                    if (!video) break;\n\n                    if (video.thumbnail) {\n                        const { photo: file } = video.thumbnail;\n                        const blob = file.blob || FileStore.getBlob(file.id);\n                        if (blob) break;\n\n                        FileStore.cancelGetRemoteFile(file.id);\n                    }\n\n                    const { video: file } = video;\n                    if (!file) break;\n\n                    const blob = file.blob || FileStore.getBlob(file.id);\n                    if (blob) break;\n\n                    FileStore.cancelGetRemoteFile(file.id);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (web_page) {\n                        const { video } = web_page;\n\n                        if (video) {\n                            if (video.thumbnail) {\n                                const { photo: file } = video.thumbnail;\n                                const blob = file.blob || FileStore.getBlob(file.id);\n                                if (blob) break;\n\n                                FileStore.cancelGetRemoteFile(file.id);\n                            }\n\n                            const { video: file } = video;\n                            if (!file) break;\n\n                            const blob = file.blob || FileStore.getBlob(file.id);\n                            if (blob) break;\n\n                            FileStore.cancelGetRemoteFile(file.id);\n                        }\n                    }\n\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction loadMediaViewerContent(messages, useSizeLimit = false) {\n    if (!messages) return;\n    if (!messages.length) return;\n\n    const store = FileStore.getStore();\n\n    for (let i = 0; i < messages.length; i++) {\n        let message = messages[i];\n        const { content } = message;\n        if (content) {\n            switch (content['@type']) {\n                case 'messageAnimation': {\n                    const { animation } = content;\n\n                    loadAnimationContent(store, animation, message, useSizeLimit);\n                    loadAnimationThumbnailContent(store, animation, message);\n                    break;\n                }\n                case 'messageChatChangePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageDocument': {\n                    const { document } = content;\n\n                    loadDocumentContent(store, document, message, useSizeLimit);\n                    break;\n                }\n                case 'messagePhoto': {\n                    const { photo } = content;\n\n                    loadBigPhotoContent(store, photo, message);\n                    break;\n                }\n                case 'messageText': {\n                    const { web_page } = message.content;\n                    if (!web_page) {\n                        break;\n                    }\n\n                    const { animation, document, photo, video } = web_page;\n                    let loadPhoto = true;\n\n                    if (animation) {\n                        loadAnimationContent(store, animation, message, useSizeLimit);\n                        loadPhoto = !loadAnimationThumbnailContent(store, animation, message);\n                    }\n\n                    if (document) {\n                        loadDocumentContent(store, document, message, useSizeLimit);\n                        loadPhoto = false;\n                    }\n\n                    if (video) {\n                        loadVideoContent(store, video, message, useSizeLimit);\n                        loadPhoto = !loadVideoThumbnailContent(store, video, message);\n                    }\n\n                    if (loadPhoto) {\n                        loadBigPhotoContent(store, photo, message);\n                    }\n\n                    break;\n                }\n                case 'messageVideo': {\n                    const { video } = content;\n\n                    loadVideoThumbnailContent(store, video, message);\n                    loadVideoContent(store, video, message, useSizeLimit);\n                    break;\n                }\n            }\n        }\n    }\n}\n\nfunction cancelPreloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    cancelLoadMediaViewerContent([history[index]]);\n    cancelLoadMediaViewerContent(messages);\n}\n\nfunction preloadMediaViewerContent(index, history) {\n    if (!history.length) return;\n\n    const messages = [];\n    if (index > 0) {\n        messages.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        messages.push(history[index + 1]);\n    }\n\n    loadMediaViewerContent([history[index]], false);\n    loadMediaViewerContent(messages, true);\n}\n\nfunction loadUserFileContent(store, file, userId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateUserPhotoBlob(userId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, user)\n    );\n}\n\nfunction loadChatFileContent(store, file, chatId) {\n    if (!file) return;\n\n    const { id } = file;\n    file = FileStore.get(id) || file;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const dataUrl = FileStore.getDataUrl(id);\n    if (dataUrl) return;\n\n    const blob = file.blob || FileStore.getBlob(id);\n    if (blob) return;\n\n    FileStore.getLocalFile(\n        store,\n        file,\n        null,\n        () => FileStore.updateChatPhotoBlob(chatId, id),\n        () => FileStore.getRemoteFile(id, THUMBNAIL_PRIORITY, chat)\n    );\n}\n\nfunction loadProfileMediaViewerContent(chatId, photos) {\n    if (!photos) return;\n\n    const store = FileStore.getStore();\n\n    photos.forEach(photo => {\n        switch (photo['@type']) {\n            case 'chatPhoto': {\n                const { small, big } = photo;\n\n                loadChatFileContent(store, small, chatId);\n                loadChatFileContent(store, big, chatId);\n                break;\n            }\n            case 'profilePhoto': {\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n            case 'userProfilePhoto': {\n                photo = getProfilePhoto(photo);\n                if (!photo) break;\n\n                const userId = getChatUserId(chatId);\n\n                const { small, big } = photo;\n\n                loadUserFileContent(store, small, userId);\n                loadUserFileContent(store, big, userId);\n                break;\n            }\n        }\n    });\n}\n\nfunction preloadProfileMediaViewerContent(chatId, index, history) {\n    if (!history.length) return;\n\n    const items = [];\n    if (index > 0) {\n        items.push(history[index - 1]);\n    }\n    if (index < history.length - 1) {\n        items.push(history[index + 1]);\n    }\n    if (index >= 0 && index < history.length) {\n        items.push(history[index]);\n    }\n\n    loadProfileMediaViewerContent(chatId, items);\n}\n\nfunction loadUserContent(store, userId) {\n    const user = UserStore.get(userId);\n    if (!user) return;\n\n    const { profile_photo } = user;\n    if (!profile_photo) return;\n\n    const { small: file } = profile_photo;\n\n    loadUserFileContent(store, file, userId);\n}\n\nfunction loadUsersContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadUserContent(store, id));\n}\n\nfunction loadChatContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { photo } = chat;\n    loadChatPhotoContent(store, photo, chat.id);\n}\n\nfunction loadChatPhotoContent(store, photo, chatId) {\n    if (!photo) return;\n\n    const { small: file } = photo;\n\n    loadChatFileContent(store, file, chatId);\n}\n\nfunction loadChatsContent(store, ids) {\n    if (!ids) return;\n\n    ids.forEach(id => loadChatContent(store, id));\n}\n\nfunction loadDraftContent(store, chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { draft_message } = chat;\n    if (!draft_message) return;\n\n    const { reply_to_message_id } = draft_message;\n    if (!reply_to_message_id) return;\n\n    loadReplies(store, chatId, [reply_to_message_id]);\n}\n\nexport function loadRecentStickersContent(store, recent) {\n    if (!recent) return;\n\n    const { stickers } = recent;\n    loadStickersContent(store, stickers);\n}\n\nfunction loadStickerSetContent(store, stickerSet) {\n    if (!stickerSet) return;\n\n    const { stickers } = stickerSet;\n    loadStickersContent(store, stickers);\n}\n\nexport function loadBackgroundsContent(store, backgrounds) {\n    if (!backgrounds) return;\n\n    backgrounds.forEach(background => {\n        loadBackgroundContent(store, background, false);\n    });\n}\n\nexport function loadBackgroundContent(store, background, full = false) {\n    if (!background) return;\n\n    switch (background.type['@type']) {\n        case 'backgroundTypeFill': {\n            break;\n        }\n        case 'backgroundTypePattern': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n        case 'backgroundTypeWallpaper': {\n            const { document } = background;\n            if (document) {\n                loadDocumentThumbnailContent(store, document, null);\n                if (full) loadDocumentContent(store, document, null, false);\n            }\n            break;\n        }\n    }\n}\n\nfunction loadStickersContent(store, stickers) {\n    if (!stickers) return;\n\n    stickers.forEach(sticker => {\n        loadStickerThumbnailContent(store, sticker, null);\n        if (sticker.is_animated) {\n            loadStickerContent(store, sticker, null);\n        }\n    });\n}\n\nfunction isGifMimeType(mimeType) {\n    return mimeType && mimeType.toLowerCase() === 'image/gif';\n}\n\nfunction getSrc(file) {\n    const dataUrl = file && FileStore.getDataUrl(file.id);\n    if (dataUrl) return dataUrl;\n\n    const blob = getBlob(file);\n\n    return FileStore.getBlobUrl(blob) || '';\n}\n\nfunction getBlob(file) {\n    return file ? FileStore.getBlob(file.id) || file.blob : null;\n}\n\nfunction getDownloadedSize(file) {\n    if (!file) return '0';\n    if (!file.local) return '0';\n    if (!file.local.is_downloading_active) return '0';\n\n    return getSizeString(file.local.downloaded_size);\n}\n\nfunction getUploadedSize(file) {\n    if (!file) return '0';\n    if (!file.remote) return '0';\n    if (!file.remote.is_uploading_active) return '0';\n\n    return getSizeString(file.remote.uploaded_size);\n}\n\nfunction getExtension(fileName) {\n    if (!fileName) {\n        return '';\n    }\n\n    const parts = fileName.split('.');\n    if (parts.length === 1 || (parts[0] === '' && parts.length === 2)) {\n        return '';\n    }\n    return parts.pop().toLowerCase();\n}\n\nfunction loadInstantViewContent(instantView) {\n    if (!instantView) return;\n\n    const { page_blocks } = instantView;\n    if (!page_blocks) return;\n\n    const store = FileStore.getStore();\n\n    page_blocks.forEach(pageBlock => loadPageBlockContent(store, pageBlock));\n}\n\nfunction loadPageBlockContent(store, b) {\n    if (!b) return;\n\n    switch (b['@type']) {\n        case 'pageBlockAnchor': {\n            break;\n        }\n        case 'pageBlockAnimation': {\n            const { animation, caption } = b;\n\n            loadAnimationThumbnailContent(store, animation, null);\n            loadAnimationContent(store, animation, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAudio': {\n            const { audio, caption } = b;\n\n            loadAudioThumbnailContent(store, audio, null);\n            loadAudioContent(store, audio, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            const { author } = b;\n\n            loadRichTextContent(store, author);\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockCaption': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockChatLink': {\n            const { photo } = b;\n\n            loadChatPhotoContent(store, photo, 0);\n            break;\n        }\n        case 'pageBlockCollage': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockCover': {\n            const { cover } = b;\n\n            loadPageBlockContent(store, cover);\n            break;\n        }\n        case 'pageBlockDetails': {\n            const { header, page_blocks } = b;\n\n            loadPageBlockContent(store, header);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockDivider': {\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            const { poster_photo, caption } = b;\n\n            loadPhotoContent(store, poster_photo, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            const { author_photo, page_blocks, caption } = b;\n\n            loadPhotoContent(store, author_photo, null);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockFooter': {\n            const { footer } = b;\n\n            loadRichTextContent(store, footer);\n            break;\n        }\n        case 'pageBlockHeader': {\n            const { header } = b;\n\n            loadRichTextContent(store, header);\n            break;\n        }\n        case 'pageBlockKicker': {\n            const { kicker } = b;\n\n            loadRichTextContent(store, kicker);\n            break;\n        }\n        case 'pageBlockList': {\n            const { items } = b;\n\n            items.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockListItem': {\n            const { page_blocks } = b;\n\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockMap': {\n            const { caption } = b;\n\n            loadPageBlockMapContent(store, b, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockParagraph': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPhoto': {\n            const { photo, caption } = b;\n\n            loadPhotoContent(store, photo, null, IV_PHOTO_SIZE);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            const { text, credit } = b;\n\n            loadRichTextContent(store, text);\n            loadRichTextContent(store, credit);\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            const { header, articles } = b;\n\n            loadRichTextContent(store, header);\n            articles.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockRelatedArticle': {\n            const { photo } = b;\n\n            loadPhotoContent(store, photo, null);\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            const { page_blocks, caption } = b;\n\n            loadPageBlockContent(store, caption);\n            page_blocks.forEach(x => loadPageBlockContent(store, x));\n            break;\n        }\n        case 'pageBlockSubheader': {\n            const { subheader } = b;\n\n            loadRichTextContent(store, subheader);\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            const { subtitle } = b;\n\n            loadRichTextContent(store, subtitle);\n            break;\n        }\n        case 'pageBlockTable': {\n            const { caption, cells } = b;\n\n            loadRichTextContent(store, caption);\n            cells.forEach(row => row.forEach(x => loadPageBlockContent(store, x)));\n            break;\n        }\n        // actually not a pageBlock child but load content in the same way\n        case 'pageBlockTableCell': {\n            const { text } = b;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'pageBlockTitle': {\n            const { title } = b;\n\n            loadRichTextContent(store, title);\n            break;\n        }\n        case 'pageBlockVideo': {\n            const { video, caption } = b;\n\n            loadVideoThumbnailContent(store, video, null);\n            loadVideoContent(store, video, null);\n            loadPageBlockContent(store, caption);\n            break;\n        }\n    }\n}\n\nfunction loadRichTextContent(store, t) {\n    if (!t) return;\n\n    switch (t['@type']) {\n        case 'richTextAnchor': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextBold': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextEmailAddress': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextFixed': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextIcon': {\n            const { document } = t;\n\n            loadDocumentThumbnailContent(store, document, null);\n            loadDocumentContent(store, document, null, false);\n            break;\n        }\n        case 'richTextItalic': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextMarked': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextPlain': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTexts': {\n            const { texts } = t;\n\n            texts.forEach(x => loadRichTextContent(store, x));\n            break;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSubscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextSuperscript': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUnderline': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n        case 'richTextUrl': {\n            const { text } = t;\n\n            loadRichTextContent(store, text);\n            break;\n        }\n    }\n}\n\nfunction getAnimationData(file) {\n    return new Promise(resolve => {\n        if (!file) {\n            resolve(null);\n            return;\n        }\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) {\n            resolve(null);\n            return;\n        }\n\n        const fileReader = new FileReader();\n        fileReader.onload = event => resolve(JSON.parse(event.target.result));\n        fileReader.onerror = () => resolve(null);\n        fileReader.onabort = () => resolve(null);\n        fileReader.readAsText(blob);\n    });\n}\n\nexport {\n    getFileSize,\n    getSizeString,\n    saveData,\n    saveBlob,\n    loadMessageContents,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    cancelLoadMediaViewerContent,\n    cancelPreloadMediaViewerContent,\n    loadProfileMediaViewerContent,\n    preloadProfileMediaViewerContent,\n    loadChatContent,\n    loadChatsContent,\n    loadDraftContent,\n    loadInstantViewContent,\n    loadStickerContent,\n    loadStickersContent,\n    loadStickerSetContent,\n    loadStickerThumbnailContent,\n    loadUserContent,\n    loadUsersContent,\n    saveOrDownload,\n    download,\n    getMediaFile,\n    getMediaPreviewFile,\n    isGifMimeType,\n    getSrc,\n    getBlob,\n    getDownloadedSize,\n    getUploadedSize,\n    getExtension,\n    getViewerFile,\n    getViewerThumbnail,\n    getAnimationData\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport dateFormat from '../Utils/Date';\nimport { getUserFullName, getUserShortName, getUserStatus, isUserOnline } from './User';\nimport { getSupergroupStatus } from './Supergroup';\nimport { getBasicGroupStatus } from './BasicGroup';\nimport { getLetters } from './Common';\nimport { getContent } from './Message';\nimport { isServiceMessage } from './ServiceMessage';\nimport { formatPhoneNumber } from './Phone';\nimport { getChannelStatus } from './Channel';\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport BasicGroupStore from '../Stores/BasicGroupStore';\nimport ChatStore from '../Stores/ChatStore';\nimport NotificationStore from '../Stores/NotificationStore';\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function canUnpinMessage(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { pinned_message_id } = chat;\n\n    return pinned_message_id > 0;\n}\n\nexport function isChatArchived(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { chat_list } = chat;\n    if (!chat_list) return false;\n\n    return chat_list['@type'] === 'chatListArchive';\n}\n\nexport function canSetChatChatList(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_sponsored, chat_list } = chat;\n    if (is_sponsored) return false;\n    if (!chat_list) return false;\n\n    if (chat_list['@type'] === 'chatListMain') {\n        if (isMeChat(chatId) || chatId === SERVICE_NOTIFICATIONS_USER_ID) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nexport function draftEquals(draft1, draft2) {\n    if (!draft1 && !draft2) return true;\n    if (draft1 && !draft2) return false;\n    if (draft2 && !draft1) return false;\n\n    const { input_message_text: inputMessageText1, reply_to_message_id: replyToMessageId1 } = draft1;\n    const { input_message_text: inputMessageText2, reply_to_message_id: replyToMessageId2 } = draft2;\n\n    if (replyToMessageId1 !== replyToMessageId2) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== inputMessageText2['@type']) {\n        return false;\n    }\n\n    if (inputMessageText1['@type'] !== 'inputMessageText') {\n        return true;\n    }\n\n    const { text: formattedText1 } = inputMessageText1;\n    const { text: formattedText2 } = inputMessageText2;\n\n    if (!formattedText1 && !formattedText2) return true;\n    if (formattedText1 && !formattedText2) return false;\n    if (formattedText2 && !formattedText1) return false;\n\n    const { text: text1, entities: entities1 } = formattedText1;\n    const { text: text2, entities: entities2 } = formattedText2;\n\n    if (text1 !== text2) {\n        return false;\n    }\n\n    return entitiesEquals(entities1, entities2);\n}\n\nfunction entitiesEquals(entities1, entities2) {\n    if (!entities1 && !entities2) return true;\n    if (entities1 && !entities2) return false;\n    if (entities2 && !entities1) return false;\n\n    if (entities1.length !== entities2.length) {\n        return false;\n    }\n\n    const map = new Map();\n    entities1.forEach(x => {\n        map.set(`${x.type['@type']}_${x.offset}_${x.length}`, x);\n    });\n\n    return entities2.every(x => map.has(`${x.type['@type']}_${x.offset}_${x.length}`));\n}\n\nfunction getGroupChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    let size = inputTypingManager.actions.size;\n    if (size > 2) {\n        return `${size} people are typing`;\n    } else if (size > 1) {\n        let firstUser;\n        let secondUser;\n        for (let userId of inputTypingManager.actions.keys()) {\n            if (!firstUser) {\n                firstUser = UserStore.get(userId);\n            } else if (!secondUser) {\n                secondUser = UserStore.get(userId);\n                break;\n            }\n        }\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n        secondUser = secondUser.first_name ? secondUser.first_name : secondUser.second_name;\n\n        if (!firstUser || !secondUser) {\n            return `${size} people are typing`;\n        }\n\n        return `${firstUser} and ${secondUser} are typing`;\n    } else {\n        let firstUser;\n        if (inputTypingManager.actions.size >= 1) {\n            for (let userId of inputTypingManager.actions.keys()) {\n                if (!firstUser) {\n                    firstUser = UserStore.get(userId);\n                    break;\n                }\n            }\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            firstUser = firstUser.first_name ? firstUser.first_name : firstUser.second_name;\n\n            if (!firstUser) {\n                return `1 person is typing`;\n            }\n\n            let action = inputTypingManager.actions.values().next().value.action;\n            switch (action['@type']) {\n                case 'chatActionRecordingVideo':\n                    return `${firstUser} is recording a video`;\n                case 'chatActionRecordingVideoNote':\n                    return `${firstUser} is recording a video message`;\n                case 'chatActionRecordingVoiceNote':\n                    return `${firstUser} is recording a voice message`;\n                case 'chatActionStartPlayingGame':\n                    return `${firstUser} is playing a game`;\n                case 'chatActionUploadingDocument':\n                    return `${firstUser} is sending a file`;\n                case 'chatActionUploadingPhoto':\n                    return `${firstUser} is sending a photo`;\n                case 'chatActionUploadingVideo':\n                    return `${firstUser} is sending a video`;\n                case 'chatActionUploadingVideoNote':\n                    return `${firstUser} is sending a video message`;\n                case 'chatActionUploadingVoiceNote':\n                    return `${firstUser} is sending a voice message`;\n                case 'chatActionChoosingContact':\n                case 'chatActionChoosingLocation':\n                case 'chatActionTyping':\n                default:\n                    return `${firstUser} is typing`;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getPrivateChatTypingString(inputTypingManager) {\n    if (!inputTypingManager) return null;\n\n    if (inputTypingManager.actions.size >= 1) {\n        let action = inputTypingManager.actions.values().next().value.action;\n        switch (action['@type']) {\n            case 'chatActionRecordingVideo':\n                return 'recording a video';\n            case 'chatActionRecordingVideoNote':\n                return 'recording a video message';\n            case 'chatActionRecordingVoiceNote':\n                return 'recording a voice message';\n            case 'chatActionStartPlayingGame':\n                return 'playing a game';\n            case 'chatActionUploadingDocument':\n                return 'sending a file';\n            case 'chatActionUploadingPhoto':\n                return 'sending a photo';\n            case 'chatActionUploadingVideo':\n                return 'sending a video';\n            case 'chatActionUploadingVideoNote':\n                return 'sending a video message';\n            case 'chatActionUploadingVoiceNote':\n                return 'sending a voice message';\n            case 'chatActionChoosingContact':\n            case 'chatActionChoosingLocation':\n            case 'chatActionTyping':\n            default:\n                return 'typing';\n        }\n    }\n\n    return null;\n}\n\nfunction getChatTypingString(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    let typingManager = ChatStore.getTypingManager(chat.id);\n    if (!typingManager) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const typingString = getPrivateChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            const typingString = getGroupChatTypingString(typingManager);\n            return typingString ? typingString + '...' : null;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageSenderFullName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n    if (!message.sender_user_id) return null;\n\n    return getUserFullName(message.sender_user_id, null, t);\n}\n\nfunction getMessageSenderName(message, t = k => k) {\n    if (!message) return null;\n    if (isServiceMessage(message)) return null;\n\n    const chat = ChatStore.get(message.chat_id);\n    if (chat && chat.type['@type'] !== 'chatTypeBasicGroup' && chat.type['@type'] !== 'chatTypeSupergroup') {\n        return null;\n    }\n\n    return getUserShortName(message.sender_user_id, t);\n}\n\nfunction getLastMessageSenderName(chat, t = k => k) {\n    if (!chat) return null;\n\n    return getMessageSenderName(chat.last_message, t);\n}\n\nfunction getLastMessageContent(chat, t = key => key) {\n    if (!chat) return null;\n\n    const { last_message } = chat;\n    if (!last_message) return null;\n\n    return getContent(last_message, t);\n}\n\nfunction showChatUnreadMessageIcon(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, last_message, last_read_outbox_message_id } = chat;\n    if (!last_message) return false;\n\n    const { is_outgoing } = last_message;\n\n    return (\n        is_outgoing && last_message.id > last_read_outbox_message_id && !is_marked_as_unread && !showChatDraft(chatId)\n    );\n}\n\nfunction showChatUnreadMentionCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { unread_mention_count } = chat;\n\n    return unread_mention_count > 0;\n}\n\nfunction showChatUnreadCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return (\n        unread_count > 1 ||\n        (unread_count === 1 && unread_mention_count === 0) ||\n        (is_marked_as_unread && unread_count === 0 && unread_mention_count === 0)\n    );\n}\n\nfunction isChatUnread(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { is_marked_as_unread, unread_count, unread_mention_count } = chat;\n\n    return is_marked_as_unread || unread_count > 0;\n}\n\nfunction isChatMuted(chatId) {\n    return getChatMuteFor(chatId) > 0;\n}\n\nfunction getChatMuteFor(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return 0;\n\n    const { use_default_mute_for, mute_for } = notification_settings;\n\n    if (use_default_mute_for) {\n        const settings = getScopeNotificationSettings(chatId);\n\n        return settings ? settings.mute_for : false;\n    }\n\n    return mute_for;\n}\n\nexport function getScopeNotificationSettings(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return NotificationStore.settings.get('notificationSettingsScopePrivateChats');\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            let settings = null;\n            if (isChannelChat(chatId)) {\n                settings = NotificationStore.settings.get('notificationSettingsScopeChannelChats');\n            } else {\n                settings = NotificationStore.settings.get('notificationSettingsScopeGroupChats');\n            }\n            return settings;\n        }\n    }\n\n    return null;\n}\n\nfunction getMessageDate(message) {\n    const date = new Date(message.date * 1000);\n\n    const dayStart = new Date();\n    dayStart.setHours(0, 0, 0, 0);\n    if (date > dayStart) {\n        return dateFormat(date, 'H:MM');\n    }\n\n    const now = new Date();\n    const day = now.getDay();\n    const weekStart = now.getDate() - day + (day === 0 ? -6 : 1);\n    const monday = new Date(now.setDate(weekStart));\n    if (date > monday) {\n        return dateFormat(date, 'ddd');\n    }\n\n    return dateFormat(date, 'd.mm.yyyy');\n}\n\nfunction getLastMessageDate(chat) {\n    if (!chat) return null;\n    if (!chat.last_message) return null;\n    if (!chat.last_message.date) return null;\n    if (showChatDraft(chat.id)) return null;\n\n    return getMessageDate(chat.last_message);\n}\n\nfunction getChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup) {\n                return getBasicGroupStatus(basicGroup, chatId);\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n            if (user) {\n                return getUserStatus(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup) {\n                return supergroup.is_channel\n                    ? getChannelStatus(supergroup, chatId)\n                    : getSupergroupStatus(supergroup, chatId);\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatSubtitle(chatId, showSavedMessages = false) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return null;\n    }\n\n    const chatTypingString = getChatTypingString(chatId);\n    if (chatTypingString) {\n        return chatTypingString;\n    }\n\n    return getChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatLetters(chat, t) {\n    if (!chat) return null;\n\n    let title = chat.title || t('HiddenName');\n    if (title.length === 0) return null;\n\n    let letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    return chat.title.charAt(0);\n}\n\nfunction isAccentChatSubtitleWithoutTyping(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return isUserOnline(user);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isAccentChatSubtitle(chatId) {\n    const typingString = getChatTypingString(chatId);\n    if (typingString) return false;\n\n    return isAccentChatSubtitleWithoutTyping(chatId);\n}\n\nfunction getChatUsername(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return user.username;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.username;\n            }\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatPhoneNumber(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return null;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(chat.type.user_id);\n            if (user) {\n                return formatPhoneNumber(user.phone_number);\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            return null;\n        }\n    }\n\n    return null;\n}\n\nfunction getChatBio(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            if (fullInfo) {\n                return fullInfo.bio;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            const fullInfo = SupergroupStore.getFullInfo(chat.type.supergroup_id);\n            if (fullInfo) {\n                return fullInfo.description;\n            }\n\n            break;\n        }\n    }\n\n    return null;\n}\n\nfunction isPrivateChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isGroupChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChannelChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n\n            return supergroup && supergroup.is_channel;\n        }\n        case 'chatTypeBasicGroup':\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatMember(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (type['@type']) {\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (supergroup && supergroup.status) {\n                switch (supergroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return supergroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return supergroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (basicGroup && basicGroup.status) {\n                switch (basicGroup.status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return true;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return false;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return basicGroup.status.is_member;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return false;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return true;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        return basicGroup.status.is_member;\n                    }\n                }\n            }\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction getChatTitle(chatId, showSavedMessages = false, t = key => key) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    return chat.title || t('HiddenName');\n}\n\nexport function isDeletedPrivateChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            const user = UserStore.get(chat.type.user_id);\n\n            return user && user.type['@type'] === 'userTypeDeleted';\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction isMeChat(chatId) {\n    const fallbackValue = false;\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup':\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            return UserStore.getMyId() === chat.type.user_id;\n        }\n    }\n\n    return fallbackValue;\n}\n\nfunction getGroupChatMembers(chatId) {\n    const fallbackValue = [];\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return fallbackValue;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n            if (fullInfo) {\n                return fullInfo.members || fallbackValue;\n            }\n\n            break;\n        }\n        case 'chatTypeSupergroup': {\n            break;\n        }\n        case 'chatTypeSecret':\n        case 'chatTypePrivate': {\n            break;\n        }\n    }\n\n    return fallbackValue;\n}\n\nasync function getChatFullInfo(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    const { type } = chat;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'chatTypePrivate': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeSecret': {\n            return await TdLibController.send({\n                '@type': 'getUserFullInfo',\n                user_id: type.user_id\n            });\n        }\n        case 'chatTypeBasicGroup': {\n            return await TdLibController.send({\n                '@type': 'getBasicGroupFullInfo',\n                basic_group_id: type.basic_group_id\n            });\n        }\n        case 'chatTypeSupergroup': {\n            return await TdLibController.send({\n                '@type': 'getSupergroupFullInfo',\n                supergroup_id: type.supergroup_id\n            });\n        }\n    }\n\n    return null;\n}\n\nfunction hasBasicGroupId(chatId, basicGroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === basicGroupId;\n}\n\nfunction isSupergroup(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return type && type['@type'] === 'chatTypeSupergroup';\n}\n\nfunction getSupergroupId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    if (type && type['@type'] === 'chatTypeSupergroup') {\n        return type.supergroup_id;\n    }\n\n    return 0;\n}\n\nfunction hasSupergroupId(chatId, supergroupId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return isSupergroup(chatId) && type.supergroup_id === supergroupId;\n}\n\nfunction hasUserId(chatId, userId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n\n    return (\n        type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') && type.user_id === userId\n    );\n}\n\nfunction getChatUserId(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return 0;\n\n    const { type } = chat;\n\n    return type && (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') ? type.user_id : 0;\n}\n\nfunction getPhotoFromChat(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n\n    if (isPrivateChat(chatId)) {\n        const user = UserStore.get(getChatUserId(chatId));\n        if (user) {\n            return user.profile_photo;\n        }\n    }\n\n    return chat.photo;\n}\n\nfunction canSendMediaMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_media_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_media_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_media_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_media_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_media_messages && is_member && permissions && permissions.can_send_media_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction getChatShortTitle(chatId, showSavedMessages = false, t = k => k) {\n    if (isMeChat(chatId) && showSavedMessages) {\n        return t('SavedMessages');\n    }\n\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return chat.title;\n        }\n        case 'chatTypeSupergroup': {\n            return chat.title;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return getUserShortName(chat.type.user_id, t);\n        }\n    }\n\n    return null;\n}\n\nfunction getGroupChatMembersCount(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return null;\n    if (!chat.type) return null;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n            if (basicGroup) {\n                return basicGroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return supergroup.member_count;\n            }\n\n            return 0;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return 0;\n        }\n    }\n\n    return 0;\n}\n\nfunction canClearHistory(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n    if (!chat.type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n            if (supergroup) {\n                return !Boolean(supergroup.username);\n            }\n\n            return true;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction canDeleteChat(chatId) {\n    return !isMeChat(chatId);\n}\n\nfunction canSendPolls(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_polls } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_polls;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_polls;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_polls && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_polls && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_polls && is_member && permissions && permissions.can_send_polls;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction canSendMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_send_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return true;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_send_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_send_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return true;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_send_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return can_send_messages && !supergroup.is_channel;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_send_messages && is_member && permissions && permissions.can_send_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction showChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n    const draft = getChatDraft(chatId);\n\n    return draft && chat.unread_count === 0 && chat.unread_mention_count === 0;\n}\n\nfunction getChatDraft(chatId) {\n    const chat = ChatStore.get(chatId);\n\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            const { input_message_text } = draft_message;\n            if (input_message_text) {\n                return input_message_text.text;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction getChatDraftReplyToMessageId(chatId) {\n    let replyToMessageId = 0;\n    const chat = ChatStore.get(chatId);\n    if (chat) {\n        const { draft_message } = chat;\n        if (draft_message) {\n            replyToMessageId = draft_message.reply_to_message_id;\n        }\n    }\n\n    return replyToMessageId;\n}\n\nfunction canPinMessages(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type, permissions: globalPermissions } = chat;\n    if (!type) return false;\n    if (!globalPermissions) return false;\n\n    const { can_pin_messages } = globalPermissions;\n\n    switch (type['@type']) {\n        case 'chatTypeBasicGroup': {\n            const basicGroup = BasicGroupStore.get(type.basic_group_id);\n            if (!basicGroup) return false;\n\n            const { status } = basicGroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return false;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n\n            break;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            return can_pin_messages;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n            if (!supergroup) return false;\n\n            const { status } = supergroup;\n            if (!status) return false;\n\n            const { is_member, permissions } = status;\n\n            switch (status['@type']) {\n                case 'chatMemberStatusAdministrator': {\n                    return can_pin_messages || status.can_pin_messages;\n                }\n                case 'chatMemberStatusBanned': {\n                    return false;\n                }\n                case 'chatMemberStatusCreator': {\n                    return is_member; //can_pin_messages && is_member;\n                }\n                case 'chatMemberStatusLeft': {\n                    return false;\n                }\n                case 'chatMemberStatusMember': {\n                    return false;\n                }\n                case 'chatMemberStatusRestricted': {\n                    return can_pin_messages && is_member && permissions && permissions.can_pin_messages;\n                }\n            }\n        }\n    }\n\n    return false;\n}\n\nfunction isChatVerified(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate':\n        case 'chatTypeSecret': {\n            const user = UserStore.get(type.user_id);\n\n            return user && user.is_verified;\n        }\n        case 'chatTypeSupergroup': {\n            const supergroup = SupergroupStore.get(type.supergroup_id);\n\n            return supergroup && supergroup.is_verified;\n        }\n    }\n\n    return false;\n}\n\nfunction isChatSecret(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    const { type } = chat;\n    if (!type) return false;\n\n    switch (chat.type['@type']) {\n        case 'chatTypeBasicGroup': {\n            return false;\n        }\n        case 'chatTypePrivate': {\n            return false;\n        }\n        case 'chatTypeSecret': {\n            return true;\n        }\n        case 'chatTypeSupergroup': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nexport {\n    showChatDraft,\n    getChatDraft,\n    getChatDraftReplyToMessageId,\n    getChatTypingString,\n    showChatUnreadMessageIcon,\n    showChatUnreadMentionCount,\n    showChatUnreadCount,\n    getChatMuteFor,\n    getChatSubtitle,\n    getChatSubtitleWithoutTyping,\n    getLastMessageSenderName,\n    getMessageSenderName,\n    getMessageSenderFullName,\n    getLastMessageContent,\n    getLastMessageDate,\n    getMessageDate,\n    getChatLetters,\n    isAccentChatSubtitle,\n    isAccentChatSubtitleWithoutTyping,\n    isChatMuted,\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isPrivateChat,\n    isGroupChat,\n    isChannelChat,\n    isChatUnread,\n    isChatMember,\n    isChatVerified,\n    isChatSecret,\n    getChatTitle,\n    getGroupChatMembers,\n    getChatFullInfo,\n    hasBasicGroupId,\n    hasSupergroupId,\n    isSupergroup,\n    getSupergroupId,\n    hasUserId,\n    getChatUserId,\n    getPhotoFromChat,\n    getChatShortTitle,\n    getGroupChatMembersCount,\n    isMeChat,\n    canClearHistory,\n    canDeleteChat,\n    canPinMessages,\n    canSendMediaMessages,\n    canSendMessages,\n    canSendPolls\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ChatStore from '../Stores/ChatStore';\n\nfunction getBasicGroupStatus(basicGroup, chatId) {\n    if (!basicGroup) return null;\n\n    const { status, member_count: count } = basicGroup;\n\n    if (\n        status &&\n        (status['@type'] === 'chatMemberStatusBanned' ||\n            status['@type'] === 'chatMemberStatusLeft' ||\n            (status['@type'] === 'chatMemberStatusCreator' && !status.is_member))\n    ) {\n        return 'group is inaccessible';\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n\nexport { getBasicGroupStatus };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getChannelStatus(supergroup, chatId) {\n    if (!supergroup) return '';\n\n    let { status, is_channel, member_count: count } = supergroup;\n    if (!is_channel) return '';\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return 'channel is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 subscribers';\n    if (count === 1) return '1 subscriber';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} subscribers, ${onlineCount} online`;\n    }\n\n    return `${count} subscribers`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SupergroupStore from '../Stores/SupergroupStore';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getSupergroupStatus(supergroup, chatId) {\n    if (!supergroup) return null;\n\n    let { status, is_channel, member_count: count } = supergroup;\n\n    if (status && status['@type'] === 'chatMemberStatusBanned') {\n        return is_channel ? 'channel is inaccessible' : 'group is inaccessible';\n    }\n\n    if (!count) {\n        const fullInfo = SupergroupStore.getFullInfo(supergroup.id);\n        if (fullInfo) {\n            count = fullInfo.member_count;\n        }\n    }\n\n    if (!count) return '0 members';\n    if (count === 1) return '1 member';\n\n    const onlineCount = ChatStore.getOnlineMemberCount(chatId);\n    if (onlineCount > 1) {\n        return `${count} members, ${onlineCount} online`;\n    }\n\n    return `${count} members`;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { openChat, openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MentionLink.css';\nimport { isGroupChat } from '../../Utils/Chat';\n\nclass MentionLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { userId, username } = props;\n\n        if (state.prevUserId !== userId || state.prevUsername !== username) {\n            return {\n                prevUserId: userId,\n                prevUsername: username,\n                error: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = async event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { userId, username, popup } = this.props;\n        if (userId) {\n            openUser(userId, popup);\n        } else if (username) {\n            const chat = await TdLibController.send({\n                '@type': 'searchPublicChat',\n                username\n            }).catch(() => {\n                this.setState({ error: true });\n            });\n\n            if (chat) {\n                if (isGroupChat(chat.id)) {\n                    openChat(chat.id, null, false);\n                } else {\n                    openChat(chat.id, null, popup);\n                }\n            }\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ error: false });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { children, t, title, username } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <a title={title} onClick={this.handleClick}>\n                    {children}\n                </a>\n                {error && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleClose}\n                        onClick={this.handleDialogClick}\n                        aria-labelledby='confirm-dialog-title'>\n                        <DialogTitle id='confirm-dialog-title'>{t('Error')}</DialogTitle>\n                        <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                            <DialogContentText>{`Can't find username ${username}.`}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose}>{t('Ok')}</Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nMentionLink.propTypes = {\n    userId: PropTypes.number,\n    username: PropTypes.string,\n    title: PropTypes.string,\n    popup: PropTypes.bool\n};\n\nMentionLink.defaultProps = {\n    popup: true\n};\n\nexport default withTranslation()(MentionLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport emojiRegex from 'emoji-regex';\nimport MentionLink from '../Components/Additional/MentionLink';\nimport Poll from '../Components/Message/Media/Poll';\nimport SafeLink from '../Components/Additional/SafeLink';\nimport dateFormat from '../Utils/Date';\nimport { searchChat, setMediaViewerContent } from '../Actions/Client';\nimport { getChatTitle, isMeChat } from './Chat';\nimport { openUser } from './../Actions/Client';\nimport { getFitSize, getPhotoSize, getSize } from './Common';\nimport { download, saveOrDownload } from './File';\nimport { getAudioTitle } from './Media';\nimport { getDecodedUrl } from './Url';\nimport { getServiceMessageContent } from './ServiceMessage';\nimport { getUserFullName } from './User';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM, PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../Constants';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport FileStore from '../Stores/FileStore';\nimport MessageStore from '../Stores/MessageStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function isMetaBubble(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { content } = message;\n    if (!content) {\n        return false;\n    }\n\n    const { caption } = content;\n    if (caption && caption.text && caption.text.length > 0) {\n        return false;\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageLocation': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageSticker': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageVideoNote': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isMessageUnread(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) {\n        return false;\n    }\n\n    const { last_read_inbox_message_id, last_read_outbox_message_id } = chat;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) {\n        return false;\n    }\n\n    const { id, is_outgoing } = message;\n    const isMe = isMeChat(chatId);\n    if (is_outgoing && isMe) {\n        return false;\n    }\n\n    return is_outgoing ? id > last_read_outbox_message_id : id > last_read_inbox_message_id;\n}\n\nfunction getAuthor(message, t = k => k) {\n    if (!message) return null;\n\n    const { forward_info } = message;\n\n    if (forward_info) {\n        switch (forward_info['@type']) {\n            case 'messageForwardedFromUser': {\n                if (forward_info.sender_user_id > 0) {\n                    const user = UserStore.get(forward_info.sender_user_id);\n                    if (user) {\n                        return getUserFullName(forward_info.sender_user_id, null, t);\n                    }\n                }\n                break;\n            }\n            case 'messageForwardedPost': {\n                const chat = ChatStore.get(forward_info.chat_id);\n                if (chat) {\n                    return chat.title;\n                }\n                break;\n            }\n        }\n    }\n\n    return getTitle(message, t);\n}\n\nfunction getTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { sender_user_id, chat_id } = message;\n\n    if (sender_user_id) {\n        const user = UserStore.get(sender_user_id);\n        if (user) {\n            return getUserFullName(sender_user_id, null, t);\n        }\n    }\n\n    if (chat_id) {\n        const chat = ChatStore.get(chat_id);\n        if (chat) {\n            return chat.title;\n        }\n    }\n\n    return null;\n}\n\nfunction substring(text, start, end) {\n    if (start < 0) start = 0;\n    if (start > text.length - 1) start = text.length - 1;\n    if (end < start) end = start;\n    if (end > text.length) end = text.length;\n\n    return text.substring(start, end);\n}\n\nfunction stopPropagation(event) {\n    event.stopPropagation();\n}\n\nfunction searchCurrentChat(event, text) {\n    event.stopPropagation();\n    event.preventDefault();\n\n    const { chatId } = AppStore;\n\n    searchChat(chatId, text);\n}\n\nfunction getFormattedText(formattedText, t = k => k) {\n    if (formattedText['@type'] !== 'formattedText') return null;\n\n    const { text, entities } = formattedText;\n    if (!text) return null;\n    if (!entities) return text;\n\n    let deleteLineBreakAfterPre = false;\n    let result = [];\n    let index = 0;\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const { offset, length, type } = entity;\n\n        // skip nested entities\n        if (index > offset) {\n            continue;\n        }\n\n        let textBefore = substring(text, index, offset);\n        const textBeforeLength = textBefore.length;\n        if (textBefore) {\n            if (deleteLineBreakAfterPre && textBefore.length > 0 && textBefore[0] === '\\n') {\n                textBefore = textBefore.substr(1);\n                deleteLineBreakAfterPre = false;\n            }\n            if (textBefore) {\n                result.push(textBefore);\n            }\n        }\n\n        const entityKey = offset;\n        let entityText = substring(text, offset, offset + length);\n        if (deleteLineBreakAfterPre && entityText.length > 0 && entityText[0] === '\\n') {\n            entityText = entityText.substr(1);\n            deleteLineBreakAfterPre = false;\n        }\n\n        switch (type['@type']) {\n            case 'textEntityTypeBold': {\n                result.push(<strong key={entityKey}>{entityText}</strong>);\n                break;\n            }\n            case 'textEntityTypeBotCommand': {\n                const command = entityText.length > 0 && entityText[0] === '/' ? substring(entityText, 1) : entityText;\n                result.push(\n                    <a key={entityKey} onClick={stopPropagation} href={`tg://bot_command?command=${command}&bot=`}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeCode': {\n                result.push(<code key={entityKey}>{entityText}</code>);\n                break;\n            }\n            case 'textEntityTypeEmailAddress': {\n                result.push(\n                    <a\n                        key={entityKey}\n                        href={`mailto:${entityText}`}\n                        onClick={stopPropagation}\n                        target='_blank'\n                        rel='noopener noreferrer'>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeHashtag': {\n                result.push(\n                    <a key={entityKey} onClick={event => searchCurrentChat(event, entityText)}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypeItalic': {\n                result.push(<em key={entityKey}>{entityText}</em>);\n                break;\n            }\n            case 'textEntityTypeMentionName': {\n                result.push(\n                    <MentionLink key={entityKey} userId={type.user_id} title={getUserFullName(type.user_id, null, t)}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypeMention': {\n                result.push(\n                    <MentionLink key={entityKey} username={entityText}>\n                        {entityText}\n                    </MentionLink>\n                );\n                break;\n            }\n            case 'textEntityTypePhoneNumber': {\n                result.push(\n                    <a key={entityKey} href={`tel:${entityText}`} onClick={stopPropagation}>\n                        {entityText}\n                    </a>\n                );\n                break;\n            }\n            case 'textEntityTypePre': {\n                result.push(<pre key={entityKey}>{entityText}</pre>);\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypePreCode': {\n                result.push(\n                    <pre key={entityKey}>\n                        <code>{entityText}</code>\n                    </pre>\n                );\n                deleteLineBreakAfterPre = true;\n                break;\n            }\n            case 'textEntityTypeTextUrl': {\n                const url = type.url ? type.url : entityText;\n\n                result.push(\n                    <SafeLink key={entityKey} url={url}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            case 'textEntityTypeUrl': {\n                result.push(\n                    <SafeLink key={entityKey} url={entityText}>\n                        {entityText}\n                    </SafeLink>\n                );\n                break;\n            }\n            default:\n                result.push(entityText);\n                break;\n        }\n\n        index += textBeforeLength + entity.length;\n    }\n\n    if (index < text.length) {\n        let textAfter = text.substring(index);\n        if (deleteLineBreakAfterPre && textAfter.length > 0 && textAfter[0] === '\\n') {\n            textAfter = textAfter.substr(1);\n        }\n        if (textAfter) {\n            result.push(textAfter);\n        }\n    }\n\n    return result;\n}\n\nfunction getText(message, meta, t = k => k) {\n    if (!message) return null;\n\n    let result = [];\n\n    const { content } = message;\n    if (!content) return [...result, meta];\n\n    const { text, caption } = content;\n\n    if (text && text['@type'] === 'formattedText' && text.text) {\n        result = getFormattedText(text, t);\n    } else if (caption && caption['@type'] === 'formattedText' && caption.text) {\n        const formattedText = getFormattedText(caption, t);\n        if (formattedText) {\n            result = result.concat(formattedText);\n        }\n    }\n\n    return result && result.length > 0 ? [...result, meta] : [];\n}\n\nfunction getWebPage(message) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    return message.content.web_page;\n}\n\nfunction getDate(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n\n    return dateFormat(d, 'H:MM'); //date.toDateString();\n}\n\nfunction getDateHint(date) {\n    if (!date) return null;\n\n    const d = new Date(date * 1000);\n    return dateFormat(d, 'H:MM:ss d.mm.yyyy'); //date.toDateString();\n}\n\nfunction isForwardOriginHidden(forwardInfo) {\n    if (!forwardInfo) return false;\n\n    const { origin } = forwardInfo;\n    if (!origin) return false;\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            return false;\n        }\n        case 'messageForwardOriginHiddenUser': {\n            return true;\n        }\n        case 'messageForwardOriginChannel': {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nfunction getForwardTitle(forwardInfo, t = key => key) {\n    if (!forwardInfo) return '';\n\n    const { origin } = forwardInfo;\n    if (!origin) return '';\n\n    switch (origin['@type']) {\n        case 'messageForwardOriginUser': {\n            const { sender_user_id } = origin;\n\n            return getUserFullName(sender_user_id, null, t);\n        }\n        case 'messageForwardOriginHiddenUser': {\n            const { sender_name } = origin;\n\n            return sender_name;\n        }\n        case 'messageForwardOriginChannel': {\n            const { chat_id, author_signature } = origin;\n\n            return getChatTitle(chat_id, false, t) + (author_signature ? ` (${author_signature})` : '');\n        }\n    }\n\n    return '';\n}\n\nfunction getUnread(message) {\n    if (!message) return false;\n    if (!message.chat_id) return false;\n    if (!message.is_outgoing) return false;\n\n    let chat = ChatStore.get(message.chat_id);\n    if (!chat) return false;\n\n    return chat.last_read_outbox_message_id < message.id;\n}\n\nfunction getSenderUserId(message) {\n    if (!message) return null;\n\n    return message.sender_user_id;\n}\n\nfunction filterDuplicateMessages(result, history) {\n    if (result.messages.length === 0) return;\n    if (history.length === 0) return;\n\n    const map = history.reduce(function(accumulator, current) {\n        accumulator.set(current.id, current.id);\n        return accumulator;\n    }, new Map());\n\n    result.messages = result.messages.filter(x => !map.has(x.id));\n}\n\nfunction filterMessages(messages) {\n    return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n}\n\nfunction getContent(message, t = key => key) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    let caption = '';\n    if (content.caption && content.caption.text) {\n        caption = `, ${content.caption.text}`;\n    }\n\n    if (message.ttl > 0) {\n        return getServiceMessageContent(message);\n    }\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return t('AttachGif') + caption;\n        }\n        case 'messageAudio': {\n            return t('AttachMusic') + caption;\n        }\n        case 'messageBasicGroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCall': {\n            return t('Call') + caption;\n        }\n        case 'messageChatAddMembers': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatChangeTitle': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeleteMember': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatDeletePhoto': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatJoinByLink': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatSetTtl': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeFrom': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageChatUpgradeTo': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageContact': {\n            return t('AttachContact') + caption;\n        }\n        case 'messageContactRegistered': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageCustomServiceAction': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document && document.file_name) {\n                return document.file_name + caption;\n            }\n\n            return t('AttachDocument') + caption;\n        }\n        case 'messageExpiredPhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messageExpiredVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageGame': {\n            return t('AttachGame') + caption;\n        }\n        case 'messageGameScore': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageInvoice': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageLocation': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messagePassportDataReceived': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePassportDataSent': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessful': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return getServiceMessageContent(message);\n        }\n        case 'messagePhoto': {\n            return t('AttachPhoto') + caption;\n        }\n        case 'messagePoll': {\n            const { poll } = content;\n\n            return '📊 ' + (poll.question || t('Poll')) + caption;\n        }\n        case 'messagePinMessage': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageScreenshotTaken': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            let emoji = '';\n            if (sticker && sticker.emoji) {\n                emoji = sticker.emoji;\n            }\n\n            return t('AttachSticker') + (emoji ? ` ${emoji}` : '') + caption;\n        }\n        case 'messageSupergroupChatCreate': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageText': {\n            return content.text.text + caption;\n        }\n        case 'messageUnsupported': {\n            return getServiceMessageContent(message);\n        }\n        case 'messageVenue': {\n            return t('AttachLocation') + caption;\n        }\n        case 'messageVideo': {\n            return t('AttachVideo') + caption;\n        }\n        case 'messageVideoNote': {\n            return t('AttachRound') + caption;\n        }\n        case 'messageVoiceNote': {\n            return t('AttachAudio') + caption;\n        }\n        case 'messageWebsiteConnected': {\n            return getServiceMessageContent(message);\n        }\n        default: {\n            return t('UnsupportedAttachment');\n        }\n    }\n}\n\nfunction isMediaContent(content) {\n    if (!content) return false;\n\n    return content['@type'] === 'messagePhoto';\n}\n\nfunction getLocationId(\n    location,\n    width = LOCATION_WIDTH,\n    height = LOCATION_HEIGHT,\n    zoom = LOCATION_ZOOM,\n    scale = LOCATION_SCALE\n) {\n    if (!location) return null;\n\n    const { longitude, latitude } = location;\n    return `loc=${latitude},${longitude}&size=${width},${height}&scale=${scale}&zoom=${zoom}`;\n}\n\nfunction isVideoMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideo': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.video);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isLottieMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (!web_page) return false;\n\n            const { document } = web_page;\n            if (!document) return false;\n\n            const { file_name } = document;\n\n            return file_name && file_name.toLowerCase().endsWith('.json');\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isAnimationMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            return Boolean(web_page.animation);\n        }\n        default: {\n            return false;\n        }\n    }\n}\n\nfunction isContentOpened(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return true;\n\n    const { content } = message;\n    if (!content) return true;\n\n    switch (content['@type']) {\n        case 'messageVoiceNote': {\n            return content.is_listened;\n        }\n        case 'messageVideoNote': {\n            return content.is_viewed;\n        }\n        default: {\n            return true;\n        }\n    }\n}\n\nfunction getMediaTitle(message, t = k => k) {\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return getAudioTitle(audio);\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return getAudioTitle(audio);\n                }\n                break;\n            }\n        }\n    }\n\n    return getAuthor(message, t);\n}\n\nfunction hasAudio(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio } = web_page;\n                if (audio) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction hasVideoNote(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return false;\n\n    switch (content['@type']) {\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return true;\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { video_note } = web_page;\n                if (video_note) {\n                    return true;\n                }\n            }\n\n            break;\n        }\n    }\n\n    return false;\n}\n\nfunction getSearchMessagesFilter(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                return {\n                    '@type': 'searchMessagesFilterAudio'\n                };\n            }\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                return {\n                    '@type': 'searchMessagesFilterVoiceNote'\n                };\n            }\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                return null;\n\n                return {\n                    '@type': 'searchMessagesFilterVideoNote'\n                };\n            }\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { audio, voice_note, video_note } = web_page;\n                if (audio) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterAudio'\n                    };\n                }\n\n                if (voice_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVoiceNote'\n                    };\n                }\n\n                if (video_note) {\n                    return null;\n\n                    return {\n                        '@type': 'searchMessagesFilterVideoNote'\n                    };\n                }\n                break;\n            }\n        }\n    }\n\n    return null;\n}\n\nfunction openAnimation(animation, message, fileCancel) {\n    if (!animation) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { animation: file } = animation;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        // download file at loadMediaViewerContent instead\n        // download(file, message, FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openAudio(audio, message, fileCancel) {\n    if (!audio) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { audio: file } = audio;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateAudioBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openChatPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openContact(contact, message, fileCancel) {\n    if (!contact) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    openUser(contact.user_id, true);\n}\n\nfunction openDocument(document, message, fileCancel) {\n    if (!document) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { document: file } = document;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    if (isLottieMessage(chat_id, id)) {\n        TdLibController.send({\n            '@type': 'openMessageContent',\n            chat_id: chat_id,\n            message_id: id\n        });\n\n        setMediaViewerContent({\n            chatId: chat_id,\n            messageId: id\n        });\n    } else {\n        saveOrDownload(file, document.file_name, message);\n    }\n}\n\nfunction openGame(game, message, fileCancel) {\n    if (!game) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const { animation } = game;\n    if (animation) {\n        let { animation: file } = animation;\n        if (!file) return;\n\n        file = FileStore.get(file.id) || file;\n        if (fileCancel && file.local.is_downloading_active) {\n            FileStore.cancelGetRemoteFile(file.id, message);\n            return;\n        } else if (fileCancel && file.remote.is_uploading_active) {\n            FileStore.cancelUploadFile(file.id, message);\n            return;\n        }\n\n        download(file, message, () => FileStore.updateAnimationBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateActiveAnimation',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openPhoto(photo, message, fileCancel) {\n    if (!photo) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    const photoSize = getPhotoSize(photo.sizes);\n    if (!photoSize) return;\n\n    let { photo: file } = photoSize;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updatePhotoBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nasync function openSticker(sticker, message, fileCancel) {\n    if (!sticker) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    const { set_id } = sticker;\n    if (!set_id) return;\n\n    const stickerSet = await TdLibController.send({\n        '@type': 'getStickerSet',\n        set_id\n    });\n\n    if (!stickerSet) return;\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateStickerSet',\n        stickerSet\n    });\n}\n\nfunction openVideo(video, message, fileCancel) {\n    if (!video) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = video;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    setMediaViewerContent({\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVideoNote(videoNote, message, fileCancel) {\n    if (!videoNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { video: file } = videoNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    }\n\n    download(file, message, () => FileStore.updateVideoNoteBlob(chat_id, id, file.id));\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openVoiceNote(voiceNote, message, fileCancel) {\n    if (!voiceNote) return;\n    if (!message) return;\n\n    const { chat_id, id } = message;\n\n    let { voice: file } = voiceNote;\n    if (!file) return;\n\n    file = FileStore.get(file.id) || file;\n    if (fileCancel && file.local.is_downloading_active) {\n        FileStore.cancelGetRemoteFile(file.id, message);\n        return;\n    } else if (fileCancel && file.remote.is_uploading_active) {\n        FileStore.cancelUploadFile(file.id, message);\n        return;\n    } else {\n        download(file, message, () => FileStore.updateVoiceNoteBlob(chat_id, id, file.id));\n    }\n\n    TdLibController.send({\n        '@type': 'openMessageContent',\n        chat_id: chat_id,\n        message_id: id\n    });\n\n    TdLibController.clientUpdate({\n        '@type': 'clientUpdateMediaActive',\n        chatId: chat_id,\n        messageId: id\n    });\n}\n\nfunction openMedia(chatId, messageId, fileCancel = true) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (animation) {\n                openAnimation(animation, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (audio) {\n                // openDocument(audio, message, fileCancel);\n                openAudio(audio, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openChatPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageContact': {\n            const { contact } = content;\n            if (contact) {\n                openContact(contact, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (document) {\n                openDocument(document, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (game) {\n                openGame(game, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (photo) {\n                openPhoto(photo, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (sticker) {\n                openSticker(sticker, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note, voice_note } = web_page;\n\n                if (animation) {\n                    openAnimation(animation, message, fileCancel);\n                }\n\n                if (audio) {\n                    openAudio(audio, message, fileCancel);\n                }\n\n                if (document) {\n                    openDocument(document, message, fileCancel);\n                }\n\n                if (sticker) {\n                    openSticker(sticker, message, fileCancel);\n                }\n\n                if (video) {\n                    openVideo(video, message, fileCancel);\n                }\n\n                if (video_note) {\n                    openVideoNote(video_note, message, fileCancel);\n                }\n\n                if (voice_note) {\n                    openVoiceNote(voice_note, message, fileCancel);\n                }\n\n                if (photo) {\n                    openPhoto(photo, message, fileCancel);\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (video) {\n                openVideo(video, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (video_note) {\n                openVideoNote(video_note, message, fileCancel);\n            }\n\n            break;\n        }\n        case 'messageVoiceNote': {\n            const { voice_note } = content;\n            if (voice_note) {\n                openVoiceNote(voice_note, message, fileCancel);\n            }\n\n            break;\n        }\n    }\n}\n\nfunction isDeletedMessage(message) {\n    return message && message['@type'] === 'deletedMessage';\n}\n\nexport function getReplyMinithumbnail(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { minithumbnail } = animation;\n            return minithumbnail || null;\n        }\n        case 'messageAudio': {\n            return null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { minithumbnail } = document;\n            return minithumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { minithumbnail } = animation;\n                if (minithumbnail) {\n                    return minithumbnail;\n                }\n            }\n\n            if (photo) {\n                return photo.minithumbnail || null;\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return photo.minithumbnail || null;\n        }\n        case 'messageSticker': {\n            return null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return photo.minithumbnail || null;\n                }\n                if (animation) {\n                    const { minithumbnail } = animation;\n                    return minithumbnail || null;\n                }\n                if (audio) {\n                    return null;\n                }\n                if (document) {\n                    const { minithumbnail } = document;\n                    return minithumbnail || null;\n                }\n                if (sticker) {\n                    return null;\n                }\n                if (video) {\n                    const { minithumbnail } = video;\n                    return minithumbnail || null;\n                }\n                if (video_note) {\n                    const { minithumbnail } = video_note;\n                    return minithumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { minithumbnail } = video;\n            return minithumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { minithumbnail } = video_note;\n            return minithumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getReplyPhotoSize(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { thumbnail } = animation;\n            return thumbnail || null;\n        }\n        case 'messageAudio': {\n            const { audio } = content;\n            if (!audio) return null;\n\n            const { album_cover_thumbnail } = audio;\n            return album_cover_thumbnail || null;\n        }\n        case 'messageChatChangePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageDocument': {\n            const { document } = content;\n            if (!document) return null;\n\n            const { thumbnail } = document;\n            return thumbnail || null;\n        }\n        case 'messageGame': {\n            const { game } = content;\n            if (!game) return null;\n\n            const { animation, photo } = game;\n            if (animation) {\n                const { thumbnail } = animation;\n                if (thumbnail) {\n                    return thumbnail;\n                }\n            }\n\n            if (photo) {\n                return getPhotoSize(photo.sizes);\n            }\n\n            return null;\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            return getPhotoSize(photo.sizes);\n        }\n        case 'messageSticker': {\n            const { sticker } = content;\n            if (!sticker) return null;\n\n            const { thumbnail } = sticker;\n            return thumbnail || null;\n        }\n        case 'messageText': {\n            const { web_page } = content;\n            if (web_page) {\n                const { animation, audio, document, photo, sticker, video, video_note } = web_page;\n                if (photo) {\n                    return getPhotoSize(photo.sizes);\n                }\n                if (animation) {\n                    const { thumbnail } = animation;\n                    return thumbnail || null;\n                }\n                if (audio) {\n                    const { album_cover_thumbnail } = audio;\n                    return album_cover_thumbnail || null;\n                }\n                if (document) {\n                    const { thumbnail } = document;\n                    return thumbnail || null;\n                }\n                if (sticker) {\n                    const { thumbnail } = sticker;\n                    return thumbnail || null;\n                }\n                if (video) {\n                    const { thumbnail } = video;\n                    return thumbnail || null;\n                }\n                if (video_note) {\n                    const { thumbnail } = video_note;\n                    return thumbnail || null;\n                }\n            }\n\n            break;\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail } = video;\n            return thumbnail || null;\n        }\n        case 'messageVideoNote': {\n            const { video_note } = content;\n            if (!video_note) return null;\n\n            const { thumbnail } = video_note;\n            return thumbnail || null;\n        }\n    }\n\n    return null;\n}\n\nfunction getEmojiMatches(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return 0;\n\n    const { content } = message;\n    if (!content) return 0;\n    if (content['@type'] !== 'messageText') return 0;\n\n    const { text: textContent } = content;\n    if (!textContent) return;\n    if (textContent['@type'] !== 'formattedText') return 0;\n\n    const { text, entities } = textContent;\n    if (!text) return 0;\n    if (entities && entities.length > 0) return 0;\n\n    let lastIndex = 0;\n    let emojiMatches = 0;\n    let m;\n    const re = emojiRegex();\n    do {\n        m = re.exec(text);\n\n        if (m) {\n            emojiMatches += 1;\n            // none-emoji symbol between prev and current emojis or before first\n            if (lastIndex !== m.index) {\n                emojiMatches = 0;\n                break;\n            }\n            // more than 3 emojis in a row\n            if (emojiMatches > 3) {\n                emojiMatches = 0;\n                break;\n            }\n            lastIndex = re.lastIndex;\n        }\n        // none-emoji symbol at the end\n        if (!m && lastIndex !== text.length) {\n            emojiMatches = 0;\n            break;\n        }\n    } while (m);\n\n    return emojiMatches;\n}\n\nfunction messageComparatorDesc(left, right) {\n    return left.id - right.id;\n}\n\nfunction checkInclusion(index, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (index >= entities[i].offset && index < entities[i].offset + entities[i].length) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkIntersection(startIndex, endIndex, entities) {\n    if (!entities) return false;\n    if (!entities.length) return false;\n\n    for (let i = 0; i < entities.length; i++) {\n        if (startIndex <= entities[i].offset && entities[i].offset + entities[i].length - 1 <= endIndex) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction checkEntity(startIndex, endIndex, entities) {\n    return (\n        !checkInclusion(startIndex, entities) &&\n        !checkInclusion(endIndex, entities) &&\n        !checkIntersection(startIndex, endIndex, entities)\n    );\n}\n\nfunction removeOffsetAfter(start, countToRemove, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset -= countToRemove;\n        }\n    });\n}\n\nfunction addOffsetAfter(start, countToAdd, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    entities.forEach(e => {\n        if (e.offset > start) {\n            e.offset += countToAdd;\n        }\n    });\n}\n\nfunction removeEntities(startIndex, endIndex, entities) {\n    if (!entities) return;\n    if (!entities.length) return;\n\n    for (let i = 0; i < entities.length; i++) {\n        const entity = entities[i];\n        const entityStart = entity.offset;\n        const entityEnd = entity.offset + entity.length - 1;\n        if (\n            (startIndex <= entityStart && entityStart <= endIndex) ||\n            (startIndex <= entityEnd && entityEnd <= endIndex) ||\n            (entityStart < startIndex && endIndex > entityEnd)\n        ) {\n            entities.splice(i--, 1);\n        }\n    }\n}\n\nfunction addTextNode(offset, length, text, nodes) {\n    const node = document.createTextNode(text.substr(offset, length));\n    nodes.push(node);\n}\n\nexport function getNodes(text, entities, t = k => k) {\n    if (!text) return [];\n\n    entities = (entities || []).sort((a, b) => {\n        if (a.offset - b.offset !== 0) {\n            return a.offset - b.offset;\n        }\n\n        return b.length - a.length;\n    });\n\n    let nodes = [];\n    let offset = 0;\n    let prevEntity = null;\n    entities.forEach(x => {\n        if (x.offset - offset > 0) {\n            addTextNode(offset, x.offset - offset, text, nodes);\n            offset = x.offset;\n        }\n\n        if (!(prevEntity && checkInclusion(x.offset, [prevEntity]))) {\n            switch (x.type['@type']) {\n                case 'textEntityTypeBold': {\n                    const node = document.createElement('b');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeBotCommand': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeCode': {\n                    const node = document.createTextNode('`' + text.substr(x.offset, x.length) + '`');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeEmailAddress': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeHashtag': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeItalic': {\n                    const node = document.createElement('i');\n                    node.innerText = text.substr(x.offset, x.length);\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeMention': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypeMentionName': {\n                    try {\n                        const { user_id } = x.type;\n                        const user = UserStore.get(user_id);\n                        if (user) {\n                            const node = document.createElement('a');\n                            // node.href = getDecodedUrl(url, false);\n                            node.title = getUserFullName(user_id, null, t);\n                            // node.target = '_blank';\n                            // node.rel = 'noopener noreferrer';\n                            node.dataset.userId = user_id;\n                            node.innerText = text.substr(x.offset, x.length);\n                            nodes.push(node);\n                        } else {\n                            addTextNode(x.offset, x.length, text, nodes);\n                        }\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypePhoneNumber': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                case 'textEntityTypePre': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypePreCode': {\n                    const node = document.createTextNode('```' + text.substr(x.offset, x.length) + '```');\n                    nodes.push(node);\n                    break;\n                }\n                case 'textEntityTypeTextUrl': {\n                    try {\n                        const { url } = x.type;\n\n                        const node = document.createElement('a');\n                        node.href = getDecodedUrl(url, false);\n                        node.title = getDecodedUrl(url, false);\n                        node.target = '_blank';\n                        node.rel = 'noopener noreferrer';\n                        node.innerText = text.substr(x.offset, x.length);\n                        nodes.push(node);\n                    } catch {\n                        addTextNode(x.offset, x.length, text, nodes);\n                    }\n                    break;\n                }\n                case 'textEntityTypeUrl': {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n                default: {\n                    addTextNode(x.offset, x.length, text, nodes);\n                    break;\n                }\n            }\n\n            prevEntity = x;\n            offset += x.length;\n        }\n    });\n\n    if (offset < text.length) {\n        addTextNode(offset, text.length - offset, text, nodes);\n    }\n\n    return nodes;\n}\n\n// based on code from official Android Telegram client\n// https://github.com/DrKLO/Telegram/blob/28eb8dfd0ef959fd5ad7d5d22f1d32879707c0a0/TMessagesProj/src/main/java/org/telegram/messenger/MediaDataController.java#L3782\nexport function getEntities(text) {\n    const entities = [];\n    if (!text) return { text, entities };\n\n    text = text.replace(/<div><br><\\/div>/gi, '<br>');\n    text = text.replace(/<div>/gi, '<br>');\n    text = text.replace(/<\\/div>/gi, '');\n\n    text = text.split('<br>').join('\\n');\n\n    // console.log(`[ge] start text=${text}`);\n\n    let index = -1; // first index of end tag\n    let lastIndex = 0; // first index after end tag\n    let start = -1; // first index of start tag\n    let isPre = false;\n    const mono = '`';\n    const pre = '```';\n    const bold = '**';\n    const italic = '__';\n\n    // 0 looking for html entities\n    const result = new DOMParser().parseFromString(text, 'text/html');\n    let offset = 0;\n    let length = 0;\n    let finalText = '';\n    result.body.childNodes.forEach(node => {\n        const { textContent, nodeName } = node;\n\n        length = textContent.length;\n        finalText += textContent;\n\n        if (!checkEntity(offset, offset + length - 1, entities)) {\n            return;\n        }\n\n        switch (nodeName) {\n            case '#text': {\n                offset += length;\n                break;\n            }\n            case 'A': {\n                if (node.dataset.userId) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeMentionName', user_id: node.dataset.userId },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                } else if (node.href) {\n                    entities.push({\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeTextUrl', url: node.href },\n                        textContent: finalText.substring(offset, offset + length)\n                    });\n                }\n                offset += length;\n                break;\n            }\n            case 'B':\n            case 'STRONG': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeBold' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'BR': {\n                break;\n            }\n            case 'CODE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeCode' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'I':\n            case 'EM': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypeItalic' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            case 'PRE': {\n                entities.push({\n                    '@type': 'textEntity',\n                    offset,\n                    length,\n                    type: { '@type': 'textEntityTypePre' },\n                    textContent: finalText.substring(offset, offset + length)\n                });\n                offset += length;\n                break;\n            }\n            default: {\n                offset += length;\n                break;\n            }\n        }\n    });\n    text = finalText;\n    // console.log(`[ge] HTML nodes text=${text}`, entities);\n\n    // 1 looking for ``` and ` in order to find mono and pre entities\n    while ((index = text.indexOf(isPre ? pre : mono, lastIndex)) !== -1) {\n        if (start === -1) {\n            // find start tag\n            isPre = text.length - index > 2 && text[index + 1] === mono && text[index + 2] === mono;\n            start = index;\n            lastIndex = index + (isPre ? 3 : 1);\n        } else {\n            // find end tag\n            for (let i = index + (isPre ? 3 : 1); i < text.length; i++) {\n                if (text[i] === mono) {\n                    index++;\n                } else {\n                    break;\n                }\n            }\n\n            lastIndex = index + (isPre ? 3 : 1);\n            if (isPre) {\n                // add pre tag\n\n                let textBefore = text.substring(0, start);\n                let textContent = text.substring(start + 3, index);\n                let textAfter = text.substring(index + 3, text.length);\n\n                if (textContent.length > 0) {\n                    offset = start;\n                    length = index - start - 3;\n\n                    text = textBefore + textContent + textAfter;\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': 'textEntityTypePre' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 6);\n                    removeOffsetAfter(offset + length, 6, entities);\n                    entities.push(entity);\n                    lastIndex -= 6;\n\n                    // clean text before\n                    if (textBefore.length > 0) {\n                        const lastChar = textBefore[textBefore.length - 1];\n                        if (lastChar !== '\\n') {\n                            if (lastChar === ' ' || lastChar === '\\xA0') {\n                                textBefore = textBefore.substr(0, textBefore.length - 1) + '\\n';\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textBefore += '\\n';\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text after\n                    if (textAfter.length > 0) {\n                        const firstChar = textAfter[0];\n                        if (firstChar !== '\\n') {\n                            if (firstChar === ' ' || firstChar === '\\xA0') {\n                                textAfter = '\\n' + textAfter.substr(1);\n                                text = textBefore + textContent + textAfter;\n                            } else {\n                                textAfter = '\\n' + textAfter;\n                                text = textBefore + textContent + textAfter;\n                                addOffsetAfter(offset + length - 1, 1, entities);\n                                lastIndex += 1;\n                            }\n                        }\n                    }\n\n                    // clean text content\n                    if (textContent.length > 2) {\n                        if (textContent[0] === '\\n') {\n                            textContent = textContent.substring(1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n\n                    if (textContent.length > 2) {\n                        if (textContent[textContent.length - 1] === '\\n') {\n                            textContent = textContent.substring(0, textContent.length - 1);\n                            text = textBefore + textContent + textAfter;\n                            entity.length -= 1;\n                            entity.textContent = textContent;\n                            removeOffsetAfter(entity.offset + entity.length - 1, 1, entities);\n                            lastIndex -= 1;\n                        }\n                    }\n                }\n            } else {\n                // add code tag\n                if (start + 1 !== index) {\n                    offset = start;\n                    length = index - start - 1;\n\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 1, index) +\n                        text.substring(index + 1, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        type: { '@type': 'textEntityTypeCode' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeEntities(offset, offset + length - 1 + 2);\n                    removeOffsetAfter(offset + length, 2, entities);\n                    entities.push(entity);\n                    lastIndex -= 2;\n                }\n            }\n\n            start = -1;\n            isPre = false;\n        }\n    }\n\n    // 1.1 case when ``` is one ` mono symbol\n    if (start !== -1 && isPre) {\n        offset = start;\n        length = 1;\n\n        if (checkEntity(offset, offset + length + 2 - 1, entities)) {\n            text = text.substring(0, start) + text.substring(start + 2, text.length);\n\n            const entity = {\n                '@type': 'textEntity',\n                offset,\n                length,\n                type: { '@type': 'textEntityTypeCode' },\n                textContent: text.substring(offset, offset + length)\n            };\n            removeEntities(offset, offset + length - 1 + 2);\n            removeOffsetAfter(offset + length, 2, entities);\n            entities.push(entity);\n        }\n    }\n\n    // console.log(`[ge] pre and code text=${text}`, entities);\n    // 2 looking for bold, italic entities\n    for (let c = 0; c < 2; c++) {\n        lastIndex = 0;\n        start = -1;\n        const checkString = c === 0 ? bold : italic;\n        const checkChar = c === 0 ? '*' : '_';\n        while ((index = text.indexOf(checkString, lastIndex)) !== -1) {\n            if (start === -1) {\n                const prevChar = index === 0 ? ' ' : text[index - 1];\n                if (\n                    !checkInclusion(index, entities) &&\n                    (prevChar === ' ' || prevChar === '\\xA0' || prevChar === '\\n')\n                ) {\n                    start = index;\n                }\n                lastIndex = index + 2;\n            } else {\n                for (let a = index + 2; a < text.length; a++) {\n                    if (text[a] === checkChar) {\n                        index++;\n                    } else {\n                        break;\n                    }\n                }\n                lastIndex = index + 2;\n                if (checkInclusion(index, entities) || checkIntersection(start, index, entities)) {\n                    start = -1;\n                    continue;\n                }\n                if (start + 2 !== index) {\n                    offset = start;\n                    length = index - start - 2;\n                    text =\n                        text.substring(0, start) +\n                        text.substring(start + 2, index) +\n                        text.substring(index + 2, text.length);\n\n                    const entity = {\n                        '@type': 'textEntity',\n                        offset,\n                        length,\n                        language: '',\n                        type: { '@type': c === 0 ? 'textEntityTypeBold' : 'textEntityTypeItalic' },\n                        textContent: text.substring(offset, offset + length)\n                    };\n                    removeOffsetAfter(offset + length, 4, entities);\n                    entities.push(entity);\n                    lastIndex -= 4;\n                }\n                start = -1;\n            }\n        }\n    }\n    // console.log(`[ge] result text=${text}`, entities);\n\n    return { text, entities };\n}\n\nexport function canMessageBeEdited(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { can_be_edited } = message;\n\n    return can_be_edited;\n}\n\nexport function showMessageForward(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { forward_info, content } = message;\n\n    return forward_info && content && content['@type'] !== 'messageSticker' && content['@type'] !== 'messageAudio';\n}\n\nexport function isTextMessage(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n\n    return content && content['@type'] === 'messageText';\n}\n\nexport function isMessagePinned(chatId, messageId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return false;\n\n    return chat.pinned_message_id === messageId;\n}\n\nexport function canMessageBeUnvoted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    const { poll } = content;\n    if (!poll) return false;\n\n    const { type, is_closed, options } = poll;\n    if (!type) return false;\n    if (type['@type'] !== 'pollTypeRegular') return false;\n    if (is_closed) return false;\n\n    return options.some(x => x.is_chosen || x.is_being_chosen);\n}\n\nexport function canMessageBeClosed(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return false;\n\n    const { content, can_be_edited } = message;\n    if (!content) return;\n    if (content['@type'] !== 'messagePoll') return;\n\n    return can_be_edited;\n}\n\nexport function canMessageBeForwarded(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && message.can_be_forwarded;\n}\n\nexport function canMessageBeDeleted(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n\n    return message && (message.can_be_deleted_only_for_self || message.can_be_deleted_for_all_users);\n}\n\nexport function getMessageStyle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            const { animation } = content;\n            if (!animation) return null;\n\n            const { width, height, thumbnail } = animation;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messagePhoto': {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const size = getSize(photo.sizes, PHOTO_SIZE);\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE, false);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n        case 'messageVideo': {\n            const { video } = content;\n            if (!video) return null;\n\n            const { thumbnail, width, height } = video;\n\n            const size = { width, height } || thumbnail;\n            if (!size) return null;\n\n            const fitSize = getFitSize(size, PHOTO_DISPLAY_SIZE);\n            if (!fitSize) return null;\n\n            return { width: fitSize.width };\n        }\n    }\n\n    return null;\n}\n\nexport {\n    getAuthor,\n    getTitle,\n    getText,\n    getFormattedText,\n    getWebPage,\n    getContent,\n    getDate,\n    getDateHint,\n    isForwardOriginHidden,\n    getForwardTitle,\n    getUnread,\n    getSenderUserId,\n    filterDuplicateMessages,\n    filterMessages,\n    isMediaContent,\n    isDeletedMessage,\n    isVideoMessage,\n    isAnimationMessage,\n    isLottieMessage,\n    getLocationId,\n    isContentOpened,\n    getMediaTitle,\n    hasAudio,\n    hasVideoNote,\n    getSearchMessagesFilter,\n    openMedia,\n    getReplyPhotoSize,\n    getEmojiMatches,\n    messageComparatorDesc,\n    substring,\n    stopPropagation\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport CallIcon from '@material-ui/icons/Call';\nimport { getCallTitle } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport './Call.css';\n\nclass Call extends React.Component {\n    render() {\n        const { chatId, messageId, duration, openMedia, title, meta } = this.props;\n\n        const callTitle = getCallTitle(chatId, messageId);\n        const durationString = getDurationString(Math.floor(duration || 0));\n\n        return (\n            <div className={classNames('document', { 'media-title': title })}>\n                <IconButton color='primary' aria-label='Call'>\n                    <CallIcon fontSize='large' />\n                </IconButton>\n                <div className='document-content'>\n                    <div className='document-title'>{callTitle}</div>\n                    <div className='document-action'>\n                        {durationString}\n                        {meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nCall.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nexport default Call;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from '../../Tile/UserTile';\nimport { formatPhoneNumber } from '../../../Utils/Phone';\nimport { getUserFullName } from '../../../Utils/User';\nimport UserStore from '../../../Stores/UserStore';\nimport './Contact.css';\n\nclass Contact extends React.Component {\n    render() {\n        const { contact, title, openMedia, meta, caption, t } = this.props;\n        if (!contact) return null;\n\n        const { user_id: id, first_name, last_name, phone_number } = contact;\n\n        const user = UserStore.get(id) || {\n            '@type': 'user',\n            type: { '@type': 'userTypeRegular' },\n            id,\n            first_name,\n            last_name\n        };\n\n        const fullName = getUserFullName(id, user, t);\n        const number = formatPhoneNumber(phone_number);\n\n        return (\n            <div className={classNames('contact', { 'media-title': title })}>\n                <div className='contact-tile'>\n                    <UserTile userId={id} firstName={first_name} lastName={last_name} />\n                </div>\n                <div className='contact-content'>\n                    <div className='contact-name'>\n                        {id > 0 ? <a onClick={openMedia}>{fullName}</a> : <span>{fullName}</span>}\n                    </div>\n                    <div className='contact-phone'>\n                        {number}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nContact.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    contact: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Contact);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport { getFormattedText } from '../../../Utils/Message';\nimport { getFitSize, getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport './Game.css';\n\nclass Game extends React.Component {\n    getContent = () => {\n        const { chatId, messageId, game, size, displaySize, openMedia } = this.props;\n        if (!game) return null;\n\n        const { photo, animation } = game;\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />;\n            }\n        }\n\n        if (photo) {\n            let style = {\n                width: 0,\n                height: 0\n            };\n            const photoSize = getSize(photo.sizes, size);\n            if (photoSize) {\n                const fitPhotoSize = getFitSize(photoSize, displaySize);\n                if (fitPhotoSize) {\n                    style.width = fitPhotoSize.width;\n                    style.height = fitPhotoSize.height;\n                }\n            }\n\n            return <Photo chatId={chatId} messageId={messageId} photo={photo} style={style} openMedia={openMedia} />;\n        }\n\n        return null;\n    };\n\n    render() {\n        const { game, t } = this.props;\n        if (!game) return null;\n\n        const { title, text, description } = game;\n        const formattedText = getFormattedText(text, t);\n\n        return (\n            <div className='game'>\n                <div className='border' />\n                <div className='game-wrapper'>\n                    {title && <div className='game-title'>{title}</div>}\n                    {formattedText && <div className='game-text'>{formattedText}</div>}\n                    {description && <div className='game-description'>{description}</div>}\n                    {this.getContent()}\n                </div>\n            </div>\n        );\n    }\n}\n\nGame.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    game: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nGame.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default withTranslation()(Game);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Location from './Location';\nimport './Venue.css';\n\nclass Venue extends React.Component {\n    render() {\n        const { chatId, messageId, venue, openMedia, meta, title, caption } = this.props;\n        if (!venue) return null;\n\n        const { title: venueTitle, address, location } = venue;\n        if (!location) return null;\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        return (\n            <div className='venue'>\n                <Location\n                    type='venue'\n                    chatId={chatId}\n                    messageId={messageId}\n                    location={location}\n                    openMedia={openMedia}\n                    title={title}\n                    caption={caption}\n                />\n                <div className='venue-content'>\n                    <a href={source} target='_blank' rel='noopener noreferrer'>\n                        <div className='venue-title'>{venueTitle}</div>\n                    </a>\n                    <div className='venue-subtitle'>\n                        {address}\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVenue.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    venue: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Venue;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../Constants';\nimport MessageStore from '../Stores/MessageStore';\nimport Animation from '../Components/Message/Media/Animation';\nimport Audio from '../Components/Message/Media/Audio';\nimport Call from '../Components/Message/Media/Call';\nimport Contact from '../Components/Message/Media/Contact';\nimport Document from '../Components/Message/Media/Document';\nimport Game from '../Components/Message/Media/Game';\nimport Location from '../Components/Message/Media/Location';\nimport Photo from '../Components/Message/Media/Photo';\nimport Poll from '../Components/Message/Media/Poll';\nimport Sticker, { StickerSourceEnum } from '../Components/Message/Media/Sticker';\nimport Venue from '../Components/Message/Media/Venue';\nimport Video from '../Components/Message/Media/Video';\nimport VideoNote from '../Components/Message/Media/VideoNote';\nimport VoiceNote from '../Components/Message/Media/VoiceNote';\nimport React from 'react';\nimport { getRandomInt, readImageSize } from './Common';\nimport FileStore from '../Stores/FileStore';\n\nexport function getCallTitle(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return null;\n\n    const { content, is_outgoing } = message;\n    if (content['@type'] !== 'messageCall') return null;\n\n    const { discard_reason, duration } = content;\n    if (is_outgoing) {\n        return discard_reason['@type'] === 'callDiscardReasonMissed' ? 'Cancelled Call' : 'Outgoing Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonMissed') {\n        return 'Missed Call';\n    } else if (discard_reason['@type'] === 'callDiscardReasonDeclined') {\n        return 'Declined Call';\n    }\n\n    return 'Incoming Call';\n}\n\nexport function isEditedMedia(chatId, messageId) {\n    const message = MessageStore.get(chatId, messageId);\n    if (!message) return;\n\n    const { content } = message;\n    switch (content['@type']) {\n        case 'messageAnimation': {\n            return true;\n        }\n        case 'messageAudio': {\n            return true;\n        }\n        case 'messageDocument': {\n            return true;\n        }\n        case 'messagePhoto': {\n            return true;\n        }\n        case 'messageVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function isValidAnimatedSticker(sticker, chatId, messageId) {\n    if (!sticker) return false;\n    if (!sticker.is_animated) return false;\n\n    const message = MessageStore.get(chatId, messageId);\n    if (message) {\n        const { sending_state } = message;\n        if (sending_state && !sticker.set_id) return false;\n    }\n\n    return true;\n}\n\nexport function isBlurredThumbnail(thumbnail, blurredSize = THUMBNAIL_BLURRED_SIZE_90) {\n    if (!thumbnail) return false;\n\n    return Math.max(thumbnail.width, thumbnail.height) < blurredSize;\n}\n\nexport function getAudioTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer\n        ? `${trimmedPerformer || 'Unknown Artist'} — ${trimmedTitle || 'Unknown Track'}`\n        : file_name;\n}\n\nexport function getAudioShortTitle(audio) {\n    if (!audio) return null;\n\n    const { file_name, title, performer } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n    const trimmedPerformer = performer ? performer.trim() : '';\n\n    return trimmedTitle || trimmedPerformer ? `${trimmedPerformer || 'Unknown Artist'}` : file_name;\n}\n\nexport function getAudioSubtitle(audio) {\n    if (!audio) return null;\n\n    const { title } = audio;\n    const trimmedTitle = title ? title.trim() : '';\n\n    return trimmedTitle || 'Unknown Track';\n}\n\nexport function getStickers(sets) {\n    return sets.reduce((stickers, set) => stickers.concat(set.stickers), []);\n}\n\nexport function getNeighborStickersFromSets(sticker, sets, stickersPerRow) {\n    const result = [];\n    const [row, column] = toRowColumn(sticker, sets, stickersPerRow);\n    if (row === -1) return [];\n    if (column === -1) return [];\n\n    const prevPrevRow = row - 2;\n    const prevRow = row - 1;\n    const nextRow = row + 1;\n    const nextNextRow = row + 2;\n\n    const prevColumn = column - 1;\n    const nextColumn = column + 1;\n\n    let skipPrevRow = prevRow < 0;\n    let skipPrePrevRow = prevPrevRow < 0;\n    if (!skipPrevRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(prevRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipPrevRow = true;\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, prevColumn, sets, stickersPerRow);\n                skipPrePrevRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipPrevRow ? -1 : toIndex(prevRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipPrevRow = true;\n            index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, column, sets, stickersPerRow);\n            skipPrePrevRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipPrevRow ? -1 : toIndex(prevRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipPrePrevRow ? -1 : toIndex(prevPrevRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    if (prevColumn >= 0) {\n        const index = toIndex(row, prevColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    if (nextColumn < stickersPerRow) {\n        const index = toIndex(row, nextColumn, sets, stickersPerRow);\n        if (index !== -1) {\n            result.push(index);\n        }\n    }\n\n    let totalRows = sets.reduce((totalRows, set) => totalRows + Math.ceil(set.stickers.length / stickersPerRow), 0);\n    let skipNextRow = nextRow >= totalRows;\n    let skipNextNextRow = nextRow >= totalRows;\n    if (!skipNextRow) {\n        if (prevColumn >= 0) {\n            let index = toIndex(nextRow, prevColumn, sets, stickersPerRow);\n            if (index === -1) {\n                skipNextRow = true;\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, prevColumn, sets, stickersPerRow);\n                skipNextNextRow = index === -1;\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n\n        let index = skipNextRow ? -1 : toIndex(nextRow, column, sets, stickersPerRow);\n        if (index === -1) {\n            skipNextRow = true;\n            index = skipNextNextRow ? -1 : toIndex(nextNextRow, column, sets, stickersPerRow);\n            skipNextNextRow = index === -1;\n        }\n        if (index !== -1) {\n            result.push(index);\n        }\n\n        if (nextColumn < stickersPerRow) {\n            let index = skipNextRow ? -1 : toIndex(nextRow, nextColumn, sets, stickersPerRow);\n            if (index === -1) {\n                index = skipNextNextRow ? -1 : toIndex(nextNextRow, nextColumn, sets, stickersPerRow);\n            }\n            if (index !== -1) {\n                result.push(index);\n            }\n        }\n    }\n\n    const items = getStickers(sets);\n    return result.map(x => items[x]);\n}\n\nfunction toRowColumn(sticker, sets, stickersPerRow) {\n    const setIndex = sets.findIndex(x => x.id === sticker.set_id);\n    if (setIndex === -1) return [-1, -1];\n\n    const stickerIndex = sets[setIndex].stickers.findIndex(x => x.sticker.id === sticker.sticker.id);\n    if (stickerIndex === -1) return [-1, -1];\n\n    let prevRows = 0;\n    for (let i = 0; i < setIndex; i++) {\n        prevRows += Math.ceil(sets[i].stickers.length / stickersPerRow);\n    }\n\n    return [prevRows + Math.floor(stickerIndex / stickersPerRow), stickerIndex % stickersPerRow];\n}\n\nfunction toIndex(row, column, sets, stickersPerRow) {\n    let index = -1;\n    let totalRows = 0;\n    let setIndex = -1;\n    for (let i = 0; i < sets.length; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        totalRows += setRows;\n        if (totalRows > row) {\n            setIndex = i;\n            break;\n        }\n    }\n    if (setIndex === -1) return index;\n\n    let setRow = row;\n    let setColumn = column;\n    for (let i = 0; i < setIndex; i++) {\n        let setRows = Math.ceil(sets[i].stickers.length / stickersPerRow);\n        setRow -= setRows;\n    }\n\n    index = stickersPerRow * setRow + setColumn;\n\n    if (index >= sets[setIndex].stickers.length) return -1;\n\n    for (let i = 0; i < setIndex; i++) {\n        index += sets[i].stickers.length;\n    }\n\n    return index;\n}\n\nfunction getInputMediaThumbnail(thumbnail) {\n    if (!thumbnail) return null;\n\n    const { photo, width, height } = thumbnail;\n    if (!photo) return null;\n\n    return {\n        '@type': 'inputThumbnail',\n        thumbnail: {\n            '@type': 'inputFileId',\n            id: photo.id\n        },\n        width,\n        height\n    };\n}\n\nfunction getInputMediaCaption(text) {\n    if (!text) return null;\n\n    return {\n        '@type': 'formattedText',\n        text: text,\n        entities: null\n    };\n}\n\nexport function getInputMediaContent(media, text) {\n    if (!media) return null;\n\n    switch (media['@type']) {\n        case 'animation': {\n            const { animation: file, thumbnail, width, height, duration } = media;\n\n            return {\n                '@type': 'inputMessageAnimation',\n                animation: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'audio': {\n            const { audio: file, album_cover_thumbnail: thumbnail, title, performer, duration } = media;\n\n            return {\n                '@type': 'inputMessageAudio',\n                audio: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                album_cover_thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                title,\n                performer,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'contact': {\n            return {\n                '@type': 'inputMessageContact',\n                contact: media\n            };\n        }\n        case 'document': {\n            const { document: file, thumbnail } = media;\n\n            return {\n                '@type': 'inputMessageDocument',\n                document: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'game': {\n            return null;\n        }\n        case 'invoice': {\n            return null;\n        }\n        case 'location': {\n            return {\n                '@type': 'inputMessageLocation',\n                location: media,\n                live_period: 0\n            };\n        }\n        case 'photo': {\n            const { sizes } = media;\n            if (!sizes.length) return null;\n\n            const thumbnail = sizes[0];\n            const photo = sizes[sizes.length - 1];\n            if (!photo) return null;\n\n            const { photo: file, width, height } = photo;\n\n            return {\n                '@type': 'inputMessagePhoto',\n                photo: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                width,\n                height,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'poll': {\n            return null;\n        }\n        case 'sticker': {\n            const { sticker: file, thumbnail, width, height } = media;\n\n            return {\n                '@type': 'inputMessageSticker',\n                sticker: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                width,\n                height,\n                caption: getInputMediaCaption(text)\n            };\n        }\n        case 'venue': {\n            return {\n                '@type': 'inputMessageVenue',\n                venue: media\n            };\n        }\n        case 'video': {\n            const { video: file, thumbnail, width, height, duration, supports_streaming } = media;\n\n            return {\n                '@type': 'inputMessageVideo',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                added_sticker_file_ids: [],\n                duration,\n                width,\n                height,\n                supports_streaming,\n                caption: getInputMediaCaption(text),\n                ttl: 0\n            };\n        }\n        case 'videoNote': {\n            const { video: file, thumbnail, duration, length } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                video: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                thumbnail: getInputMediaThumbnail(thumbnail),\n                duration,\n                length,\n                ttl: 0\n            };\n        }\n        case 'voiceNote': {\n            const { voice: file, duration, waveform } = media;\n\n            return {\n                '@type': 'inputMessageVideoNote',\n                voice_note: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                duration,\n                waveform\n            };\n        }\n    }\n\n    return null;\n}\n\nexport function getMedia(message, openMedia, hasTitle = false, hasCaption = false, inlineMeta = null) {\n    if (!message) return null;\n\n    const { chat_id, id, content } = message;\n    if (!content) return null;\n\n    switch (content['@type']) {\n        case 'messageAnimation':\n            return (\n                <Animation\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    animation={content.animation}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageAudio':\n            return (\n                <Audio\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    audio={content.audio}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageCall':\n            return (\n                <Call\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    duraton={content.duration}\n                    discardReason={content.discard_reason}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageContact':\n            return (\n                <Contact\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    contact={content.contact}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageDocument':\n            return (\n                <Document\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    document={content.document}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageGame':\n            return <Game chatId={chat_id} messageId={id} game={content.game} openMedia={openMedia} />;\n        case 'messageLocation':\n            return (\n                <Location\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    location={content.location}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePhoto':\n            return (\n                <Photo\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    photo={content.photo}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messagePoll':\n            return <Poll chatId={chat_id} messageId={id} poll={content.poll} openMedia={openMedia} meta={inlineMeta} />;\n        case 'messageSticker':\n            return (\n                <Sticker\n                    chatId={chat_id}\n                    messageId={id}\n                    sticker={content.sticker}\n                    source={StickerSourceEnum.MESSAGE}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageText':\n            return null;\n        case 'messageVenue':\n            return (\n                <Venue\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    venue={content.venue}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        case 'messageVideo':\n            return (\n                <Video\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    video={content.video}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVideoNote':\n            return (\n                <VideoNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    videoNote={content.video_note}\n                    openMedia={openMedia}\n                />\n            );\n        case 'messageVoiceNote':\n            return (\n                <VoiceNote\n                    type='message'\n                    title={hasTitle}\n                    caption={hasCaption}\n                    chatId={chat_id}\n                    messageId={id}\n                    voiceNote={content.voice_note}\n                    openMedia={openMedia}\n                    meta={inlineMeta}\n                />\n            );\n        default:\n            return [`[${content['@type']}]`, inlineMeta];\n    }\n}\n\nexport async function getMediaDocumentFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    const fileId = -getRandomInt(1, 1000000);\n    FileStore.setBlob(fileId, file);\n\n    return ({\n        '@type': 'messageDocument',\n        document: {\n            '@type': 'document',\n            file_name: file.name,\n            mime_type: file.type,\n            minithumbnail: null,\n            thumbnail: null,\n            document: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            }\n        }\n    });\n}\n\nexport async function getMediaPhotoFromFile(file) {\n    if (!file) {\n        return null;\n    }\n\n    if (file.type.startsWith('image')) {\n        const [width, height] = await readImageSize(file);\n\n        const fileId = -getRandomInt(1, 1000000);\n        FileStore.setBlob(fileId, file);\n\n        const photoSize = {\n            '@type': 'photoSize',\n            photo: {\n                '@type': 'file',\n                id: fileId,\n                size: file.size,\n                expected_size: file.expected_size,\n                local: {\n                    is_downloading_completed: true\n                }\n            },\n            width,\n            height\n        };\n\n        return ({\n            '@type': 'messagePhoto',\n            photo: {\n                '@type': 'photo',\n                has_stickers: false,\n                minithumbnail: null,\n                sizes: [ photoSize ]\n            }\n        });\n    } else {\n        return null;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5.29289322,5.29289322 C5.68341751,4.90236893 6.31658249,4.90236893 6.70710678,5.29289322 L6.70710678,5.29289322 L12,10.585 L17.2928932,5.29289322 C17.6834175,4.90236893 18.3165825,4.90236893 18.7071068,5.29289322 C19.0976311,5.68341751 19.0976311,6.31658249 18.7071068,6.70710678 L13.415,12 L18.7071068,17.2928932 C19.0675907,17.6533772 19.0953203,18.2206082 18.7902954,18.6128994 L18.7071068,18.7071068 C18.3165825,19.0976311 17.6834175,19.0976311 17.2928932,18.7071068 L17.2928932,18.7071068 L12,13.415 L6.70710678,18.7071068 C6.31658249,19.0976311 5.68341751,19.0976311 5.29289322,18.7071068 C4.90236893,18.3165825 4.90236893,17.6834175 5.29289322,17.2928932 L10.585,12 L5.29289322,6.70710678 C4.93240926,6.34662282 4.90467972,5.77939176 5.20970461,5.38710056 Z' />,\n    'Close'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { getSearchMessagesFilter, openMedia } from '../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_VOLUME_NORMAL } from '../Constants';\nimport MessageStore from './MessageStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport { getRandomInt } from '../Utils/Common';\n\nconst RepeatEnum = Object.freeze({\n    NONE: 'NONE',\n    REPEAT: 'REPEAT',\n    REPEAT_ONE: 'REPEAT_ONE'\n});\n\nexport { RepeatEnum };\n\nclass PlayerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        const { playbackRate, volume } = this.loadPlayerSettings();\n\n        this.playbackRate = playbackRate;\n        this.volume = volume;\n        this.repeat = RepeatEnum.NONE;\n        this.shuffle = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.playlist = null;\n        this.message = null;\n        this.time = null;\n        this.videoStream = null;\n        this.instantView = null;\n        this.pageBlock = null;\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    onUpdate = async update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    close = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaClose'\n        });\n    };\n\n    loadPlayerSettings() {\n        const player = localStorage.getItem('player') || {};\n\n        let { playbackRate, volume } = player;\n\n        playbackRate =\n            playbackRate && Number(playbackRate) >= 1 && Number(playbackRate) <= 2\n                ? Number(playbackRate)\n                : PLAYER_PLAYBACKRATE_NORMAL;\n        volume = volume && Number(volume) >= 0 && Number(volume) <= 1 ? Number(volume) : PLAYER_VOLUME_NORMAL;\n\n        return { playbackRate, volume };\n    }\n\n    savePlayerSettings() {\n        const { volume, playbackRate } = this;\n\n        localStorage.setItem('player', JSON.stringify({ volume, playbackRate }));\n    }\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateMediaClose': {\n                this.reset();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaActive': {\n                const { chatId, messageId, instantView, pageBlock } = update;\n\n                const message = MessageStore.get(chatId, messageId);\n                if (message) {\n                    this.message = message;\n                    this.emit(update['@type'], update);\n                    this.getPlaylist(chatId, messageId);\n\n                    return;\n                } else if (instantView && pageBlock) {\n                    this.instantView = instantView;\n                    this.pageBlock = pageBlock;\n                    this.emit(update['@type'], update);\n                }\n\n                break;\n            }\n            case 'clientUpdateMediaVolume': {\n                const { volume } = update;\n\n                this.volume = volume;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaRepeat': {\n                const { repeat } = update;\n\n                this.repeat = repeat;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaShuffle': {\n                const { shuffle } = update;\n\n                this.shuffle = shuffle;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaybackRate': {\n                const { playbackRate } = update;\n\n                this.playbackRate = playbackRate;\n\n                this.savePlayerSettings();\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlay': {\n                this.playing = true;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaTitleMouseOver': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPause': {\n                this.playing = false;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaStop': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaNext': {\n                this.emit(update['@type'], update);\n\n                this.moveToNextMedia(false);\n                break;\n            }\n            case 'clientUpdateMediaPrev': {\n                this.emit(update['@type'], update);\n\n                this.moveToPrevMedia();\n                break;\n            }\n            case 'clientUpdateMediaEnding': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaEnd': {\n                this.emit(update['@type'], update);\n\n                if (update.moveNext) {\n                    if (this.moveToNextMedia(true)) {\n                    } else {\n                        this.close();\n                    }\n                } else {\n                    this.close();\n                }\n                break;\n            }\n            case 'clientUpdateMediaTime': {\n                const { duration, currentTime, timestamp } = update;\n\n                this.time = {\n                    currentTime: currentTime,\n                    duration: duration,\n                    timestamp: timestamp\n                };\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaCaptureStream': {\n                this.videoStream = update.stream;\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPlay': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerPause': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaViewerEnded': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistLoading': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistPrev': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylist': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'clientUpdateMediaPlaylistNext': {\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    moveToPrevMedia = () => {\n        if (!this.playlist) return;\n        if (!this.message) return;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return;\n\n        if (index + 1 < messages.length) {\n            const message = messages[index + 1];\n\n            openMedia(message.chat_id, message.id, false);\n        }\n    };\n\n    moveToNextMedia = useRepeatShuffle => {\n        if (!this.playlist) return false;\n        if (!this.message) return false;\n\n        const { chat_id, id } = this.message;\n        const { messages } = this.playlist;\n        if (!messages) return false;\n\n        const index = messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        let nextIndex = -1;\n        if (!useRepeatShuffle) {\n            nextIndex = index - 1;\n        } else {\n            switch (this.repeat) {\n                case RepeatEnum.NONE: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1;\n                    }\n                    break;\n                }\n                case RepeatEnum.REPEAT_ONE: {\n                    nextIndex = index;\n                    break;\n                }\n                case RepeatEnum.REPEAT: {\n                    if (this.shuffle) {\n                        nextIndex = getRandomInt(0, messages.length);\n                    } else {\n                        nextIndex = index - 1 >= 0 ? index - 1 : messages.length - 1;\n                    }\n                    break;\n                }\n            }\n        }\n\n        if (nextIndex >= 0) {\n            const message = messages[nextIndex];\n\n            openMedia(message.chat_id, message.id, false);\n            return true;\n        }\n\n        return false;\n    };\n\n    getPlaylist = async (chatId, messageId) => {\n        const { playlist: currentPlaylist } = this;\n\n        if (currentPlaylist) {\n            const { messages } = currentPlaylist;\n            if (messages && messages.findIndex(x => x.chat_id === chatId && x.id === messageId) !== -1) {\n                return;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylistLoading',\n            chatId: chatId,\n            messageId: messageId\n        });\n\n        const filter = getSearchMessagesFilter(chatId, messageId);\n        if (!filter) {\n            this.playlist = {\n                chatId: chatId,\n                messageId: messageId,\n                totalCount: 1,\n                messages: [MessageStore.get(chatId, messageId)]\n            };\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylist',\n                playlist: this.playlist\n            });\n\n            return;\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: messageId,\n            offset: -50,\n            limit: 100,\n            filter: filter\n        });\n\n        MessageStore.setItems(result.messages);\n\n        const { total_count, messages } = result;\n\n        this.playlist = {\n            chatId: chatId,\n            messageId: messageId,\n            totalCount: total_count,\n            messages: messages\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaylist',\n            playlist: this.playlist\n        });\n    };\n}\n\nconst store = new PlayerStore();\nwindow.player = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport dateFormat from '../Utils/Date';\nimport { getFirstLetter, getLetters, getSize } from './Common';\nimport { PROFILE_PHOTO_BIG_SIZE, PROFILE_PHOTO_SMALL_SIZE, SERVICE_NOTIFICATIONS_USER_ID } from '../Constants';\nimport UserStore from '../Stores/UserStore';\n\nfunction getUserStatus(user) {\n    if (!user) return null;\n    if (!user.status) return null;\n\n    if (user.id === SERVICE_NOTIFICATIONS_USER_ID) {\n        return 'service notifications';\n    }\n\n    if (user.type && user.type['@type'] === 'userTypeBot') {\n        return 'bot';\n    }\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 'last seen a long time ago';\n        }\n        case 'userStatusLastMonth': {\n            return 'last seen within a month';\n        }\n        case 'userStatusLastWeek': {\n            return 'last seen within a week';\n        }\n        case 'userStatusOffline': {\n            let { was_online } = user.status;\n            if (!was_online) return 'offline';\n\n            const now = new Date();\n            const wasOnline = new Date(was_online * 1000);\n            if (wasOnline > now) {\n                return 'last seen just now';\n            }\n\n            let diff = new Date(now - wasOnline);\n\n            // within a minute\n            if (diff.getTime() / 1000 < 60) {\n                return 'last seen just now';\n            }\n\n            // within an hour\n            if (diff.getTime() / 1000 < 60 * 60) {\n                const minutes = Math.floor(diff.getTime() / 1000 / 60);\n                return `last seen ${minutes === 1 ? '1 minute' : minutes + ' minutes'} ago`;\n            }\n\n            // today\n            const today = new Date();\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > today) {\n                // up to 6 hours ago\n                if (diff.getTime() / 1000 < 6 * 60 * 60) {\n                    const hours = Math.floor(diff.getTime() / 1000 / 60 / 60);\n                    return `last seen ${hours === 1 ? '1 hour' : hours + ' hours'} ago`;\n                }\n\n                // other\n                return `last seen today at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            // yesterday\n            let yesterday = new Date();\n            yesterday.setDate(now.getDate() - 1);\n            today.setHours(0, 0, 0, 0);\n            if (wasOnline > yesterday) {\n                return `last seen yesterday at ${dateFormat(wasOnline, 'H:MM')}`;\n            }\n\n            return `last seen ${dateFormat(wasOnline, 'dd.mm.yyyy')}`;\n        }\n        case 'userStatusOnline': {\n            return 'online';\n        }\n        case 'userStatusRecently': {\n            return 'last seen recently';\n        }\n    }\n\n    return null;\n}\n\nfunction isUserOnline(user) {\n    if (!user) return false;\n\n    const { id, status, type } = user;\n    if (!status) return false;\n    if (!type) return false;\n    if (id === SERVICE_NOTIFICATIONS_USER_ID) return false;\n\n    return status['@type'] === 'userStatusOnline' && type['@type'] !== 'userTypeBot';\n}\n\nfunction getUserFullName(userId, user, t = k => k) {\n    user = UserStore.get(userId) || user;\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name && last_name) return `${first_name} ${last_name}`;\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction getUserShortName(userId, t = k => k) {\n    const user = UserStore.get(userId);\n    if (!user) return null;\n\n    const { type, first_name, last_name } = user;\n    if (!type) return null;\n\n    switch (type['@type']) {\n        case 'userTypeBot':\n        case 'userTypeRegular': {\n            if (first_name) return first_name;\n            if (last_name) return last_name;\n        }\n        case 'userTypeDeleted':\n        case 'userTypeUnknown': {\n            return t('HiddenName');\n        }\n    }\n\n    return null;\n}\n\nfunction isUserBlocked(userId) {\n    const fullInfo = UserStore.getFullInfo(userId);\n    if (fullInfo) {\n        return fullInfo.is_blocked;\n    }\n\n    return false;\n}\n\nfunction getUserLetters(userId, firstName, lastName, t) {\n    const user = UserStore.get(userId);\n    if (!user && !(firstName || lastName)) return null;\n\n    const title = getUserFullName(userId, null, t) || `${firstName} ${lastName}`.trim();\n    const letters = getLetters(title);\n    if (letters && letters.length > 0) {\n        return letters;\n    }\n\n    if (user) {\n        firstName = user.first_name;\n        lastName = user.last_name;\n    }\n\n    const firstNameSymbol = getFirstLetter(firstName) || firstName.charAt(0);\n    if (firstNameSymbol) return firstNameSymbol;\n\n    const lastNameSymbol = getFirstLetter(lastName) || lastName.charAt(0);\n    if (lastNameSymbol) return lastNameSymbol;\n\n    return '';\n}\n\nfunction getUserStatusOrder(user) {\n    if (!user) return 0;\n    if (!user.status) return 0;\n    if (user.type['@type'] === 'userTypeBot') return 0;\n\n    switch (user.status['@type']) {\n        case 'userStatusEmpty': {\n            return 1;\n        }\n        case 'userStatusLastMonth': {\n            return 10;\n        }\n        case 'userStatusLastWeek': {\n            return 100;\n        }\n        case 'userStatusOffline': {\n            return user.status.was_online;\n        }\n        case 'userStatusOnline': {\n            return user.status.expires;\n        }\n        case 'userStatusRecently': {\n            return 1000;\n        }\n    }\n}\n\nfunction getProfilePhoto(photo) {\n    if (!photo) return null;\n\n    const { id, sizes } = photo;\n    if (!sizes) return null;\n    if (!sizes.length) return null;\n\n    const { photo: small } = getSize(sizes, PROFILE_PHOTO_SMALL_SIZE);\n    const { photo: big } = getSize(sizes, PROFILE_PHOTO_BIG_SIZE);\n\n    return {\n        '@type': 'profilePhoto',\n        id,\n        small,\n        big\n    };\n}\n\nfunction getProfilePhotoDateHint(userProfilePhoto) {\n    if (!userProfilePhoto) return null;\n\n    const { added_date } = userProfilePhoto;\n    if (!added_date) return null;\n\n    const date = new Date(added_date * 1000);\n    return dateFormat(date, 'H:MM:ss d.mm.yyyy');\n}\n\nexport function isDeletedUser(userId) {\n    const user = UserStore.get(userId);\n\n    return user && user.type['@type'] === 'userTypeDeleted';\n}\n\nexport {\n    getUserStatus,\n    isUserOnline,\n    getUserFullName,\n    isUserBlocked,\n    getUserLetters,\n    getUserStatusOrder,\n    getProfilePhoto,\n    getProfilePhotoDateHint,\n    getUserShortName\n};\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './FileProgress.css';\n\nclass FileProgress extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.completeAnimation = false;\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { download, upload, icon, thumbnailSrc } = this.props;\n\n        if (nextProps.thumbnailSrc !== thumbnailSrc) {\n            return true;\n        }\n\n        if (nextProps.icon !== icon) {\n            return true;\n        }\n\n        if (this.isDownloading(nextState.file, nextState.prevFile) && !download) {\n            return false;\n        }\n\n        if (this.isUploading(nextState.file, nextState.prevFile) && !upload) {\n            return false;\n        }\n\n        const nextLocal = nextState.file ? nextState.file.local : null;\n        const nextIdbKey = nextState.file ? nextState.file.idb_key : null;\n        const prevLocal = this.state.prevFile ? this.state.prevFile.local : null;\n        const prevIdbKey = this.state.prevFile ? this.state.prevFile.idb_key : null;\n        const isDownloadingCompleted =\n            prevLocal && nextLocal && !prevLocal.is_downloading_completed && nextLocal.is_downloading_completed;\n        const receiveIdbKey = nextIdbKey && !prevIdbKey;\n\n        if (nextState.file.id === this.state.file.id && isDownloadingCompleted && receiveIdbKey) {\n            return false;\n        }\n\n        if (nextState.file !== this.state.file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== this.state.prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mount = true;\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        this.mount = false;\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    fileEquals(file1, file2) {\n        if (file1 === file2 && file1 === null) return true;\n        if (file1 !== null && file2 === null) return false;\n        if (file1 === null && file2 !== null) return false;\n\n        const { local: local1, remote: remote1 } = file1;\n        const { local: local2, remote: remote2 } = file2;\n\n        if (local1.can_be_deleted !== local2.can_be_deleted) return false;\n        if (local1.can_be_downloaded !== local2.can_be_downloaded) return false;\n        if (local1.download_offset !== local2.download_offset) return false;\n        if (local1.downloaded_prefix_size !== local2.downloaded_prefix_size) return false;\n        if (local1.downloaded_size !== local2.downloaded_size) return false;\n        if (local1.is_downloading_active !== local2.is_downloading_active) return false;\n        if (local1.is_downloading_completed !== local2.is_downloading_completed) return false;\n        if (local1.path !== local2.path) return false;\n\n        if (remote1.id !== remote2.id) return false;\n        if (remote1.is_uploading_active !== remote2.is_uploading_active) return false;\n        if (remote1.is_uploading_completed !== remote2.is_uploading_completed) return false;\n        if (remote1.uploaded_size !== remote2.uploaded_size) return false;\n\n        return true;\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            if (this.fileEquals(nextFile, currentFile)) {\n                // console.log('[fp] update equals', nextFile, currentFile);\n            } else {\n                // console.log('[fp] update', nextFile, currentFile);\n                this.setState({ file: nextFile, prevFile: currentFile });\n            }\n        }\n    };\n\n    isDownloading = (file, prevFile) => {\n        if (!this.props.download) return false;\n\n        const wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n        const isActive = file && file.local && file.local.is_downloading_active;\n\n        return wasActive || isActive;\n    };\n\n    isUploading = (file, prevFile) => {\n        if (!this.props.upload) return false;\n\n        const wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n        const isActive = file && file.remote && file.remote.is_uploading_active;\n\n        return wasActive || isActive;\n    };\n\n    getProgressParams = (file, prevFile) => {\n        const { local, remote } = file;\n\n        let wasActive = false;\n        let isActive = false;\n        let isCompleted = false;\n        let progressSize = 0;\n        let size = 0;\n        if (this.isDownloading(file, prevFile)) {\n            wasActive = prevFile && prevFile.local && prevFile.local.is_downloading_active;\n            isActive = local.is_downloading_active;\n            isCompleted = local.is_downloading_completed;\n            progressSize = local.downloaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isDownloading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else if (this.isUploading(file, prevFile)) {\n            wasActive = prevFile && prevFile.remote && prevFile.remote.is_uploading_active;\n            isActive = remote.is_uploading_active;\n            isCompleted = remote.is_uploading_completed;\n            progressSize = remote.uploaded_size;\n            size = file.size;\n            // console.log(\n            //     `FileProgress.getProgressParams isUploading id=${\n            //         file.id\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        } else {\n            // console.log(\n            //     `FileProgress.getProgressParams none id=${file.id} download=${this.props.download} upload=${\n            //         this.props.upload\n            //     } was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} progress_size=${progressSize} size=${size}`,\n            //     file,\n            //     prevFile\n            // );\n        }\n\n        return [wasActive, isActive, isCompleted, progressSize, size];\n    };\n\n    render() {\n        let { thumbnailSrc, cancelButton, zIndex, icon, completeIcon } = this.props;\n        const { file, prevFile } = this.state;\n        if (!file) return null;\n\n        const [wasActive, isActive, isCompleted, progressSize, size] = this.getProgressParams(file, prevFile);\n\n        let inProgress = isActive;\n        let progress = 0;\n        if (isActive) {\n            progress = progressSize && size ? 100 - ((size - progressSize) / size) * 100 : 1;\n        }\n\n        const startCompleteAnimation = wasActive && !isActive;\n        if (startCompleteAnimation) {\n            this.completeAnimation = true;\n            // console.log('FileProgress.render animationComplete=true');\n            progress = isCompleted ? 100 : 0;\n            inProgress = true;\n            setTimeout(() => {\n                this.completeAnimation = false;\n                if (!this.mount) return;\n                // console.log('FileProgress.render animationComplete=false');\n\n                this.setState({ prevFile: null });\n            }, ANIMATION_DURATION_300MS);\n        }\n\n        const style = {\n            zIndex: zIndex,\n            background: !thumbnailSrc && typeof thumbnailSrc !== 'undefined' ? null : 'rgba(0, 0, 0, 0.25)'\n        };\n\n        const isDownloadingCompleted =\n            file &&\n            file.local &&\n            (file.local.is_downloading_completed || file.idb_key || file.local.is_uploading_completed) &&\n            !this.completeAnimation &&\n            !isActive;\n\n        // console.log(\n        //     `[fp]] render \\\\\n        //     id=${file.id} showProgress=${inProgress} progress=${progress} \\\\\n        //     was_active=${wasActive} is_active=${isActive} is_completed=${isCompleted} \\\\\n        //     progress_size=${progressSize} size=${size} complete_animation=${this.completeAnimation} \\\\\n        //     is_downloading_completed=${isDownloadingCompleted}\n        //     completeIcon=${completeIcon}`,\n        //     file,\n        //     prevFile\n        // );\n        //cancelButton = true;\n        //inProgress = true;\n\n        if (isDownloadingCompleted) {\n            // console.log('FileProgress.render completeIcon');\n            if (completeIcon) {\n                return (\n                    <div className={classNames('file-progress', 'file-progress-complete')} style={style}>\n                        {completeIcon}\n                    </div>\n                );\n            }\n\n            return null;\n        }\n\n        if (inProgress || this.completeAnimation) {\n            // console.log('FileProgress.render inProgressIcon');\n            return (\n                <div className='file-progress' style={style}>\n                    <CircularProgress\n                        className='file-progress-indicator'\n                        classes={{ circle: 'file-progress-circle' }}\n                        variant='static'\n                        value={progress}\n                        size={48}\n                        thickness={2}\n                    />\n                    {cancelButton && <CloseIcon />}\n                </div>\n            );\n        }\n\n        if (icon) {\n            // console.log('FileProgress.render icon');\n            return (\n                <div className='file-progress' style={style}>\n                    {icon}\n                </div>\n            );\n        }\n\n        return null;\n    }\n}\n\nFileProgress.propTypes = {\n    file: PropTypes.object.isRequired,\n    thumbnailSrc: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    cancelButton: PropTypes.bool,\n    download: PropTypes.bool,\n    upload: PropTypes.bool,\n    zIndex: PropTypes.number,\n\n    icon: PropTypes.node,\n    completeIcon: PropTypes.node\n};\n\nFileProgress.defaultProps = {\n    cancelButton: false,\n    download: true,\n    upload: false\n};\n\nexport default FileProgress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { randomString } from './Helpers';\n// eslint-disable-next-line import/no-webpack-loader-syntax\nimport PakoWorker from './pako.worker';\n\nconst worker = new PakoWorker();\nconst handlers = new Map();\n\nworker.onmessage = event => {\n    const { data } = event;\n    if (!data) return;\n\n    const { key, error, result, msg } = data;\n\n    const { resolve, reject } = handlers.get(key);\n    handlers.delete(key);\n\n    if (!error) {\n        resolve(result);\n    } else {\n        reject(msg);\n    }\n};\n\nexport async function inflateBlob(blob) {\n    const key = randomString();\n    return new Promise((resolve, reject) => {\n        handlers.set(key, { resolve, reject });\n        worker.postMessage({ key, blob });\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function randomString() {\n    return (\n        '$' +\n        Math.random()\n            .toString(36)\n            .slice(2, 10)\n    );\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n// import Lottie from '../../Viewer/Lottie';\nimport { isBlurredThumbnail, isValidAnimatedSticker } from '../../../Utils/Media';\nimport { getFitSize } from '../../../Utils/Common';\nimport { getBlob, getSrc } from '../../../Utils/File';\nimport { inflateBlob } from '../../../Workers/BlobInflator';\nimport { STICKER_DISPLAY_SIZE } from '../../../Constants';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport StickerStore from '../../../Stores/StickerStore';\nimport './Sticker.css';\n\nconst Lottie = React.lazy(() => import('../../Viewer/Lottie'));\n\nexport const StickerSourceEnum = Object.freeze({\n    HINTS: 'HINTS',\n    MESSAGE: 'MESSAGE',\n    PICKER_HEADER: 'PICKER_HEADER',\n    PICKER: 'PICKER',\n    PREVIEW: 'PREVIEW',\n    STICKER_SET: 'STICKER_SET',\n    UNKNOWN: 'UNKNOWN'\n});\n\nclass Sticker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.stickerPreview = StickerStore.stickerPreview;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.state = {\n            animationDate: null,\n            hasError: false\n        };\n    }\n\n    static getDerivedStateFromError(error) {\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        console.log('[Sticker] render error', error, errorInfo);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, messageId, sticker, blur, displaySize } = this.props;\n        const { animationData } = this.state;\n\n        if (animationData !== nextState.animationData) {\n            return true;\n        }\n\n        if (chatId !== nextProps.chatId) {\n            return true;\n        }\n\n        if (messageId !== nextProps.messageId) {\n            return true;\n        }\n\n        if (sticker !== nextProps.sticker) {\n            return true;\n        }\n\n        if (blur !== nextProps.blur) {\n            return true;\n        }\n\n        if (displaySize !== nextProps.displaySize) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.sticker !== this.props.sticker) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.on('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.on('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.on('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdateStickerThumbnailBlob);\n        FileStore.off('clientUpdateStickerBlob', this.onClientUpdateStickerBlob);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        StickerStore.off('clientUpdateStickerPreview', this.onClientUpdateStickerPreview);\n        StickerStore.off('clientUpdateStickerSet', this.onClientUpdateStickerSet);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateDialogChatId = update => {\n        this.dialogChatId = ApplicationStore.dialogChatId;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerPreview = update => {\n        this.stickerPreview = update.sticker;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.openedStickerSet = stickerSet;\n\n        this.startStopAnimation();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        const { chatId, messageId, sticker } = this.props;\n\n        const isAnimated = isValidAnimatedSticker(sticker, chatId, messageId);\n        if (!isAnimated) return;\n\n        this.windowFocused = focused;\n        this.startStopAnimation();\n    };\n\n    startStopAnimation() {\n        const { autoplay } = this.props;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (\n            this.windowFocused &&\n            !this.stickerPreview &&\n            !this.openMediaViewer &&\n            !this.openProfileMediaViewer &&\n            !this.openIV &&\n            !this.dialogChatId\n        ) {\n            if (this.entered) {\n                // console.log('[Sticker] play 1');\n                player.play();\n                this.pause = false;\n                return;\n            }\n\n            // console.log('[Sticker] startStopAnimation', this.openedStickerSet);\n            if (!this.openedStickerSet) {\n                if (this.paused) {\n                    // console.log('[Sticker] play 2');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n\n                if (autoplay && this.inView) {\n                    // console.log('[Sticker] play 3');\n                    player.play();\n                    this.paused = false;\n                    return;\n                }\n            }\n        }\n\n        // console.log('[Sticker] pause');\n        this.paused = player.pause();\n    }\n\n    onClientUpdateStickerBlob = update => {\n        const { sticker, is_animated } = this.props.sticker;\n        const { fileId } = update;\n\n        if (!sticker) return;\n\n        if (sticker.id === fileId) {\n            if (is_animated) {\n                this.loadContent();\n            } else {\n                this.forceUpdate();\n            }\n        }\n    };\n\n    onClientUpdateStickerThumbnailBlob = update => {\n        const { thumbnail } = this.props.sticker;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = async () => {\n        const { chatId, messageId, sticker: source, autoplay, play } = this.props;\n        const { is_animated, sticker } = source;\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        if (!is_animated) return;\n        if (!isAnimated) return;\n        if (!play) return;\n\n        const blob = getBlob(sticker);\n        if (!blob) return;\n\n        let animationData = null;\n        try {\n            // animationData = StickerStore.getAnimationData(blob);\n            // if (animationData) {\n            //     this.setState({ animationData });\n            //     return;\n            // }\n            const result = await inflateBlob(blob);\n            if (!result) return;\n\n            animationData = JSON.parse(result);\n            // StickerStore.setAnimationData(blob, animationData);\n        } catch (err) {\n            console.log('[Sticker] loadContent error', err);\n        }\n        if (!animationData) return;\n\n        if (autoplay) {\n            this.setState({ animationData });\n        } else {\n            this.animationData = animationData;\n        }\n    };\n\n    handleMouseEnter = event => {\n        const { animationData } = this;\n        // console.log('[Sticker] handleMouseEnter', animationData);\n        if (animationData) {\n            this.setState({ animationData }, () => {\n                this.handleAnimationMouseEnter();\n            });\n        }\n    };\n\n    handleAnimationMouseEnter = () => {\n        // console.log('[Sticker] handleAnimationMouseEnter 1');\n        if (this.props.autoplay) return;\n\n        this.entered = true;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        // console.log('[Sticker] handleAnimationMouseEnter 2');\n        this.loopCount = 0;\n        this.startStopAnimation();\n    };\n\n    handleAnimationLoopComplete = () => {\n        if (this.props.autoplay) return;\n\n        const player = this.lottieRef.current;\n        if (!player) return;\n\n        if (!this.entered) this.loopCount += 1;\n        if (this.loopCount > 2) {\n            const { animationData } = this.state;\n            if (animationData) {\n                this.setState({ animationData: null });\n            }\n        }\n    };\n\n    handleAnimationMouseOut = () => {\n        this.entered = false;\n    };\n\n    render() {\n        const {\n            chatId,\n            messageId,\n            autoplay,\n            className,\n            displaySize,\n            blur,\n            sticker: source,\n            style,\n            openMedia,\n            preview\n        } = this.props;\n        const { thumbnail, sticker, width, height } = source;\n        const { animationData, hasError } = this.state;\n\n        const isAnimated = isValidAnimatedSticker(source, chatId, messageId);\n\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(sticker);\n        const isBlurred = isBlurredThumbnail(thumbnail);\n\n        if (hasError) {\n            const style = {\n                width: displaySize,\n                height: displaySize\n            };\n\n            if (process.env.NODE_ENV !== 'production') {\n                style.background = '#ff000066';\n            }\n\n            return (\n                <div className={classNames('sticker', className)} style={style} onClick={openMedia}>\n                    <img\n                        className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                        draggable={false}\n                        src={thumbnailSrc}\n                        alt=''\n                    />\n                </div>\n            );\n        }\n\n        let content = null;\n        const fitSize = getFitSize({ width: width, height: height }, displaySize);\n        if (fitSize) {\n            content = isAnimated ? (\n                <>\n                    {animationData ? (\n                        <React.Suspense fallback={null}>\n                            <Lottie\n                                ref={this.lottieRef}\n                                options={{\n                                    autoplay: autoplay,\n                                    loop: true,\n                                    animationData,\n                                    renderer: 'svg',\n                                    rendererSettings: {\n                                        preserveAspectRatio: 'xMinYMin slice', // Supports the same options as the svg element's preserveAspectRatio property\n                                        clearCanvas: false,\n                                        progressiveLoad: true, // Boolean, only svg renderer, loads dom elements when needed. Might speed up initialization for large number of elements.\n                                        hideOnTransparent: true, //Boolean, only svg renderer, hides elements when opacity reaches 0 (defaults to true)\n                                        className: 'lottie-svg'\n                                    }\n                                }}\n                                eventListeners={[\n                                    {\n                                        eventName: 'loopComplete',\n                                        callback: this.handleAnimationLoopComplete\n                                    }\n                                ]}\n                                onMouseOut={this.handleAnimationMouseOut}\n                            />\n                        </React.Suspense>\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            ) : (\n                <>\n                    {src && !preview ? (\n                        <img className='sticker-image' draggable={false} src={src} alt='' />\n                    ) : (\n                        <img\n                            className={classNames('sticker-image', { 'media-blurred': isBlurred && blur })}\n                            draggable={false}\n                            src={thumbnailSrc}\n                            alt=''\n                        />\n                    )}\n                </>\n            );\n        }\n\n        const stickerStyle = {\n            width: fitSize ? fitSize.width : 0,\n            height: fitSize ? fitSize.height : 0,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('sticker', className)}\n                style={stickerStyle}\n                onClick={openMedia}\n                onMouseEnter={this.handleMouseEnter}>\n                {content}\n            </div>\n        );\n    }\n}\n\nSticker.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    sticker: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    autoplay: PropTypes.bool,\n    play: PropTypes.bool,\n    blur: PropTypes.bool,\n    displaySize: PropTypes.number,\n    preview: PropTypes.bool,\n    source: PropTypes.string\n};\n\nSticker.defaultProps = {\n    chatId: 0,\n    messageId: 0,\n    openMedia: () => {},\n\n    autoplay: true,\n    play: true,\n    blur: true,\n    displaySize: STICKER_DISPLAY_SIZE,\n    preview: false,\n    source: StickerSourceEnum.UNKNOWN\n};\n\nexport default Sticker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass StickerStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.stickerSet = null;\n        this.hint = null;\n        this.animationData = new WeakMap();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateInstalledStickerSets': {\n                const { sticker_set_ids } = update;\n                if (this.stickerSet) {\n                    const { id, is_installed } = this.stickerSet;\n                    if (is_installed !== sticker_set_ids.some(x => x === id)) {\n                        this.stickerSet = Object.assign({}, this.stickerSet, { is_installed: !is_installed });\n                    }\n                }\n\n                this.emit('updateInstalledStickerSets', update);\n                break;\n            }\n            case 'updateRecentStickers': {\n                this.emit('updateRecentStickers', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateStickerSend': {\n                this.emit('clientUpdateStickerSend', update);\n                break;\n            }\n            case 'clientUpdateLocalStickersHint': {\n                const { hint } = update;\n\n                this.hint = hint;\n\n                this.emit('clientUpdateLocalStickersHint', update);\n                break;\n            }\n            case 'clientUpdateRemoteStickersHint': {\n                const { hint } = update;\n\n                if (this.hint && this.hint.timestamp === hint.timestamp) {\n                    this.hint = Object.assign({}, this.hint, { foundStickers: hint.stickers });\n                }\n\n                this.emit('clientUpdateRemoteStickersHint', update);\n                break;\n            }\n            case 'clientUpdateStickerSet': {\n                const { stickerSet } = update;\n\n                this.stickerSet = stickerSet;\n\n                this.emit('clientUpdateStickerSet', update);\n                break;\n            }\n            case 'clientUpdateStickerSetPosition': {\n                this.emit('clientUpdateStickerSetPosition', update);\n                break;\n            }\n            case 'clientUpdateStickerPreview': {\n                this.emit('clientUpdateStickerPreview', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    getAnimationData(key) {\n        return this.animationData.get(key);\n    }\n\n    setAnimationData(key, data) {\n        this.animationData.set(key, data);\n    }\n}\n\nconst store = new StickerStore();\nwindow.sticker = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass BasicGroupStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = new Map();\n        this.fullInfoItems = new Map();\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateBasicGroup': {\n                this.set(update.basic_group);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            case 'updateBasicGroupFullInfo': {\n                this.setFullInfo(update.basic_group_id, update.basic_group_full_info);\n\n                this.emit(update['@type'], update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {};\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    get(groupId) {\n        return this.items.get(groupId);\n    }\n\n    set(group) {\n        this.items.set(group.id, group);\n    }\n\n    getFullInfo(id) {\n        return this.fullInfoItems.get(id);\n    }\n\n    setFullInfo(id, fullInfo) {\n        this.fullInfoItems.set(id, fullInfo);\n    }\n}\n\nconst store = new BasicGroupStore();\nwindow.basicgroup = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport { getUserLetters, isDeletedUser } from '../../Utils/User';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './UserTile.css';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\n\nclass UserTile extends Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                user: UserStore.get(this.props.userId),\n                loaded: false\n            };\n        } else {\n            this.state = {\n                loaded: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextProps.userId !== this.props.userId) {\n            return true;\n        }\n\n        if (nextState.loaded !== this.state.loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onClientUpdateUserBlob = update => {\n        const { userId } = this.props;\n\n        if (userId !== update.userId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { userId } = this.props;\n        const { chatId } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n            }\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { userId } = this.props;\n        const { chat_id, photo } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId) return;\n\n                if (this.state.loaded) {\n                    this.setState({ loaded: false });\n                } else {\n                    this.forceUpdate();\n                }\n\n                if (photo) {\n                    const store = FileStore.getStore();\n                    loadChatContent(store, chat);\n                }\n            }\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { userId } = this.props;\n\n        const chat = ChatStore.get(update.chat_id);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup':\n            case 'chatTypeSupergroup': {\n                return;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                if (chat.type.user_id !== userId && !chat.photo) return;\n\n                this.forceUpdate();\n            }\n        }\n    };\n\n    handleSelect = event => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(userId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { className, userId, fistName, lastName, onSelect, small, dialog, poll, t } = this.props;\n        const { loaded } = this.state;\n\n        const user = UserStore.get(userId);\n        if (!user && !(fistName || lastName)) return null;\n\n        if (isDeletedUser(userId)) {\n            return (\n                <div\n                    className={classNames(\n                        className,\n                        'user-tile',\n                        'tile_color_0',\n                        { pointer: onSelect },\n                        { 'tile-dialog': dialog },\n                        { 'tile-small': small },\n                        { 'tile-poll': poll }\n                    )}\n                    onClick={this.handleSelect}>\n                    <div className='tile-photo'>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize='default' />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const letters = getUserLetters(userId, fistName, lastName, t);\n        const src = getSrc(user && user.profile_photo ? user.profile_photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(userId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    className,\n                    'user-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-poll': poll }\n                )}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n            </div>\n        );\n    }\n}\n\nUserTile.propTypes = {\n    userId: PropTypes.number.isRequired,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    onSelect: PropTypes.func,\n    small: PropTypes.bool\n};\n\nexport default withTranslation()(UserTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getSize, getFitSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_DISPLAY_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Photo.css';\n\nclass Photo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { photo, size, thumbnailSize } = props;\n        if (photo !== state.prevPhoto) {\n            return {\n                prevPhoto: photo,\n                photoSize: getSize(photo.sizes, size),\n                thumbSize: getSize(photo.sizes, thumbnailSize),\n                minithumbnail: photo ? photo.minithumbnail : null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { className, displaySize, openMedia, showProgress, title, caption, type, style } = this.props;\n        const { thumbSize, photoSize, minithumbnail } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = (!thumbSrc && miniSrc) || isBlurredThumbnail(thumbSize);\n\n        const fitPhotoSize = getFitSize(photoSize, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        // console.log('[photo] render', displaySize, fitPhotoSize);\n        const photoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const hasSrc = Boolean(src || thumbSrc || miniSrc);\n\n        return (\n            <div\n                className={classNames(className, 'photo', {\n                    'photo-big': type === 'message',\n                    'photo-title': title,\n                    'photo-caption': caption,\n                    pointer: openMedia\n                })}\n                style={photoStyle}\n                onClick={openMedia}>\n                {hasSrc && (\n                    <img\n                        className={classNames('photo-image', {\n                            'media-blurred': !src && isBlurred,\n                            'media-mini-blurred': !src && !thumbSrc && isBlurred\n                        })}\n                        draggable={false}\n                        src={src || thumbSrc || miniSrc}\n                        alt=''\n                    />\n                )}\n                {showProgress && <FileProgress file={photoSize.photo} download upload cancelButton />}\n            </div>\n        );\n    }\n}\n\nPhoto.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    photo: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    showProgress: PropTypes.bool,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    displaySize: PropTypes.number,\n    style: PropTypes.object\n};\n\nPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    showProgress: true\n};\n\nexport default Photo;\n","/*\n * Date Format 1.2.3\n * (c) 2007-2009 Steven Levithan <stevenlevithan.com>\n * MIT license\n *\n * Includes enhancements by Scott Trenda <scott.trenda.net>\n * and Kris Kowal <cixar.com/~kris.kowal/>\n *\n * Accepts a date, a mask, or a date and a mask.\n * Returns a formatted version of the given date.\n * The date defaults to the current date/time.\n * The mask defaults to dateFormat.masks.default.\n */\n\nconst dateFormat = (function() {\n    const token = /d{1,4}|m{1,4}|yy(?:yy)?|([HhMsTt])\\1?|[LloSZWN]|\"[^\"]*\"|'[^']*'/g;\n    const timezone = /\\b(?:[PMCEA][SDP]T|(?:Pacific|Mountain|Central|Eastern|Atlantic) (?:Standard|Daylight|Prevailing) Time|(?:GMT|UTC)(?:[-+]\\d{4})?)\\b/g;\n    const timezoneClip = /[^-+\\dA-Z]/g;\n\n    // Regexes and supporting functions are cached through closure\n    return function(date, mask, utc, gmt) {\n        // You can't provide utc if you skip other args (use the 'UTC:' mask prefix)\n        if (arguments.length === 1 && kindOf(date) === 'string' && !/\\d/.test(date)) {\n            mask = date;\n            date = undefined;\n        }\n\n        date = date || new Date();\n\n        if (!(date instanceof Date)) {\n            date = new Date(date);\n        }\n\n        if (isNaN(date)) {\n            throw TypeError('Invalid date');\n        }\n\n        mask = String(dateFormat.masks[mask] || mask || dateFormat.masks['default']);\n\n        // Allow setting the utc/gmt argument via the mask\n        var maskSlice = mask.slice(0, 4);\n        if (maskSlice === 'UTC:' || maskSlice === 'GMT:') {\n            mask = mask.slice(4);\n            utc = true;\n            if (maskSlice === 'GMT:') {\n                gmt = true;\n            }\n        }\n\n        var _ = utc ? 'getUTC' : 'get';\n        var d = date[_ + 'Date']();\n        var D = date[_ + 'Day']();\n        var m = date[_ + 'Month']();\n        var y = date[_ + 'FullYear']();\n        var H = date[_ + 'Hours']();\n        var M = date[_ + 'Minutes']();\n        var s = date[_ + 'Seconds']();\n        var L = date[_ + 'Milliseconds']();\n        var o = utc ? 0 : date.getTimezoneOffset();\n        var W = getWeek(date);\n        var N = getDayOfWeek(date);\n        var flags = {\n            d: d,\n            dd: pad(d),\n            ddd: dateFormat.i18n.dayNames[D],\n            dddd: dateFormat.i18n.dayNames[D + 7],\n            m: m + 1,\n            mm: pad(m + 1),\n            mmm: dateFormat.i18n.monthNames[m],\n            mmmm: dateFormat.i18n.monthNames[m + 12],\n            yy: String(y).slice(2),\n            yyyy: y,\n            h: H % 12 || 12,\n            hh: pad(H % 12 || 12),\n            H: H,\n            HH: pad(H),\n            M: M,\n            MM: pad(M),\n            s: s,\n            ss: pad(s),\n            l: pad(L, 3),\n            L: pad(Math.round(L / 10)),\n            t: H < 12 ? dateFormat.i18n.timeNames[0] : dateFormat.i18n.timeNames[1],\n            tt: H < 12 ? dateFormat.i18n.timeNames[2] : dateFormat.i18n.timeNames[3],\n            T: H < 12 ? dateFormat.i18n.timeNames[4] : dateFormat.i18n.timeNames[5],\n            TT: H < 12 ? dateFormat.i18n.timeNames[6] : dateFormat.i18n.timeNames[7],\n            Z: gmt ? 'GMT' : utc ? 'UTC' : (String(date).match(timezone) || ['']).pop().replace(timezoneClip, ''),\n            o: (o > 0 ? '-' : '+') + pad(Math.floor(Math.abs(o) / 60) * 100 + (Math.abs(o) % 60), 4),\n            S: ['th', 'st', 'nd', 'rd'][d % 10 > 3 ? 0 : (((d % 100) - (d % 10) != 10) * d) % 10],\n            W: W,\n            N: N\n        };\n\n        return mask.replace(token, function(match) {\n            if (match in flags) {\n                return flags[match];\n            }\n            return match.slice(1, match.length - 1);\n        });\n    };\n})();\n\ndateFormat.masks = {\n    default: 'ddd mmm dd yyyy HH:MM:ss',\n    shortDate: 'm/d/yy',\n    mediumDate: 'mmm d, yyyy',\n    longDate: 'mmmm d, yyyy',\n    fullDate: 'dddd, mmmm d, yyyy',\n    shortTime: 'h:MM TT',\n    mediumTime: 'h:MM:ss TT',\n    longTime: 'h:MM:ss TT Z',\n    isoDate: 'yyyy-mm-dd',\n    isoTime: 'HH:MM:ss',\n    isoDateTime: \"yyyy-mm-dd'T'HH:MM:sso\",\n    isoUtcDateTime: \"UTC:yyyy-mm-dd'T'HH:MM:ss'Z'\",\n    expiresHeaderFormat: 'ddd, dd mmm yyyy HH:MM:ss Z'\n};\n\n// Internationalization strings\ndateFormat.i18n = {\n    dayNames: [\n        'Sun',\n        'Mon',\n        'Tue',\n        'Wed',\n        'Thu',\n        'Fri',\n        'Sat',\n        'Sunday',\n        'Monday',\n        'Tuesday',\n        'Wednesday',\n        'Thursday',\n        'Friday',\n        'Saturday'\n    ],\n    monthNames: [\n        'Jan',\n        'Feb',\n        'Mar',\n        'Apr',\n        'May',\n        'Jun',\n        'Jul',\n        'Aug',\n        'Sep',\n        'Oct',\n        'Nov',\n        'Dec',\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December'\n    ],\n    timeNames: ['a', 'p', 'am', 'pm', 'A', 'P', 'AM', 'PM']\n};\n\nfunction pad(val, len) {\n    val = String(val);\n    len = len || 2;\n    while (val.length < len) {\n        val = '0' + val;\n    }\n    return val;\n}\n\n/**\n * Get the ISO 8601 week number\n * Based on comments from\n * http://techblog.procurios.nl/k/n618/news/view/33796/14863/Calculate-ISO-8601-week-and-year-in-javascript.html\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getWeek(date) {\n    // Remove time components of date\n    var targetThursday = new Date(date.getFullYear(), date.getMonth(), date.getDate());\n\n    // Change date to Thursday same week\n    targetThursday.setDate(targetThursday.getDate() - ((targetThursday.getDay() + 6) % 7) + 3);\n\n    // Take January 4th as it is always in week 1 (see ISO 8601)\n    var firstThursday = new Date(targetThursday.getFullYear(), 0, 4);\n\n    // Change date to Thursday same week\n    firstThursday.setDate(firstThursday.getDate() - ((firstThursday.getDay() + 6) % 7) + 3);\n\n    // Check if daylight-saving-time-switch occurred and correct for it\n    var ds = targetThursday.getTimezoneOffset() - firstThursday.getTimezoneOffset();\n    targetThursday.setHours(targetThursday.getHours() - ds);\n\n    // Number of weeks between target Thursday and first Thursday\n    var weekDiff = (targetThursday - firstThursday) / (86400000 * 7);\n    return 1 + Math.floor(weekDiff);\n}\n\n/**\n * Get ISO-8601 numeric representation of the day of the week\n * 1 (for Monday) through 7 (for Sunday)\n *\n * @param  {Object} `date`\n * @return {Number}\n */\nfunction getDayOfWeek(date) {\n    var dow = date.getDay();\n    if (dow === 0) {\n        dow = 7;\n    }\n    return dow;\n}\n\n/**\n * kind-of shortcut\n * @param  {*} val\n * @return {String}\n */\nfunction kindOf(val) {\n    if (val === null) {\n        return 'null';\n    }\n\n    if (val === undefined) {\n        return 'undefined';\n    }\n\n    if (typeof val !== 'object') {\n        return typeof val;\n    }\n\n    if (Array.isArray(val)) {\n        return 'array';\n    }\n\n    return {}.toString\n        .call(val)\n        .slice(8, -1)\n        .toLowerCase();\n}\n\nexport default dateFormat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { getDecodedUrl, getHref, isUrlSafe } from '../../Utils/Url';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './SafeLink.css';\nimport { openChat } from '../../Actions/Client';\n\nclass SafeLink extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { displayText, mail, url } = props;\n\n        if (state.prevUrl !== url || state.prevDisplayText !== displayText) {\n            return {\n                prevUrl: url,\n                prevDisplayText: displayText,\n                safe: isUrlSafe(displayText, url),\n                decodedUrl: getDecodedUrl(url, mail),\n                href: getHref(url, mail),\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        this.setState({ confirm: true });\n    };\n\n    handleDialogClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleDone = event => {\n        this.handleClose();\n\n        const { url, onClick } = this.props;\n        if (!url) return;\n\n        if (onClick) {\n            onClick(event);\n        } else {\n            const newWindow = window.open();\n            newWindow.opener = null;\n            newWindow.location = url;\n        }\n    };\n\n    isTelegramLink(url) {\n        if (!url) return false;\n\n        const lowerCaseUrl = url\n            .toLowerCase()\n            .replace('https://', '')\n            .replace('http://', '');\n\n        return lowerCaseUrl.startsWith('t.me') || lowerCaseUrl.startsWith('tg://');\n    }\n\n    handleSafeClick = async event => {\n        event.stopPropagation();\n\n        const { onClick, url: href } = this.props;\n\n        if (this.isTelegramLink(href)) {\n            event.preventDefault();\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: href\n                });\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                const { chat_id, message } = messageLinkInfo;\n                if (chat_id) {\n                    openChat(chat_id, message ? message.id : null);\n                    return;\n                }\n            } catch (error) {\n                console.log('[safeLink] messageLinkInfo error', error);\n            }\n\n            if (onClick) {\n                onClick(event);\n            }\n        }\n\n        if (onClick) {\n            event.preventDefault();\n            onClick(event);\n        }\n    };\n\n    render() {\n        const { className, children, t, url } = this.props;\n        const { confirm, decodedUrl, href, safe } = this.state;\n\n        if (!url) return null;\n        if (!decodedUrl) return null;\n\n        return (\n            <>\n                {safe ? (\n                    <a\n                        className={className}\n                        href={href}\n                        title={decodedUrl}\n                        target='_blank'\n                        rel='noopener noreferrer'\n                        onClick={this.handleSafeClick}>\n                        {children || url}\n                    </a>\n                ) : (\n                    <>\n                        <a className={className} title={decodedUrl} onClick={this.handleClick}>\n                            {children || url}\n                        </a>\n                        {confirm && (\n                            <Dialog\n                                transitionDuration={0}\n                                open={confirm}\n                                onClose={this.handleClose}\n                                onClick={this.handleDialogClick}\n                                aria-labelledby='confirm-dialog-title'>\n                                <DialogTitle id='confirm-dialog-title'>{t('Confirm')}</DialogTitle>\n                                <DialogContent classes={{ root: 'safe-link-content-root' }}>\n                                    <DialogContentText>{`Open this link?\\n\\n${decodedUrl}`}</DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleClose}>{t('Cancel')}</Button>\n                                    <Button onClick={this.handleDone} color='primary'>\n                                        {t('Open')}\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                        )}\n                    </>\n                )}\n            </>\n        );\n    }\n}\n\nSafeLink.propTypes = {\n    url: PropTypes.string.isRequired,\n    displayText: PropTypes.string,\n    mail: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SafeLink);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass InstantViewStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.items = [];\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateBlocksInView': {\n                this.emit('clientUpdateBlocksInView', update);\n                break;\n            }\n            case 'clientUpdateInstantViewContent': {\n                const { content } = update;\n\n                if (content) {\n                    this.items.push(content.instantView);\n                } else {\n                    this.items = [];\n                }\n\n                this.emit('clientUpdateInstantViewContent', update);\n\n                break;\n            }\n            case 'clientUpdateInstantViewUrl': {\n                this.emit('clientUpdateInstantViewUrl', update);\n                break;\n            }\n            case 'clientUpdateInstantViewViewerContent': {\n                const { content } = update;\n\n                this.viewerContent = content;\n\n                this.emit('clientUpdateInstantViewViewerContent', update);\n                break;\n            }\n            case 'clientUpdatePrevInstantView': {\n                if (this.items.length <= 1) return;\n\n                this.items.pop();\n                const prevInstantView = this.items.pop();\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateInstantViewContent',\n                    content: {\n                        instantView: prevInstantView\n                    }\n                });\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    hasPrev() {\n        return this.items.length > 1;\n    }\n\n    getCurrent() {\n        return this.items.length > 0 ? this.items[this.items.length - 1] : null;\n    }\n}\n\nconst store = new InstantViewStore();\nwindow.instantView = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M5,19 L19,19 C19.5522847,19 20,19.4477153 20,20 C20,20.5128358 19.6139598,20.9355072 19.1166211,20.9932723 L19,21 L5,21 C4.44771525,21 4,20.5522847 4,20 C4,19.4871642 4.38604019,19.0644928 4.88337887,19.0067277 L5,19 L19,19 L5,19 Z M11.8833789,3.00672773 L12,3 C12.5128358,3 12.9355072,3.38604019 12.9932723,3.88337887 L13,4 L13,13.585 L16.2928932,10.2928932 C16.6533772,9.93240926 17.2206082,9.90467972 17.6128994,10.2097046 L17.7071068,10.2928932 C18.0675907,10.6533772 18.0953203,11.2206082 17.7902954,11.6128994 L17.7071068,11.7071068 L12.7071068,16.7071068 C12.3466228,17.0675907 11.7793918,17.0953203 11.3871006,16.7902954 L11.2928932,16.7071068 L6.29289322,11.7071068 C5.90236893,11.3165825 5.90236893,10.6834175 6.29289322,10.2928932 C6.65337718,9.93240926 7.22060824,9.90467972 7.61289944,10.2097046 L7.70710678,10.2928932 L11,13.585 L11,4 C11,3.48716416 11.3860402,3.06449284 11.8833789,3.00672773 L12,3 L11.8833789,3.00672773 Z' />,\n    'Download'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport { getUserFullName } from '../../Utils/User';\nimport { getChatTitle, isPrivateChat } from '../../Utils/Chat';\nimport { openUser as openUserCommand, openChat as openChatCommand } from '../../Actions/Client';\nimport UserStore from '../../Stores/UserStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageAuthor.css';\n\nclass MessageAuthor extends React.Component {\n    handleSelect = event => {\n        const { chatId, userId, openUser, openChat } = this.props;\n\n        if (openUser && userId) {\n            event.stopPropagation();\n\n            openUserCommand(userId, true);\n            return;\n        }\n\n        if (openChat && chatId) {\n            event.stopPropagation();\n\n            openChatCommand(chatId, null, true);\n            return;\n        }\n    };\n\n    render() {\n        const { t, chatId, userId, openUser, openChat } = this.props;\n\n        const user = UserStore.get(userId);\n        if (user) {\n            const tileColor = isPrivateChat(chatId)\n                ? 'message-author-color'\n                : `user_color_${(Math.abs(userId) % 8) + 1}`;\n            const className = classNames([tileColor], 'message-author');\n\n            const fullName = getUserFullName(userId, null, t);\n\n            return openUser ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (chat) {\n            const className = classNames('message-author-color', 'message-author');\n\n            const fullName = getChatTitle(chatId, false, t);\n\n            return openChat ? (\n                <a className={className} onClick={this.handleSelect}>\n                    {fullName}\n                </a>\n            ) : (\n                <>{fullName}</>\n            );\n        }\n\n        return null;\n    }\n}\n\nMessageAuthor.propTypes = {\n    chatId: PropTypes.number,\n    userId: PropTypes.number,\n    openUser: PropTypes.bool,\n    openChat: PropTypes.bool\n};\n\nMessageAuthor.defaultProps = {\n    openUser: false,\n    openChat: false\n};\n\nexport default withTranslation()(MessageAuthor);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport UserTile from './UserTile';\nimport UserStatus from './UserStatus';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from './../../Stores/UserStore';\nimport './User.css';\n\nclass User extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            user: UserStore.get(props.userId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId, t, showStatus } = this.props;\n\n        const fullName = getUserFullName(userId, null, t);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='user-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='user-title'>{fullName}</div>\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <UserStatus userId={userId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showStatus: PropTypes.bool\n};\n\nUser.defaultProps = {\n    showStatus: true\n};\n\nexport default withTranslation()(User);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from '../../Viewer/FileProgress';\nimport { getFitSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getFileSize, getSrc, isGifMimeType } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport AppStore from '../../../Stores/ApplicationStore';\nimport FileStore from '../../../Stores/FileStore';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './Animation.css';\n\nclass Animation extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.setPlayerParams();\n    }\n\n    setPlayerParams() {\n        this.windowFocused = window.hasFocus;\n\n        this.inView = false;\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.ivInView = false;\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.animation !== this.props.animation) {\n            this.setPlayerParams();\n        }\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.on('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateAnimationThumbnailBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateAnimationBlob);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n        InstantViewStore.off('clientUpdateBlocksInView', this.onClientUpdateBlocksInView);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.windowFocused &&\n                ((this.inView && !this.openMediaViewer && !this.openProfileMediaViewer && !this.openIV) ||\n                    (this.ivInView && !this.openIVMedia))\n            ) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(AppStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(AppStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateInstantViewViewerContent = update => {\n        this.openIVMedia = Boolean(InstantViewStore.viewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateBlocksInView = update => {\n        const { pageBlock } = this.props;\n        if (!pageBlock) return;\n\n        this.ivInView = update.blocks.has(pageBlock);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateAnimationBlob = update => {\n        const { animation } = this.props.animation;\n        const { fileId } = update;\n\n        if (!animation) return;\n\n        if (animation.id === fileId) {\n            this.forceUpdate(() => {\n                this.startStopPlayer();\n            });\n        }\n    };\n\n    onClientUpdateAnimationThumbnailBlob = update => {\n        const { thumbnail } = this.props.animation;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, t, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, animation, mime_type, width, height } = this.props.animation;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize, false);\n        if (!fitPhotoSize) return null;\n\n        const animationStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(animation);\n\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n        const isGif = isGifMimeType(mime_type);\n\n        return (\n            <div\n                className={classNames('animation', {\n                    'animation-big': type === 'message',\n                    'animation-title': title,\n                    'media-title': title,\n                    'animation-caption': caption,\n                    pointer: openMedia\n                })}\n                style={animationStyle}\n                onClick={openMedia}>\n                {src ? (\n                    isGif ? (\n                        <img className='animation-preview' src={src} alt='' />\n                    ) : (\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-animation'\n                            src={src}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={animationStyle.width}\n                            height={animationStyle.height}\n                        />\n                    )\n                ) : (\n                    <>\n                        <img\n                            className={classNames('animation-preview', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                            })}\n                            src={thumbnailSrc || miniSrc}\n                            alt=''\n                        />\n                        <div className='animation-meta'>{getFileSize(animation)}</div>\n                    </>\n                )}\n                <FileProgress\n                    file={animation}\n                    download\n                    upload\n                    cancelButton\n                    icon={<div className='animation-play'>{t('AttachGif')}</div>}\n                />\n            </div>\n        );\n    }\n}\n\nAnimation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    pageBlock: PropTypes.object,\n    animation: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    iv: PropTypes.bool\n};\n\nAnimation.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    iv: false\n};\n\nexport default withTranslation()(Animation);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-12.000000, -12.000000)'\n        d='M19.3717789,13.8876217 L33.8466511,23.2537154 C34.2588127,23.5204082 34.3767385,24.0707284 34.1100457,24.48289 C34.0418356,24.5883056 33.9520666,24.6780745 33.8466511,24.7462846 L19.3717789,34.1123783 C18.9596173,34.3790711 18.4092971,34.2611454 18.1426043,33.8489838 C18.0495218,33.705129 18,33.5374371 18,33.3660938 L18,14.6339062 C18,14.1429865 18.3979691,13.7450173 18.8888889,13.7450173 C19.0602323,13.7450173 19.2279241,13.7945391 19.3717789,13.8876217 Z'\n    />,\n    'PlayArrow'\n);\n","\n/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Currency{\n    constructor(){\n        this.list = new Map([\n            [\"AED\", \"د.إ\"],\n            [\"AFN\", \"؋\"],\n            [\"ARS\", \"$\"],\n            [\"AUD\", \"$\"],\n            [\"AZN\", \"₼\"],\n            [\"BND\", \"B$\"],\n            [\"BRL\", \"R$\"],\n            [\"CAD\", \"$\"],\n            [\"CHF\", \"Fr\"],\n            [\"CLP\", \"$\"],\n            [\"CNY\", \"¥\"],\n            [\"COP\", \"$\"],\n            [\"EGP\", \"E£\"],\n            [\"EUR\", \"€\"],\n            [\"GBP\", \"£\"],\n            [\"HKD\", \"$\"],\n            [\"IDR\", \"Rp\"],\n            [\"ILS\", \"₪\"],\n            [\"INR\", \"₹\"],\n            [\"ISK\", \"kr\"],\n            [\"JPY\", \"¥\"],\n            [\"KRW\", \"₩\"],\n            [\"KZT\", \"₸\"],\n            [\"MXN\", \"$\"],\n            [\"MYR\", \"RM\"],\n            [\"NOK\", \"kr\"],\n            [\"NZD\", \"$\"],\n            [\"PHP\", \"₱\"],\n            [\"RUB\", \"₽\"],\n            [\"SAR\", \"SR\"],\n            [\"SEK\", \"kr\"],\n            [\"SGD\", \"$\"],\n            [\"TRY\", \"₺\"],\n            [\"TTD\", \"$\"],\n            [\"TWD\", \"$\"],\n            [\"TZS\", \"TSh\"],\n            [\"UAH\", \"₴\"],\n            [\"UGX\", \"USh\"],\n            [\"USD\", \"$\"],\n            [\"UYU\", \"$\"],\n            [\"VND\", \"₫\"],\n            [\"YER\", \"﷼\"],\n            [\"ZAR\", \"R\"],\n            [\"IRR\", \"﷼\"],\n            [\"IQD\", \"ع.د\"],\n            [\"VEF\", \"Bs.F.\"]\n        ]);\n    }\n\n    get(currency){\n        return this.list.get(currency);\n    }\n\n    set(currency, symbol){\n        this.list.set(currency, symbol);\n    }\n\n    getPow(currency){\n        if (currency === 'CLF'){\n            return 4;\n        }\n        if (['BHD', 'IQD', 'JOD', 'KWD', 'LYD', 'OMR', 'TND'].includes(currency)){\n            return 3;\n        }\n        if (['BIF', 'BYR', 'CLP', 'CVE', 'DJF', 'GNF', 'ISK', 'JPY', 'KMF', 'KRW', 'MGA', 'PYG', 'RWF', 'UGX', 'UYI', 'VND', 'VUV', 'XAF', 'XOF', 'XPF'].includes(currency)){\n            return 0;\n        }\n        if (currency === 'MRO'){\n            return 1;\n        }\n\n        return 2;\n    }\n\n    getString(totalAmount, currency){\n        const amount = (totalAmount/Math.pow(10.0, this.getPow(currency))).toFixed(2);\n        return `${amount} ${this.get(currency)}`;\n    }\n}\n\nlet currency = new Currency();\nexport default currency;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Currency from './Currency';\nimport MessageAuthor from '../Components/Message/MessageAuthor';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport MessageStore from '../Stores/MessageStore';\n\nlet serviceMap = new Map();\nserviceMap.set('messageBasicGroupChatCreate', 'messageBasicGroupChatCreate');\nserviceMap.set('messageChatAddMembers', 'messageChatAddMembers');\nserviceMap.set('messageChatChangePhoto', 'messageChatChangePhoto');\nserviceMap.set('messageChatChangeTitle', 'messageChatChangeTitle');\nserviceMap.set('messageChatDeleteMember', 'messageChatDeleteMember');\nserviceMap.set('messageChatDeletePhoto', 'messageChatDeletePhoto');\nserviceMap.set('messageChatJoinByLink', 'messageChatJoinByLink');\nserviceMap.set('messageChatSetTtl', 'messageChatSetTtl');\nserviceMap.set('messageChatUpgradeFrom', 'messageChatUpgradeFrom');\nserviceMap.set('messageChatUpgradeTo', 'messageChatUpgradeTo');\nserviceMap.set('messageContactRegistered', 'messageContactRegistered');\nserviceMap.set('messageCustomServiceAction', 'messageCustomServiceAction');\nserviceMap.set('messageGameScore', 'messageGameScore');\nserviceMap.set('messagePassportDataReceived', 'messagePassportDataReceived');\nserviceMap.set('messagePassportDataSent', 'messagePassportDataSent');\nserviceMap.set('messagePaymentSuccessful', 'messagePaymentSuccessful');\nserviceMap.set('messagePaymentSuccessfulBot', 'messagePaymentSuccessfulBot');\nserviceMap.set('messagePinMessage', 'messagePinMessage');\nserviceMap.set('messageScreenshotTaken', 'messageScreenshotTaken');\nserviceMap.set('messageSupergroupChatCreate', 'messageSupergroupChatCreate');\nserviceMap.set('messageUnsupported', 'messageUnsupported');\nserviceMap.set('messageWebsiteConnected', 'messageWebsiteConnected');\n\nfunction isServiceMessage(message) {\n    if (!message) return false;\n    if (!message.content) return false;\n\n    return serviceMap.has(message.content['@type']) || message.ttl > 0;\n}\n\nfunction getTTLString(ttl) {\n    if (ttl < 60) {\n        const seconds = ttl === 1 ? 'second' : 'seconds';\n        return `${ttl} ${seconds}`;\n    }\n    if (ttl < 60 * 60) {\n        const minutes = Math.floor(ttl / 60) === 1 ? 'minute' : 'minutes';\n        return `${ttl} ${minutes}`;\n    }\n    if (ttl < 24 * 60 * 60) {\n        const hours = Math.floor(ttl / 60 / 60) === 1 ? 'hour' : 'hours';\n        return `${ttl} ${hours}`;\n    }\n    if (ttl < 7 * 24 * 60 * 60) {\n        const days = Math.floor(ttl / 60 / 60 / 24) === 1 ? 'day' : 'days';\n        return `${ttl} ${days}`;\n    }\n    if (ttl === 7 * 24 * 60 * 60) {\n        return '1 week';\n    }\n\n    return `${ttl} seconds`;\n}\n\nfunction getPassportElementTypeString(type) {\n    switch (type['@type']) {\n        case 'passportElementTypeAddress': {\n            return 'Address';\n        }\n        case 'passportElementTypeBankStatement': {\n            return 'Bank Statement';\n        }\n        case 'passportElementTypeDriverLicense': {\n            return 'Driver Licence';\n        }\n        case 'passportElementTypeEmailAddress': {\n            return 'Email';\n        }\n        case 'passportElementTypeIdentityCard': {\n            return 'Identity Card';\n        }\n        case 'passportElementTypeInternalPassport': {\n            return 'Internal Passport';\n        }\n        case 'passportElementTypePassport': {\n            return 'Passport';\n        }\n        case 'passportElementTypePassportRegistration': {\n            return 'Passport Registration';\n        }\n        case 'passportElementTypePersonalDetails': {\n            return 'Personal details';\n        }\n        case 'passportElementTypePhoneNumber': {\n            return 'Phone Number';\n        }\n        case 'passportElementTypeRentalAgreement': {\n            return 'Tenancy Agreement';\n        }\n        case 'passportElementTypeTemporaryRegistration': {\n            return 'Temporary Registration';\n        }\n        case 'passportElementTypeUtilityBill': {\n            return 'Utility Bill';\n        }\n    }\n\n    return '';\n}\n\nfunction getMessageAuthor(message, openUser) {\n    if (!message) return null;\n\n    const { chat_id, sender_user_id } = message;\n\n    if (sender_user_id !== 0) {\n        return <MessageAuthor userId={sender_user_id} openUser={openUser} />;\n    }\n\n    const chat = ChatStore.get(chat_id);\n    if (!chat) return null;\n\n    return chat.title;\n}\n\nfunction getServiceMessageContent(message, openUser = false) {\n    if (!message) return null;\n    if (!message.content) return null;\n\n    const isOutgoing = message.sender_user_id === UserStore.getMyId();\n    const chat = ChatStore.get(message.chat_id);\n    const isChannel = chat.type['@type'] === 'chatTypeSupergroup' && chat.type.is_channel;\n\n    const { ttl, sender_user_id, content } = message;\n    if (ttl > 0) {\n        switch (content['@type']) {\n            case 'messagePhoto': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing photo. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing photo. Please view it on your mobile'}\n                    </>\n                );\n            }\n            case 'messageVideo': {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing video. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing video. Please view it on your mobile'}\n                    </>\n                );\n            }\n            default: {\n                if (isOutgoing) {\n                    return 'You sent a self-destructing message. Please view it on your mobile';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' sent a self-destructing message. Please view it on your mobile'}\n                    </>\n                );\n            }\n        }\n    }\n\n    switch (content['@type']) {\n        case 'messageBasicGroupChatCreate': {\n            const { title } = ChatStore.get(message.chat_id);\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatAddMembers': {\n            const members = content.member_user_ids\n                .map(x => <MessageAuthor key={x} userId={x} openUser={openUser} />)\n                .reduce((accumulator, current, index, array) => {\n                    const separator = index === array.length - 1 ? ' and ' : ', ';\n                    return accumulator === null ? [current] : [...accumulator, separator, current];\n                }, null);\n\n            if (isOutgoing) {\n                return content.member_user_ids.length === 1 && content.member_user_ids[0] === UserStore.getMyId() ? (\n                    'You joined the group'\n                ) : (\n                    <>\n                        {'You added '}\n                        {members}\n                    </>\n                );\n            }\n\n            return content.member_user_ids.length === 1 && content.member_user_ids[0] === message.sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' added '}\n                    {members}\n                </>\n            );\n        }\n        case 'messageChatChangePhoto': {\n            if (isChannel) {\n                return 'Channel photo updated';\n            }\n\n            if (isOutgoing) {\n                return 'You updated group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` updated group photo`}\n                </>\n            );\n        }\n        case 'messageChatChangeTitle': {\n            const { title } = content;\n\n            if (isChannel) {\n                return `Channel name was changed to «${title}»`;\n            }\n\n            if (isOutgoing) {\n                return `You changed group name to «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` changed group name to «${title}»`}\n                </>\n            );\n        }\n        case 'messageChatDeleteMember': {\n            if (isOutgoing) {\n                return content.user_id === UserStore.getMyId() ? (\n                    'You left the group'\n                ) : (\n                    <>\n                        {'You removed '}\n                        <MessageAuthor userId={content.user_id} openUser={openUser} />\n                    </>\n                );\n            }\n\n            return content.user_id === sender_user_id ? (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' left the group'}\n                </>\n            ) : (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed '}\n                    <MessageAuthor userId={content.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messageChatDeletePhoto': {\n            if (isChannel) {\n                return 'Channel photo removed';\n            }\n\n            if (isOutgoing) {\n                return 'You removed group photo';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' removed group photo'}\n                </>\n            );\n        }\n        case 'messageChatJoinByLink': {\n            if (isOutgoing) {\n                return 'You joined the group via invite link';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' joined the group via invite link'}\n                </>\n            );\n        }\n        case 'messageChatSetTtl': {\n            const { ttl } = content;\n            const ttlString = getTTLString(ttl);\n\n            if (ttl <= 0) {\n                if (isOutgoing) {\n                    return 'You disabled the self-destruct timer';\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                        {' disabled the self-destruct timer'}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You set the self-destruct timer to ${ttlString}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` set the self-destruct timer to ${ttlString}`}\n                </>\n            );\n        }\n        case 'messageChatUpgradeFrom': {\n            return 'The group was upgraded to a supergroup';\n        }\n        case 'messageChatUpgradeTo': {\n            return 'Group migrated to a supergroup';\n        }\n        case 'messageContactRegistered': {\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' just joined Telegram'}\n                </>\n            );\n        }\n        case 'messageCustomServiceAction': {\n            return content.text;\n        }\n        case 'messageGameScore': {\n            const messageGame = MessageStore.get(message.chat_id, content.game_message_id);\n            if (\n                messageGame &&\n                messageGame.content &&\n                messageGame.content['@type'] === 'messageGame' &&\n                messageGame.content.game\n            ) {\n                const { game } = messageGame.content;\n\n                if (isOutgoing) {\n                    return `You scored ${content.score} in «${game.title}»`;\n                }\n\n                return (\n                    <>\n                        <MessageAuthor userId={messageGame.sender_user_id} openUser={openUser} />\n                        {` scored ${content.score} in «${game.title}»`}\n                    </>\n                );\n            }\n\n            if (isOutgoing) {\n                return `You scored ${content.score}`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` scored ${content.score}`}\n                </>\n            );\n        }\n        case 'messagePassportDataReceived': {\n            return 'Telegram Passport data received';\n        }\n        case 'messagePassportDataSent': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const passportElementTypes = content.types\n                .map(x => getPassportElementTypeString(x))\n                .reduce((accumulator, current) => {\n                    return accumulator === null ? [current] : [...accumulator, ', ', current];\n                }, null);\n\n            return (\n                <>\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                    {' received the following documents: '}\n                    {passportElementTypes}\n                </>\n            );\n        }\n        case 'messagePaymentSuccessful': {\n            const chat = ChatStore.get(message.chat_id);\n\n            const messageInvoice = MessageStore.get(message.chat_id, content.invoice_message_id);\n            if (\n                messageInvoice &&\n                messageInvoice.content &&\n                messageInvoice.content['@type'] === 'messageInvoice' &&\n                messageInvoice.content.invoice\n            ) {\n                const { invoice } = messageInvoice.content;\n\n                return (\n                    <>\n                        {`You have just successfully transferred ${Currency.getString(\n                            content.total_amount,\n                            content.currency\n                        )} to `}\n                        <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                        {` for ${invoice.title}`}\n                    </>\n                );\n            }\n\n            return (\n                <>\n                    {`You have just successfully transferred ${Currency.getString(\n                        content.total_amount,\n                        content.currency\n                    )} to `}\n                    <MessageAuthor userId={chat.type.user_id} openUser={openUser} />\n                </>\n            );\n        }\n        case 'messagePaymentSuccessfulBot': {\n            return 'Payment successful';\n        }\n        case 'messagePinMessage': {\n            const author = getMessageAuthor(message, openUser);\n            const pinnedMessage = MessageStore.get(message.chat_id, content.message_id);\n            if (!pinnedMessage || !pinnedMessage.content) {\n                return (\n                    <>\n                        {author}\n                        {' pinned a message'}\n                    </>\n                );\n            }\n\n            let pinnedContent = ' pinned a message';\n            if (isServiceMessage(pinnedMessage)) {\n                pinnedContent = ' pinned a service message';\n            } else {\n                switch (pinnedMessage.content['@type']) {\n                    case 'messageAnimation': {\n                        pinnedContent = ' pinned a GIF';\n                        break;\n                    }\n                    case 'messageAudio': {\n                        pinnedContent = ' pinned a track';\n                        break;\n                    }\n                    case 'messageCall': {\n                        pinnedContent = ' pinned a call';\n                        break;\n                    }\n                    case 'messageContact': {\n                        pinnedContent = ' pinned a contact';\n                        break;\n                    }\n                    case 'messageDocument': {\n                        pinnedContent = ' pinned a file';\n                        break;\n                    }\n                    case 'messageExpiredPhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messageExpiredVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageGame': {\n                        pinnedContent = ' pinned a game';\n                        break;\n                    }\n                    case 'messageInvoice': {\n                        pinnedContent = ' pinned an invoice';\n                        break;\n                    }\n                    case 'messageLocation': {\n                        pinnedContent = ' pinned a map';\n                        break;\n                    }\n                    case 'messagePhoto': {\n                        pinnedContent = ' pinned a photo';\n                        break;\n                    }\n                    case 'messagePoll': {\n                        pinnedContent = ' pinned a poll';\n                        break;\n                    }\n                    case 'messageSticker': {\n                        pinnedContent = ' pinned a sticker';\n                        break;\n                    }\n                    case 'messageText': {\n                        const maxLength = 16;\n                        const text = pinnedMessage.content.text.text;\n                        if (text.length <= maxLength) {\n                            pinnedContent = ` pinned «${text}»`;\n                        } else {\n                            pinnedContent = ` pinned «${text.substring(0, maxLength)}...»`;\n                        }\n\n                        break;\n                    }\n                    case 'messageUnsupported': {\n                        pinnedContent = ' pinned unsupported message';\n                        break;\n                    }\n                    case 'messageVenue': {\n                        pinnedContent = ' pinned a venue';\n                        break;\n                    }\n                    case 'messageVideo': {\n                        pinnedContent = ' pinned a video';\n                        break;\n                    }\n                    case 'messageVideoNote': {\n                        pinnedContent = ' pinned a video message';\n                        break;\n                    }\n                    case 'messageVoiceNote': {\n                        pinnedContent = ' pinned a voice message';\n                        break;\n                    }\n                }\n            }\n\n            return (\n                <>\n                    {author}\n                    {pinnedContent}\n                </>\n            );\n        }\n        case 'messageScreenshotTaken': {\n            if (isOutgoing) {\n                return 'You took a screenshot!';\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {' took a screenshot!'}\n                </>\n            );\n        }\n        case 'messageSupergroupChatCreate': {\n            const { title } = content;\n\n            if (isChannel) {\n                return 'Channel created';\n            }\n\n            if (isOutgoing) {\n                return `You created group «${title}»`;\n            }\n\n            return (\n                <>\n                    <MessageAuthor userId={sender_user_id} openUser={openUser} />\n                    {` created group «${title}»`}\n                </>\n            );\n        }\n        case 'messageUnsupported': {\n            return 'Unsupported message';\n        }\n        case 'messageWebsiteConnected': {\n            return `You allowed this bot to message you when you logged in on ${content.domain_name}.`;\n        }\n    }\n\n    return `[${message.content['@type']}]`;\n}\n\nexport { isServiceMessage, getServiceMessageContent };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport punycode from './Punycode';\n\nexport function getHref(url, mail) {\n    if (!url) return null;\n\n    if (mail) return url.startsWith('mailto:') ? url : 'mailto:' + url;\n\n    // if (url.startsWith('tg://')) return url;\n\n    return url.startsWith('http') ? url : 'http://' + url;\n}\n\nexport function isUrlSafe(displayText, url) {\n    if (displayText && displayText !== url) {\n        return false;\n    }\n\n    if (hasRTLOSymbol(url)) {\n        return false;\n    }\n\n    return true;\n}\n\nexport function getDecodedUrl(url, mail) {\n    if (!url) return null;\n\n    const href = getHref(url, mail);\n\n    try {\n        let decodedHref = decodeURI(href);\n\n        const domain = decodedHref.match(/^https?:\\/\\/([^\\/:?#]+)(?:[\\/:?#]|$)/i)[1];\n        decodedHref = decodedHref.replace(domain, punycode.ToUnicode(domain));\n\n        return decodedHref;\n    } catch (error) {\n        console.log('SafeLink.getDecodedUrl error ', url, error);\n    }\n\n    return null;\n}\n\nconst regExpRTLO = /\\u202e/;\n\nexport function hasRTLOSymbol(url) {\n    if (!url) return false;\n\n    return regExpRTLO.test(url);\n}\n\nconst regExpDomainExplicit = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){0,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpDomain = new RegExp(\n    '(?:([a-zA-Z]+):\\\\/\\\\/)?((?:[A-Za-z' +\n        '\\xD0\\x90-\\xD0\\xAF\\xD0\\x81' +\n        '\\xD0\\xB0-\\xD1\\x8F\\xD1\\x91' +\n        '0-9\\\\-\\\\_]+\\\\.){1,10}([A-Za-z' +\n        '\\xD1\\x80\\xD1\\x84' +\n        '\\\\-\\\\d]{2,22})(\\\\:\\\\d+)?)'\n);\nconst regExpProtocol = new RegExp('^([a-zA-Z]+):\\\\/\\\\/');\n\n// https://github.com/telegramdesktop/tdesktop/blob/4e80d54be130eca76129f2c4995fe685d1014442/Telegram/SourceFiles/base/qthelp_url.cpp#L105\nexport function validateUrl(value) {\n    // value = punycode.ToASCII(value);\n\n    const trimmed = value.trim();\n    if (!trimmed) {\n        return null;\n    }\n\n    const match = trimmed.match(regExpDomainExplicit);\n    if (!match) {\n        const domainMatch = trimmed.match(regExpDomain);\n        if (!domainMatch || domainMatch.index !== 0) {\n            return null;\n        }\n\n        return 'http://' + trimmed;\n    } else if (match.index !== 0) {\n        return null;\n    }\n\n    const protocolMatch = trimmed.match(regExpProtocol);\n    return protocolMatch && isGoodProtocol(protocolMatch[0]) ? trimmed : null;\n}\n\nfunction isGoodProtocol(value) {\n    return ['http', 'https', 'tg'].some(x => value.toLowerCase().indexOf(x) === 0);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../../Assets/Icons/Pause';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport AudioAction from './AudioAction';\nimport { getAudioShortTitle, getAudioSubtitle, getAudioTitle } from '../../../Utils/Media';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './Audio.css';\n\nclass Audio extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { active, playing, currentTime, duration } = this.state;\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        if (nextState.currentTime !== currentTime) {\n            return true;\n        }\n\n        if (nextState.duration !== duration) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId, playing } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, audio, openMedia, title, meta, caption } = this.props;\n        const { playing } = this.state;\n        if (!audio) return null;\n\n        const { album_cover_thumbnail, duration, audio: file } = audio;\n\n        const audioTitle = getAudioShortTitle(audio);\n        const audioSubtitle = getAudioSubtitle(audio);\n\n        return (\n            <div className={classNames('audio', 'document', { 'media-title': title })}>\n                <DocumentTile\n                    thumbnail={album_cover_thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a className='document-name' onClick={openMedia} title={audioTitle}>\n                            {audioTitle}\n                        </a>\n                    </div>\n                    <div className='audio-action'>{audioSubtitle}</div>\n                    <AudioAction\n                        chatId={chatId}\n                        messageId={messageId}\n                        duration={duration}\n                        file={file}\n                        meta={caption ? null : meta}\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nAudio.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    audio: PropTypes.object,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-15.000000, -15.000000)'\n        d='M23,16 C23.5522847,16 24,16.4477153 24,17 L24,37 C24,37.5522847 23.5522847,38 23,38 L18,38 C17.4477153,38 17,37.5522847 17,37 L17,17 C17,16.4477153 17.4477153,16 18,16 L23,16 Z M36,16 C36.5522847,16 37,16.4477153 37,17 L37,37 C37,37.5522847 36.5522847,38 36,38 L31,38 C30.4477153,38 30,37.5522847 30,37 L30,17 C30,16.4477153 30.4477153,16 31,16 L36,16 Z'\n    />,\n    'Pause'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from '../../Components/Viewer/FileProgress';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './DocumentTile.css';\n\nclass DocumentTile extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { thumbnail } = this.props;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { minithumbnail, thumbnail, file, icon, completeIcon, openMedia } = this.props;\n        const { loaded } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbnailSrc && loaded;\n        const src = thumbnailSrc || miniSrc;\n\n        return (\n            <div\n                className={classNames('document-tile', { 'document-tile-image': !src }, { pointer: openMedia })}\n                onClick={openMedia}>\n                {file && (\n                    <FileProgress\n                        file={file}\n                        thumbnailSrc={src}\n                        download\n                        upload\n                        cancelButton\n                        zIndex={1}\n                        icon={icon}\n                        completeIcon={typeof completeIcon === 'function' ? completeIcon(src) : completeIcon}\n                    />\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {!tileLoaded && <div className='document-tile-background' />}\n            </div>\n        );\n    }\n}\n\nDocumentTile.propTypes = {\n    minithumbnail: PropTypes.object,\n    thumbnail: PropTypes.object,\n    file: PropTypes.object,\n    openMedia: PropTypes.func,\n    icon: PropTypes.node,\n    completeIcon: PropTypes.oneOfType([PropTypes.node, PropTypes.func])\n};\n\nexport default DocumentTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport FileStore from '../../../Stores/FileStore';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './AudioAction.css';\n\nclass AudioAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration, file } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n        const currentFile = FileStore.get(file.id) || file;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            timeString: this.getTimeString(currentTime, duration, active, currentFile),\n\n            prevFile: null,\n            file: currentFile\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { active, timeString, file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.timeString !== timeString) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                timeString: this.getTimeString(update.currentTime, playerDuration, active, file)\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime, file } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                timeString: this.getTimeString(active ? currentTime : 0, duration, true, file)\n            });\n        } else if (active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                timeString: this.getTimeString(0, duration, false, file)\n            });\n        }\n    };\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    getTimeString = (currentTime, duration, active, file) => {\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        return active && isDownloadingCompleted ? `${currentTimeString}/${durationString}` : `${durationString}`;\n    };\n\n    render() {\n        const { title, meta } = this.props;\n        const { active, file, timeString } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n        const isDownloadingCompleted = file.local && file.local.is_downloading_completed;\n        const isUploadingCompleted = file.remote && file.remote.is_uploading_completed;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='audio-action'>\n                {!active && <span>{title}</span>}\n                {!isDownloadingCompleted && <span>{`${sizeString}, `}</span>}\n                <span>{timeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nAudioAction.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    duration: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n\n    title: PropTypes.string\n};\n\nexport default AudioAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport RoomIcon from '@material-ui/icons/Room';\nimport { getLocationId } from '../../../Utils/Message';\nimport { getSrc } from '../../../Utils/File';\nimport { LOCATION_HEIGHT, LOCATION_SCALE, LOCATION_WIDTH, LOCATION_ZOOM } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Location.css';\n\nclass Location extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateLocationBlob', this.onClientUpdateLocationBlob);\n    }\n\n    onClientUpdateLocationBlob = update => {\n        const { fileId } = update;\n        const { location, width, height, zoom, scale } = this.props;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        if (!file) return;\n\n        if (file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { location, width, height, zoom, scale, type, style, title, caption } = this.props;\n        if (!location) return null;\n\n        const locationId = getLocationId(location, width, height, zoom, scale);\n        const file = FileStore.getLocationFile(locationId);\n        const src = getSrc(file);\n\n        const { longitude, latitude } = location;\n        const source = `https://maps.google.com/?q=${latitude},${longitude}`;\n\n        const locationStyle = {\n            width,\n            height,\n            ...style\n        };\n\n        return (\n            <div\n                className={classNames('location', {\n                    'location-message': type === 'message',\n                    'location-venue': type === 'venue',\n                    'location-title': title,\n                    'location-caption': caption\n                })}\n                style={locationStyle}>\n                <a href={source} target='_blank' rel='noopener noreferrer' onClick={this.handleClick}>\n                    <div className='location-wrapper'>\n                        <img className='location-image' draggable={false} alt={source} src={src} />\n                        <div className='location-icon'>\n                            <RoomIcon fontSize='large' color='primary' />\n                        </div>\n                    </div>\n                </a>\n            </div>\n        );\n    }\n}\n\nLocation.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    location: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n\n    width: PropTypes.number,\n    height: PropTypes.number,\n    zoom: PropTypes.number,\n    scale: PropTypes.number\n};\n\nLocation.defaultProps = {\n    width: LOCATION_WIDTH,\n    height: LOCATION_HEIGHT,\n    zoom: LOCATION_ZOOM,\n    scale: LOCATION_SCALE\n};\n\nexport default Location;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport PlayArrowIcon from '../../../Assets/Icons/PlayArrow';\nimport { getFitSize, getDurationString } from '../../../Utils/Common';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './Video.css';\n\nclass Video extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { displaySize, openMedia, title, caption, type, style } = this.props;\n        const { minithumbnail, thumbnail, video, width, height, duration } = this.props.video;\n\n        const fitPhotoSize = getFitSize({ width, height } || thumbnail, displaySize);\n        if (!fitPhotoSize) return null;\n\n        const videoStyle = {\n            width: fitPhotoSize.width,\n            height: fitPhotoSize.height,\n            ...style\n        };\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <div\n                className={classNames('video', {\n                    'video-big': type === 'message',\n                    'video-title': title,\n                    'video-caption': caption,\n                    pointer: openMedia\n                })}\n                style={videoStyle}\n                onClick={openMedia}>\n                <img\n                    className={classNames('video-preview', {\n                        'media-blurred': isBlurred,\n                        'media-mini-blurred': !thumbnailSrc && isBlurred\n                    })}\n                    src={thumbnailSrc || miniSrc}\n                    alt=''\n                />\n                <div className='video-play'>\n                    <PlayArrowIcon />\n                </div>\n                <div className='video-meta'>{getDurationString(duration) + ' ' + getFileSize(video)}</div>\n            </div>\n        );\n    }\n}\n\nVideo.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    video: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isContentOpened } from '../../../Utils/Message';\nimport MessageStore from '../../../Stores/MessageStore';\n\nclass MediaStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            isOpened: isContentOpened(chatId, messageId)\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContentOpened', this.onUpdateMessageContentOpened);\n    }\n\n    onUpdateMessageContentOpened = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chat_id && messageId === update.message_id) {\n            this.setState({ isOpened: isContentOpened(chatId, messageId) });\n        }\n    };\n\n    render() {\n        const { icon, openedIcon } = this.props;\n        const { isOpened } = this.state;\n\n        return isOpened ? openedIcon : icon;\n    }\n}\n\nMediaStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    icon: PropTypes.node,\n    openedIcon: PropTypes.node\n};\n\nMediaStatus.defaultProps = {\n    icon: null,\n    openedIcon: null\n};\n\nexport default MediaStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(3.000000, 0.600000)'>\n        <path\n            d='M9,0 C13.9705627,-9.13077564e-16 18,4.02943725 18,9 L18,23 L18,23 L15,20 L12,23 L9,20 L6,23 L3,20 L0,23 L0,9 C-6.08718376e-16,4.02943725 4.02943725,9.13077564e-16 9,0 Z'\n            stroke='currentColor'\n            strokeWidth='1.5'\n            strokeLinejoin='round'\n            fill='none'\n        />\n        <circle cx='5' cy='9' r='2' />\n        <circle cx='13' cy='9' r='2' />\n    </g>,\n    'DeletedAccount'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function setPollAnswer(chatId, messageId, optionIds) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: optionIds\n    });\n}\n\nexport function cancelPollAnswer(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'setPollAnswer',\n        chat_id: chatId,\n        message_id: messageId,\n        option_ids: []\n    });\n}\n\nexport function stopPoll(chatId, messageId) {\n    TdLibController.send({\n        '@type': 'stopPoll',\n        chat_id: chatId,\n        message_id: messageId,\n        reply_markup: null\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatus.css';\n\nclass UserStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { status, isAccent } = this.state;\n\n        return (\n            <div className={classNames('user-content', 'dialog-content', { 'user-status-accent': isAccent })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default UserStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass PollStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.poll = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateClosePollResults': {\n                this.emit('clientUpdateClosePollResults', update);\n                break;\n            }\n            case 'clientUpdateNewPoll': {\n                this.set({\n                    type: {\n                        '@type': 'pollTypeRegular',\n                        allow_multiple_answers: false\n                    },\n                    id: Date.now(),\n                    question: '',\n                    options: [],\n                    is_anonymous: true\n                });\n\n                this.emit('clientUpdateNewPoll', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAnonymous': {\n                const { poll } = this;\n                const isAnonymous = poll && poll.is_anonymous;\n\n                this.assign(this.poll, { is_anonymous: !isAnonymous });\n\n                this.emit('clientUpdatePollChangeAnonymous', update);\n                break;\n            }\n            case 'clientUpdatePollChangeAllowMultipleAnswers': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const allowMultipleAnswers = poll && poll.type.allow_multiple_answers;\n\n                    const newType = { ...type, allow_multiple_answers: !allowMultipleAnswers };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeAllowMultipleAnswers', update);\n                break;\n            }\n            case 'clientUpdatePollChangeType': {\n                const { poll } = this;\n                const { type } = poll;\n                if (type['@type'] === 'pollTypeRegular') {\n                    const newType = { '@type': 'pollTypeQuiz', correct_option_id: -1 };\n\n                    this.assign(this.poll, { type: newType });\n                } else {\n                    const newType = { '@type': 'pollTypeRegular', allow_multiple_answers: false };\n\n                    this.assign(this.poll, { type: newType });\n                }\n\n                this.emit('clientUpdatePollChangeType', update);\n                break;\n            }\n            case 'clientUpdatePollChooseOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, {\n                    options: options.map(x => (x.id === id ? { ...x, is_chosen: true } : { ...x, is_chosen: false }))\n                });\n\n                this.emit('clientUpdatePollChooseOption', update);\n                break;\n            }\n            case 'clientUpdatePollQuestion': {\n                const { question } = update;\n\n                this.assign(this.poll, { question });\n\n                this.emit('clientUpdatePollQuestion', update);\n                break;\n            }\n            case 'clientUpdatePollOption': {\n                const { id, text } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.map(x => (x.id === id ? { ...x, text } : { ...x })) });\n\n                this.emit('clientUpdatePollOption', update);\n                break;\n            }\n            case 'clientUpdateNewPollOption': {\n                const { option } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: [...options, option] });\n                this.emit('clientUpdateNewPollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePollOption': {\n                const { id } = update;\n                const { options } = this.poll;\n\n                this.assign(this.poll, { options: options.filter(x => x.id !== id) });\n                this.emit('clientUpdateDeletePollOption', update);\n                break;\n            }\n            case 'clientUpdateDeletePoll': {\n                this.set(null);\n\n                this.emit('clientUpdateDeletePoll', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    assign(source1, source2) {\n        this.set(Object.assign({}, source1, source2));\n    }\n\n    set(poll) {\n        this.poll = poll;\n    }\n\n    getInputMessagePoll() {\n        if (!this.poll) return null;\n        if (!isValidPoll(this.poll)) return null;\n        const { question, options, type, is_anonymous } = this.poll;\n\n        if (type['@type'] === 'pollTypeQuiz') {\n            type.correct_option_id = options.findIndex(x => x.is_chosen);\n\n            if (type.correct_option_id === -1) {\n                return null;\n            }\n        }\n\n        return {\n            '@type': 'inputMessagePoll',\n            question,\n            options: options.filter(x => Boolean(x.text)).map(x => x.text),\n            is_anonymous,\n            type,\n            is_closed: false\n        };\n    }\n}\n\nconst store = new PollStore();\nwindow.poll = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { POLL_OPTION_LENGTH, POLL_QUESTION_LENGTH } from '../Constants';\n\nexport function isValidPoll(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (!isValidQuestion(question)) return false;\n\n    const noneEmptyOptions = options.filter(x => Boolean(x.text));\n    if (noneEmptyOptions.length <= 1) return false;\n\n    return noneEmptyOptions.every(isValidOption);\n}\n\nfunction isValidQuestion(question) {\n    if (!question) return false;\n\n    return question.length <= POLL_QUESTION_LENGTH;\n}\n\nfunction isValidOption(option) {\n    if (!option) return false;\n    if (!option.text) return false;\n\n    return option.text.length <= POLL_OPTION_LENGTH;\n}\n\nexport function hasPollData(poll) {\n    if (!poll) return false;\n\n    const { question, options } = poll;\n    if (question) return true;\n\n    return options.some(x => Boolean(x.text));\n}\n","//https://stackoverflow.com/questions/183485/converting-punycode-with-dash-character-to-unicode\n//Javascript Punycode converter derived from example in RFC3492.\n//This implementation is created by some@domain.name and released into public domain\nfunction Punycode() {\n    // This object converts to and from puny-code used in IDN\n    //\n    // punycode.ToASCII ( domain )\n    //\n    // Returns a puny coded representation of \"domain\".\n    // It only converts the part of the domain name that\n    // has non ASCII characters. I.e. it dosent matter if\n    // you call it with a domain that already is in ASCII.\n    //\n    // punycode.ToUnicode (domain)\n    //\n    // Converts a puny-coded domain name to unicode.\n    // It only converts the puny-coded parts of the domain name.\n    // I.e. it dosent matter if you call it on a string\n    // that already has been converted to unicode.\n    //\n    //\n    this.utf16 = {\n        // The utf16-class is necessary to convert from javascripts internal character representation to unicode and back.\n        decode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value,\n                extra;\n            while (i < len) {\n                value = input.charCodeAt(i++);\n                if ((value & 0xf800) === 0xd800) {\n                    extra = input.charCodeAt(i++);\n                    if ((value & 0xfc00) !== 0xd800 || (extra & 0xfc00) !== 0xdc00) {\n                        throw new RangeError('UTF-16(decode): Illegal UTF-16 sequence');\n                    }\n                    value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n                }\n                output.push(value);\n            }\n            return output;\n        },\n        encode: function(input) {\n            var output = [],\n                i = 0,\n                len = input.length,\n                value;\n            while (i < len) {\n                value = input[i++];\n                if ((value & 0xf800) === 0xd800) {\n                    throw new RangeError('UTF-16(encode): Illegal UTF-16 value');\n                }\n                if (value > 0xffff) {\n                    value -= 0x10000;\n                    output.push(String.fromCharCode(((value >>> 10) & 0x3ff) | 0xd800));\n                    value = 0xdc00 | (value & 0x3ff);\n                }\n                output.push(String.fromCharCode(value));\n            }\n            return output.join('');\n        }\n    };\n\n    //Default parameters\n    var initial_n = 0x80;\n    var initial_bias = 72;\n    var delimiter = '\\x2D';\n    var base = 36;\n    var damp = 700;\n    var tmin = 1;\n    var tmax = 26;\n    var skew = 38;\n    var maxint = 0x7fffffff;\n\n    // decode_digit(cp) returns the numeric value of a basic code\n    // point (for use in representing integers) in the range 0 to\n    // base-1, or base if cp is does not represent a value.\n\n    function decode_digit(cp) {\n        return cp - 48 < 10 ? cp - 22 : cp - 65 < 26 ? cp - 65 : cp - 97 < 26 ? cp - 97 : base;\n    }\n\n    // encode_digit(d,flag) returns the basic code point whose value\n    // (when used for representing integers) is d, which needs to be in\n    // the range 0 to base-1. The lowercase form is used unless flag is\n    // nonzero, in which case the uppercase form is used. The behavior\n    // is undefined if flag is nonzero and digit d has no uppercase form.\n\n    function encode_digit(d, flag) {\n        return d + 22 + 75 * (d < 26) - ((flag != 0) << 5);\n        //  0..25 map to ASCII a..z or A..Z\n        // 26..35 map to ASCII 0..9\n    }\n    //** Bias adaptation function **\n    function adapt(delta, numpoints, firsttime) {\n        var k;\n        delta = firsttime ? Math.floor(delta / damp) : delta >> 1;\n        delta += Math.floor(delta / numpoints);\n\n        for (k = 0; delta > ((base - tmin) * tmax) >> 1; k += base) {\n            delta = Math.floor(delta / (base - tmin));\n        }\n        return Math.floor(k + ((base - tmin + 1) * delta) / (delta + skew));\n    }\n\n    // encode_basic(bcp,flag) forces a basic code point to lowercase if flag is zero,\n    // uppercase if flag is nonzero, and returns the resulting code point.\n    // The code point is unchanged if it is caseless.\n    // The behavior is undefined if bcp is not a basic code point.\n\n    function encode_basic(bcp, flag) {\n        bcp -= (bcp - 97 < 26) << 5;\n        return bcp + ((!flag && bcp - 65 < 26) << 5);\n    }\n\n    // Main decode\n    this.decode = function(input, preserveCase) {\n        // Dont use utf16\n        var output = [];\n        var case_flags = [];\n        var input_length = input.length;\n\n        var n, out, i, bias, basic, j, ic, oldi, w, k, digit, t, len;\n\n        // Initialize the state:\n\n        n = initial_n;\n        i = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points: Let basic be the number of input code\n        // points before the last delimiter, or 0 if there is none, then\n        // copy the first basic code points to the output.\n\n        basic = input.lastIndexOf(delimiter);\n        if (basic < 0) basic = 0;\n\n        for (j = 0; j < basic; ++j) {\n            if (preserveCase) case_flags[output.length] = input.charCodeAt(j) - 65 < 26;\n            if (input.charCodeAt(j) >= 0x80) {\n                throw new RangeError('Illegal input >= 0x80');\n            }\n            output.push(input.charCodeAt(j));\n        }\n\n        // Main decoding loop: Start just after the last delimiter if any\n        // basic code points were copied; start at the beginning otherwise.\n\n        for (ic = basic > 0 ? basic + 1 : 0; ic < input_length; ) {\n            // ic is the index of the next character to be consumed,\n\n            // Decode a generalized variable-length integer into delta,\n            // which gets added to i. The overflow checking is easier\n            // if we increase i as we go, then subtract off its starting\n            // value at the end to obtain delta.\n            for (oldi = i, w = 1, k = base; ; k += base) {\n                if (ic >= input_length) {\n                    throw RangeError('punycode_bad_input(1)');\n                }\n                digit = decode_digit(input.charCodeAt(ic++));\n\n                if (digit >= base) {\n                    throw RangeError('punycode_bad_input(2)');\n                }\n                if (digit > Math.floor((maxint - i) / w)) {\n                    throw RangeError('punycode_overflow(1)');\n                }\n                i += digit * w;\n                t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                if (digit < t) {\n                    break;\n                }\n                if (w > Math.floor(maxint / (base - t))) {\n                    throw RangeError('punycode_overflow(2)');\n                }\n                w *= base - t;\n            }\n\n            out = output.length + 1;\n            bias = adapt(i - oldi, out, oldi === 0);\n\n            // i was supposed to wrap around from out to 0,\n            // incrementing n each time, so we'll fix that now:\n            if (Math.floor(i / out) > maxint - n) {\n                throw RangeError('punycode_overflow(3)');\n            }\n            n += Math.floor(i / out);\n            i %= out;\n\n            // Insert n at position i of the output:\n            // Case of last character determines uppercase flag:\n            if (preserveCase) {\n                case_flags.splice(i, 0, input.charCodeAt(ic - 1) - 65 < 26);\n            }\n\n            output.splice(i, 0, n);\n            i++;\n        }\n        if (preserveCase) {\n            for (i = 0, len = output.length; i < len; i++) {\n                if (case_flags[i]) {\n                    output[i] = String.fromCharCode(output[i])\n                        .toUpperCase()\n                        .charCodeAt(0);\n                }\n            }\n        }\n        return this.utf16.encode(output);\n    };\n\n    //** Main encode function **\n\n    this.encode = function(input, preserveCase) {\n        //** Bias adaptation function **\n\n        var n, delta, h, b, bias, j, m, q, k, t, ijv, case_flags;\n\n        if (preserveCase) {\n            // Preserve case, step1 of 2: Get a list of the unaltered string\n            case_flags = this.utf16.decode(input);\n        }\n        // Converts the input in UTF-16 to Unicode\n        input = this.utf16.decode(input.toLowerCase());\n\n        var input_length = input.length; // Cache the length\n\n        if (preserveCase) {\n            // Preserve case, step2 of 2: Modify the list to true/false\n            for (j = 0; j < input_length; j++) {\n                case_flags[j] = input[j] != case_flags[j];\n            }\n        }\n\n        var output = [];\n\n        // Initialize the state:\n        n = initial_n;\n        delta = 0;\n        bias = initial_bias;\n\n        // Handle the basic code points:\n        for (j = 0; j < input_length; ++j) {\n            if (input[j] < 0x80) {\n                output.push(String.fromCharCode(case_flags ? encode_basic(input[j], case_flags[j]) : input[j]));\n            }\n        }\n\n        h = b = output.length;\n\n        // h is the number of code points that have been handled, b is the\n        // number of basic code points\n\n        if (b > 0) output.push(delimiter);\n\n        // Main encoding loop:\n        //\n        while (h < input_length) {\n            // All non-basic code points < n have been\n            // handled already. Find the next larger one:\n\n            for (m = maxint, j = 0; j < input_length; ++j) {\n                ijv = input[j];\n                if (ijv >= n && ijv < m) m = ijv;\n            }\n\n            // Increase delta enough to advance the decoder's\n            // <n,i> state to <m,0>, but guard against overflow:\n\n            if (m - n > Math.floor((maxint - delta) / (h + 1))) {\n                throw RangeError('punycode_overflow (1)');\n            }\n            delta += (m - n) * (h + 1);\n            n = m;\n\n            for (j = 0; j < input_length; ++j) {\n                ijv = input[j];\n\n                if (ijv < n) {\n                    if (++delta > maxint) return Error('punycode_overflow(2)');\n                }\n\n                if (ijv == n) {\n                    // Represent delta as a generalized variable-length integer:\n                    for (q = delta, k = base; ; k += base) {\n                        t = k <= bias ? tmin : k >= bias + tmax ? tmax : k - bias;\n                        if (q < t) break;\n                        output.push(String.fromCharCode(encode_digit(t + ((q - t) % (base - t)), 0)));\n                        q = Math.floor((q - t) / (base - t));\n                    }\n                    output.push(String.fromCharCode(encode_digit(q, preserveCase && case_flags[j] ? 1 : 0)));\n                    bias = adapt(delta, h + 1, h == b);\n                    delta = 0;\n                    ++h;\n                }\n            }\n\n            ++delta;\n            ++n;\n        }\n        return output.join('');\n    };\n\n    this.ToASCII = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/[^A-Za-z0-9-]/) ? 'xn--' + punycode.encode(s) : s);\n        }\n        return out.join('.');\n    };\n    this.ToUnicode = function(domain) {\n        var domain_array = domain.split('.');\n        var out = [];\n        for (var i = 0; i < domain_array.length; ++i) {\n            var s = domain_array[i];\n            out.push(s.match(/^xn--/) ? punycode.decode(s.slice(4)) : s);\n        }\n        return out.join('.');\n    };\n}\n\nconst punycode = new Punycode();\nexport default punycode;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport FileProgress from '../../Viewer/FileProgress';\nimport MediaStatus from './MediaStatus';\nimport { getFileSize, getSrc } from '../../../Utils/File';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { getDurationString } from '../../../Utils/Common';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport './VideoNote.css';\nimport InstantViewStore from '../../../Stores/InstantViewStore';\n\nconst circleStyle = {\n    circle: 'video-note-progress-circle'\n};\n\nclass VideoNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { chatId, messageId } = props;\n        const { video } = props.videoNote;\n\n        const { time, message, videoStream } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            srcObject: active ? videoStream : null,\n            src: getSrc(video),\n            currentTime: active && time ? time.currentTime : 0.0,\n            videoDuration: active && time ? time.duration : 0.0\n        };\n\n        this.windowFocused = window.hasFocus;\n        this.inView = false;\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n    }\n\n    updateVideoSrc() {\n        const { srcObject, src } = this.state;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (srcObject) {\n            //player.scr = null;\n            player.srcObject = srcObject;\n            return;\n        }\n\n        const stream = player.srcObject;\n        if (stream) {\n            //console.log('clientUpdate release srcObject');\n            const tracks = stream.getTracks();\n\n            tracks.forEach(track => {\n                //console.log('clientUpdate release track');\n                track.stop();\n            });\n        }\n\n        if (player.srcObject) {\n            //console.log('clientUpdate release video.srcObject');\n            player.srcObject = null;\n        }\n        if (player.src !== src) {\n            player.src = src;\n        }\n    }\n\n    componentDidMount() {\n        this.updateVideoSrc();\n\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.on('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdateVideoNoteThumbnailBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateVideoNoteBlob);\n\n        MessageStore.off('clientUpdateMessagesInView', this.onClientUpdateMessagesInView);\n\n        ApplicationStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaCaptureStream', this.onClientUpdateMediaCaptureStream);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    startStopPlayer = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            if (\n                this.inView &&\n                this.windowFocused &&\n                !this.openMediaViewer &&\n                !this.openProfileMediaViewer &&\n                !this.openIV\n            ) {\n                player.play();\n            } else {\n                if (this.state.active) {\n                    return;\n                }\n\n                player.pause();\n            }\n        }\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        this.openIV = Boolean(InstantViewStore.getCurrent());\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.openProfileMediaViewer = Boolean(ApplicationStore.profileMediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.openMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateFocusWindow = update => {\n        this.windowFocused = update.focused;\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMessagesInView = update => {\n        const { chatId, messageId } = this.props;\n        const key = `${chatId}_${messageId}`;\n\n        this.inView = update.messages.has(key);\n\n        this.startStopPlayer();\n    };\n\n    onClientUpdateMediaCaptureStream = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({ srcObject: update.stream }, () => {\n                    this.updateVideoSrc();\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId } = this.props;\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const player = this.videoRef.current;\n            if (player) {\n                this.setState({\n                    currentTime: update.currentTime,\n                    videoDuration: update.duration\n                });\n            }\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n        const { video } = this.props.videoNote;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (this.state.active) {\n            } else {\n                this.setState({\n                    active: true,\n                    currentTime: null\n                });\n            }\n        } else if (this.state.active) {\n            this.setState(\n                {\n                    active: false,\n                    srcObject: null,\n                    currentTime: 0\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (!player) return;\n\n                    this.updateVideoSrc();\n\n                    if (!window.hasFocus) {\n                        player.pause();\n                    }\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteBlob = update => {\n        const { video } = this.props.videoNote;\n        const { fileId } = update;\n\n        if (!video) return;\n\n        if (video.id === fileId) {\n            this.setState(\n                {\n                    src: getSrc(video)\n                },\n                () => {\n                    this.updateVideoSrc();\n                }\n            );\n        }\n    };\n\n    onClientUpdateVideoNoteThumbnailBlob = update => {\n        const { thumbnail } = this.props.videoNote;\n        if (!thumbnail) return;\n\n        const { fileId } = update;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleCanPlay = () => {\n        // const player = this.videoRef.current;\n        // if (player){\n        //     if (this.state.active){\n        //         player.muted = false;\n        //     }\n        //     else{\n        //         player.muted = true;\n        //     }\n        // }\n    };\n\n    render() {\n        const { displaySize, chatId, messageId, openMedia } = this.props;\n        const { active, currentTime, videoDuration } = this.state;\n        const { minithumbnail, thumbnail, video, duration } = this.props.videoNote;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const style = { width: 200, height: 200 };\n        if (!style) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(video);\n        const isBlurred = thumbnailSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        let progress = 0;\n        if (videoDuration && currentTime) {\n            const progressTime = currentTime + 0.25;\n            progress = (progressTime / videoDuration) * 100;\n        }\n\n        return (\n            <div\n                className={classNames('video-note', { 'video-note-playing': active })}\n                style={style}\n                onClick={openMedia}>\n                {src ? (\n                    <>\n                        <video\n                            ref={this.videoRef}\n                            className={classNames('media-viewer-content-image', 'video-note-round')}\n                            poster={thumbnailSrc || miniSrc}\n                            muted\n                            autoPlay\n                            loop\n                            playsInline\n                            width={style.width}\n                            height={style.height}\n                            onCanPlay={this.handleCanPlay}\n                        />\n                        <div className='video-note-player'>\n                            <div className='video-note-progress'>\n                                <CircularProgress\n                                    classes={circleStyle}\n                                    variant='static'\n                                    value={progress}\n                                    size={200}\n                                    thickness={1}\n                                />\n                            </div>\n                            <div className='animation-meta'>\n                                {getDurationString(active ? Math.floor(currentTime) : duration)}\n                                <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                            </div>\n                            <div className='video-note-muted'>\n                                <VolumeOffIcon />\n                            </div>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='video-note-round'>\n                            <img\n                                className={classNames('animation-preview', {\n                                    'media-blurred': isBlurred,\n                                    'media-mini-blurred': !src && !thumbnailSrc && isBlurred\n                                })}\n                                style={style}\n                                src={thumbnailSrc || miniSrc}\n                                alt=''\n                            />\n                        </div>\n                        <div className='animation-meta'>\n                            {getDurationString(duration) + ' ' + getFileSize(video)}\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                        <div className='video-note-muted'>\n                            <VolumeOffIcon />\n                        </div>\n                    </>\n                )}\n                <FileProgress file={video} download upload cancelButton icon={<DownloadIcon />} />\n            </div>\n        );\n    }\n}\n\nVideoNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    videoNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    size: PropTypes.number,\n    displaySize: PropTypes.number\n};\n\nVideoNote.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE\n};\n\nexport default VideoNote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport DocumentTile from './DocumentTile';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './VoiceNoteTile.css';\n\nclass VoiceNoteTile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = props;\n\n        const { time, message, playing } = PlayerStore;\n        const active = message && message.chat_id === chatId && message.id === messageId;\n\n        this.state = {\n            active: active,\n            playing: active ? playing : false,\n            currentTime: active && time ? time.currentTime : 0,\n            duration: active && time ? time.duration : 0\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.on('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlay', this.onClientUpdateMediaPlay);\n        PlayerStore.off('clientUpdateMediaPause', this.onClientUpdateMediaPause);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({\n                active: false,\n                playing: false,\n                currentTime: 0\n            });\n        }\n    };\n\n    onClientUpdateMediaPlay = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: true });\n        } else {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaPause = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ playing: false });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (!this.state.active) {\n                this.setState({\n                    active: true,\n                    currentTime: 0,\n                    playing: true\n                });\n            }\n        } else if (this.state.active) {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                playing: false\n            });\n        }\n    };\n\n    render() {\n        const { file, openMedia } = this.props;\n        const { playing } = this.state;\n\n        return (\n            <DocumentTile\n                thumbnail={null}\n                file={file}\n                openMedia={openMedia}\n                icon={<DownloadIcon />}\n                completeIcon={playing ? <PauseIcon /> : <PlayArrowIcon />}\n            />\n        );\n    }\n}\n\nVoiceNoteTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    file: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNoteTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n/**\n * Draws a rounded rectangle using the current state of the canvas.\n * If you omit the last three params, it will draw a rectangle\n * outline with a 5 pixel border radius\n * @param {CanvasRenderingContext2D} ctx\n * @param {Number} x The top left x coordinate\n * @param {Number} y The top left y coordinate\n * @param {Number} width The width of the rectangle\n * @param {Number} height The height of the rectangle\n * @param {Number} [radius = 5] The corner radius; It can also be an object\n *                 to specify different radii for corners\n * @param {Number} [radius.tl = 0] Top left\n * @param {Number} [radius.tr = 0] Top right\n * @param {Number} [radius.br = 0] Bottom right\n * @param {Number} [radius.bl = 0] Bottom left\n * @param {Boolean} [fill = false] Whether to fill the rectangle.\n * @param {Boolean} [stroke = true] Whether to stroke the rectangle.\n */\nfunction roundRect(ctx, x, y, width, height, radius, fill, stroke) {\n    if (typeof stroke === 'undefined') {\n        stroke = true;\n    }\n    if (typeof radius === 'undefined') {\n        radius = 5;\n    }\n    if (typeof radius === 'number') {\n        radius = { tl: radius, tr: radius, br: radius, bl: radius };\n    } else {\n        var defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n        for (var side in defaultRadius) {\n            radius[side] = radius[side] || defaultRadius[side];\n        }\n    }\n    ctx.beginPath();\n    ctx.moveTo(x + radius.tl, y);\n    ctx.lineTo(x + width - radius.tr, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n    ctx.lineTo(x + width, y + height - radius.br);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n    ctx.lineTo(x + radius.bl, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n    ctx.lineTo(x, y + radius.tl);\n    ctx.quadraticCurveTo(x, y, x + radius.tl, y);\n    ctx.closePath();\n    if (fill) {\n        ctx.fill();\n    }\n    if (stroke) {\n        ctx.stroke();\n    }\n}\n\nclass Particle {\n    constructor(fireworks) {\n        this.fireworks = fireworks;\n        this.type = 0;\n        this.colorType = 0;\n        this.side = 0;\n        this.typeSize = 4;\n        this.xFinished = false;\n        this.finishedStart = false;\n\n        this.x = 0;\n        this.y = 0;\n        this.rotation = 0;\n        this.moveX = 0;\n        this.moveY = 0;\n    }\n\n    draw(ctx) {\n        ctx.fillStyle = this.colorType;\n\n        if (this.type === 0) {\n            ctx.beginPath();\n            ctx.arc(this.x, this.y, this.typeSize, 0, Math.PI * 2, false);\n            ctx.fill();\n        } else {\n            ctx.save();\n            ctx.translate(this.x, this.y);\n            ctx.rotate((this.rotation * Math.PI) / 180);\n            roundRect(ctx, -this.typeSize, -2, this.typeSize * 2, 4, 2, true, false);\n            ctx.restore();\n        }\n    }\n\n    update(dt) {\n        const moveCoef = dt / 16.0;\n        this.x += this.moveX * moveCoef;\n        this.y += this.moveY * moveCoef;\n        if (this.xFinished !== 0) {\n            const dp = 0.5;\n            if (this.xFinished === 1) {\n                this.moveX += dp * moveCoef * 0.05;\n                if (this.moveX >= dp) {\n                    this.xFinished = 2;\n                }\n            } else {\n                this.moveX -= dp * moveCoef * 0.05;\n                if (this.moveX <= -dp) {\n                    this.xFinished = 1;\n                }\n            }\n        } else {\n            if (this.side === 0) {\n                if (this.moveX > 0) {\n                    this.moveX -= moveCoef * 0.05;\n                    if (this.moveX <= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            } else {\n                if (this.moveX < 0) {\n                    this.moveX += moveCoef * 0.05;\n                    if (this.moveX >= 0) {\n                        this.moveX = 0;\n                        this.xFinished = this.finishedStart;\n                    }\n                }\n            }\n        }\n        let yEdge = -0.5;\n        const wasNegative = this.moveY < yEdge;\n        if (this.moveY > yEdge) {\n            this.moveY += (1.0 / 3.0) * moveCoef * this.fireworks.speedCoef;\n        } else {\n            this.moveY += (1.0 / 3.0) * moveCoef;\n        }\n        if (wasNegative && this.moveY > yEdge) {\n            this.fireworks.fallingDownCount++;\n        }\n        if (this.type === 1) {\n            this.rotation += moveCoef * 10;\n            if (this.rotation > 360) {\n                this.rotation -= 360;\n            }\n        }\n\n        return this.y >= this.fireworks.getMeasuredHeight();\n    }\n}\n\nfunction getRandomInt(min, max) {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min)) + min;\n}\n\nclass Fireworks {\n    static colors = ['#E8BC2C', '#D0049E', '#02CBFE', '#5723FD', '#FE8C27', '#6CB859'];\n\n    constructor(context) {\n        this.context = context;\n        this.particlesCount = 60;\n        this.fallParticlesCount = 30;\n        this.particles = [];\n        this.speedCoef = 1.0;\n        this.fallingDownCount = 0;\n    }\n\n    getMeasuredHeight() {\n        return this.context.canvas.clientHeight;\n    }\n\n    getMeasuredWidth() {\n        return this.context.canvas.clientWidth;\n    }\n\n    createParticle(fall) {\n        const particle = new Particle(this);\n        particle.colorType = Fireworks.colors[getRandomInt(0, Fireworks.colors.length)];\n        particle.type = getRandomInt(0, 2);\n        particle.side = getRandomInt(0, 2);\n        particle.finishedStart = 1 + getRandomInt(0, 2);\n        if (particle.type === 0) {\n            particle.typeSize = 4 + Math.random() * 2;\n        } else {\n            particle.typeSize = 4 + Math.random() * 4;\n        }\n        if (fall) {\n            particle.y = -Math.random() * this.getMeasuredHeight() * 1.2;\n            particle.x = 5 + getRandomInt(0, this.getMeasuredWidth() - 10);\n            particle.xFinished = particle.finishedStart;\n        } else {\n            const xOffset = 4 + getRandomInt(0, 10);\n            const yOffset = this.getMeasuredHeight() / 4;\n            if (particle.side === 0) {\n                particle.x = -xOffset;\n            } else {\n                particle.x = this.getMeasuredWidth() + xOffset;\n            }\n            particle.rotation = Math.random() * 360;\n            particle.moveX = (particle.side === 0 ? 1 : -1) * (1.2 + Math.random() * 4);\n            particle.moveY = -(4 + Math.random() * 4);\n            particle.y = yOffset / 2 + getRandomInt(0, yOffset * 2);\n        }\n        // console.log(`particle side=${particle.side} x=${particle.x} y=${particle.y} moveX=${particle.moveX} moveY=${particle.moveY}`);\n        return particle;\n    }\n\n    start() {\n        if (this.started) {\n            return;\n        }\n\n        this.particles = [];\n        this.started = true;\n        this.startedFall = false;\n        this.fallingDownCount = 0;\n        this.speedCoef = 1.0;\n        this.lastUpdateTime = 0;\n        for (let a = 0; a < this.particlesCount; a++) {\n            this.particles.push(this.createParticle(false));\n        }\n\n        this.draw();\n    }\n\n    startFall() {\n        if (this.startedFall) {\n            return;\n        }\n        this.startedFall = true;\n        for (let a = 0; a < this.fallParticlesCount; a++) {\n            this.particles.push(this.createParticle(true));\n        }\n    }\n\n    draw() {\n        const newTime = Date.now();\n        let dt = newTime - this.lastUpdateTime;\n        this.lastUpdateTime = newTime;\n        if (dt > 18) {\n            dt = 16;\n        }\n        // console.log('draw dt', dt);\n        this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        for (let a = 0, N = this.particles.length; a < N; a++) {\n            const p = this.particles[a];\n            p.draw(this.context);\n            if (p.update(dt)) {\n                this.particles.splice(a, 1);\n                a--;\n                N--;\n            }\n        }\n        if (this.fallingDownCount >= this.particlesCount / 2 && this.speedCoef > 0.2) {\n            this.startFall();\n            this.speedCoef -= (dt / 16.0) * 0.15;\n            if (this.speedCoef < 0.2) {\n                this.speedCoef = 0.2;\n            }\n        }\n        if (this.particles.length) {\n            window.requestAnimationFrame(() => this.draw());\n        } else {\n            this.started = false;\n            this.context.clearRect(0, 0, this.getMeasuredWidth(), this.getMeasuredHeight());\n        }\n    }\n}\n\nclass FireworksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.canvasRef = React.createRef();\n    }\n\n    componentDidMount() {\n        this.attachToParent();\n    }\n\n    componentWillUnmount() {\n        this.detachFromParent();\n    }\n\n    attachToParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = parentNode;\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n        window.addEventListener('resize', this.onResize);\n    }\n\n    detachFromParent() {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        const parentNode = canvas.parentNode;\n        if (!parentNode) return;\n\n        this.parentNode = null;\n        window.removeEventListener('resize', this.onResize);\n    }\n\n    onResize = () => {\n        const canvas = this.canvasRef.current;\n        if (!canvas) return;\n\n        canvas.setAttribute('width', this.parentNode.clientWidth + 18);\n        canvas.setAttribute('height', this.parentNode.clientHeight + 12);\n    };\n\n    start() {\n        const ctx = this.canvasRef.current.getContext('2d');\n\n        const fireworks = new Fireworks(ctx);\n        fireworks.start();\n    }\n\n    render() {\n        return (\n            <canvas\n                ref={this.canvasRef}\n                style={{\n                    zIndex: 2,\n                    position: 'absolute',\n                    left: 0,\n                    top: 0,\n                    width: '100%',\n                    height: '100%',\n                    pointerEvents: 'none'\n                }}\n            />\n        );\n    }\n}\n\nFireworksComponent.propTypes = {};\n\nexport default FireworksComponent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Check'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Radio from '@material-ui/core/Radio';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport RadioButtonCheckedIcon from '@material-ui/icons/RadioButtonChecked';\nimport './PollRadio.css';\n\nclass PollRadio extends React.Component {\n    render() {\n        const { chosen, beingChosen, hidden, onChange } = this.props;\n\n        return (\n            <div className={classNames('poll-radio', { 'poll-radio-hidden': hidden })}>\n                <Radio\n                    color='primary'\n                    classes={{\n                        root: 'poll-radio-root',\n                        colorPrimary: 'message-control',\n                        disabled: 'message-control-disabled'\n                    }}\n                    TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                    checked={chosen || beingChosen}\n                    onChange={onChange}\n                    checkedIcon={<RadioButtonCheckedIcon classes={{ root: beingChosen ? 'poll-radio-icon' : null }} />}\n                />\n                {beingChosen && (\n                    <CircularProgress\n                        size={20}\n                        thickness={4.4}\n                        classes={{ root: 'poll-radio-progress-root', colorPrimary: 'message-control' }}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPollRadio.propTypes = {\n    chosen: PropTypes.bool,\n    beingChosen: PropTypes.bool,\n    hidden: PropTypes.bool\n};\n\nexport default PollRadio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { ANIMATION_DURATION_200MS } from './../../../Constants';\nimport './PollPercentage.css';\n\nclass PollPercentage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.handle = null;\n\n        const { value } = props;\n\n        this.state = {\n            from: value,\n            to: value,\n            animated: value,\n\n            prevPropsValue: value\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { closed, theme, value } = this.props;\n        const { animated } = this.state;\n\n        if (closed !== nextProps.closed) {\n            return true;\n        }\n\n        if (theme !== nextProps.theme) {\n            return true;\n        }\n\n        if (value !== nextProps.value) {\n            return true;\n        }\n\n        if (animated !== nextState.animated) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.value !== state.prevPropsValue) {\n            return {\n                startTime: Date.now(),\n                from: state.animated,\n                to: props.value,\n\n                prevPropsValue: props.value\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.value !== this.props.value) {\n            this.updateAnimation();\n        }\n    }\n\n    componentWillUnmount() {\n        this.stopAnimation();\n    }\n\n    updateAnimation = () => {\n        this.stopAnimation();\n\n        this.handle = requestAnimationFrame(this.onAnimationFrame);\n    };\n\n    stopAnimation = () => {\n        if (!this.handle) return;\n\n        cancelAnimationFrame(this.handle);\n        this.handle = null;\n    };\n\n    onAnimationFrame = () => {\n        const { startTime, from, to } = this.state;\n\n        const timePassed = Date.now() - startTime;\n\n        if (timePassed >= ANIMATION_DURATION_200MS) {\n            this.setState({ animated: to });\n            this.stopAnimation();\n        } else {\n            const animated = from + Math.floor(((to - from) * timePassed) / ANIMATION_DURATION_200MS);\n            this.setState({ animated });\n            this.handle = requestAnimationFrame(this.onAnimationFrame);\n        }\n    };\n\n    render() {\n        const { chosen, closed, onClick } = this.props;\n        const { animated } = this.state;\n\n        return (\n            <div className='poll-percentage'>\n                {/*{!closed && chosen ? (*/}\n                {/*    <a className='poll-percentage-action' onClick={onClick}>*/}\n                {/*        {animated + '%'}*/}\n                {/*    </a>*/}\n                {/*) : (*/}\n                {/*    <>{animated + '%'}</>*/}\n                {/*)}*/}\n                <>{animated + '%'}</>\n            </div>\n        );\n    }\n}\n\nPollPercentage.propTypes = {\n    value: PropTypes.number.isRequired,\n    chosen: PropTypes.bool,\n    closed: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default PollPercentage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport CheckIcon from '../../../Assets/Icons/Check';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport PollRadio from './PollRadio';\nimport PollPercentage from './PollPercentage';\nimport './PollOption.css';\n\nclass PollOption extends React.Component {\n    getTitleString = (count, t = key => key) => {\n        const { canBeSelected } = this.props;\n        if (canBeSelected) return null;\n\n        if (!count) return t('NoVotes').toLowerCase();\n        if (count === 1) return '1 vote';\n\n        return count + ' votes';\n    };\n\n    handleClick = event => {\n        const { canBeSelected, onVote } = this.props;\n        if (!canBeSelected) return;\n\n        event.stopPropagation();\n\n        onVote();\n    };\n\n    render() {\n        const { option, onChange, canBeSelected, closed, maxVoterCount, t, type, isCorrect } = this.props;\n        if (!option) return null;\n\n        const { text, voter_count, vote_percentage, is_chosen, isMultiChoosen, is_being_chosen } = option;\n\n        let value = 1.5;\n        if (voter_count) {\n            value = (voter_count / maxVoterCount) * 100;\n        }\n\n        return (\n            <div className='poll-option' onClick={this.handleClick}>\n                <div\n                    className={classNames(\n                        'poll-option-wrapper',\n                        canBeSelected ? 'poll-option-unselected' : 'poll-option-selected'\n                    )}>\n                    <div className='poll-option-text-wrapper' title={this.getTitleString(voter_count, t)}>\n                        <PollPercentage value={vote_percentage} chosen={is_chosen} closed={closed} />\n                        <PollRadio\n                            hidden={!canBeSelected}\n                            chosen={is_chosen || isMultiChoosen}\n                            beingChosen={is_being_chosen}\n                            onChange={onChange}\n                        />\n                        {(is_chosen || isCorrect) && (\n                            <div\n                                className={classNames(\n                                    'poll-option-mark',\n                                    { 'poll-option-mark-correct': type === 'correct' },\n                                    { 'poll-option-mark-incorrect': type === 'incorrect' }\n                                )}>\n                                {type === 'incorrect' ? (\n                                    <CloseIcon className='poll-option-mark-icon' />\n                                ) : (\n                                    <CheckIcon className='poll-option-mark-icon' />\n                                )}\n                            </div>\n                        )}\n                        <div className='poll-option-text'>{text}</div>\n                    </div>\n                </div>\n                <LinearProgress\n                    classes={{\n                        root: 'poll-option-progress-root',\n                        bar: classNames(\n                            'poll-option-progress-bar',\n                            { 'poll-option-progress-bar-correct': type === 'correct' },\n                            { 'poll-option-progress-bar-incorrect': type === 'incorrect' }\n                        )\n                    }}\n                    color='primary'\n                    variant='determinate'\n                    value={canBeSelected ? 0 : Math.max(1.5, value)}\n                />\n            </div>\n        );\n    }\n}\n\nPollOption.propTypes = {\n    type: PropTypes.oneOf(['regular', 'correct', 'incorrect']).isRequired,\n    option: PropTypes.object.isRequired,\n    onVote: PropTypes.func.isRequired,\n    canBeSelected: PropTypes.bool,\n    closed: PropTypes.bool,\n    maxVoterCount: PropTypes.number\n};\n\nexport default withTranslation()(PollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './UserPlaceholder.css';\nimport UserStatus from './UserStatus';\n\nclass UserPlaceholder extends React.Component {\n    render() {\n        const { index, showStatus } = this.props;\n\n        const titleWidth = `${20 + Math.sin(index) * 10}%`;\n        const contentWidth = `${30 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='user-placeholder'>\n                <div className='user-wrapper'>\n                    <div className='user-placeholder-tile' />\n                    <div className='user-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            <div className='dialog-placeholder-title' style={{ width: contentWidth, marginLeft: 8 }} />\n                        </div>\n                        {showStatus && (\n                            <div className='tile-second-row'>\n                                <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showStatus: PropTypes.bool\n};\n\nUserPlaceholder.defaultProps = {\n    showStatus: true\n};\n\nexport default UserPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport User from '../Tile/User';\nimport UserPlaceholder from '../Tile/UserPlaceholder';\nimport { openUser } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResult.css';\n\nclass PollOptionResult extends React.Component {\n    onClick = () => {\n        const { userId } = this.props;\n        if (!userId) return;\n\n        openUser(userId, true);\n\n        setTimeout(() => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateClosePollResults'\n            });\n        }, 0);\n    };\n\n    render() {\n        const { index, userId } = this.props;\n\n        const content = userId ? (\n            <User userId={userId} showStatus={false} />\n        ) : (\n            <UserPlaceholder index={index} showStatus={false} />\n        );\n\n        return (\n            <ListItem button className='user-list-item' onClick={this.onClick}>\n                {content}\n            </ListItem>\n        );\n    }\n}\n\nPollOptionResult.propTypes = {\n    index: PropTypes.number.isRequired,\n    userId: PropTypes.number\n};\n\nexport default PollOptionResult;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport PollOptionResult from './PollOptionResult';\nimport { loadUsersContent } from '../../Utils/File';\nimport { POLL_RESULTS_FIRST_SLICE_LENGTH, POLL_RESULTS_LEAVE_LENGTH, POLL_RESULTS_SLICE_LENGTH } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PollOptionResults.css';\n\nclass PollOptionResults extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.state = {\n            voters: [],\n            offset: 0,\n            count\n        };\n    }\n\n    async updateVoters(offset, count, loadMore) {\n        const { chatId, messageId, optionId, option } = this.props;\n        const { voters } = this.state;\n        if (count <= 0) return;\n\n        const limit = count - offset;\n        // console.log(`[poll] getPollVoters start option_id=${optionId} offset=${offset} limit=${limit}`);\n        const result = await TdLibController.send({\n            '@type': 'getPollVoters',\n            chat_id: chatId,\n            message_id: messageId,\n            option_id: optionId,\n            offset,\n            limit\n        });\n        // console.log(`[poll] getPollVoters end option_id=${optionId} offset=${offset} limit=${limit}`, result, result.user_ids.map(x => UserStore.get(x)));\n\n        if (this.props.option !== option) {\n            return;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, result.user_ids);\n\n        this.setState(\n            {\n                voters: [...voters, ...result.user_ids]\n            },\n            async () => {\n                if (result.user_ids.length < limit && loadMore) {\n                    const offset2 = offset + result.user_ids.length;\n\n                    this.updateVoters(offset2, count, false);\n                }\n            }\n        );\n    }\n\n    componentDidMount() {\n        const { offset, count } = this.state;\n\n        this.updateVoters(offset, count, true);\n    }\n\n    handleShowMore = () => {\n        const { option } = this.props;\n        const { count } = this.state;\n\n        const newOffset = count;\n        const newCount = Math.min(option.voter_count, count + POLL_RESULTS_SLICE_LENGTH);\n\n        this.setState(\n            {\n                offset: newOffset,\n                count: newCount\n            },\n            () => {\n                this.updateVoters(newOffset, newCount, true);\n            }\n        );\n    };\n\n    handleCollapse = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { option } = this.props;\n\n        const count =\n            option && option.voter_count <= POLL_RESULTS_FIRST_SLICE_LENGTH\n                ? option.voter_count\n                : POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH;\n\n        this.setState({\n            voters: this.state.voters.slice(0, count),\n            offset: 0,\n            count\n        });\n    };\n\n    render() {\n        const { option, isQuiz, t } = this.props;\n        const { voters, count } = this.state;\n\n        const { text, voter_count, vote_percentage } = option;\n        if (voter_count === 0) {\n            return null;\n        }\n\n        const results = [];\n        for (let i = 0; i < count; i++) {\n            const userId = i < voters.length ? voters[i] : null;\n            results.push(<PollOptionResult key={`${i}_userId=${userId}`} index={i} userId={userId} />);\n        }\n\n        const voterCount = isQuiz\n            ? voter_count !== 1\n                ? `${voter_count} answers`\n                : `${voter_count} answer`\n            : voter_count !== 1\n            ? `${voter_count} votes`\n            : `${voter_count} vote`;\n\n        let showMoreButton = null;\n        const showMoreCount = voter_count - count;\n        if (showMoreCount > 0) {\n            const showMore = isQuiz\n                ? showMoreCount !== 1\n                    ? `${showMoreCount} answers`\n                    : `${showMoreCount} answer`\n                : showMoreCount !== 1\n                ? `${showMoreCount} votes`\n                : `${showMoreCount} vote`;\n\n            showMoreButton = (\n                <Button\n                    classes={{ root: 'poll-option-results-button' }}\n                    color='primary'\n                    fullWidth\n                    onClick={this.handleShowMore}>\n                    {t('ShowVotesOT').replace('%1$d', showMore)}\n                </Button>\n            );\n        }\n        const showCollapse =\n            count > POLL_RESULTS_FIRST_SLICE_LENGTH - POLL_RESULTS_LEAVE_LENGTH &&\n            voter_count > POLL_RESULTS_FIRST_SLICE_LENGTH;\n\n        return (\n            <>\n                <div className='poll-option-results-caption'>\n                    <div className='poll-option-results-answer'>{`${text} — ${vote_percentage}%`}</div>\n                    {showCollapse ? (\n                        <a onClick={this.handleCollapse}>{t('PollCollapse')}</a>\n                    ) : (\n                        <div className='poll-option-results-count'>{voterCount}</div>\n                    )}\n                </div>\n                {results}\n                {showMoreButton}\n            </>\n        );\n    }\n}\n\nPollOptionResults.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    optionId: PropTypes.number.isRequired,\n    option: PropTypes.object.isRequired,\n    isQuiz: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(PollOptionResults);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport PollOptionResults from './PollOptionResults';\nimport PollStore from '../../Stores/PollStore';\nimport './PollResultsDialog.css';\n\nclass PollResultsDialog extends React.Component {\n    componentDidMount() {\n        PollStore.on('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdateClosePollResults', this.onClientUpdateClosePollResults);\n    }\n\n    onClientUpdateClosePollResults = update => {\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClose = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { onClose } = this.props;\n        onClose();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleContextMenu = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    render() {\n        const { chatId, messageId, poll, t } = this.props;\n        if (!poll) return;\n\n        const { options, type, question } = poll;\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n\n        return (\n            <Dialog\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                transitionDuration={0}\n                open={true}\n                onClick={this.handleClick}\n                onContextMenu={this.handleContextMenu}\n                onClose={this.handleClose}\n                aria-labelledby='poll-results-title'>\n                <DialogTitle id='poll-results-title'>{isQuiz ? t('QuizAnswers') : t('PollResults')}</DialogTitle>\n                <DialogContent classes={{ root: 'poll-results-content' }}>\n                    <div className='poll-results-question'>{question}</div>\n                    {options.map((x, i) => (\n                        <PollOptionResults\n                            key={i}\n                            isQuiz={isQuiz}\n                            chatId={chatId}\n                            messageId={messageId}\n                            optionId={i}\n                            option={x}\n                        />\n                    ))}\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nPollResultsDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(PollResultsDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FireworksComponent from './FireworksControl';\nimport PollOption from './PollOption';\nimport UserTile from '../../Tile/UserTile';\nimport { setPollAnswer } from '../../../Actions/Poll';\nimport MessageStore from './../../../Stores/MessageStore';\nimport TdLibController from './../../../Controllers/TdLibController';\nimport './Poll.css';\nimport PollResultsDialog from '../../Popup/PollResultsDialog';\n\nclass Poll extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.fireworksRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, poll } = this.props;\n\n        if (poll && poll.type['@type'] === 'pollTypeQuiz') {\n            const { poll: prevPoll } = prevProps;\n            if (prevPoll.type.correct_option_id === -1 && poll.type.correct_option_id !== -1) {\n                const fireworks = this.fireworksRef.current;\n                if (!fireworks) return;\n\n                if (poll.options[poll.type.correct_option_id].is_chosen) {\n                    fireworks.start();\n                } else {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMessageShake',\n                        chatId,\n                        messageId\n                    });\n                }\n            }\n        }\n    }\n\n    getTotalVoterCountString = (count, t = key => key) => {\n        if (!count) return t('NoVotes');\n        if (count === 1) return '1 answer';\n\n        return count + ' answers';\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (this.viewResults(poll)) {\n            return;\n        }\n\n        if (!type.allow_multiple_answers) {\n            return;\n        }\n\n        const optionIds = [];\n        poll.options.forEach((x, index) => {\n            if (x.isMultiChoosen) {\n                optionIds.push(index);\n            }\n        });\n\n        if (!optionIds.length) {\n            return;\n        }\n\n        setPollAnswer(chatId, messageId, optionIds);\n    };\n\n    handleVote = index => {\n        const { chatId, messageId, poll } = this.props;\n        if (!poll) return;\n\n        const { type } = poll;\n        if (!type) return;\n\n        if (type['@type'] === 'pollTypeRegular' && type.allow_multiple_answers) {\n            poll.options[index].isMultiChoosen = !poll.options[index].isMultiChoosen;\n            this.forceUpdate();\n        } else {\n            setPollAnswer(chatId, messageId, [index]);\n        }\n    };\n\n    viewResults(poll) {\n        if (!poll) return false;\n\n        const { options, is_closed, is_anonymous } = poll;\n        if (is_anonymous) {\n            return false;\n        }\n\n        return is_closed || options.some(x => x.is_chosen);\n    }\n\n    getOptionType(index, poll) {\n        const types = ['regular', 'correct', 'incorrect'];\n        const defaultTypeId = 0;\n        const correctTypeId = 1;\n        const incorrectTypeId = 2;\n        if (!poll) return types[defaultTypeId];\n\n        const option = poll.options[index];\n        if (!option) return types[defaultTypeId];\n        if (!option.is_chosen) return types[defaultTypeId];\n\n        const { type } = poll;\n        if (!type) return types[defaultTypeId];\n        if (type['@type'] !== 'pollTypeQuiz') return types[defaultTypeId];\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return types[defaultTypeId];\n\n        return correct_option_id === index ? types[correctTypeId] : types[incorrectTypeId];\n    }\n\n    getOptionIsCorrect(index, poll) {\n        if (!poll) return false;\n\n        const option = poll.options[index];\n        if (!option) return false;\n\n        const { type } = poll;\n        if (!type) return false;\n        if (type['@type'] !== 'pollTypeQuiz') return false;\n\n        const { correct_option_id } = type;\n        if (correct_option_id === -1) return false;\n\n        return correct_option_id === index;\n    }\n\n    handleOpenResults = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { poll } = this.props;\n\n        this.setState({\n            viewResultsPoll: poll\n        });\n    };\n\n    handleCloseResults = () => {\n        this.setState({\n            viewResultsPoll: null\n        });\n    };\n\n    render() {\n        const { chatId, messageId, poll, t, meta } = this.props;\n        const { viewResultsPoll } = this.state;\n        const { question, options, total_voter_count, type, is_closed, is_anonymous, recent_voter_user_ids } = poll;\n\n        let subtitle = t('FinalResults');\n        if (!is_closed) {\n            switch (type['@type']) {\n                case 'pollTypeRegular': {\n                    subtitle = is_anonymous ? t('AnonymousPoll') : t('PublicPoll');\n                    break;\n                }\n                case 'pollTypeQuiz': {\n                    subtitle = is_anonymous ? t('AnonymousQuizPoll') : t('QuizPoll');\n                    break;\n                }\n            }\n        }\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const isQuiz = type && type['@type'] === 'pollTypeQuiz';\n        const canBeSelected = !is_closed && options.every(x => !x.is_chosen);\n        const isSelected = !is_closed && options.some(x => x.is_chosen);\n        const maxVoterCount = Math.max(...options.map(x => x.voter_count));\n        const showViewResults = this.viewResults(poll);\n        const showButton = (type.allow_multiple_answers && !isSelected) || showViewResults;\n        const buttonEnabled = showViewResults || options.some(x => x.isMultiChoosen);\n        let recentVoters = [];\n        if (recent_voter_user_ids) {\n            recentVoters = recent_voter_user_ids.map(id => <UserTile key={id} poll userId={id} />);\n        }\n\n        return (\n            <div className='poll'>\n                {isQuiz && <FireworksComponent ref={this.fireworksRef} />}\n                <div className='poll-question'>\n                    <div className='poll-question-title'>{question}</div>\n                    <div className='poll-question-subtitle'>\n                        <span style={{ marginRight: 6 }}>{subtitle}</span>\n                        {recentVoters}\n                    </div>\n                </div>\n                <div className='poll-options'>\n                    {options.map((x, index) => (\n                        <PollOption\n                            key={index}\n                            type={this.getOptionType(index, poll)}\n                            isCorrect={this.getOptionIsCorrect(index, poll)}\n                            option={x}\n                            canBeSelected={canBeSelected}\n                            closed={is_closed}\n                            maxVoterCount={maxVoterCount}\n                            onVote={() => this.handleVote(index)}\n                        />\n                    ))}\n                </div>\n                {showButton ? (\n                    <Button\n                        fullWidth\n                        color='primary'\n                        classes={{\n                            root: 'poll-button',\n                            textPrimary: 'message-control',\n                            disabled: 'message-control-disabled'\n                        }}\n                        TouchRippleProps={{ classes: { child: 'touch-ripple-current-color' } }}\n                        disabled={!buttonEnabled}\n                        onClick={showViewResults ? this.handleOpenResults : this.handleSubmit}>\n                        {showViewResults ? t('PollViewResults') : t('PollSubmitVotes')}\n                    </Button>\n                ) : (\n                    <div className='poll-total-count'>\n                        {this.getTotalVoterCountString(total_voter_count, t)}\n                        {meta}\n                    </div>\n                )}\n                {Boolean(viewResultsPoll) && (\n                    <PollResultsDialog\n                        chatId={chatId}\n                        messageId={messageId}\n                        poll={viewResultsPoll}\n                        onClose={this.handleCloseResults}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nPoll.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    poll: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(Poll);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g fillRule='evenodd'>\n        <path d='M6,0 L33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,48 C54,51.3137085 51.3137085,54 48,54 L6,54 C2.6862915,54 4.05812251e-16,51.3137085 0,48 L0,6 C-4.05812251e-16,2.6862915 2.6862915,6.08718376e-16 6,0 Z' />\n        <path\n            d='M33.5147186,0 C35.1060176,6.45011102e-15 36.632141,0.632141042 37.7573593,1.75735931 L52.2426407,16.2426407 C53.367859,17.367859 54,18.8939824 54,20.4852814 L54,22 C54,19.790861 52.209139,18 50,18 L40,18 C37.790861,18 36,16.209139 36,14 L36,4 C36,1.790861 34.209139,-3.88578059e-16 32,0 L33.5147186,0 Z'\n            fill='#000000'\n            style={{ mixBlendMode: 'normal' }}\n            opacity='0.15'\n        />\n    </g>,\n    'Document'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDownloadedSize, getUploadedSize, getFileSize } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport './DocumentAction.css';\n\nclass DocumentAction extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { file } = this.props;\n        this.state = {\n            prevPropsFile: file,\n            prevFile: null,\n            file: FileStore.get(file.id) || file\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('updateFile', this.onUpdateFile);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n    }\n\n    onUpdateFile = update => {\n        const currentFile = this.state.file;\n        const nextFile = update.file;\n\n        if (currentFile && currentFile.id === nextFile.id) {\n            this.setState({ file: nextFile, prevFile: currentFile });\n        }\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { file } = props;\n        const { prevPropsFile } = state;\n\n        if (file && prevPropsFile && file.id !== prevPropsFile.id) {\n            return {\n                prevPropsFile: file,\n                prevFile: null,\n                file: FileStore.get(file.id) || file\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme } = this.props;\n        const { file, prevFile } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.file !== file) {\n            return true;\n        }\n\n        if (nextState.prevFile !== prevFile) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { meta } = this.props;\n        const { file } = this.state;\n        if (!file) return null;\n\n        const isDownloadingActive = file.local && file.local.is_downloading_active;\n        const isUploadingActive = file.remote && file.remote.is_uploading_active;\n\n        const size = getFileSize(file);\n        let progressSize = null;\n        if (isDownloadingActive) {\n            progressSize = getDownloadedSize(file);\n        } else if (isUploadingActive) {\n            progressSize = getUploadedSize(file);\n        }\n\n        const sizeString = progressSize ? `${progressSize}/${size}` : `${size}`;\n\n        return (\n            <div className='document-action'>\n                <span>{sizeString}</span>\n                {meta}\n            </div>\n        );\n    }\n}\n\nDocumentAction.propTypes = {\n    file: PropTypes.object.isRequired\n};\n\nexport default DocumentAction;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport DownloadIcon from '../../../Assets/Icons/Download';\nimport DocumentIcon from '../../../Assets/Icons/Document';\nimport DocumentTile from '../../Tile/DocumentTile';\nimport DocumentAction from './DocumentAction';\nimport { getExtension } from '../../../Utils/File';\nimport './Document.css';\n\nclass Document extends React.Component {\n    render() {\n        const { document, openMedia, width, height, meta, title, caption } = this.props;\n        if (!document) return null;\n\n        const { minithumbnail, thumbnail, file_name } = document;\n        const file = document.document;\n\n        const style = width && height ? { width, height } : null;\n        const completeIconFunc = thumb =>\n            thumb ? null : (\n                <div className='document-tile-complete-icon'>\n                    <DocumentIcon className='document-tile-icon-fill' viewBox='0 0 54 54' />\n                    <div className='document-tile-file-ext'>{getExtension(file_name)}</div>\n                </div>\n            );\n\n        return (\n            <div className={classNames('document', { 'media-title': title })} style={style}>\n                <DocumentTile\n                    minithumbnail={minithumbnail}\n                    thumbnail={thumbnail}\n                    file={file}\n                    openMedia={openMedia}\n                    icon={<DownloadIcon />}\n                    completeIcon={completeIconFunc}\n                />\n                <div className='document-content'>\n                    <div className='document-title'>\n                        <a\n                            className='document-name'\n                            onClick={openMedia}\n                            title={file_name}\n                            data-name={file_name}\n                            data-ext={'.' + getExtension(file_name)}>\n                            {file_name}\n                        </a>\n                    </div>\n                    <DocumentAction file={file} meta={caption ? null : meta} />\n                </div>\n            </div>\n        );\n    }\n}\n\nDocument.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    document: PropTypes.object.isRequired,\n    openMedia: PropTypes.func,\n    width: PropTypes.number,\n    height: PropTypes.number\n};\n\nexport default Document;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_PROGRESS_TIMEOUT_MS } from '../../../Constants';\nimport PlayerStore from '../../../Stores/PlayerStore';\nimport './VoiceNoteSlider.css';\n\nclass VoiceNoteSlider extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { message, time } = PlayerStore;\n        const { chatId, messageId, duration } = this.props;\n\n        const active = message && message.chat_id === chatId && message.id === messageId;\n        const currentTime = active && time ? time.currentTime : 0;\n        const audioDuration = active && time && time.duration ? time.duration : duration;\n\n        this.state = {\n            active: active,\n            currentTime: currentTime,\n            duration: audioDuration,\n            value: this.getValue(currentTime, audioDuration, active)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { active, value } = this.state;\n\n        if (nextState.value !== value) {\n            return true;\n        }\n\n        if (nextState.active !== active) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    reset = () => {\n        const { duration } = this.props;\n        const { value } = this.state;\n\n        if (value === 1) {\n            this.setState({\n                active: false,\n                currentTime: 0\n            });\n\n            setTimeout(() => {\n                const { currentTime } = this.state;\n                if (!currentTime) {\n                    this.setState({\n                        value: this.getValue(0, duration, false)\n                    });\n                }\n            }, PLAYER_PROGRESS_TIMEOUT_MS);\n        } else {\n            this.setState({\n                active: false,\n                currentTime: 0,\n                value: this.getValue(0, duration, false)\n            });\n        }\n    };\n\n    onClientUpdateMediaEnd = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.reset();\n        }\n    };\n\n    onClientUpdateMediaTime = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(update.currentTime, playerDuration, active);\n\n            this.setState({\n                currentTime: update.currentTime,\n                duration: playerDuration,\n                value\n            });\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId, duration } = this.props;\n        const { active, currentTime } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const playerDuration = update.duration >= 0 && update.duration < Infinity ? update.duration : duration;\n            const value = this.getValue(active ? currentTime : 0, playerDuration, true);\n\n            this.setState({\n                active: true,\n                currentTime: active ? currentTime : 0,\n                value\n            });\n        } else if (active) {\n            this.reset();\n        }\n    };\n\n    getValue = (currentTime, duration, active) => {\n        return active ? currentTime / duration : 0;\n    };\n\n    render() {\n        const { value } = this.state;\n\n        return (\n            <div className='voice-note-slider'>\n                <Slider\n                    className='voice-note-slider-component'\n                    classes={{\n                        track: 'voice-note-slider-track',\n                        // thumbWrapper: 'voice-note-slider-thumb-wrapper',\n                        thumb: 'voice-note-slider-thumb'\n                    }}\n                    min={0}\n                    max={1}\n                    value={value}\n                />\n            </div>\n        );\n    }\n}\n\nVoiceNoteSlider.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    duration: PropTypes.number.isRequired\n};\n\nexport default VoiceNoteSlider;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport AudioAction from './AudioAction';\nimport VoiceNoteTile from '../../Tile/VoiceNoteTile';\nimport MediaStatus from './MediaStatus';\nimport VoiceNoteSlider from './VoiceNoteSlider';\nimport './VoiceNote.css';\n\nclass VoiceNote extends React.Component {\n    render() {\n        const { chatId, messageId, voiceNote, openMedia, title, meta, caption } = this.props;\n        if (!voiceNote) return null;\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <div className={classNames('voice-note', 'document', { 'media-title': title })}>\n                <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                <div className='voice-note-content'>\n                    <VoiceNoteSlider chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                    <div className='voice-note-meta'>\n                        <AudioAction chatId={chatId} messageId={messageId} duration={duration} file={file} />\n                        <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        {!caption && meta}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default VoiceNote;\n","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"e33e8791554f674a437f.worker.js\");\n};","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { loaded } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        if (this.state.loaded) {\n            this.setState({ loaded: false });\n        } else {\n            this.forceUpdate();\n        }\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size, t } = this.props;\n        const { loaded } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_4', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const letters = getChatLetters(chat, t);\n        const src = getSrc(photo ? photo.small : null);\n        const tileLoaded = src && loaded;\n\n        const tileColor = `tile_color_${(Math.abs(chatId) % 8) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function copy(text) {\n    let element;\n\n    try {\n        element = document.createElement('textarea');\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.select();\n\n        const successful = document.execCommand('copy');\n        if (!successful) {\n            console.error('unable to copy using execCommand');\n        }\n    } catch {\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport TdLibController from '../Controllers/TdLibController';\nimport ChatStore from '../Stores/ChatStore';\nimport { isChatMuted } from '../Utils/Chat';\nimport { MUTED_VALUE_MAX, MUTED_VALUE_MIN } from '../Constants';\n\nexport async function getChat(chatId) {\n    const chat = TdLibController.send({\n        '@type': 'getChat',\n        chat_id: chatId\n    });\n    ChatStore.set(chat);\n\n    return chat;\n}\n\nexport function setChatChatList(chatId, chatList) {\n    TdLibController.send({\n        '@type': 'setChatChatList',\n        chat_id: chatId,\n        chat_list: chatList\n    });\n}\n\nexport function toggleChatIsPinned(chatId, isPinned) {\n    TdLibController.send({\n        '@type': 'toggleChatIsPinned',\n        chat_id: chatId,\n        is_pinned: isPinned\n    });\n}\n\nexport function toggleChatIsMarkedAsUnread(chatId, isMarkedAsUnread) {\n    TdLibController.send({\n        '@type': 'toggleChatIsMarkedAsUnread',\n        chat_id: chatId,\n        is_marked_as_unread: isMarkedAsUnread\n    });\n}\n\nexport function toggleChatNotificationSettings(chatId, isMuted) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const { notification_settings } = chat;\n    if (!notification_settings) return;\n\n    const isMutedPrev = isChatMuted(chatId);\n    if (isMutedPrev === isMuted) {\n        return;\n    }\n\n    const muteFor = isMuted ? MUTED_VALUE_MAX : MUTED_VALUE_MIN;\n    const newNotificationSettings = {\n        ...chat.notification_settings,\n        use_default_mute_for: false,\n        mute_for: muteFor\n    };\n\n    TdLibController.send({\n        '@type': 'setChatNotificationSettings',\n        chat_id: chatId,\n        notification_settings: newNotificationSettings\n    });\n}\n\nexport async function getChatCounters(chatId) {\n    const chat = ChatStore.get(chatId);\n    if (!chat) return;\n\n    const promises = [];\n\n    const photoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterPhoto' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(photoCounter);\n\n    const videoCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVideo' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(videoCounter);\n\n    const documentCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterDocument' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(documentCounter);\n\n    const audioCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterAudio' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(audioCounter);\n\n    const urlCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterUrl' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(urlCounter);\n\n    const voiceAndVideoNoteCounter = TdLibController.send({\n        '@type': 'getChatMessageCount',\n        chat_id: chatId,\n        filter: { '@type': 'searchMessagesFilterVoiceNote' },\n        return_local: false\n    })\n        .then(result => {\n            return result ? result.count : 0;\n        })\n        .catch(() => {\n            return 0;\n        });\n    promises.push(voiceAndVideoNoteCounter);\n\n    return await Promise.all(promises);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './MoreListItem.css';\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className='list-item' onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className='list-item' onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className='list-item' onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className='list-item'>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport { copy } from '../../Utils/Text';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <>\n                            <List>\n                                {username && (\n                                    <ListItem button className='list-item' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                {bio && (\n                                    <ListItem className='list-item'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(!isMe || isGroup || (popup && !isGroup)) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {!isMe && <NotificationsListItem chatId={chatId} />}\n                                {/*{isGroup && <MoreListItem chatId={chatId} />}*/}\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            inset\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {(photoCount > 0 ||\n                        videoCount > 0 ||\n                        documentCount > 0 ||\n                        audioCount > 0 ||\n                        urlCount > 0 ||\n                        voiceAndVideoNoteCount > 0 ||\n                        groupInCommonCount > 0) && (\n                        <>\n                            <Divider />\n                            <List>\n                                {photoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedPhotos}>\n                                        <ListItemIcon>\n                                            <PhotoIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {photoCount === 1 ? '1 photo' : `${photoCount} photos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {videoCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVideos}>\n                                        <ListItemIcon>\n                                            <VideocamIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {videoCount === 1 ? '1 video' : `${videoCount} videos`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {documentCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedDocuments}>\n                                        <ListItemIcon>\n                                            <InsertDriveFileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {documentCount === 1 ? '1 file' : `${documentCount} files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {audioCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedAudios}>\n                                        <ListItemIcon>\n                                            <HeadsetIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {urlCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedLinks}>\n                                        <ListItemIcon>\n                                            <InsertLinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {voiceAndVideoNoteCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>\n                                        <ListItemIcon>\n                                            <MicIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {voiceAndVideoNoteCount === 1\n                                                        ? '1 voice message'\n                                                        : `${voiceAndVideoNoteCount} voice messages`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                                {groupInCommonCount > 0 && (\n                                    <ListItem button className='list-item' onClick={onOpenGroupInCommon}>\n                                        <ListItemIcon>\n                                            <GroupIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {groupInCommonCount === 1\n                                                        ? '1 group in common'\n                                                        : `${groupInCommonCount} groups in common`}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        </>\n                    )}\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && <MenuItem onClick={this.handleOpenMessage}>{t('GoToMessage')}</MenuItem>}\n                    {can_be_forwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true))}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.number.isRequired\n};\n\nexport default SharedDocument;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 8) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        if (thumbnail.photo && thumbnail.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail, THUMBNAIL_BLURRED_SIZE_90) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} />\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                title={`${dateString}, `}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = ApplicationStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        // console.log('ChatDetails.ChatInfo.componentDidMount');\n        this.loadContent(this.state.chatId);\n\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        // console.log('ChatDetails.ChatInfo.render', this.state);\n        const { classes, className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ArchiveIcon from '@material-ui/icons/Archive';\nimport { openArchive } from '../../Actions/Client';\nimport './Archive.css';\n\nclass Archive extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { title, theme } = this.props;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.title !== title) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openArchive();\n        }\n    };\n\n    render() {\n        const { t, title } = this.props;\n\n        return (\n            <div\n                ref={this.dialog}\n                className='dialog'\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}>\n                <div className='dialog-wrapper'>\n                    <div className='chat-tile'>\n                        <div className='archive-tile-background tile-photo'>\n                            <div className='tile-saved-messages'>\n                                <ArchiveIcon fontSize='default' />\n                            </div>\n                        </div>\n                    </div>\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>\n                                <span className='dialog-title-span'>{t('ArchivedChats')}</span>\n                            </div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>{title}</div>\n                            {/*{unread_count > 0 && (*/}\n                            {/*    <div className={classNames('dialog-badge-muted', 'dialog-badge')}>*/}\n                            {/*        <span className='dialog-badge-text'>{unread_count}</span>*/}\n                            {/*    </div>*/}\n                            {/*)}*/}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nArchive.propTypes = {\n    title: PropTypes.string\n};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    showChatUnreadCount,\n    showChatUnreadMentionCount,\n    showChatUnreadMessageIcon\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatIsPinned', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatIsPinned', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { is_pinned, unread_count } = chat;\n\n        const showUnreadMessageIcon = false; //showChatUnreadMessageIcon(chatId);\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMessageIcon && <i className='dialog-badge-unread' />}\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {is_pinned && !showUnreadMessageIcon && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canSetChatChatList,\n    isChatArchived,\n    isChatMuted,\n    isChatSecret,\n    isChatUnread,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    setChatChatList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const chat = ChatStore.get(chatId);\n            const { is_pinned } = chat;\n            const canTogglePin = (await this.canPinChats(chatId)) || is_pinned;\n            const canToggleArchive = canSetChatChatList(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: isChatArchived(chatId) ? { '@type': 'chatListArchive' } : { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && chat.is_pinned ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        const { is_pinned } = chat;\n\n        if (!is_pinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, !is_pinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canSetChatChatList(chatId)) return;\n\n        setChatChatList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    getViewInfoTitle = () => {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ViewGroupInfo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ViewProfile');\n            }\n            case 'chatTypeSupergroup': {\n                if (type.is_channel) {\n                    return t('ViewChannelInfo');\n                }\n\n                return t('ViewGroupInfo');\n            }\n        }\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin } = this.state;\n\n        if (hidden) return null;\n\n        const chat = ChatStore.get(chatId);\n        const { is_pinned } = chat;\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames(isSelected ? 'dialog-active' : 'dialog', { 'item-selected': isSelected })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {is_pinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            {isPrivateChat(chatId) ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UserIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <GroupIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={this.getViewInfoTitle()} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleMute}>\n                            {isMuted ? (\n                                <>\n                                    <ListItemIcon>\n                                        <UnmuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsUnmute')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <MuteIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('ChatsMute')} />\n                                </>\n                            )}\n                        </MenuItem>\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={className}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Archive from '../Tile/Archive';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport { scrollTop } from '../../Utils/DOM';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false');\n        return false;\n    }\n\n    render() {\n        const { chatId, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n    }\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (isAuthorizationReady(authorizationState)) {\n            await FileStore.initDB(() => this.onLoadNext(true));\n        }\n    };\n\n    saveCache = () => {\n        const { onSaveCache } = this.props;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatOrder = update => {\n        const { type } = this.props;\n        const { chats } = this.state;\n\n        const { loading } = this;\n        if (loading) return;\n\n        const { chat_id, order } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat || !chat.chat_list || chat.chat_list['@type'] !== type) {\n            return;\n        }\n\n        const newChatIds = [];\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            let chat = ChatStore.get(chats[i]);\n            if (chat && chat.order !== '0') {\n                switch (chat.type['@type']) {\n                    case 'chatTypeBasicGroup': {\n                        const basicGroup = BasicGroupStore.get(chat.type.basic_group_id);\n                        if (basicGroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                    case 'chatTypePrivate': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSecret': {\n                        chatIds.push(chat.id);\n                        break;\n                    }\n                    case 'chatTypeSupergroup': {\n                        const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                        if (supergroup.status['@type'] !== 'chatMemberStatusLeft') {\n                            chatIds.push(chat.id);\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                AppStore.changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (chats.length > 0) {\n                const existingChat = chats.find(x => x === chat_id);\n                if (!existingChat) {\n                    // const minChatOrder = ChatStore.get(chats[chats.length - 1]).order;\n                    // if (orderCompare(minChatOrder, chat.order) === 1) {\n                    //     console.log('[dl] onUpdate return 3', type);\n                    //     return;\n                    // }\n                    newChatIds.push(chat_id);\n                }\n            } else {\n                newChatIds.push(chat_id);\n            }\n        }\n\n        // console.log('[dl] onUpdate reorderChats', type, chatIds, newChatIds);\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = chat.order;\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[update] GETCHATS start');\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': type },\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (type === 'chatListMain') console.log('[update] GETCHATS stop');\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady' });\n            }\n        });\n        // TdLibController.send({\n        //     '@type': 'getChats',\n        //     offset_chat_id: offsetChatId,\n        //     offset_order: offsetOrder,\n        //     limit: CHAT_SLICE_LIMIT + 100\n        // });\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { type, open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                const chat = ChatStore.get(x);\n                if (chat && chat.is_pinned) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (type === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n            // <div ref={this.listRef} className='dialogs-list' onScroll={this.handleScroll}>\n            //     {showArchive && offset === 0 && <Archive title={archiveTitle} />}\n            //     {dialogs}\n            // </div>\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport class KeyboardHandler {\n    constructor(onKeyDown) {\n        this.onKeyDown = onKeyDown;\n    }\n}\n\nclass KeyboardManager {\n    constructor() {\n        this.handlers = [];\n\n        document.addEventListener('keydown', this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        const { handlers } = this;\n        if (!handlers.length) return;\n\n        const handler = handlers[handlers.length - 1];\n        if (handler) {\n            // event.preventDefault();\n            // event.stopPropagation();\n\n            const { onKeyDown } = handler;\n            if (onKeyDown) {\n                onKeyDown(event);\n            }\n        }\n    };\n\n    add(handler) {\n        // console.log('[sm] add', page);\n        this.handlers.push(handler);\n    }\n\n    remove(handler) {\n        // console.log('[sm] remove', page);\n        const index = this.handlers.indexOf(handler);\n        if (index === -1) return;\n\n        this.handlers.splice(index, 1);\n    }\n}\n\nconst manager = new KeyboardManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = event => {\n        this.handleMenuClose();\n    };\n\n    render() {\n        const { t, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    <SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                event.stopPropagation();\n                event.target.blur();\n                onClose();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                <SearchIcon className='search-input-icon' />\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { ANIMATION_DURATION_100MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch, text } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            const searchInput = this.searchInputRef.current;\n            if (openSearch) {\n                setTimeout(() => {\n                    if (searchInput) {\n                        searchInput.focus();\n                    }\n                }, ANIMATION_DURATION_100MS);\n            } else {\n                searchInput.innerText = null;\n            }\n        }\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch } = this.props;\n\n        let content = null;\n        let showClose = false;\n        if (openSearch) {\n            showClose = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton showClose={showClose} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        event.target.blur();\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) onClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport PhotoIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Chat from '../../Tile/Chat';\nimport SidebarPage from '../SidebarPage';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        // console.log('[un] render', hasError, usernameLabel);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            showTitle={false}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={null}\n                        />\n                    </div>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            You can choose a username on Telegram. If you do, other people will be able to find you by\n                            this username and contact you without knowing your phone number. You can use a-z, 0-9 and\n                            underscores. Minimum length is 5 characters.\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>\n                            <ListItemIcon>\n                                <SharedMediaIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ChatBackground')} />\n                        </ListItem>\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('PrivacyTitle')}</SectionHeader>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyPhoneTitle')}\n                                secondary={t('LastSeenContacts')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('LastSeenTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyProfilePhotoTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('PrivacyForwardsTitle')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                        <ListItem className='settings-list-item2' role={undefined} button>\n                            <ListItemText\n                                className='settings-list-item-text2'\n                                primary={t('WhoCanAddMe')}\n                                secondary={t('LastSeenEverybody')}\n                            />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveChatsInternal = debounce(this.saveChatsInternal, 2000);\n    }\n\n    reset = () => {\n        this.chatIds = [];\n        this.cache = null;\n        this.contacts = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        CacheManager.remove('contacts');\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async loadCache() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        const [cache, files] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n        // console.log('[cm] getChats result', this.cache);\n        if (!this.cache) return null;\n\n        this.parseCache(this.cache);\n\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n\n        (files || []).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).forEach(x => {\n            delete x.OutputTypingManager;\n\n            ChatStore.set(x);\n            if (x.photo) {\n                if (x.photo.small) FileStore.set(x.photo.small);\n                if (x.photo.big) FileStore.set(x.photo.big);\n            }\n            if (x.chat_list) {\n                ChatStore.updateChatChatList(x.id, x.chat_list);\n            }\n            if (x.last_message) {\n                MessageStore.set(x.last_message);\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n        chats.concat(archiveChats).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    saveChats(chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.saveChatsInternal();\n    }\n\n    async saveChatsInternal() {\n        // console.log('[cm] saveChatsInternal', this.chatIds, this.archiveChatIds);\n        const cache = this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        if (onClose) onClose();\n    };\n\n    render() {\n        const { items, searchItems } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content'>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport ChatStore from '../Stores/ChatStore';\nimport { orderCompare } from './Common';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                if (chat.order !== '0') chats.push(chat);\n                chatsOrder.push({ order: chat.order, id: chat.id, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(b.order, a.order));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\nimport CSSTransition from 'react-transition-group/CSSTransition';\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        const { isChatDetailsVisible } = AppStore;\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            isChatDetailsVisible,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.isChatDetailsVisible !== isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.on('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.on('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n\n        ChatStore.off('updateChatChatList', this.onUpdateChatChatList);\n\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsPinned', this.onUpdateChatOrder);\n        ChatStore.off('updateChatIsSponsored', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatOrder', this.onUpdateChatOrder);\n\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n    }\n\n    async loadCache() {\n        const cache = (await CacheStore.loadCache()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        CacheStore.saveChats(mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { chat_id } = update;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archive = ChatStore.chatList.get('chatListArchive');\n        if (archive && archive.has(chat_id)) {\n            this.setState({ archiveTitle: getArchiveTitle() });\n        }\n    };\n\n    onUpdateChatChatList = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openSettings: false,\n                openActiveSessions: false,\n                openContacts: false\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            isChatDetailsVisible,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div\n                    className={classNames('dialogs', {\n                        'dialogs-third-column': isChatDetailsVisible\n                    })}>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <DialogsList\n                                type='chatListMain'\n                                ref={this.dialogListRef}\n                                cacheItems={mainCacheItems}\n                                items={mainItems}\n                                showArchive={showArchive}\n                                archiveTitle={archiveTitle}\n                                open={true}\n                                onSaveCache={this.handleSaveCache}\n                            />\n                            <CSSTransition\n                                classNames='search'\n                                timeout={200}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (AppStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => AppStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            const key = 'disallow_multiple_answers';\n            const message = t('PollQuizOneRightAnswer');\n            const action = null;\n\n            this.handleScheduledAction(key, message, action);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from './../../Utils/Url';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={messageId || editMessageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { getRandomInt, readImageSize } from '../../Utils/Common';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './EditMediaDialog.css';\nimport { RadioGroup } from '@material-ui/core';\nimport Radio from '@material-ui/core/Radio';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newMedia } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newMedia && newMedia['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId, open } = this.props;\n        if (open && open !== prevProps.open) {\n\n            let text = null;\n            let caption = null;\n            const message = MessageStore.get(chatId, messageId);\n            if (message) {\n                const { content } = message;\n                if (content) {\n                    text = content.text;\n                    caption = content.caption;\n                }\n            }\n\n            setTimeout(() => {\n                const element = this.captionRef.current;\n                if (!element) return;\n\n                if (text) {\n                    this.setFormattedText(text);\n                } else if (caption) {\n                    this.setFormattedText(caption);\n                } else {\n                    element.innerText = null;\n                }\n\n                focusInput(element);\n            }, 0);\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newFile, newMedia, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            } else {\n                onEdit(caption, null);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            }\n        } else {\n            const { photo, document } = newMedia;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: newFile.name, data: newFile },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: newFile.name, data: newFile },\n                        thumbnail: null,\n                        caption\n                    };\n\n                onSend(content, newFile);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            } else if (document) {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: newFile.name, data: newFile },\n                    thumbnail: null,\n                    caption\n                };\n\n                onSend(content, newFile);\n\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId,\n                    messageId: 0\n                });\n            }\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, onCancel } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newMedia, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newMedia && newMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else {\n            media = getMedia({ content: newMedia });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newFile: PropTypes.instanceOf(File),\n    newMedia: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { PHOTO_SIZE } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const { chatId, newDraft, files, replyToMessageId, editMessageId, openEditMedia, openEditUrl, sendFile } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        console.log('saveDraft', innerHTML);\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n    }\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia: messageId !== 0 && isEditedMedia(chatId, messageId)\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    this.focusInput();\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, photo } = thumbnail;\n\n            content.thumbnail = {\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: photo.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = () => {\n        const { chatId, editMessageId } = this.state;\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateEditMessage',\n            chatId,\n            messageId: 0\n        });\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newMedia = await getMediaPhotoFromFile(newFile);\n            this.setState({\n                openEditMedia: true,\n                newFile,\n                newMedia\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newMedia = await getMediaDocumentFromFile(newFile);\n            this.setState({\n                openEditMedia: true,\n                newFile,\n                newMedia\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateEditMessage',\n                chatId,\n                messageId: 0\n            });\n        } else if (replyToMessageId) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId,\n                messageId: 0\n            });\n        }\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey } = event;\n\n        // console.log('[k] handleKeyDown', altKey, ctrlKey, keyCode, metaKey, repeat, shiftKey);\n\n        switch (keyCode) {\n            // enter\n            case 13: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleSubmit();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 27: {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat) this.handleCancel();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // arrow up\n            case 38: {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 66: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 73: {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 75: {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 192: {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey) {\n                    if (!repeat) this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newFile = files[0];\n            if (newFile.type.startsWith('image')) {\n                const newMedia = await getMediaPhotoFromFile(newFile);\n                if (newMedia) {\n                    this.setState({\n                        newMedia,\n                        newFile,\n                        openEditMedia: true\n                    });\n                }\n            } else {\n                const newMedia = await getMediaDocumentFromFile(newFile);\n                if (newMedia) {\n                    this.setState({\n                        newMedia,\n                        newFile,\n                        openEditMedia: true\n                    });\n                }\n            }\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n        if (file.blob) return;\n\n        file.blob = blob;\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        switch (content['@type']) {\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog() {\n        this.setState(\n            {\n                openEditMedia: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newFile,\n            newMedia,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n\n        return (\n            <div className='inputbox-background'>\n                <div className='inputbox'>\n                    <div className='inputbox-bubble'>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className='inputbox-send-button'\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {editMessageId ? <DoneIcon /> : <SendIcon />}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newFile={newFile}\n                    newMedia={newMedia}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : null;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        {t('Undo')}\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = ApplicationStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>{t('ChatInfo')}</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>{t('ClearHistory')}</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                    {unpinMessage && <MenuItem onClick={this.handleUnpin}>{t('Unpin')}</MenuItem>}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        AppStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div>\n                    {t('From') + ' '}\n                    <Tooltip\n                        title={tooltip}\n                        classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}\n                        PopperProps={{\n                            popperOptions: {\n                                modifiers: {\n                                    arrow: {\n                                        enabled: Boolean(arrowRef),\n                                        element: arrowRef\n                                    }\n                                }\n                            }\n                        }}\n                        placement='top'>\n                        <a onClick={this.openForward}>{title}</a>\n                    </Tooltip>\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n    render() {\n        const { className, chatId, messageId, date, editDate, onDateClick, t, views, style } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { is_outgoing } = message;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {is_outgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose } = this.props;\n        const { copyLink } = this.state;\n\n        onClose(event);\n\n        if (!copyLink) return;\n        copy(copyLink);\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, canCopyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId);\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canCopyLink && <MenuItem onClick={this.handleCopyLink}>{t('CopyLink')}</MenuItem>}\n                        {canBeReplied && <MenuItem onClick={this.handleReply}>{t('Reply')}</MenuItem>}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>{isPinned ? t('Unpin') : t('Pin')}</MenuItem>\n                        )}\n                        {canBeSelected && <MenuItem onClick={this.handleSelect}>{t('Select')}</MenuItem>}\n                        {canBeForwarded && <MenuItem onClick={this.handleForward}>{t('Forward')}</MenuItem>}\n                        {canBeEdited && <MenuItem onClick={this.handleEdit}>{t('Edit')}</MenuItem>}\n                        {canBeDeleted && <MenuItem onClick={this.handleDelete}>{t('Delete')}</MenuItem>}\n                        {canBeUnvoted && <MenuItem onClick={this.handleUnvote}>{t('Unvote')}</MenuItem>}\n                        {canBeClosed && <MenuItem onClick={this.handleConfirmStopPoll}>{t('StopPoll')}</MenuItem>}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    canCopyLink: PropTypes.bool\n};\n\nexport default withTranslation()(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nlet timestamp = null;\n\nexport async function openInstantView(url) {\n    try {\n        const now = (timestamp = new Date());\n        const result = await TdLibController.send({\n            '@type': 'getWebPageInstantView',\n            url,\n            force_full: true\n        });\n        if (timestamp !== now) return;\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n            const extraSmallPhoto = smallPhoto && (!description || description.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { description, instant_view_version, site_name, title } = web_page;\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n} from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            canCopyLink: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const canCopyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                canCopyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { t, chatId, messageId, showUnreadSeparator, showTail, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            canCopyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const text = getText(message, inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia, hasTitle, hasCaption, inlineMeta);\n\n        let tile = null;\n        if (showTail) {\n            tile = sender_user_id ? (\n                <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble =\n            message.content['@type'] !== 'messageSticker' && message.content['@type'] !== 'messageVideoNote';\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-top': showTitle && !showTail,\n                        'message-bottom': !showTitle && showTail,\n                        'message-middle': !showTitle && !showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'message-wrapper-shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && (\n                                    <Meta\n                                        className={classNames('meta-text', {\n                                            'meta-bubble': isMetaBubble(chatId, messageId)\n                                        })}\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        date={date}\n                                        editDate={edit_date}\n                                        views={views}\n                                        onDateClick={this.handleDateClick}\n                                    />\n                                )}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    canCopyLink={canCopyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getSupergroupId, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        // console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        // console.log('MessagesList.newSessionId ctor');\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log('[ml] getSnapshotBeforeUpdate', snapshot);\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateEditMessage',\n                        chatId: message.chat_id,\n                        messageId: message.id\n                    });\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateEditMessage',\n                    chatId: message.chat_id,\n                    messageId: message.id\n                });\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                  const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                      const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                      const showTail = !nextMessage || isServiceMessage(nextMessage) || nextShowTitle;\n\n                      m = (\n                          <Message\n                              key={`chat_id=${x.chat_id} message_id=${x.id}`}\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showTail={showTail}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                              showDate={showDate}\n                          />\n                      );\n                  }\n\n                  return m;\n              });\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className='notification-close-button'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker } = this.state;\n\n        return stickerSet !== nextState.stickerSet || sticker !== nextState.sticker;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className='sticker-set-dialog'\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <Typography variant='h6' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className='sticker-set-dialog-share-button' />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: 'sticker-set-dialog-content-root' }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogDetails.css';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n        const { isChatDetailsVisible } = AppStore;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.photo);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })} style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDisplayName } from '../../Utils/HOC';\n\nconst IVContext = React.createContext(null);\n\nexport default IVContext;\n\nexport function withIV(Component) {\n    class IVComponent extends React.Component {\n        render() {\n            return <IVContext.Consumer>{value => <Component iv={value} {...this.props} />}</IVContext.Consumer>;\n        }\n    }\n    IVComponent.displayName = `WithIV(${getDisplayName(Component)})`;\n\n    return IVComponent;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getRichText } from '../../../Utils/InstantView';\n\nfunction RichText(props) {\n    return getRichText(props.text);\n}\n\nRichText.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default RichText;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Anchor from '../Components/InstantView/Blocks/Anchor';\nimport Animation from '../Components/InstantView/Blocks/Animation';\nimport AuthorDate from '../Components/InstantView/Blocks/AuthorDate';\nimport BlockQuote from '../Components/InstantView/Blocks/Blockquote';\nimport Collage from '../Components/InstantView/Blocks/Collage';\nimport Cover from '../Components/InstantView/Blocks/Cover';\nimport Details from '../Components/InstantView/Blocks/Details';\nimport Divider from '../Components/InstantView/Blocks/Divider';\nimport Embedded from '../Components/InstantView/Blocks/Embedded';\nimport EmbeddedPost from '../Components/InstantView/Blocks/EmbeddedPost';\nimport ErrorHandler from '../Components/InstantView/Blocks/ErrorHandler';\nimport Footer from '../Components/InstantView/Blocks/Footer';\nimport Header from '../Components/InstantView/Blocks/Header';\nimport Kicker from '../Components/InstantView/Blocks/Kicker';\nimport List from '../Components/InstantView/Blocks/List';\nimport ListItem from '../Components/InstantView/Blocks/ListItem';\nimport Paragraph from '../Components/InstantView/Blocks/Paragraph';\nimport Photo from '../Components/InstantView/Blocks/Photo';\nimport Preformatted from '../Components/InstantView/Blocks/Preformatted';\nimport PullQuote from '../Components/InstantView/Blocks/PullQuote';\nimport RelatedArticle from '../Components/InstantView/Blocks/RelatedArticle';\nimport RelatedArticles from '../Components/InstantView/Blocks/RelatedArticles';\nimport Slideshow from '../Components/InstantView/Blocks/Slideshow';\nimport Subheader from '../Components/InstantView/Blocks/Subheader';\nimport Subtitle from '../Components/InstantView/Blocks/Subtitle';\nimport Title from '../Components/InstantView/Blocks/Title';\nimport Bold from '../Components/InstantView/RichText/Bold';\nimport EmailAddress from '../Components/InstantView/RichText/EmailAddress';\nimport Fixed from '../Components/InstantView/RichText/Fixed';\nimport Icon from '../Components/InstantView/RichText/Icon';\nimport Italic from '../Components/InstantView/RichText/Italic';\nimport Marked from '../Components/InstantView/RichText/Marked';\nimport PhoneNumber from '../Components/InstantView/RichText/PhoneNumber';\nimport Plain from '../Components/InstantView/RichText/Plain';\nimport Strikethrough from '../Components/InstantView/RichText/Strikethrough';\nimport Subscript from '../Components/InstantView/RichText/Subscript';\nimport Superscript from '../Components/InstantView/RichText/Superscript';\nimport TextAnchor from '../Components/InstantView/RichText/Anchor';\nimport Texts from '../Components/InstantView/RichText/Texts';\nimport Underline from '../Components/InstantView/RichText/Underline';\nimport Url from '../Components/InstantView/RichText/Url';\nimport Table from '../Components/InstantView/Blocks/Table';\nimport TableCell from '../Components/InstantView/Blocks/TableCell';\nimport Map from '../Components/InstantView/Blocks/Map';\nimport Audio from '../Components/InstantView/Blocks/Audio';\nimport ChatLink from '../Components/InstantView/Blocks/ChatLink';\nimport Video from '../Components/InstantView/Blocks/Video';\nimport { download } from './File';\nimport { setInstantViewViewerContent } from '../Actions/Client';\nimport FileStore from '../Stores/FileStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openInstantViewMedia(media, caption, block, instantView, fileCancel) {\n    // console.log('[IV] openIVMedia', media);\n\n    if (!media) return;\n\n    const chatId = 0;\n    const messageId = 0;\n\n    switch (media['@type']) {\n        case 'animation': {\n            let { animation: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAnimationBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'audio': {\n            let { audio: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateAudioBlob(chatId, messageId, file.id));\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaActive',\n                instantView,\n                block\n            });\n            break;\n        }\n        case 'photo': {\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n        case 'video': {\n            let { video: file } = media;\n            if (!file) return;\n\n            file = FileStore.get(file.id) || file;\n            if (fileCancel && file.local.is_downloading_active) {\n                FileStore.cancelGetRemoteFile(file.id, media);\n                return;\n            } else if (fileCancel && file.remote.is_uploading_active) {\n                FileStore.cancelUploadFile(file.id, media);\n                return;\n            } else {\n                download(file, media, FileStore.updateVideoBlob(chatId, messageId, file.id));\n            }\n\n            setInstantViewViewerContent({\n                media,\n                caption,\n                block,\n                instantView\n            });\n            break;\n        }\n    }\n}\n\nexport function getPageBlock(block, iv, key = undefined) {\n    if (!block) return null;\n\n    let element = null;\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            element = <Anchor name={block.name} />;\n            break;\n        }\n        case 'pageBlockAnimation': {\n            element = (\n                <Animation\n                    block={block}\n                    caption={block.caption}\n                    animation={block.animation}\n                    needAutoplay={block.need_autoplay}\n                    openMedia={() => openInstantViewMedia(block.animation, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAudio': {\n            element = (\n                <Audio\n                    caption={block.caption}\n                    audio={block.audio}\n                    openMedia={() => openInstantViewMedia(block.audio, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockAuthorDate': {\n            element = <AuthorDate author={block.author} publishDate={block.publish_date} />;\n            break;\n        }\n        case 'pageBlockBlockQuote': {\n            element = <BlockQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockCollage': {\n            element = <Collage pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockChatLink': {\n            element = <ChatLink title={block.title} photo={block.photo} username={block.username} />;\n            break;\n        }\n        case 'pageBlockCover': {\n            element = <Cover cover={block.cover} />;\n            break;\n        }\n        case 'pageBlockDetails': {\n            element = <Details header={block.header} pageBlocks={block.page_blocks} isOpen={block.is_open} />;\n            break;\n        }\n        case 'pageBlockDivider': {\n            element = <Divider />;\n            break;\n        }\n        case 'pageBlockEmbedded': {\n            element = (\n                <Embedded\n                    url={block.url}\n                    html={block.html}\n                    posterPhoto={block.poster_photo}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                    isFullWidth={block.is_full_width}\n                    allowScrolling={block.allow_scrolling}\n                />\n            );\n            break;\n        }\n        case 'pageBlockEmbeddedPost': {\n            element = (\n                <EmbeddedPost\n                    url={block.url}\n                    author={block.author}\n                    authorPhoto={block.author_photo}\n                    date={block.date}\n                    pageBlocks={block.page_blocks}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockFooter': {\n            element = <Footer footer={block.footer} />;\n            break;\n        }\n        case 'pageBlockHeader': {\n            element = <Header header={block.header} />;\n            break;\n        }\n        case 'pageBlockKicker': {\n            element = <Kicker kicker={block.kicker} />;\n            break;\n        }\n        case 'pageBlockList': {\n            element = <List items={block.items} />;\n            break;\n        }\n        case 'pageBlockListItem': {\n            element = <ListItem label={block.label} pageBlocks={block.page_blocks} />;\n            break;\n        }\n        case 'pageBlockMap': {\n            element = (\n                <Map\n                    location={block.location}\n                    zoom={block.zoom}\n                    width={block.width}\n                    height={block.height}\n                    caption={block.caption}\n                />\n            );\n            break;\n        }\n        case 'pageBlockParagraph': {\n            element = <Paragraph text={block.text} />;\n            break;\n        }\n        case 'pageBlockPhoto': {\n            element = (\n                <Photo\n                    caption={block.caption}\n                    photo={block.photo}\n                    url={block.url}\n                    openMedia={() => openInstantViewMedia(block.photo, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n        case 'pageBlockPreformatted': {\n            element = <Preformatted text={block.text} language={block.language} />;\n            break;\n        }\n        case 'pageBlockPullQuote': {\n            element = <PullQuote credit={block.credit} text={block.text} />;\n            break;\n        }\n        case 'pageBlockRelatedArticle': {\n            element = (\n                <RelatedArticle\n                    url={block.url}\n                    title={block.title}\n                    description={block.description}\n                    photo={block.photo}\n                    author={block.author}\n                    publishDate={block.publish_date}\n                />\n            );\n            break;\n        }\n        case 'pageBlockRelatedArticles': {\n            element = <RelatedArticles header={block.header} articles={block.articles} />;\n            break;\n        }\n        case 'pageBlockSlideshow': {\n            element = <Slideshow pageBlocks={block.page_blocks} caption={block.caption} />;\n            break;\n        }\n        case 'pageBlockSubheader': {\n            element = <Subheader subheader={block.subheader} />;\n            break;\n        }\n        case 'pageBlockSubtitle': {\n            element = <Subtitle subtitle={block.subtitle} />;\n            break;\n        }\n        case 'pageBlockTable': {\n            element = (\n                <Table\n                    caption={block.caption}\n                    cells={block.cells}\n                    isBordered={block.is_bordered}\n                    isStriped={block.is_striped}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTableCell': {\n            element = (\n                <TableCell\n                    text={block.text}\n                    isHeader={block.is_header}\n                    colspan={block.colspan}\n                    rowspan={block.rowspan}\n                    align={block.align}\n                    valign={block.valign}\n                />\n            );\n            break;\n        }\n        case 'pageBlockTitle': {\n            element = <Title title={block.title} />;\n            break;\n        }\n        case 'pageBlockVideo': {\n            element = (\n                <Video\n                    caption={block.caption}\n                    video={block.video}\n                    needAutoplay={block.need_autoplay}\n                    isLooped={block.is_looped}\n                    openMedia={() => openInstantViewMedia(block.video, block.caption, block, iv, true)}\n                />\n            );\n            break;\n        }\n    }\n\n    if (element) {\n        return <ErrorHandler key={key}>{element}</ErrorHandler>;\n    }\n\n    return <div>{`[${block['@type']}]`}</div>;\n}\n\nexport function getRichText(richText) {\n    if (!richText) {\n        return null;\n    }\n\n    if (richText instanceof String) {\n        return richText;\n    }\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { name, text } = richText;\n\n            return <TextAnchor text={text} name={name} />;\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return <Bold text={text} />;\n        }\n        case 'richTextEmailAddress': {\n            const { email_address, text } = richText;\n\n            return <EmailAddress emailAddress={email_address} text={text} />;\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return <Fixed text={text} />;\n        }\n        case 'richTextIcon': {\n            const { document, height, width } = richText;\n\n            return <Icon document={document} height={height} width={width} />;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return <Italic text={text} />;\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return <Marked text={text} />;\n        }\n        case 'richTextPhoneNumber': {\n            const { phone_number, text } = richText;\n\n            return <PhoneNumber phoneNumber={phone_number} text={text} />;\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return <Plain text={text} />;\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return <Strikethrough text={text} />;\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return <Subscript text={text} />;\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return <Superscript text={text} />;\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return <Texts texts={texts} />;\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return <Underline text={text} />;\n        }\n        case 'richTextUrl': {\n            const { text, url } = richText;\n\n            return <Url text={text} url={url} />;\n        }\n    }\n\n    return `[${richText['@type']}]`;\n}\n\nexport function isEmptyText(richText) {\n    if (!richText) return true;\n\n    switch (richText['@type']) {\n        case 'richTextAnchor': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextBold': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextEmailAddress': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextFixed': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextIcon': {\n            return false;\n        }\n        case 'richTextItalic': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextMarked': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPhoneNumber': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextPlain': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextStrikethrough': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSubscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextSuperscript': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTexts': {\n            const { texts } = richText;\n\n            return texts.every(isEmptyText);\n        }\n        case 'richTextUnderline': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n        case 'richTextUrl': {\n            const { text } = richText;\n\n            return isEmptyText(text);\n        }\n    }\n\n    return false;\n}\n\nexport function getHorizontalAlignment(align) {\n    if (!align) return null;\n\n    switch (align['@type']) {\n        case 'pageBlockHorizontalAlignmentCenter': {\n            return 'center';\n        }\n        case 'pageBlockHorizontalAlignmentLeft': {\n            return 'left';\n        }\n        case 'pageBlockHorizontalAlignmentRight': {\n            return 'right';\n        }\n    }\n\n    return null;\n}\n\nexport function getVerticalAlignment(valign) {\n    if (!valign) return null;\n\n    switch (valign['@type']) {\n        case 'pageBlockVerticalAlignmentBottom': {\n            return 'bottom';\n        }\n        case 'pageBlockVerticalAlignmentMiddle': {\n            return 'middle';\n        }\n        case 'pageBlockVerticalAlignmentTop': {\n            return 'top';\n        }\n    }\n\n    return null;\n}\n\nexport function getInnerBlocks(block) {\n    if (!block) return [];\n\n    switch (block['@type']) {\n        case 'pageBlockAnchor': {\n            return [];\n        }\n        case 'pageBlockAnimation': {\n            return [block.caption];\n        }\n        case 'pageBlockAudio': {\n            return [block.caption];\n        }\n        case 'pageBlockAuthorDate': {\n            return [];\n        }\n        case 'pageBlockBlockQuote': {\n            return [];\n        }\n        case 'pageBlockChatLink': {\n            return [];\n        }\n        case 'pageBlockCollage': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockCover': {\n            return [block.cover];\n        }\n        case 'pageBlockDetails': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockDivider': {\n            return [];\n        }\n        case 'pageBlockEmbedded': {\n            return [block.caption];\n        }\n        case 'pageBlockEmbeddedPost': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockFooter': {\n            return [];\n        }\n        case 'pageBlockHeader': {\n            return [];\n        }\n        case 'pageBlockKicker': {\n            return [];\n        }\n        case 'pageBlockList': {\n            const innerBlocks = block.items.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockListItem': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([], innerBlocks);\n        }\n        case 'pageBlockMap': {\n            return [block.caption];\n        }\n        case 'pageBlockParagraph': {\n            return [];\n        }\n        case 'pageBlockPhoto': {\n            return [block.caption];\n        }\n        case 'pageBlockPreformatted': {\n            return [];\n        }\n        case 'pageBlockPullQuote': {\n            return [];\n        }\n        case 'pageBlockRelatedArticle': {\n            return [];\n        }\n        case 'pageBlockRelatedArticles': {\n            return [...block.articles];\n        }\n        case 'pageBlockSlideshow': {\n            const innerBlocks = block.page_blocks.map(x => [x, ...getInnerBlocks(x)]);\n\n            return [].concat.apply([block.caption], innerBlocks);\n        }\n        case 'pageBlockSubheader': {\n            return [];\n        }\n        case 'pageBlockSubtitle': {\n            return [];\n        }\n        case 'pageBlockTable': {\n            return [...block.cells];\n        }\n        case 'pageBlockTableCell': {\n            return [];\n        }\n        case 'pageBlockTitle': {\n            return [];\n        }\n        case 'pageBlockVideo': {\n            return [block.caption];\n        }\n    }\n\n    return [];\n}\n\nexport function getBlockMedia(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.animation;\n        }\n        case 'pageBlockPhoto': {\n            return block.photo;\n        }\n        case 'pageBlockVideo': {\n            return block.video;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockCaption(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return block.caption;\n        }\n        case 'pageBlockPhoto': {\n            return block.caption;\n        }\n        case 'pageBlockVideo': {\n            return block.caption;\n        }\n    }\n\n    return null;\n}\n\nexport function getBlockUrl(block) {\n    if (!block) return null;\n\n    switch (block['@type']) {\n        case 'pageBlockPhoto': {\n            return block.url;\n        }\n    }\n\n    return null;\n}\n\nexport function isValidMediaBlock(block) {\n    if (!block) return false;\n\n    switch (block['@type']) {\n        case 'pageBlockAnimation': {\n            return true;\n        }\n        case 'pageBlockPhoto': {\n            return true;\n        }\n        case 'pageBlockVideo': {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nexport function getValidMediaBlocks(iv) {\n    if (!iv) return [];\n\n    const { page_blocks } = iv;\n\n    const blocks = [];\n    page_blocks.forEach(x => {\n        blocks.push(x);\n        const innerBlocks = getInnerBlocks(x);\n        innerBlocks.forEach(i => {\n            blocks.push(i);\n        });\n    });\n\n    return blocks.filter(isValidMediaBlock);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Anchor(props) {\n    return <a id={props.name} />;\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction Caption(props) {\n    const { text, credit } = props;\n\n    const hasText = !isEmptyText(text);\n    const hastCredit = !isEmptyText(credit);\n    if (!hasText && !hastCredit) return null;\n\n    return (\n        <figcaption>\n            {hasText && <RichText text={text} />}\n            {hastCredit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </figcaption>\n    );\n}\n\nCaption.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Caption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaAnimation from '../../../Components/Message/Media/Animation';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Animation(props) {\n    const { animation, block, caption, need_autoplay, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAnimation\n                iv={true}\n                pageBlock={block}\n                animation={animation}\n                displaySize={IV_PHOTO_DISPLAY_SIZE}\n                openMedia={openMedia}\n            />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAnimation.propTypes = {\n    block: PropTypes.object.isRequired,\n    animation: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Animation;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport dateFormat from '../../../Utils/Date';\nimport { isEmptyText } from '../../../Utils/InstantView';\n\nfunction AuthorDate(props) {\n    const { author, publishDate } = props;\n\n    const hasAuthor = !isEmptyText(author);\n    const hasDate = publishDate > 0;\n    if (!hasAuthor && !hasDate) return null;\n\n    const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n\n    return (\n        <address>\n            {hasAuthor && (\n                <a rel='author'>\n                    <RichText text={author} />\n                </a>\n            )}\n            {hasAuthor && hasDate && ' • '}\n            {hasDate && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n        </address>\n    );\n}\n\nAuthorDate.propTypes = {\n    author: PropTypes.object,\n    publishDate: PropTypes.number\n};\n\nexport default AuthorDate;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Blockquote(props) {\n    const { text, credit } = props;\n    return (\n        <blockquote>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </blockquote>\n    );\n}\n\nBlockquote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nexport default Blockquote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Collage(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='collage'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nCollage.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Collage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Cover(props) {\n    return getPageBlock(props.cover, props.iv);\n}\n\nCover.propTypes = {\n    cover: PropTypes.object.isRequired\n};\n\nexport default withIV(Cover);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Details(props) {\n    const { header, pageBlocks, isOpen, iv } = props;\n\n    return (\n        <details open={isOpen}>\n            <summary>\n                <RichText text={header} />\n            </summary>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n        </details>\n    );\n}\n\nDetails.propTypes = {\n    header: PropTypes.object.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    isOpen: PropTypes.bool.isRequired\n};\n\nexport default withIV(Details);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Divider() {\n    return <hr />;\n}\n\nexport default Divider;\n","/**\n *\n * inject script to facilitate iframe resizing\n * https://github.com/davidjbradshaw/iframe-resizer\n *\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { iframeResizer as iframeResizerLib } from 'iframe-resizer';\n\nclass IframeResizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.frameRef = React.createRef();\n    }\n\n    componentDidMount() {\n        // can't update until we have a mounted iframe\n        this.updateIframe(this.props);\n        this.resizeIframe(this.props);\n    }\n\n    componentWillUnmount() {\n        // React will remove the iframe, however we need to manually\n        // call iframe-resizer to stop its listeners\n        const frame = this.frameRef.current;\n        if (!frame) return;\n\n        const { iframeResizer } = frame;\n        if (!iframeResizer) return;\n\n        iframeResizer.removeListeners();\n    }\n\n    componentWillReceiveProps(nextProps) {\n        // can replace content if we got new props\n        this.updateIframe(nextProps);\n        this.resizeIframe(nextProps);\n    }\n\n    updateIframe = props => {\n        // has src - no injected content\n        if (props.src) return;\n        // do we have content to inject (content or children)\n        const content = props.content || props.children;\n        if (!content) return;\n        // get frame to inject into\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // replace iframe document content\n        if (typeof content === 'string') {\n            // assume this is a HTML block\n            //   we could send this in via REACT dangerously set HTML\n            //   but we are in an iframe anyway, already a red-headed step-child.\n            doc.open();\n            doc.write(content);\n            doc.close();\n        } else {\n            // assume this is a REACT component\n            doc.open();\n            doc.write('<div id=\"iframe-root\"></div>');\n            doc.close();\n            ReactDOM.render(content, doc.getElementById('iframe-root'));\n        }\n    };\n\n    // inject the iframe resizer \"content window\" script\n    injectIframeResizerUrl = () => {\n        if (!this.props.iframeResizerUrl) return;\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        // verify frame document access\n        // Due to browser security, this will fail with the following error\n        //   Uncaught DOMException: Failed to read the 'contentDocument' property from 'HTMLIFrameElement':\n        //   Blocked a frame with origin \"http://<hostname>\" from accessing a cross-origin frame.\n        // resolve this by loading documents from the same domain name,\n        // or injecting HTML `content` vs. loading via `src`\n        const doc = frame.contentDocument;\n        if (!doc) return;\n        // where can we insert into? (fail into whatever we can find)\n        let injectTarget = null;\n        ['head', 'HEAD', 'body', 'BODY', 'div', 'DIV'].forEach(tagName => {\n            if (injectTarget) return;\n            const found = doc.getElementsByTagName(tagName);\n            if (!(found && found.length)) return;\n            injectTarget = found[0];\n        });\n        if (!injectTarget) {\n            console.error('Unable to inject iframe resizer script');\n            return;\n        }\n        const resizerScriptElement = document.createElement('script');\n        resizerScriptElement.type = 'text/javascript';\n        resizerScriptElement.src = this.props.iframeResizerUrl;\n        injectTarget.appendChild(resizerScriptElement);\n    };\n\n    onLoad = () => {\n        this.injectIframeResizerUrl();\n        // DISABLED because it's causing a loading loop :(\n        // if (this.props.onIframeLoaded) this.props.onIframeLoaded();\n    };\n\n    resizeIframe = props => {\n        const frame = this.frameRef.current;\n        if (!frame) return;\n        if (props.iframeResizerEnable) {\n            iframeResizerLib(props.iframeResizerOptions, frame);\n        }\n    };\n\n    render() {\n        const { src, id, frameBorder, className, style } = this.props;\n        return (\n            <iframe\n                ref={this.frameRef}\n                src={src}\n                id={id}\n                frameBorder={frameBorder}\n                className={className}\n                style={style}\n                onLoad={this.onLoad}\n            />\n        );\n    }\n}\nIframeResizer.propTypes = {\n    // iframe content/document\n    // option 1. content of HTML to load in the iframe\n    content: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    // option 2. src to a URL to load in the iframe\n    src: PropTypes.string,\n    // iframe-resizer controls and helpers\n    iframeResizerEnable: PropTypes.bool,\n    iframeResizerOptions: PropTypes.object,\n    iframeResizerUrl: PropTypes.oneOfType([\n        PropTypes.string, // URL to inject\n        PropTypes.bool // false = disable inject\n    ]),\n    // misc props to pass through to iframe\n    id: PropTypes.string,\n    frameBorder: PropTypes.number,\n    className: PropTypes.string,\n    style: PropTypes.object\n    // optional extra callback when iframe is loaded\n    // onIframeLoaded: PropTypes.func,\n};\nIframeResizer.defaultProps = {\n    // resize iframe\n    iframeResizerEnable: true,\n    iframeResizerOptions: {\n        // log: true,\n        // autoResize: true,\n        // checkOrigin: false,\n        // resizeFrom: 'parent',\n        // heightCalculationMethod: 'max',\n        // initCallback: () => { console.log('ready!'); },\n        // resizedCallback: () => { console.log('resized!'); },\n    },\n    iframeResizerUrl: 'https://cdnjs.cloudflare.com/ajax/libs/iframe-resizer/3.5.8/iframeResizer.contentWindow.min.js',\n    // misc props to pass through to iframe\n    frameBorder: 0,\n    style: {\n        width: '100%',\n        minHeight: 20\n    }\n};\n\nexport default IframeResizer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactIframeResizer from '../../Additional/IframeResizer';\nimport Caption from './Caption';\n\nclass Embedded extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.url !== state.prevUrl || props.html !== state.prevHtml) {\n            return {\n                url: null,\n                html: null,\n                prevUrl: props.url,\n                prevHtml: props.html\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.setIframeSource();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { url, html } = this.props;\n\n        if (url !== prevProps.url || html !== prevProps.html) {\n            this.setIframeSource();\n        }\n    }\n\n    setIframeSource() {\n        const { url, html } = this.props;\n\n        this.setState({\n            url,\n            html\n        });\n    }\n\n    render() {\n        const { url, html } = this.state;\n        const { width, height, caption, isFullWidth, allowScrolling } = this.props;\n\n        const options = {\n            scrolling: allowScrolling\n        };\n\n        const hasWidthHeight = width > 0 && height > 0;\n        const hasSource = Boolean(url) || Boolean(html);\n\n        return (\n            <figure>\n                {hasSource && (\n                    <>\n                        {hasWidthHeight ? (\n                            <iframe\n                                src={url ? url : null}\n                                srcDoc={url ? null : html}\n                                width={width > 0 ? width : null}\n                                height={height > 0 ? height : null}\n                                allowFullScreen={isFullWidth}\n                                scrolling={allowScrolling ? 'auto' : 'no'}\n                                frameBorder={0}\n                            />\n                        ) : (\n                            <ReactIframeResizer\n                                content={html}\n                                src={url}\n                                iframeResizerOptions={options}\n                                style={{ width: '100%' }}\n                            />\n                        )}\n                    </>\n                )}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        );\n    }\n}\n\nEmbedded.propTypes = {\n    url: PropTypes.string.isRequired,\n    html: PropTypes.string.isRequired,\n    posterPhoto: PropTypes.object,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired,\n    isFullWidth: PropTypes.bool.isRequired,\n    allowScrolling: PropTypes.bool.isRequired\n};\n\nexport default Embedded;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\nimport AuthorDate from './AuthorDate';\nimport RichText from '../RichText/RichText';\n\nfunction EmbeddedPost(props) {\n    const { url, author, authorPhoto, date, pageBlocks, caption, iv } = props;\n\n    return (\n        <blockquote>\n            <figure>\n                {Boolean(author) && <h3>{author}</h3>}\n                <AuthorDate author={null} publishDate={date} />\n                {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n                <Caption text={caption.text} credit={caption.credit} />\n            </figure>\n        </blockquote>\n    );\n}\n\nEmbeddedPost.propTypes = {\n    url: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n    authorPhoto: PropTypes.object,\n    date: PropTypes.number.isRequired,\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(EmbeddedPost);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport './ErrorHandler.css';\n\nclass ErrorHandler extends React.Component {\n    state = {\n        error: null,\n        errorInfo: null\n    };\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({ error, errorInfo });\n    }\n\n    render() {\n        const { children } = this.props;\n        const { error, errorInfo } = this.state;\n        if (error || errorInfo) {\n            return (\n                <div className='error-handler'>\n                    <span>\n                        <pre>\n                            {`${error.name}: ${error.message}`}\n                            {errorInfo.componentStack}\n                        </pre>\n                    </span>\n                </div>\n            );\n        }\n\n        return children;\n    }\n}\n\nexport default ErrorHandler;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Footer(props) {\n    return (\n        <footer>\n            <RichText text={props.footer} />\n        </footer>\n    );\n}\n\nFooter.propTypes = {\n    footer: PropTypes.object.isRequired\n};\n\nexport default Footer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Header(props) {\n    return (\n        <h3>\n            <RichText text={props.header} />\n        </h3>\n    );\n}\n\nHeader.propTypes = {\n    header: PropTypes.object.isRequired\n};\n\nexport default Header;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Kicker(props) {\n    const { kicker } = props;\n    return (\n        <h6 className='kicker'>\n            <RichText text={kicker} />\n        </h6>\n    );\n}\n\nKicker.propTypes = {\n    kicker: PropTypes.object.isRequired\n};\n\nexport default Kicker;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction ListItem(props) {\n    return <li data-before={props.label}>{props.pageBlocks.map((x, index) => getPageBlock(x, props.iv, index))}</li>;\n}\n\nListItem.propTypes = {\n    label: PropTypes.string.isRequired,\n    pageBlocks: PropTypes.array.isRequired\n};\n\nexport default withIV(ListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from './ListItem';\n\nfunction List(props) {\n    return (\n        <ul>\n            {props.items.map((x, index) => (\n                <ListItem key={index} label={x.label} pageBlocks={x.page_blocks} />\n            ))}\n        </ul>\n    );\n}\n\nList.propTypes = {\n    items: PropTypes.array.isRequired\n};\n\nexport default List;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Paragraph(props) {\n    return (\n        <p>\n            <RichText text={props.text} />\n        </p>\n    );\n}\n\nParagraph.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Paragraph;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaPhoto from '../../../Components/Message/Media/Photo';\nimport { IV_PHOTO_DISPLAY_SIZE, IV_PHOTO_SIZE } from '../../../Constants';\n\nfunction Photo(props) {\n    const { photo, caption, url, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaPhoto photo={photo} size={IV_PHOTO_SIZE} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nPhoto.propTypes = {\n    photo: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Photo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Preformatted(props) {\n    return (\n        <pre>\n            <RichText text={props.text} />\n        </pre>\n    );\n}\n\nPreformatted.propTypes = {\n    text: PropTypes.object.isRequired,\n    language: PropTypes.string.isRequired\n};\n\nexport default Preformatted;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction PullQuote(props) {\n    const { text, credit } = props;\n    return (\n        <aside>\n            <RichText text={text} />\n            {credit && (\n                <cite>\n                    <RichText text={credit} />\n                </cite>\n            )}\n        </aside>\n    );\n}\n\nPullQuote.propTypes = {\n    text: PropTypes.object.isRequired,\n    credit: PropTypes.object.isRequired\n};\n\nPullQuote.propTypes = {};\n\nexport default PullQuote;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SafeLink from '../../Additional/SafeLink';\nimport dateFormat from '../../../Utils/Date';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass RelatedArticle extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { author, description, publishDate, title, url } = this.props;\n\n        const d = publishDate > 0 ? new Date(publishDate * 1000) : null;\n        const hasAuthorDateSeparator = author && d;\n        const hasAuthorDate = d || author;\n\n        return (\n            <li>\n                <SafeLink url={url} onClick={this.handleClick}>\n                    {title}\n                </SafeLink>\n                {hasAuthorDate && (\n                    <address>\n                        {author}\n                        {hasAuthorDateSeparator && ' • '}\n                        {d && <time dateTime={d.toISOString()}>{dateFormat(d, 'dd mmm, yyyy')}</time>}\n                    </address>\n                )}\n                {/*{ description && (*/}\n                {/*    <div>{description}</div>*/}\n                {/*)}*/}\n            </li>\n        );\n    }\n}\n\nRelatedArticle.propTypes = {\n    url: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    description: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    author: PropTypes.string.isRequired,\n    publishDate: PropTypes.number.isRequired\n};\n\nexport default RelatedArticle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RelatedArticle from './RelatedArticle';\nimport RichText from '../RichText/RichText';\n\nfunction RelatedArticles(props) {\n    return (\n        <>\n            <h4>\n                <RichText text={props.header} />\n            </h4>\n            <ul className='related-articles'>\n                {props.articles.map(x => (\n                    <RelatedArticle\n                        key={x.url}\n                        url={x.url}\n                        title={x.title}\n                        description={x.description}\n                        photo={x.photo}\n                        author={x.author}\n                        publishDate={x.publish_date}\n                    />\n                ))}\n            </ul>\n        </>\n    );\n}\n\nRelatedArticles.propTypes = {\n    header: PropTypes.object.isRequired,\n    articles: PropTypes.array.isRequired\n};\n\nexport default RelatedArticles;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport Caption from './Caption';\nimport { getPageBlock } from '../../../Utils/InstantView';\n\nfunction Slideshow(props) {\n    const { pageBlocks, caption, iv } = props;\n\n    return (\n        <div className='slideshow'>\n            {pageBlocks.map((x, index) => getPageBlock(x, iv, index))}\n            <Caption text={caption.text} credit={caption.credit} />\n        </div>\n    );\n}\n\nSlideshow.propTypes = {\n    pageBlocks: PropTypes.array.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default withIV(Slideshow);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subheader(props) {\n    return (\n        <h4>\n            <RichText text={props.subheader} />\n        </h4>\n    );\n}\n\nSubheader.propTypes = {\n    subheader: PropTypes.object.isRequired\n};\n\nexport default Subheader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Subtitle(props) {\n    return (\n        <h2>\n            <RichText text={props.subtitle} />\n        </h2>\n    );\n}\n\nSubtitle.propTypes = {\n    subtitle: PropTypes.object.isRequired\n};\n\nexport default Subtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\n\nfunction Title(props) {\n    return (\n        <h1>\n            <RichText text={props.title} />\n        </h1>\n    );\n}\n\nTitle.propTypes = {\n    title: PropTypes.object.isRequired\n};\n\nexport default Title;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Bold(props) {\n    return (\n        <b>\n            <RichText text={props.text} />\n        </b>\n    );\n}\n\nBold.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Bold;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction EmailAddress(props) {\n    return (\n        <a href={`mailto:${props.emailAddress}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nEmailAddress.propTypes = {\n    emailAddress: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default EmailAddress;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Fixed(props) {\n    return (\n        <code>\n            <RichText text={props.text} />\n        </code>\n    );\n}\n\nFixed.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Fixed;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\n\nclass Icon extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const file = thumbnail.photo;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentBlob = update => {\n        const { document } = this.props;\n        if (!document) return;\n\n        const file = document.document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    emptyPlaceholderSrc(width, height) {\n        return `data:image/svg+xml,%3Csvg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 ${width} ${height}\"%3E%3C/svg%3E`;\n    }\n\n    render() {\n        const { document, height, width } = this.props;\n        if (!document) return null;\n\n        const { thumbnail, document: file } = document;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.photo : null);\n        const src = getSrc(file);\n\n        return (\n            <img\n                src={src || thumbnailSrc || this.emptyPlaceholderSrc(1, 1)}\n                width={width > 0 ? width : null}\n                height={height > 0 ? height : null}\n                draggable={false}\n                alt=''\n            />\n        );\n    }\n}\n\nIcon.propTypes = {\n    document: PropTypes.object.isRequired,\n    height: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired\n};\n\nexport default Icon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Italic(props) {\n    return (\n        <i>\n            <RichText text={props.text} />\n        </i>\n    );\n}\n\nItalic.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Italic;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Marked(props) {\n    return (\n        <mark>\n            <RichText text={props.text} />\n        </mark>\n    );\n}\n\nMarked.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Marked;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction PhoneNumber(props) {\n    return (\n        <a href={`tel:${props.phoneNumber}`}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nPhoneNumber.propTypes = {\n    phoneNumber: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default PhoneNumber;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Plain(props) {\n    return props.text;\n}\n\nPlain.propTypes = {\n    text: PropTypes.string.isRequired\n};\n\nexport default Plain;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Strikethrough(props) {\n    return (\n        <del>\n            <RichText text={props.text} />\n        </del>\n    );\n}\n\nStrikethrough.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Strikethrough;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Subscript(props) {\n    return (\n        <sub>\n            <RichText text={props.text} />\n        </sub>\n    );\n}\n\nSubscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Subscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Superscript(props) {\n    return (\n        <sup>\n            <RichText text={props.text} />\n        </sup>\n    );\n}\n\nSuperscript.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Superscript;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Anchor(props) {\n    return (\n        <a id={props.name}>\n            <RichText text={props.text} />\n        </a>\n    );\n}\n\nAnchor.propTypes = {\n    name: PropTypes.string.isRequired,\n    text: PropTypes.object.isRequired\n};\n\nexport default Anchor;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Texts(props) {\n    return (\n        <>\n            {props.texts.map((x, index) => (\n                <RichText key={index} text={x} />\n            ))}\n        </>\n    );\n}\n\nTexts.propTypes = {\n    texts: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default Texts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\n\nfunction Underline(props) {\n    return (\n        <ins>\n            <RichText text={props.text} />\n        </ins>\n    );\n}\n\nUnderline.propTypes = {\n    text: PropTypes.object.isRequired\n};\n\nexport default Underline;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from './RichText';\nimport SafeLink from '../../Additional/SafeLink';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass Url extends React.Component {\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { url } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewUrl',\n            url\n        });\n    };\n\n    render() {\n        const { text, url } = this.props;\n\n        return (\n            <SafeLink url={url} onClick={this.handleClick}>\n                <RichText text={text} />\n            </SafeLink>\n        );\n    }\n}\n\nUrl.propTypes = {\n    text: PropTypes.object.isRequired,\n    url: PropTypes.string.isRequired\n};\n\nexport default Url;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withIV } from '../IVContext';\nimport RichText from '../RichText/RichText';\nimport { getPageBlock, isEmptyText } from '../../../Utils/InstantView';\n\nfunction Table(props) {\n    const { caption, cells, isBordered, isStriped, iv } = props;\n\n    return (\n        <table striped={isStriped ? '' : null} border={isBordered ? 1 : 0}>\n            {!isEmptyText(caption) && (\n                <caption>\n                    <RichText text={caption} />\n                </caption>\n            )}\n            <tbody>\n                {cells.map((row, rowIndex) => {\n                    return <tr key={rowIndex}>{row.map((x, index) => getPageBlock(x, iv, index))}</tr>;\n                })}\n            </tbody>\n        </table>\n    );\n}\n\nTable.propTypes = {\n    caption: PropTypes.object.isRequired,\n    cells: PropTypes.array.isRequired,\n    isBordered: PropTypes.bool.isRequired,\n    isStriped: PropTypes.bool.isRequired\n};\n\nexport default withIV(Table);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport RichText from '../RichText/RichText';\nimport { getHorizontalAlignment, getVerticalAlignment, isEmptyText } from '../../../Utils/InstantView';\n\nfunction TableCell(props) {\n    const { text, isHeader, colspan, rowspan, align, valign } = props;\n    if (isEmptyText(text)) return null;\n\n    const attributes = {\n        colSpan: colspan,\n        rowSpan: rowspan,\n        align: getHorizontalAlignment(align),\n        valign: getVerticalAlignment(valign)\n    };\n\n    const content = <RichText text={text} />;\n\n    return isHeader ? <th {...attributes}>{content}</th> : <td {...attributes}>{content}</td>;\n}\n\nTableCell.propTypes = {\n    text: PropTypes.object.isRequired,\n    isHeader: PropTypes.bool.isRequired,\n    colspan: PropTypes.number.isRequired,\n    rowspan: PropTypes.number.isRequired,\n    align: PropTypes.object.isRequired,\n    valign: PropTypes.object.isRequired\n};\n\nexport default TableCell;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport Location from '../../Message/Media/Location';\nimport { IV_LOCATION_HEIGHT, IV_LOCATION_WIDTH } from '../../../Constants';\n\nfunction Map(props) {\n    const { location, caption } = props;\n\n    return (\n        <figure>\n            <Location width={IV_LOCATION_WIDTH} height={IV_LOCATION_HEIGHT} location={location} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nMap.propTypes = {\n    location: PropTypes.object.isRequired,\n    zoom: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nexport default Map;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MediaAudio from '../../Message/Media/Audio';\nimport { PHOTO_DISPLAY_SIZE } from '../../../Constants';\nimport Caption from './Caption';\n\nfunction Audio(props) {\n    const { audio, caption, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaAudio audio={audio} displaySize={PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nAudio.propTypes = {\n    audio: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Audio;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction ChatLink(props) {\n    return <div />;\n}\n\nChatLink.propTypes = {\n    title: PropTypes.string.isRequired,\n    photo: PropTypes.object,\n    username: PropTypes.string.isRequired\n};\n\nexport default ChatLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Caption from './Caption';\nimport MediaVideo from '../../../Components/Message/Media/Video';\nimport { IV_PHOTO_DISPLAY_SIZE } from '../../../Constants';\n\nfunction Video(props) {\n    const { video, caption, needAutoplay, isLooped, openMedia } = props;\n\n    return (\n        <figure>\n            <MediaVideo video={video} displaySize={IV_PHOTO_DISPLAY_SIZE} openMedia={openMedia} />\n            <Caption text={caption.text} credit={caption.credit} />\n        </figure>\n    );\n}\n\nVideo.propTypes = {\n    video: PropTypes.object,\n    caption: PropTypes.object.isRequired,\n    needAutoplay: PropTypes.bool.isRequired,\n    isLooped: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func\n};\n\nexport default Video;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/internal/svg-icons/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.object\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getViewerFile, getViewerThumbnail } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport Caption from '../InstantView/Blocks/Caption';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport SafeLink from '../Additional/SafeLink';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            let [width, height, file] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getViewerThumbnail(media);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail: file } = this.state;\n\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const { width, height, file, thumbnailWidth, thumbnailHeight, thumbnail, isPlaying } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            controls\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPlay'\n                                });\n                            }}\n                            onCanPlay={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    player.volume = PlayerStore.volume;\n                                }\n                            }}\n                            onPause={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerPause'\n                                });\n                            }}\n                            onEnded={() => {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaViewerEnded'\n                                });\n                            }}\n                            onVolumeChange={() => {\n                                const player = this.videoRef.current;\n                                if (player) {\n                                    TdLibController.clientUpdate({\n                                        '@type': 'clientUpdateMediaVolume',\n                                        volume: player.volume\n                                    });\n                                }\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            className='media-viewer-content-video-player'\n                            src={src}\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        />\n                        {!isPlaying &&\n                            (!src && thumbnailSrc ? (\n                                <img\n                                    className={classNames('media-viewer-content-video-thumbnail', {\n                                        'media-blurred': isBlurred\n                                    })}\n                                    src={thumbnailSrc}\n                                    alt=''\n                                    width={videoWidth}\n                                    height={videoHeight}\n                                />\n                            ) : (\n                                <div\n                                    className='media-viewer-content-video-thumbnail'\n                                    style={{\n                                        width: videoWidth,\n                                        height: videoHeight\n                                    }}\n                                />\n                            ))}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                <FileProgress file={file} zIndex={2} />\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidMediaBlocks } from '../../Utils/InstantView';\nimport { getViewerFile, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { setInstantViewViewerContent } from '../../Actions/Client';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidMediaBlocks(iv);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        this.setState({\n            index: nextIndex,\n            hasPreviousMedia: this.hasPreviousMedia(nextIndex, blocks),\n            hasNextMedia: this.hasNextMedia(nextIndex, blocks)\n        });\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper'>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        console.log('[IV] clientUpdateInstantViewUrl', update);\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(instantView.url)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const hiddenElement = document.getElementById(hash.substr(1));\n        if (hiddenElement) {\n            const details = [];\n            let finished = false;\n            let currentElement = hiddenElement;\n            do {\n                currentElement = currentElement.parentNode;\n                if (currentElement) {\n                    if (currentElement.nodeName === 'DETAILS') {\n                        details.push(currentElement);\n                    } else if (currentElement.nodeName === 'ARTICLE') {\n                        finished = true;\n                    }\n                } else {\n                    finished = true;\n                }\n            } while (!finished);\n\n            details.forEach(x => (x.open = true));\n\n            hiddenElement.scrollIntoView({\n                block: 'center',\n                behavior\n            });\n\n            return true;\n        }\n\n        return false;\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, url } = this.props;\n        console.log('[IV] componentDidUpdate', instantView.url, instantView.url === prevProps.instantView.url);\n\n        const hash = new URL(instantView.url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.instantView.url !== instantView.url) {\n                if (instantView.url.indexOf('#') === instantView.url.length - 1) {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop auto');\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    console.log('[IV] componentDidUpdate scrollToHash', hash);\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    console.log('[IV] componentDidUpdate scrollTop smooth');\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { media } = this.state;\n\n            if (media) {\n                setInstantViewViewerContent(null);\n                return;\n            }\n\n            this.handleClose();\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { classes, instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getAnimationData, getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\n// const Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                text,\n                thumbnailWidth,\n                thumbnailHeight,\n                thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const { file } = this.state;\n        const animationData = await getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n            this.setState({\n                width,\n                height,\n                file,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            file,\n            text,\n            thumbnailWidth,\n            thumbnailHeight,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = null;\n            // content = (\n            //     <Lottie\n            //         ref={this.lottieRef}\n            //         speed={speed}\n            //         options={defaultOptions}\n            //         height='auto'\n            //         width={400}\n            //         isStopped={false}\n            //         isPaused={false}\n            //     />\n            // );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async photo => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { inputMessageContent }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory && index !== 0 ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null,\n            instantViewContent: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n    }\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}