{"version":3,"sources":["Utils/Animatior.js","Components/ColumnMiddle/StickerPreview.js","Assets/Icons/Smile.js","Notifications.js","Components/Player/PipPlayer.js","Assets/Icons/Saved.js","Components/Tile/OnlineStatus.js","Components/Tile/ChatTile.js","Components/Tile/ForwardTargetChat.js","Utils/Text.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Assets/Icons/Document2.js","Assets/Icons/SharedMedia.js","Assets/Icons/Verified.js","Components/Tile/DialogTitle.js","Components/Tile/DialogStatus.js","Components/Tile/Chat.js","Assets/Icons/Back.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnMiddle/Notifications.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/SharedMedia/SharedMediaTabs.js","Assets/Icons/Delete.js","Assets/Icons/Share.js","Components/Tile/SharedMedia/ContextMenu.js","Components/Tile/SharedMedia/SharedPhoto.js","Components/Tile/SharedMedia/SharedDocument.js","Components/Tile/SharedMedia/SharedLink.js","Components/Tile/SharedMedia/SharedVoiceNote.js","Components/Tile/SharedMedia/SharedVideo.js","Components/ColumnRight/SharedMedia/SharedMediaContent.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Assets/Icons/Search.js","Components/ColumnRight/SharedMedia/SharedMediaHeader.js","Components/ColumnRight/SharedMedia/SharedMediaBase.js","Components/ColumnRight/SharedMedia/SharedAudios.js","Components/ColumnRight/SharedMedia/SharedDocuments.js","Components/ColumnRight/SharedMedia/SharedLinks.js","Components/ColumnRight/SharedMediaHeader.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/SharedMedia/SharedPhotos.js","Components/ColumnRight/SharedMedia/SharedVideos.js","Components/ColumnRight/SharedMedia/SharedVoiceNotes.js","Components/ColumnRight/ChatInfo.js","Components/Tile/DialogContent.js","Assets/Icons/Pin.js","Stores/FilterStore.js","Components/Tile/DialogBadge.js","Assets/Icons/Error.js","Assets/Icons/Pending.js","Assets/Icons/Sent.js","Assets/Icons/Succeeded.js","Components/Message/Status.js","Components/Tile/DialogMeta.js","Assets/Icons/Archive.js","Assets/Icons/Unarchive.js","Assets/Icons/Pin2.js","Assets/Icons/Mute.js","Assets/Icons/Unmute.js","Assets/Icons/User.js","Assets/Icons/Group.js","Assets/Icons/Message.js","Assets/Icons/Unread.js","Components/Tile/Dialog.js","Actions/Message.js","Components/Tile/DialogPlaceholder.js","Components/Additional/VirtualizedList.js","Utils/DOM.js","Assets/Icons/Channel.js","Assets/Icons/Menu.js","Assets/Icons/Help.js","Assets/Icons/Settings.js","Workers/CacheManager.js","Stores/CacheStore.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/Search/SearchInput.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/Filters.js","Components/ColumnLeft/DialogsList.js","Components/ColumnLeft/Archive.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/SectionHeader.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/SidebarPage.js","Assets/Icons/Folder.js","Assets/Icons/Edit.js","Assets/Icons/LogOut.js","Assets/Icons/More.js","Components/ColumnLeft/Settings/SettingsMenuButton.js","Assets/Icons/Data.js","Assets/Icons/Language.js","Components/ColumnLeft/Settings/Main.js","Assets/Icons/AddImage.js","Components/ColumnLeft/NewChatPhoto.js","Components/ColumnLeft/Settings/EditProfile.js","Assets/Icons/Add.js","Assets/Icons/NewPrivate.js","Assets/Icons/NonContacts.js","Assets/Icons/NewGroup.js","Assets/Icons/NewChannel.js","Assets/Icons/ReadChats.js","Assets/Icons/Bots.js","Assets/Icons/Done.js","Components/Tile/FilterChat.js","Components/Tile/FilterText.js","Components/Tile/Chip.js","Components/Tile/ChatChip.js","Components/ColumnLeft/Settings/EditFilterChats.js","Components/ColumnLeft/Settings/CreateFilter.js","Utils/Filter.js","Components/Tile/Filter.js","Components/Tile/RecommendedFilter.js","Components/ColumnLeft/Settings/Filters.js","Assets/Icons/Colorize.js","Components/Tile/Wallpaper.js","Components/ColumnLeft/Settings/ChatBackground.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/Settings/General.js","Components/ColumnLeft/Language.js","Components/ColumnLeft/Settings/Notifications.js","Assets/Icons/Stop.js","Components/Tile/Session.js","Components/ColumnLeft/Settings/ActiveSessions.js","Assets/Icons/Unblock.js","Components/ColumnLeft/Settings/BlockedUsers.js","Assets/Icons/Device.js","Assets/Icons/RemoveMember.js","Components/ColumnLeft/Settings/PrivacySecurity.js","Components/ColumnLeft/Settings/Settings.js","Components/ColumnLeft/Contacts.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/NewChannel.js","Components/Tile/UserChip.js","Components/ColumnLeft/AddParticipants.js","Components/ColumnLeft/NewGroupParams.js","Components/ColumnLeft/NewGroup.js","Components/Popup/SidebarDialog.js","Utils/Archive.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Assets/Icons/Send.js","Assets/Icons/Microphone.js","Assets/Icons/Attach.js","Components/ColumnMiddle/AttachButton.js","Utils/Component.js","Utils/Key.js","Components/Popup/CreatePollOption.js","Components/Popup/CreatePollDialog.js","Components/Popup/EditUrlDialog.js","Components/Tile/ReplyTile.js","Components/Message/Reply.js","Components/ColumnMiddle/InputBoxHeader.js","Components/Popup/PasteFilesDialog.js","Components/ColumnMiddle/RecordTimer.js","Components/Popup/EditMediaDialog.js","Utils/OutputTypingManager.js","Components/ColumnMiddle/InputBox.js","Components/ColumnMiddle/FooterCommand.js","Components/ColumnMiddle/NotificationsCommand.js","Components/ColumnMiddle/Footer.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/Tile/HeaderChatSubtitle.js","Components/Tile/HeaderChat.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/PinnedMessage.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Actions/InstantView.js","Components/Player/HeaderPlayer.js","Components/ColumnMiddle/ActionBar.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/StubMessage.js","Components/Message/DayMeta.js","Components/Message/Forward.js","Components/Message/Meta.js","Assets/Icons/Copy.js","Assets/Icons/FrameCheck.js","Assets/Icons/RemoveCheck.js","Components/Message/MessageMenu.js","Components/Tile/EmptyTile.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/InstantView/Article.js","Assets/Icons/Left.js","Components/Viewer/MediaCaption.js","Components/Viewer/InstantViewMediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/InstantViewMediaViewer.js","Components/InstantView/InstantViewer.js","Components/Tile/MediaInfo.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaInfo.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["Animator","duration","options","start","stopped","id","requestAnimationFrame","startInternal","timeStamp","startTime","endTime","draw","now","every","x","to","last","time","Math","min","p","val","outSine","forEach","from","func","stop","cancelAnimationFrame","this","n","sin","PI","StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","TdLibController","send","then","result","props","setState","emojis","join","prevProps","prevState","snapshot","className","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","source","StickerSourceEnum","PREVIEW","React","Component","createSvgIcon","d","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","maxSnack","MAX_SNACK","displayName","getDisplayName","PipPlayer","onClientUpdateMediaShortcut","update","event","onKeyDown","key","code","altKey","ctrlKey","metaKey","shiftKey","video","handled","handleClose","handleSeek","currentTime","PLAYER_SEEK_STEP_SMALL","PLAYER_SEEK_STEP_BIG","handleVolume","volume","PLAYER_VOLUME_STEP","handleClick","handleMute","handleFullScreen","progress","Number","replace","handleSeekProgress","handlePlaybackRate","playbackRate","PLAYER_PLAYBACKRATE_STEP","stopPropagation","preventDefault","clamp","PLAYER_VOLUME_MIN","PLAYER_VOLUME_MAX","showMediaHint","round","rate","PLAYER_PLAYBACKRATE_MIN","PLAYER_PLAYBACKRATE_MAX","onFullScreenChange","fullscreen","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","getElementById","onWindowResize","player","oldLeft","parseInt","style","left","oldTop","top","normalizePosition","handleLoadedData","target","handleLoadedMetadata","buffered","waiting","handleCanPlay","play","pause","handlePlay","onPlay","hidden","clientUpdate","handlePause","onPause","handleEnded","onEnded","setCurrentTime","handleTimeUpdate","fileId","handleVolumeChange","onVolumeChange","handleProgress","handleWaiting","startStopPlayer","paused","handlePlayerMouseDown","pip","focus","mouseDownRoot","nativeEvent","which","offsetX","offsetY","onmousemove","handleMouseMove","onmouseup","handleMouseUp","windowDragging","clientX","clientY","handleMouseDown","dragging","draggingTime","handleChange","value","handleChangeCommitted","isFinite","handlePanelEnter","panelEnter","handlePanelLeave","handleMouseOver","clearTimeout","mouseOverTimeout","setTimeout","videoInfo","handleVolumeSliderChange","handleVolumeSliderChangeCommitted","activeElement","blur","prevVolume","root","exitFullscreen","requestFullscreen","getCurrentTime","file","FileStore","get","remote","unique_id","PlayerStore","clearCurrentTime","handlePanelDoubleClick","handleClickRoot","handleDoubleClick","handleFocus","KeyboardManager","add","keyboardHandler","handleBlur","remove","KeyboardHandler","connectPlayer","window","addEventListener","on","disconnectPlayer","removeEventListener","off","text","pipPlayer","pipParams","container","onloadedmetadata","onloadeddata","oncanplay","onplay","onpause","onended","ontimeupdate","onvolumechange","onprogress","onwaiting","innerHTML","appendChild","checkGlue","playerWidth","clientWidth","playerHeight","clientHeight","documentWidth","documentElement","documentHeight","glueLeft","glueRight","PIP_PLAYER_BORDER_PRECISION","glueTop","glueBottom","element","method","mozRequestFullScreen","webkitRequestFullscreen","call","mozCancelFullScreen","webkitExitFullscreen","bufferedTime","Player","getBufferedTime","bufferedValue","timeString","getDurationString","floor","durationString","fullscreenEnabled","mozFullScreenEnabled","webkitFullscreenEnabled","classNames","onMouseDown","onMouseMove","onClick","onDoubleClick","onFocus","onBlur","tabIndex","Hint","e","Close","onMouseEnter","onMouseLeave","width","Slider","max","step","classes","rail","track","thumb","active","onChange","onChangeCommitted","Pause","getVolumeIcon","disabled","FullScreen","Progress","prevVideo","OnlineStatus","onUpdateUserStatus","userId","user_id","user","UserStore","online","isUserOnline","getChatUserId","chatId","size","borderSize","height","padding","defaultProps","ChatTile","onFastUpdatingComplete","forceUpdate","onClientUpdateChatBlob","loaded","chat","ChatStore","photo","src","getSrc","small","onUpdateChatPhoto","chat_id","store","getStore","loadChatContent","onUpdateChatTitle","t","letters","getChatLetters","handleSelect","onSelect","handleLoad","nextProps","nextState","showOnline","showSavedMessages","dialog","big","isDeletedPrivateChat","pointer","DeletedAccount","fontSize","isMeChat","tileLoaded","typeId","getChatTypeId","tileColor","abs","onLoad","draggable","alt","isPrivateChat","prevChatId","withTranslation","ForwardTargetChat","selected","shortTitle","getChatShortTitle","copy","a","navigator","clipboard","writeText","console","error","copyOld","successful","createElement","contentEditable","readOnly","all","position","clip","whiteSpace","webkitUserSelect","MozUserSelect","msUserSelect","userSelect","body","select","execCommand","Error","removeChild","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","loadContent","getPublicMessageLink","promises","getChatsPromise","offset_order","offset_chat_id","limit","push","savedMessagesPromise","getMyId","force","Promise","map","catch","chats","savedMessages","chatIds","chat_ids","loadChatsContent","messageIds","isSupergroup","getChatUsername","message_id","for_album","publicMessageLink","forward","handleCopyLink","link","handleScheduledAction","message","enqueueSnackbar","closeSnackbar","snackKey","autoHideDuration","NOTIFICATION_AUTO_HIDE_DURATION_MS","preventDuplicate","action","IconButton","aria-label","color","getForwardPhotoSize","MessageStore","can_be_forwarded","content","sizes","handleSend","clearSelection","inputMessageContent","getInnerText","messageRef","current","targetChats","targetChatId","caption","entities","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","disable_web_page_preview","clear_draft","thumbnail","added_sticker_file_ids","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","innerText","handleSearchKeyDown","keyCode","handleSearchKeyUp","searchRef","trim","searchText","searchResults","globalSearchResults","latinText","cyrillicText","chatsSource","concat","filter","canSendMessages","hasSearchText","query","handleSearchPaste","plainText","clipboardData","getData","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","createRef","searchResultsMap","filteredResults","foundChats","open","manager","modalManager","transitionDuration","onClose","aria-labelledby","aria-describedby","ref","suppressContentEditableWarning","placeholder","onKeyUp","onPaste","DialogActions","Button","autoFocus","enhance","compose","withSnackbar","DialogTitle","isVerified","isChatVerified","title","DialogStatus","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccent","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","SupergroupStore","externalSubtitle","Chat","onTileSelect","showStatus","showTitle","isSavedMessages","ChatDetailsHeader","backButton","info","isChannelChat","Notifications","onUpdateChatNotificationSettings","isMuted","isChatMuted","onUpdateScopeNotificationSettings","scope","handleSetChatNotifications","debouncedSetChatNotificationSettings","setChatNotificationSettings","toggleChatNotificationSettings","debounce","NOTIFICATION_DEBOUNCE_DELAY_MS","NotificationStore","NotificationsListItem","ListItem","button","ListItemIcon","Checkbox","edge","checked","disableRipple","ListItemText","primary","Typography","variant","noWrap","secondary","SharedMediaTabs","onUpdateMessageContent","selectedIndex","media","getMedia","setMediaState","onUpdateDeleteMessages","onUpdateNewMessage","hasObserver","setSelection","photoAndVideo","audio","url","voiceNote","hasPhotoAndVideo","hasDocument","hasAudio","hasUrl","hasVoiceNote","index","onClientUpdateChatMedia","currentChatId","onClientUpdateMediaTab","transition","isSmallWidth","scroll","filtersRef","item","photoAndVideoFilter","filterRef","firstChild","offsetLeft","documentFilter","audioFilter","urlFilter","voiceNoteFilter","filterSelection","filterSelectionRef","transitionStyle","cssText","scrollWidth","animator","scrollLeft","offsetWidth","handleFilterClick","throttle","observeResize","unobserveResize","filters","observer","ResizeObserver","observe","resizeObserver","unobserve","tabsCount","r","ContextMenu","handleOpenMessage","messageId","openChat","handleForward","forwardMessages","handleDelete","deleteMessages","anchorPosition","showOpenMessage","can_be_deleted_only_for_self","can_be_deleted_for_all_users","Popover","anchorReference","anchorOrigin","vertical","horizontal","transformOrigin","MenuList","MenuItem","Share","Delete","SharedPhoto","onClientUpdatePhotoBlob","photoSize","thumbSize","handleOpenContextMenu","contextMenu","handleCloseContextMenu","thumbnailSize","getSize","minithumbnail","openMedia","miniSrc","data","thumbSrc","isBlurredThumbnail","onContextMenu","backgroundImage","backgroundSize","PHOTO_SIZE","PHOTO_THUMBNAIL_SIZE","SharedDocument","i18n","date","dateString","Date","toLocaleDateString","language","day","month","year","hour","minute","hour12","SharedLink","startsWith","decodedUrl","decodeURI","hostname","URL","split","domain","punycode","ToUnicode","webPage","description","display_url","getTitleFromUrl","SafeLink","isValidEntityType","entityText","substring","offset","mail","typeUrl","charCodeAt","getFirstLetter","Photo","showProgress","SharedVoiceNote","sender_user_id","voice","VoiceNoteTile","MessageAuthor","AudioAction","MediaStatus","icon","SharedVideo","onClientUpdateVideoThumbnailBlob","isBlurred","Boolean","SharedMediaContent","onUpdateMessageSend","isValidContent","items","slice","params","loading","completed","migrateCompleted","getFilter","getItemTemplate","web_page","voice_note","handleScroll","onLoadNext","loadIncomplete","fromMessageId","from_message_id","SHARED_MESSAGE_SLICE_LIMIT","finally","messages","total_count","isValidMessage","incompleteResults","setItems","loadMessageContents","isValidPhotoAndVideoContent","isValidDocumentContent","isValidAudioContent","isValidUrlContent","isValidVoiceNoteContent","ChatDetails","loadChatContents","popup","getGroupChatMembers","loadUsersContent","getChatFullInfo","handleUsernameHint","username","telegramUrlOption","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","listRef","scrollTop","handleOpenViewer","setProfileMediaViewerContent","handleOpenChat","handleOpenUser","openUser","getContentHeight","handleTabClick","list","divider","dividerRef","scrollTo","offsetTop","behavior","mediaRef","offsetHeight","scrollHeight","SCROLL_PRECISION","theme","counters","migratedCounters","onOpenGroupInCommon","onOpenSharedAudios","onOpenSharedDocuments","onOpenSharedLinks","onOpenSharedMedia","onOpenSharedPhotos","onOpenSharedVideos","onOpenSharedVoiceNotes","el","groupInCommonCount","group_in_common_count","bio","getChatBio","isGroup","isGroupChat","isMe","users","member","sort","y","getUserStatusOrder","getUrlMentionHashtagEntities","bioText","bioEntities","getFormattedText","onScroll","List","alignItems","wordWrap","toUpperCase","paddingLeft","withSaveRef","withRestoreRef","GroupsInCommonHeader","GroupsInCommon","minHeight","SharedMediaHeader","handleSearch","searchInputRef","onSearch","onCloseSearch","openSearch","handleKeyDown","handleKeyUp","handlePaste","ANIMATION_DURATION_200MS","SpeedDialIcon","openIcon","SharedMediaBase","TypeError","migratedChatId","migratedItems","new_content","old_content","between","findIndex","insertByOrder","messageComparatorDesc","callback","getSearchFilter","onLoadMigratedNext","handleSearchScroll","searchListRef","searchParams","onSearchMigratedNext","onSearchNext","searchItems","searchMigratedItems","handleCloseSearch","searchMessages","getHeader","hasSearch","getListClassName","getSearchListClassName","SharedAudios","propTypes","PropTypes","number","isRequired","bool","SharedDocuments","SharedLinks","close","SharedMedia","Tabs","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab","label","minWidth","SharedPhotos","SharedVideos","SharedVoiceNotes","ChatInfo","onClientUpdatePageWidth","handleCloseChatDetails","onClientUpdateChatId","nextChatId","sharedAudios","sharedDocuments","sharedLinks","sharedPhotos","sharedVideos","sharedVoiceNotes","userChatId","openGroupInCommon","openSharedAudios","openSharedDocuments","openSharedLinks","openSharedMedia","openSharedPhotos","openSharedVideos","openSharedVoiceNotes","getCounters","loadChatCounters","loadMigratedCounters","getPhotoFromChat","loadProfileMediaViewerContent","getChatCounters","setCounters","getSupergroupId","upgraded_from_basic_group_id","handleOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupInCommon","handleCloseGroupsInCommon","changeChatDetailsVisibility","handleOpenSharedDocuments","handleCloseSharedDocuments","handleOpenSharedAudios","handleCloseSharedAudios","handleOpenSharedVoiceNotes","handleCloseSharedVoiceNotes","handleOpenSharedLinks","handleCloseSharedLinks","handleOpenSharedPhotos","handleCloseSharedPhotos","handleOpenSharedVideos","handleCloseSharedVideos","detailsRef","AppStore","dialogChatId","DialogContent","onClientUpdateClearHistory","clearHistory","inProgress","onUpdateUser","last_message","onUpdate","contentControl","typingString","getChatTypingString","draft","getChatDraft","showChatDraft","getLastMessageContent","senderName","getLastMessageSenderName","strokeWidth","fill","fillRule","x1","y1","x2","y2","strokeLinecap","strokeLinejoin","reset","chatList","authorization_state","chat_filters","emit","onClientUpdate","addTdLibListener","removeTdLibListener","EventEmitter","DialogBadge","unread_count","isPinned","isChatPinned","showUnreadMentionCount","showChatUnreadMentionCount","showUnreadCount","showChatUnreadCount","Pin","stroke","transform","cx","cy","Status","old_message_id","sending_state","newMessageId","sendingState","onUpdateChatReadOutbox","last_read_outbox_message_id","unread","viewBox","Pending","Sent","Succeeded","prevMessageId","isMessageUnread","DialogMeta","getLastMessageDate","is_outgoing","Dialog","previousChatId","handleContextMenu","contextMenuId","canPinChats","canTogglePin","canToggleArchive","canAddChatToList","canMute","pinnedSumMaxOption","isChatArchived","isSecret","isChatSecret","chat_list","pinnedSum","reduce","handlePin","toggleChatIsPinned","handleArchive","addChatToList","handleViewInfo","handleRead","isChatUnread","is_marked_as_unread","forceRead","force_read","viewMessages","toggleChatIsMarkedAsUnread","isLastPinned","ApplicationStore","isSelected","getChatId","isUnread","isArchived","Unarchive","Group","getViewInfoTitle","Unmute","Mute","Unread","DialogPlaceholder","titleWidth","contentWidth","cos","right","VirtualizedList","setViewportHeight","viewportHeight","parseFloat","getComputedStyle","getPropertyValue","renderIds","getRenderIds","setScrollPosition","rowHeight","isVisibleItem","overScanCount","renderIdsList","nextContext","renderItem","findLastTextNode","nodeType","Node","TEXT_NODE","childNodes","textNode","focusInput","range","createRange","setStart","collapse","selection","getSelection","removeAllRanges","addRange","localStorage","getItem","JSON","parse","setItem","stringify","removeItem","clear","archiveChatIds","meChat","cacheContacts","contacts","cache","CacheManager","saveInternal","load","files","user_ids","parseCache","archiveChats","basicGroups","supergroups","setDataUrl","OutputTypingManager","updateChatChatLists","option","fileMap","userMap","basicGroupMap","supergroupMap","blob","getBlob","basicGroup","values","entries","getCache","save","resolve","reject","fileReader","FileReader","readAsDataURL","onload","onerror","results","deleteDataUrl","MainMenuButton","onUpdateAuthorizationState","authorizationState","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleCheckUpdates","handleNewChannel","handleNewGroup","handleContacts","handleArchived","openArchive","handleSaved","CacheStore","handleSettings","handleHelp","searchChat","getAuthorizationState","timeout","showClose","mainMenuControl","Menu","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","Channel","Saved","Help","closeIcon","aria-owns","aria-haspopup","SearchInput","stopImmediatePropagation","onBackspace","handleInput","inputRef","hint","showIcon","onInput","DialogsHeader","handleSearchTextChange","onSearchTextChange","searchInput","showBack","Filters","onClientUpdateLanguageChange","onClientUpdateCacheLoaded","cachedFilters","main","chat_filter_id","onUpdateChatFilters","FilterStore","handleMainClick","onClientUpdateChatList","handleWheel","deltaY","LocalizationStore","onWheel","DialogListItem","DialogsList","loadFirstSlice","onClientUpdateLeaveChat","hiddenChats","initDB","saveCache","onSaveCache","onUpdateChatPosition","chatListEquals","onUpdateChatOrder","hasChatList","order","getChatOrder","currentIndex","chatOrder","newChatIds","setChatId","reorderChats","getListRef","SCROLL_CHATS_PRECISION","onLoadPrev","fistSliceLoaded","showArchive","archiveTitle","cacheItems","orderedChatIds","b","orderCompare","isDifferentOrder","CHAT_SLICE_LIMIT","offsetOrder","offsetChatId","log","shift","replaceChats","appendChats","newChats","Array","oldChatIds","Archive","innerListRef","TopChat","onDelete","PureComponent","RecentlyFoundChat","FoundPublicChat","selectedChatId","FoundMessage","nextMessageId","getMessageId","previousMessageId","chatSearch","selectedMessageId","getMessageDate","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","UserTile","SectionHeader","command","multiline","children","Search","modals","isComposing","concatSearchResults","arr","j","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","some","includes","splice","recentlyFound","trimmedText","substr","USERNAME_LENGTH_MIN","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","offset_date","offset_message_id","linkMessage","messageLinkInfo","keys","topPromise","category","recentlyFoundPromise","handleClearRecentlyFound","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","onLoadPrevious","getOffset","concatMessages","filterDuplicateMessages","handleTopChatsScroll","handleDeleteRecentlyFoundChat","handleDeleteTopChat","searchOrLoadContent","topChats","recentlyFoundChats","localChats","globalChatsMap","globalChats","globalLinkChat","globalMessagesMap","globalMessages","globalLinkMessage","count","messagesCaption","SidebarPage","Slide","direction","in","mountOnEnter","unmountOnExit","cloneElement","SettingsMenuButton","handleLogOut","handleDone","logOut","More","LogOut","DialogContentText","Main","onEditProfile","onGeneral","onNotifications","onPrivacySecurity","onLanguage","onFilters","Edit","Data","packageJson","version","NewChatPhoto","handleCancel","cropper","cropperRef","getCroppedCanvas","toBlob","blobURL","createObjectURL","onChoose","handleAttach","attachPhotoRef","click","handleAttachComplete","readImageSize","fileURL","defaultURL","getFitSize","fitWidth","fitHeight","AddImage","multiple","accept","margin","aspectRatio","viewMode","guides","Check","EditProfile","handleUsernameChange","newUsername","usernameRef","usernameCheck","newUsername2","handleChoosePhoto","name","firstNameRef","lastNameRef","bioRef","userFullInfo","firstName","first_name","lastName","last_name","setName","setBio","setUsername","newFirstName","newLastName","newBio","hasError","usernameLabel","getSimpleMarkupEntities","formattedText","TextField","defaultValue","FilterChat","role","undefined","getChatType","Radio","FilterText","Chip","divRef","div","ChatChip","EditFilterChats","handleChatChange","search","mode","handleBackspace","focusedItem","include_contacts","include_non_contacts","include_bots","include_groups","include_channels","included_chat_ids","lastItem","exclude_muted","exclude_read","exclude_archived","excluded_chat_ids","wrapPanelRef","itemsRef","prevFilter","include","prevItems","isDeleting","wrapPanel","prevHeight","prevOffsetHeight","prevCSSText","prevScrollTop","prevMap","panel","animatePanel","currentHeight","collapsed","scrollIntoView","prevOffsets","doubleTransform","currentOffset","prevOffset","setStyleCSSText","NonContacts","Bots","handleSearchClose","zIndex","scrollRef","marginTop","RLottie","lazy","CreateFilter","loadAnimationData","closeData","requests","fetch","onDone","editFilter","titleRef","isFilterValid","handleAnimationClick","lottie","lottieRef","isPaused","handleDeleteIncludeContacts","newEditFilter","handleDeleteIncludeNonContacts","handleDeleteIncludeGroups","handleDeleteIncludeChannels","handleDeleteIncludeBots","handleDeleteIncludedChat","handleDeleteExcludeMuted","handleDeleteExcludeRead","handleDeleteExcludeArchived","handleDeleteExcludedChat","handleOpenFilterChats","openFilterChats","handleCloseFilterChats","setDefaultFilterTitle","included","excluded","handleTitleChange","FILTER_TITLE_MAX_LENGTH","prevFilterId","shook","Done","Suspense","fallback","autoplay","loop","stringData","Add","filterId","Filter","handleOpenDialog","handleCloseDialog","handleDeleteCancel","handleDeleteConfirm","onEdit","getFilterSubtitle","RecommendedFilter","handleAdd","recommendedFilter","disableElevation","loadData","handleCreateFilter","FILTER_COUNT_MAX","openFilter","icon_name","pinned_chat_ids","handleCloseFilter","handleEditFilter","recommendedFilters","filtersMap","filterInfo","hasFilters","hasRecommendedFilters","startIcon","Wallpaper","onClientUpdateDocumentThumbnailBlob","wallpaper","backgroundPosition","FileProgress","cancelButton","ChatBackground","selectedId","loadBackgroundContent","backgrounds","loadBackgroundsContent","wallpapers","ThemePicker","getColor","handleAccentChange","getColorString","red","orange","amber","green","indigo","deepPurple","palette","FormControl","component","FormLabel","focused","RadioGroup","FormControlLabel","control","withTheme","General","handleAppearance","themePickerRef","for_dark_theme","openChatBackground","closeChatBackground","Colorize","Language","languages","language_packs","inputProps","native_name","handleMuteFor","property","settings","newSettings","mute_for","handleShowPreview","show_preview","handleContactJoined","contactJoined","contactJoinedOption","privateChatsSettings","groupChatsSettings","channelChatsSettings","setScopeNotificationSettings","setContactJoinedOption","oldSettings","oldMuteFor","oldShowPreview","notification_settings","isEnabled","showPreview","Session","session","is_current","handleTerminate","onTerminate","application_name","application_version","device_model","platform","system_version","ip","region","country","last_active_date","showDate","Stop","ActiveSessions","openAll","handleTerminateAllOther","handleCloseConfirmation","handleDoneConfirmation","sessions","session_id","handleCloseAllConfirmation","handleDoneAllConfirmation","other","primaryTypographyProps","BlockedUser","memo","onUnblock","useState","setContextMenu","setTop","setLeft","useTranslation","Unblock","BlockedUsers","handleUnblock","PrivacySecurity","openBlockedUsers","openActiveSessions","user_full_info","is_blocked","closeActiveSessions","closeBlockedUsers","sessionsCount","usersCount","RemoveMember","Device","Settings","openEditProfile","closeEditProfile","openGeneral","closeGeneral","openNotifications","closeNotifications","openPrivacySecurity","closePrivacySecurity","openLanguage","closeLanguage","openFilters","closeFilters","handleCloseSettings","setFullInfo","UserListItem","Contacts","handleDebounceScroll","handleThrottleScroll","loadRenderIdsContent","currentItems","getListRenderIds","userIds","getUserFullName","localeCompare","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","location","reload","Download","NewChannel","defaultPhoto","defaultPhotoFile","descriptionRef","is_channel","defaultPhotoURL","file_type","priority","THUMBNAIL_PRIORITY","UserChip","getUserShortName","AddParticipants","newArray","selectedItems","array","newMap","newFocusedItem","animateItems","selectedItemsMap","publicItems","publicChats","NewGroupParams","onChoosePhoto","itemsCaption","NewGroup","openParams","addParticipantsRef","getUserIds","newGroupParamsRef","getTitle","handleCloseParams","SidebarDialog","onClientUpdateSearchChat","searchChatId","handleDialogEnter","header","headerRef","setInitQuery","onClientUpdateSettings","openSettings","meChatId","onClientUpdateContacts","openContacts","onClientUpdateNewGroup","openNewGroup","onClientUpdateNewChannel","openNewChannel","visible","paper","onEnter","getArchiveTitle","archive","chatsOrder","defaultTimeout","enter","enteringScreen","exit","leavingScreen","Dialogs","prevShowArchive","mainCurrent","dialogListRef","archiveCurrent","archiveListRef","archiveList","listCurrent","onClientUpdateArchive","onClientUpdateThemeChange","dialogsHeaderRef","scrollToTop","handleSaveCache","handleCloseArchive","handleCloseContacts","handleCloseNewGroup","handleCloseNewChannel","mainItems","archiveItems","loadCache","mainChatIds","mainCacheItems","archiveCacheItems","CSSTransition","ChatInfoDialog","onClientUpdateMediaViewerContent","mediaViewerContent","onClientUpdateDialogChatId","AttachButton","handleMenuClick","handleAttachPhoto","onAttachPhoto","ANIMATION_DURATION_300MS","handleAttachDocument","onAttachDocument","handleAttachPoll","onAttachPoll","Attach","canSendMediaMessages","canSendPolls","focusNode","node","toEnd","lastNode","utils","special","navigational","isSpecial","isNavigational","CreatePollOption","getText","optionTextRef","dataset","maxLength","remainLength","hasSelection","toString","onFocusNext","isCollapsed","anchorNode","anchorOffset","onFocusPrev","lastChild","selectionString","pasteText","POLL_OPTION_MAX_LENGTH","is_chosen","data-length","POLL_OPTION_LENGTH","data-max-length","POLL_OPTION_HINT_LENGTH","align","CreatePollDialog","handleClientUpdateNewPoll","poll","PollStore","confirm","POLL_QUESTION_MAX_LENGTH","handleClientUpdatePollQuestion","questionRef","handleClientUpdatePoll","handleClientUpdateNewPollOption","optionsRefMap","handleFocusNextOption","question","handleAddOption","POLL_OPTIONS_MAX_COUNT","handleDeleteOption","backspace","handleDeleteByBackspace","prevIndex","deleteOption","prevNode","handleFocusPrevOption","nextIndex","nextNode","getHint","addCount","hasPollData","handleConfirmationDone","onSend","inputMessagePoll","getInputMessagePoll","handleConfirmationClose","handleChangeAnonymous","handleChangeAllowMultipleAnswers","handleChangeType","handleAllowMultipleAnswersClick","is_anonymous","allowMultipleAnswers","allow_multiple_answers","allowMultipleAnswersDisabled","quizPoll","canAddOption","flexGrow","POLL_QUESTION_LENGTH","POLL_QUESTION_HINT_LENGTH","Divider","disableTypography","FormGroup","background","isValidPoll","EditUrlDialog","handleTextKeyDown","urlInputRef","handleUrlKeyDown","handleTextChange","handleUrlChange","defaultText","defaultUrl","textError","textInputRef","validateUrl","urlError","onCancel","textRef","urlRef","display","flexDirection","autoComplete","prevOpen","ReplyTile","THUMBNAIL_BLURRED_SIZE_90","isVideoNote","hasVideoNote","hasSrc","Reply","onGetMessageResult","handleOpen","isDeletedMessage","getReplyPhotoSize","getReplyMinithumbnail","InputBoxHeader","editMessageId","editMessage","replyMessage","PasteFilesDialog","onConfirm","RecordTimer","onClientUpdateRecordStart","timer","setInterval","diff","onClientUpdateRecordStop","onClientUpdateRecordError","msStr","s","ms","secs","mins","hrs","normalizeS","normalizeM","msToTime","EditMediaDialog","handleSelectionChange","captionRef","saveSelection","handleEnter","newItem","setFormattedText","editFile","editMedia","sendAsPhoto","getEntities","editMessageAction","performer","repeat","handleBold","handleItalic","handleMono","handleUrl","handleClear","handleUnderline","handleStrikeThrough","openEditUrlDialog","startContainer","endContainer","parentElement","nodeName","href","openEditUrl","closeEditUrlDialog","restoreSelection","clearInnerHtml","handleCancelEditUrl","handleDoneEditUrl","parentNode","textContent","setEnd","handleEditMedia","editMediaRef","handleEditMediaComplete","getMediaPhotoFromFile","handleSendAsPhoto","nodes","getNodes","rangeCount","getRangeAt","isEditing","isPhoto","doneLabel","lastAction","setSeconds","getSeconds","TYPING_OUTPUT_INTERVAL_S","lastTypingDate","EmojiPickerButton","InputBox","selectionChangeListener","newMessageRef","onClientUpdateInputShake","onClientUpdateSendFiles","handleSendFiles","is_permanent","onClientUpdateEditMessage","recordingTime","saveDraftAndSelection","restoreDraftAndSelection","openEditMedia","isEditedMedia","setEditMessage","onClientUpdateFocusWindow","saveDraft","onUpdateChatDraftMessage","loadDraft","onClientUpdateAnimationSend","animation","thumbnailWidth","thumbnailHeight","sendMessage","onClientUpdateStickerSend","onClientUpdateReply","replyToMessageId","setInputFocus","beforeEditText","getChatDraftReplyToMessageId","handleCancelRecord","setDraft","setChatDraftMessage","chatDraftMessage","draftMessage","draft_message","getDraftMessage","input_message_text","draftEquals","handleSubmit","startRecord","recordingReady","VOICENOTE_MIN_RECORD_DURATION","handleStopRecord","handleRecord","inputContent","editedMessage","editMessageText","editMessageCaption","handleAttachPhotoComplete","newFile","getNewItem","handleSendPhoto","attachDocumentRef","handleAttachDocumentComplete","handleSendDocument","charCode","cachedMessage","handleSendingMessage","uploadFile","handleSendPoll","handleSendAudio","handleSendVoiceNote","originalEvent","kind","getAsFile","handlePasteConfirm","handlePasteCancel","handleUpdateDraftConfirm","newDraft","handleUpdateDraftCancel","setBlob","updatePhotoBlob","clearDraft","invokeScheduledAction","alert","handleEmojiSelect","native","setTyping","setHints","setRecordingReadyState","lastTextNode","handleCancelEditMedia","closeEditMediaDialog","editMessageMedia","handleSendMedia","cancelled","recorder","stream","getAudioTracks","mediaDevices","getUserMedia","recordPermissionDenied","constraints","channelCount","sampleRate","applyConstraints","mimeType","audioBitsPerSecond","workerOptions","encoderWorkerFactory","Worker","process","OggOpusEncoderWasmPath","MediaRecorder","chunks","ondataavailable","onstart","onstop","Blob","audioURL","Audio","trunc","waveform","handleClosePermission","sendFile","AnimationStore","StickerStore","sendAsFile","getMediaDocumentFromFile","performance","match","emojiRegex","exec","timestamp","stickers","cancel","isMediaEditing","isTextMessage","Microphone","Send","FooterCommand","onCommand","NotificationsCommand","Footer","hasBasicGroupId","hasSupergroupId","handleJoin","handleDeleteAndExit","remove_from_chat_list","status","is_member","permissions","can_send_messages","NotificationTimer","handleTimer","seconds","expire","timerId","clearInterval","onTimeout","setMilliseconds","getMilliseconds","toFixed","CircularProgress","LeaveChatDialog","getDeleteDialogText","EnhancedLeaveChatDialog","ClearHistoryDialog","EnhancedClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","isCreator","clientUpdateType","persist","getLeaveChatTitle","handleUnpin","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","unpinMessage","canUnpinMessage","HeaderChatSubtitle","onUpdateChatOnlineMemberCount","onUpdateUserChatAction","getChatSubtitle","isAccentSubtitle","isAccentChatSubtitle","HeaderChat","HeaderCommand","canBeDeleted","canBeForwarded","PinnedMessage","onClientUpdateUnpin","onClientUpdateDialogsReady","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","deletedMessage","canPinMessages","getClientData","Object","assign","unpinned_message_id","prevPropsChatId","Header","onClientUpdateDeleteMessages","canBeDeletedForAllUsers","openDeleteDialog","revoke","handleRevokeChange","handleCloseDelete","handleDeleteContinue","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","handleSearchChat","localize","str","getConnectionState","showProgressAnimation","HeaderProgress","VolumeButton","prevValue","buttonOver","popupOver","onClientUpdateMediaVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","handleDragStart","handleDragEnd","visibility","onDragStart","onDragEnd","orientation","RepeatButton","onClientUpdateMediaRepeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","PlaybackRateButton","onClientUpdateMediaPlaybackRate","onClientUpdateMediaAudioPlaybackRate","audioPlaybackRate","nextRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","reverse","currentTimeString","handleReverse","Playlist","scrollToActive","playlist","block","playlistItemEquals","itemRefMap","ReactDOM","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","isCurrentSource","onClientUpdateMediaPlaylist","openTimeout","titleMouseOver","instantView","openInstantViewMedia","iv","getMediaFunc","getPageBlock","ivCache","urlCache","openInstantView","force_full","loadInstantViewContent","setInstantViewContent","newWindow","opener","HeaderPlayer","handleSeekForward","videoRef","handleSeekBackward","handleSeekTo","seekTime","fadeOutVolume","pausedForRecord","fadeInVolume","useAudioPlaybackRate","onClientUpdateMediaSeek","currentValue","playingMediaViewer","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","startPlayingFile","prevSrc","getMediaSrc","getMediaMimeType","playing","srcSource","onClientUpdateMediaBlob","startPlaying","video_note","supportsStreaming","onClientUpdateMediaClose","handlePrev","handleNext","moveNext","handleVideoEnded","hasVoice","muted","videoWidth","videoHeight","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","openMediaInstantView","getMessageAudio","addMediaSessionHandlers","removeMediaSessionHandlers","mediaSession","setActionHandler","currentVolume","volumeInterval","useAudioRate","getMediaTitle","showPlaybackRate","getDateHint","getDate","showRepeat","showShuffle","autoPlay","controls","disablePictureInPicture","onLoadedMetadata","onCanPlay","onTimeUpdate","onProgress","PlayArrow","ActionBar","onUpdateChatActionBar","handleReportSpam","reason","handleReportUnrelatedLocation","handleSharePhoneNumber","handleAddContact","phone_number","contact","vcard","share_phone_number","handleBlockUser","action_bar","FilesDropTarget","onClientUpdateDragging","dragParams","handleDragEnter","handleDrop","dataTransfer","handleDragLeave","onDragEnter","onDragLeave","onDrop","DayMeta","onClientUpdateLanguage","setMonth","getMonth","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","isForwardOriginHidden","Meta","onUpdateMessageEdited","editDate","edit_date","onUpdateMessageViews","views","onDateClick","isOutgoing","dateStr","dateHintStr","viewsStr","getViews","points","MessageMenu","confirmStopPoll","handleConfirmStopPoll","handleCloseConfirm","handleStopPoll","stopPoll","handleUnvote","cancelPollAnswer","copyLink","handleCopyPublicMessageLink","httpUrl","handleReply","isMessagePinned","disableNotification","disable_notification","pinMessage","handleEdit","selectMessage","handleDownload","saveBlob","canBeUnvoted","canMessageBeUnvoted","canBeClosed","canMessageBeClosed","canBeReplied","canBePinned","canMessageBeForwarded","canMessageBeDeleted","canBeEdited","canMessageBeEdited","recording","canBeSelected","hasSelectedMessage","canCopyLink","canCopyPublicMessageLink","isPublicSupergroup","Copy","FrameCheck","RemoveCheck","EmptyTile","WebPage","displaySmallSize","displayExtraSmallSize","site_name","Sticker","MESSAGE","VoiceNote","VideoNote","videoNote","Document","Animation","stretch","Video","smallPhoto","PHOTO_DISPLAY_SIZE","extraSmallPhoto","float","marginLeft","handleInstantViewClick","instant_view_version","getTwitterInstagramEntities","e1","webPageContent","webPageMediaTop","webPageMediaBottom","webPageInstantView","outlinedPrimary","SvgIcon","meta","getWebPage","PHOTO_DISPLAY_SMALL_SIZE","PHOTO_DISPLAY_EXTRA_SMALL_SIZE","Message","onClientUpdateClearSelection","onClientUpdateMessageShake","onClientUpdateMessageHighlighted","highlighted","emojiMatches","getEmojiMatches","handleSelectUser","handleSelectChat","handleSelection","mouseDown","handleDateClick","handleAnimationEnd","handleMouseOut","mouseOut","handleReplyClick","openReply","tagName","showUnreadSeparator","showTail","forward_info","inlineMeta","isMetaBubble","hasCaption","showForward","showMessageForward","showReply","suppressTitle","hasTitle","isChannel","isPrivate","getMessageStyle","withBubble","onMouseOver","onMouseOut","onAnimationEnd","chatPhotoStyle","borderRadius","ServiceMessage","getServiceMessageContent","Placeholder","cacheLoaded","dialogsReady","ScrollDownButton","StickersHint","onClientUpdateRemoteStickersHint","currentHint","getItems","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","getSticker","mouseDownStickerId","dict","foundStickers","stickerIndex","data-sticker-id","STICKER_SMALL_DISPLAY_SIZE","preview","HINTS","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateTryEditMessage","history","defferedActions","onClientUpdateOpenReply","replyHistory","playerOpened","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","scrollBehavior","replaceMessage","handleScrollBehavior","updateItemsInView","newState","scrollDownVisible","scrollBehaviorNone","insertPrevious","filterMessages","deleteHistory","itemsInView","messageWrapper","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","loadMigratedHistory","onLoadMigratedHistory","insertNext","supergroupId","basicGroupChat","prevHistory","scrollToBottom","scrollToMessage","scrollToUnread","keepScrollPosition","scrolled","itemComponent","itemsMap","scrollToStart","separatorMessageId","handleListDragEnter","handleScrollDownClick","lastReply","pop","scrollDownButtonRef","historyEquals","previousChat","lastCompleted","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","getChatMedia","viewAction","hasFocus","getMessagePhoto","getPhotoSize","cancelGetRemoteFile","getMessageSticker","oldMessageId","prevMessage","isFirst","isServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","prevDate","getFullYear","nextMessage","showMessageDate","m","showMessageTitle","nextShowTitle","ShareStickerSetButton","getStickersLink","stickerSet","handleShare","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","contentRef","hasScroll","scrollBottom","handleInViewport","elementRect","contentRect","getBoundingClientRect","bottom","STICKER_SET","inViewportFunc","DialogDetails","onClientUpdateDocumentBlob","thumbnailTime","onClientUpdateChatBackground","onClientUpdateChatDetailsVisibility","messagesList","selectedCount","wallpaperSrc","articleRefs","Article","forwardedRef","page_blocks","is_rtl","blocks","dir","withIV","MediaCaption","InstantViewMediaViewerContent","onClientUpdatePictureInPicture","getViewerFile","onClientUpdateMediaThumbnailBlob","isPlaying","thumbnailSrc","scale","MEDIA_VIEWER_VIDEO_MAX_SIZE","w","h","getThumb","poster","handleContentClick","isEmptyText","credit","Caption","prevMedia","getViewerThumbnail","getViewerMinithumbnail","mime_type","speed","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","MediaViewerDownloadButton","onUpdateFile","is_downloading_completed","checkFileLoaded","saveDisabled","getLocalFile","propsDisabled","prevPropsFileId","InstantViewMediaViewer","getBlockMedia","handlePrevious","hasPreviousMedia","loadMedia","hasNextMedia","preloadIVMediaViewerContent","setInstantViewViewerContent","cancelPreloadIVMediaViewerContent","getInputMediaContent","handleSave","saveMedia","handleWrapperMouseDown","mouseDownTarget","handleWrapperClick","getValidBlocks","isValidMediaBlock","getBlockCaption","getBlockUrl","maxCount","InstantViewer","onClientUpdateInstantViewViewerContent","onClientUpdateInstantViewUrl","InstantViewStore","getCurrent","oldUrl","hash","scrollToHash","handleBack","instantViewerRef","articleRef","mounted","scrollToBlock","findDOMNode","scrollToElement","details","finished","currentElement","getInnerBlocks","IVContext","Provider","IV_PHOTO_SIZE","prevInstantView","MediaInfo","getSenderUserId","dateHint","tileControl","MediaViewerContent","getMediaFile","isVideoMessage","getMediaThumbnail","loadNextBuffer","isEmbed","isEmbedMessage","isVideo","isAnimation","isAnimationMessage","embed_url","frameBorder","allowFullScreen","scrolling","getMediaMinithumbnail","MediaViewer","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","inserted","oldHistory","filterMap","moveToNextMedia","accumulator","currentId","deletedCount","setMediaViewerContent","loadHistory","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","cancelPreloadMediaViewerContent","handleDialogOpen","loadPrevious","loadNext","nextId","deleteConfirmationOpened","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","hasPrevousMedia","deleteConfirmationContent","deleteConfirmation","PHOTO_BIG_SIZE","ProfileMediaViewerContent","onClientUpdateUserBlob","handlePhotoClick","onPrevious","prevPhoto","PROFILE_PHOTO_BIG_SIZE","getBlobUrl","ProfileMediaInfo","ProfileMediaViewer","photos","preloadProfileMediaViewerContent","getProfilePhoto","saveOrDownload","updateChatPhotoBlob","inputFile","chatPhoto","profile_photo_id","obj","prevFileId","currentFileId","inHistory","profilePhoto","profilePhotoBig","userProfilePhoto","getProfilePhotoDateHint","MainPage","onClientUpdateInstantViewContent","instantViewContent","onClientUpdateOpenChat","onClientUpdateOpenUser","isChatDetailsVisible","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","withLanguage"],"mappings":"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","file":"static/js/3.7d8843f9.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass Animator {\n    constructor(duration, options = []) {\n        this.options = options;\n        this.duration = duration;\n    }\n\n    static outSine(n) {\n        return Math.sin((n * Math.PI) / 2);\n    }\n\n    start = () => {\n        this.stopped = false;\n        this.id = requestAnimationFrame(this.startInternal);\n    };\n\n    startInternal = timeStamp => {\n        const { startTime, duration } = this;\n\n        this.startTime = timeStamp;\n        this.endTime = startTime + duration;\n        this.draw(timeStamp);\n    };\n\n    draw = now => {\n        const { stopped, duration, startTime, options } = this;\n\n        if (now - startTime > duration && options.every(x => x.to === x.last)) {\n            this.stopped = true;\n        }\n\n        if (stopped) return;\n\n        const time = Math.min(now - startTime, duration);\n        const p = duration === 0 ? 1.0 : time / duration;\n        const val = Animator.outSine(p);\n\n        options.forEach(x => {\n            const { from, to, func } = x;\n            x.last = from + (to - from) * val;\n            func(x.last);\n        });\n\n        this.id = requestAnimationFrame(this.draw);\n    };\n\n    stop = () => {\n        this.stopped = true;\n        cancelAnimationFrame(this.id);\n    };\n}\n\nexport default Animator;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker\n                    sticker={sticker}\n                    displaySize={STICKER_PREVIEW_DISPLAY_SIZE}\n                    source={StickerSourceEnum.PREVIEW}\n                />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M6.66607426,13.6501686 C7.13342047,13.4117012 7.7055954,13.5972442 7.94406273,14.0645904 C8.71613228,15.5776856 10.2710663,16.5499921 12,16.5499921 C13.7262991,16.5499921 15.2792455,15.5806677 16.0525854,14.0711462 C16.2918118,13.6041881 16.8642875,13.419575 17.3312456,13.6588014 C17.7982037,13.8980278 17.9828168,14.4705034 17.7435904,14.9374615 C16.6482438,17.0755242 14.4462205,18.4499921 12,18.4499921 C9.55003677,18.4499921 7.34521255,17.0713067 6.2516524,14.928157 C6.01318507,14.4608108 6.19872805,13.8886359 6.66607426,13.6501686 Z M8.75,8 C9.44035594,8 10,8.67157288 10,9.5 C10,10.3284271 9.44035594,11 8.75,11 C8.05964406,11 7.5,10.3284271 7.5,9.5 C7.5,8.67157288 8.05964406,8 8.75,8 Z M15.25,8 C15.9403559,8 16.5,8.67157288 16.5,9.5 C16.5,10.3284271 15.9403559,11 15.25,11 C14.5596441,11 14,10.3284271 14,9.5 C14,8.67157288 14.5596441,8 15.25,8 Z' />,\n    'Smile'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport PlayIcon from '../../Assets/Icons/PlayArrow';\nimport FullScreen from '../../Assets/Icons/FullScreen';\nimport Hint from './Hint';\nimport Player from './Player';\nimport Progress from './Progress';\nimport { clamp, getDurationString } from '../../Utils/Common';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport {\n    PIP_PLAYER_BORDER_PRECISION, PLAYER_PLAYBACKRATE_MAX,\n    PLAYER_PLAYBACKRATE_MIN,\n    PLAYER_PLAYBACKRATE_STEP,\n    PLAYER_SEEK_STEP_BIG,\n    PLAYER_SEEK_STEP_SMALL,\n    PLAYER_VOLUME_MAX,\n    PLAYER_VOLUME_MIN,\n    PLAYER_VOLUME_STEP\n} from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PipPlayer.css';\n\nclass PipPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.state = { };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { video, duration, currentTime, volume, play, buffered, waiting } = props;\n        if (state.prevVideo !== video) {\n            return {\n                prevVideo: video,\n                duration,\n                currentTime,\n                volume,\n                play,\n                buffered,\n                waiting,\n                dragging: false,\n                hidden: false,\n                fullscreen: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        const { video } = this.props;\n        this.connectPlayer(video);\n        window.addEventListener('resize', this.onWindowResize);\n        document.addEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.on('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n    }\n\n    componentWillUnmount() {\n        const { video } = this.props;\n        this.disconnectPlayer(video);\n        window.removeEventListener('resize', this.onWindowResize);\n        document.removeEventListener('fullscreenchange', this.onFullScreenChange);\n        PlayerStore.off('clientUpdateMediaShortcut', this.onClientUpdateMediaShortcut);\n\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onClientUpdateMediaShortcut = update => {\n        const { event } = update;\n        if (!event) return;\n\n        this.onKeyDown(event);\n    };\n\n    onKeyDown = event => {\n        const { key, code, altKey, ctrlKey, metaKey, shiftKey } = event;\n\n        const { video } = this.props;\n        if (!video) return;\n\n        let handled = false;\n        switch (code) {\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClose();\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowLeft': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyJ': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_SMALL);\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyL': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowUp': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume + PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'ArrowDown': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleVolume(video.volume - PLAYER_VOLUME_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Space':\n            case 'KeyK': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleClick();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyM': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleMute();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyF': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleFullScreen();\n                    handled = true;\n                }\n                break;\n            }\n            case 'KeyI': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    // this.handlePictureInPicture();\n                    handled = true;\n                }\n                break;\n            }\n            case 'Digit0':\n            case 'Digit1':\n            case 'Digit2':\n            case 'Digit3':\n            case 'Digit4':\n            case 'Digit5':\n            case 'Digit6':\n            case 'Digit7':\n            case 'Digit8':\n            case 'Digit9': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const progress = new Number(key.replace('Digit', '')) / 10.0;\n                    this.handleSeekProgress(progress);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Home': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'End': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    this.handleSeek(video.duration - 1.0);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Comma': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate - PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n            case 'Period': {\n                if (!altKey && !ctrlKey && !metaKey && shiftKey) {\n                    this.handlePlaybackRate(video.playbackRate + PLAYER_PLAYBACKRATE_STEP);\n                    handled = true;\n                }\n                break;\n            }\n        }\n\n        if (handled) {\n            event.stopPropagation();\n            event.preventDefault();\n        }\n    };\n\n    showMediaHint(text) {\n        const { fileId } = this.props;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaHint',\n            fileId,\n            text\n        });\n    }\n\n    handleVolume = volume => {\n        const { video } = this.props;\n        if (!video) return;\n\n        volume = clamp(volume, PLAYER_VOLUME_MIN, PLAYER_VOLUME_MAX);\n\n        video.volume = volume;\n        this.showMediaHint(`${Math.round(video.volume * 100)}%`);\n    };\n\n    handlePlaybackRate = rate => {\n        const { video } = this.props;\n        if (!video) return;\n\n        rate = clamp(rate, PLAYER_PLAYBACKRATE_MIN, PLAYER_PLAYBACKRATE_MAX)\n\n        video.playbackRate = rate;\n        this.showMediaHint(`${rate}x`);\n    };\n\n    handleSeekProgress = progress => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.handleSeek(progress * video.duration);\n    };\n\n    handleSeek = currentTime => {\n        const { video } = this.props;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n        this.setState({ currentTime });\n    };\n\n    onFullScreenChange = () => {\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        const fullscreenPlayer = document.getElementById('pip-player-wrapper');\n        const fullscreen = fullscreenElement === fullscreenPlayer;\n\n        this.setState({\n            fullscreen\n        });\n    };\n\n    onWindowResize = () => {\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) return;\n\n        const player = document.getElementById('pip-player');\n\n        const oldLeft = parseInt(player.style.left, 10);\n        const oldTop = parseInt(player.style.top, 10);\n\n        const { left, top } = this.normalizePosition(oldLeft, oldTop, true);\n\n        if (oldLeft === left && oldTop === top) return;\n\n        // console.log('[pip] windowResize', left, top);\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { video } = this.props;\n\n        if (prevProps.video !== video) {\n            this.disconnectPlayer(prevProps.video)\n            this.connectPlayer(video);\n        }\n    }\n\n    connectPlayer(video) {\n        if (!video) return;\n\n        const pipPlayer = document.getElementById('pip-player');\n        const { left, top } = this.normalizePosition(PlayerStore.pipParams.left, PlayerStore.pipParams.top, false);\n        pipPlayer.style.left = left + 'px';\n        pipPlayer.style.top = top + 'px';\n\n        const pipPlayerWrapper = document.getElementById('pip-player-wrapper');\n        pipPlayerWrapper.focus();\n\n        // console.log('[pip] connect', PlayerStore.pipParams, pipPlayer.style.left, pipPlayer.style.top);\n\n        const container = document.getElementById('pip-player-container');\n        if (!container) return;\n\n        video.onloadedmetadata = this.handleLoadedMetadata;\n        video.onloadeddata = this.handleLoadedData;\n        video.oncanplay = this.handleCanPlay;\n        video.onplay = this.handlePlay;\n        video.onpause = this.handlePause;\n        video.onended = this.handleEnded;\n        video.ontimeupdate = this.handleTimeUpdate;\n        video.onvolumechange = this.handleVolumeChange;\n        video.onprogress = this.handleProgress;\n        video.onwaiting = this.handleWaiting;\n\n        container.innerHTML = '';\n        container.appendChild(video);\n    }\n\n    disconnectPlayer(video) {\n        if (!video) return;\n\n        video.onloadedmetadata = null;\n        video.onloadeddata = null;\n        video.oncanplay = null;\n        video.onplay = null;\n        video.onpause = null;\n        video.onended = null;\n        video.ontimeupdate = null;\n        video.onvolumechange = null;\n        video.onprogress = null;\n        video.onwaiting = null;\n    }\n\n    handleLoadedData = event => {\n        const { target: video } = event;\n        if (!video) return;\n    };\n\n    handleLoadedMetadata = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { currentTime } = this.state;\n        const { duration, volume, buffered } = video;\n        // const currentTime = this.getCurrentTime();\n\n        this.setState({\n            duration,\n            // currentTime,\n            volume,\n            waiting: true,\n            buffered\n        }, () => {\n            if (!currentTime) return;\n\n            video.currentTime = currentTime;\n        });\n    };\n\n    handleCanPlay = event => {\n        const { target: video } = event;\n\n        this.setState({\n            waiting: false\n        }, () => {\n            if (!video) return;\n\n            const { play } = this.state;\n            if (play) {\n                video.play();\n            } else {\n                video.pause();\n            }\n        });\n    };\n\n    handlePlay = event => {\n        const { onPlay } = this.props;\n\n        this.setState({\n            play: true,\n            hidden: true\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPlay' });\n        onPlay && onPlay(event);\n    };\n\n    handlePause = event => {\n        const { onPause } = this.props;\n\n        this.setState({\n            play: false,\n            hidden: false\n        });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerPause' });\n        onPause && onPause(event);\n    };\n\n    handleEnded = event => {\n        const { onEnded } = this.props;\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateMediaViewerEnded' });\n        onEnded && onEnded(event);\n\n        const { video } = this.props;\n        this.setCurrentTime({currentTime: 0, duration: video.duration });\n    };\n\n    handleTimeUpdate = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n        const { currentTime, duration, volume, buffered } = video;\n\n        this.setState({\n            duration,\n            currentTime,\n            volume,\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerTimeUpdate',\n            fileId,\n            currentTime,\n            duration,\n            volume,\n            buffered\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleVolumeChange = event => {\n        const { onVolumeChange } = this.props;\n\n        const { target: video } = event;\n        if (!video) return;\n\n        const { volume } = video;\n\n        this.setState({\n            volume\n        });\n\n        TdLibController.clientUpdate({ '@type' : 'clientUpdateMediaVolume', volume });\n        onVolumeChange && onVolumeChange(event);\n    };\n\n    handleProgress = event => {\n        const { target: video } = event;\n        if (!video) return;\n\n        const { fileId } = this.props;\n\n        const { buffered } = video;\n\n        this.setState({\n            buffered\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerProgress',\n            fileId,\n            buffered\n        });\n    };\n\n    handleWaiting = () => {\n        this.setState({ waiting: true });\n    };\n\n    handleClick = () => {\n        this.startStopPlayer();\n    };\n\n    startStopPlayer = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        const { waiting } = this.state;\n        if (waiting) {\n            this.setState({\n                play: !this.state.play,\n                hidden: false\n            });\n        } else {\n            if (video.paused) {\n                video.play()\n            } else {\n                video.pause();\n            }\n        }\n    };\n\n    handlePlayerMouseDown = event => {\n        const pip = document.getElementById('pip-player-wrapper');\n        if (pip) pip.focus();\n\n        this.mouseDownRoot = true;\n        event.preventDefault();\n\n        if (event.nativeEvent.which !== 1) return;\n\n        this.offsetX = event.nativeEvent.offsetX;\n        this.offsetY = event.nativeEvent.offsetY;\n\n        document.onmousemove = this.handleMouseMove;\n        document.onmouseup = this.handleMouseUp;\n\n        this.setState({\n            windowDragging: true\n        });\n    };\n\n    handleMouseUp = event => {\n        event.preventDefault();\n\n        document.onmousemove = null;\n        document.onmouseup = null;\n\n        this.setState({\n            windowDragging: false\n        });\n    };\n\n    normalizePosition(left, top, checkGlue = true) {\n        const player = document.getElementById('pip-player');\n        const playerWidth = player ? player.clientWidth : 300;\n        const playerHeight = player ? player.clientHeight : 300;\n\n        const { clientWidth: documentWidth } = document.documentElement;\n        const { clientHeight: documentHeight } = document.documentElement;\n\n        if (checkGlue && this.glueLeft) {\n            left = 0;\n        } else if (checkGlue && this.glueRight) {\n            left = documentWidth - playerWidth;\n        } else {\n            // left = clamp(left - PIP_PLAYER_BORDER_PRECISION, 0, left);\n            // left = clamp(left + PIP_PLAYER_BORDER_PRECISION, left, documentWidth - playerWidth);\n            left = left < PIP_PLAYER_BORDER_PRECISION ? 0 : left;\n            left = left > documentWidth - playerWidth - PIP_PLAYER_BORDER_PRECISION ? documentWidth - playerWidth : left;\n            left = clamp(left, 0, documentWidth - playerWidth);\n        }\n\n        if (checkGlue && this.glueTop) {\n            top = 0;\n        } else if (checkGlue && this.glueBottom) {\n            top = documentHeight - playerHeight;\n        } else {\n            top = top < PIP_PLAYER_BORDER_PRECISION ? 0 : top;\n            top = top > documentHeight - playerHeight - PIP_PLAYER_BORDER_PRECISION ? documentHeight - playerHeight : top;\n            top = clamp(top, 0, documentHeight - playerHeight);\n        }\n\n        this.glueLeft = left === 0;\n        this.glueRight = left === documentWidth - playerWidth;\n        this.glueTop = top === 0;\n        this.glueBottom = top === documentHeight - playerHeight;\n\n        PlayerStore.pipParams = { left, top };\n\n        return { left, top };\n    }\n\n    handleMouseMove = event => {\n        event.preventDefault();\n\n        const { left, top } = this.normalizePosition(event.clientX - this.offsetX, event.clientY - this.offsetY, false);\n\n        const player = document.getElementById('pip-player');\n        player.style.left = left + 'px';\n        player.style.top = top + 'px';\n    };\n\n    handleMouseDown = event => {\n        event.stopPropagation();\n\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            dragging: true,\n            draggingTime: video.currentTime\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { video } = this.props;\n        if (!video) return;\n\n        this.setState({\n            draggingTime: value * video.duration\n        });\n    };\n\n    handleChangeCommitted = () => {\n        const { dragging, draggingTime } = this.state;\n        if (!dragging) return;\n\n        this.setState({\n            dragging: false,\n            currentTime: draggingTime,\n            draggingTime: 0\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            if (Number.isFinite(draggingTime)) {\n                video.currentTime = draggingTime;\n            }\n        });\n    };\n\n    handlePanelEnter = () => {\n        this.panelEnter = true;\n    };\n\n    handlePanelLeave = () => {\n        this.panelEnter = false;\n    };\n\n    handleMouseOver = event => {\n        this.mouseDownRoot = false;\n        const { hidden } = this.state;\n\n        if (hidden) {\n            this.setState({\n                hidden: false\n            });\n        }\n\n        clearTimeout(this.mouseOverTimeout);\n        this.mouseOverTimeout = setTimeout(() => {\n            if (this.panelEnter) return;\n            if (!this.state.play) return;\n            if (!this.state.duration) return;\n\n            this.setState({\n                hidden: true\n            });\n        }, 1000);\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePictureInPicture',\n            videoInfo: null\n        });\n    };\n\n    handleVolumeSliderChange = (event, volume) => {\n        if (volume === this.state.volume) return;\n\n        this.setState({\n            volume\n        }, () => {\n            const { video } = this.props;\n            if (!video) return;\n\n            video.volume = volume;\n        });\n    };\n\n    handleVolumeSliderChangeCommitted = event => {\n        const { video } = this.props;\n        if (!video) return;\n\n        document.activeElement.blur();\n    };\n\n    handleMute = () => {\n        const { video } = this.props;\n        if (!video) return;\n\n        if (video.volume === 0) {\n            video.volume = this.prevVolume || 0.5;\n        } else {\n            this.prevVolume = video.volume;\n            video.volume = 0;\n        }\n    }\n\n    handleFullScreen = event => {\n        event && event.stopPropagation();\n\n        const root = document.getElementById('pip-player-wrapper');\n        if (!root) return;\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n        if (fullscreenElement) {\n            this.exitFullscreen();\n            return;\n        }\n\n        this.requestFullscreen(root);\n    };\n\n    requestFullscreen(element) {\n        const method = element.requestFullscreen || element.mozRequestFullScreen || element.webkitRequestFullscreen;\n\n        method && method.call(element);\n    }\n\n    exitFullscreen() {\n        const method = document.exitFullscreen || document.mozCancelFullScreen || document.webkitExitFullscreen;\n\n        method && method.call(document);\n    }\n\n    getCurrentTime = () => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        return PlayerStore.getCurrentTime(unique_id);\n    };\n\n    setCurrentTime = currentTime => {\n        const { fileId } = this.props;\n\n        const file = FileStore.get(fileId);\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    handlePanelDoubleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleClickRoot = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.startStopPlayer();\n    }\n\n    handleDoubleClick = event => {\n        event.stopPropagation();\n\n        const { mouseDownRoot } = this;\n        if (!mouseDownRoot) return;\n\n        this.handleFullScreen(event);\n    };\n\n    handleFocus = () => {\n        KeyboardManager.add(this.keyboardHandler);\n\n    };\n\n    handleBlur = () => {\n        KeyboardManager.remove(this.keyboardHandler);\n    };\n\n    render() {\n        const { fileId } = this.props;\n        const { windowDragging, dragging, draggingTime, currentTime, duration, play, waiting, buffered, hidden, volume, fullscreen } = this.state;\n\n        const time = dragging ? draggingTime : currentTime;\n        const value = duration > 0 ? time / duration : 0;\n        const bufferedTime = Player.getBufferedTime(time, buffered);\n        const bufferedValue = duration > 0 ? bufferedTime / duration : 0;\n\n        const timeString = getDurationString(Math.floor(time) || 0);\n        const durationString = getDurationString(Math.floor(duration) || 0);\n\n        const pictureInPictureEnabled = true;\n        const fullscreenEnabled = document.fullscreenEnabled || document.mozFullScreenEnabled || document.webkitFullscreenEnabled;\n\n        return (\n            <div\n                id='pip-player'\n                className={classNames('pip-player', { 'pip-player-dragging': windowDragging, 'pip-player-fullscreen': fullscreen })}\n                onMouseDown={this.handlePlayerMouseDown}\n                onMouseMove={this.handleMouseOver}\n                onClick={this.handleClickRoot}\n                onDoubleClick={this.handleDoubleClick}>\n                <div\n                    id='pip-player-wrapper'\n                    className={classNames({ 'pip-player-wrapper-hidden': hidden })}\n                    onFocus={this.handleFocus}\n                    onBlur={this.handleBlur}\n                    tabIndex={0}>\n                    <div id='pip-player-container'/>\n                    <Hint fileId={fileId}/>\n\n                    <button onMouseDown={e => e.stopPropagation()} className={classNames('player-button', 'player-button-close', { 'player-panel-hidden': hidden })} onClick={this.handleClose}>\n                        <CloseIcon/>\n                    </button>\n                    <div\n                        className={classNames('player-panel', { 'player-panel-hidden': hidden })}\n                        onClick={e => e.stopPropagation()}\n                        onMouseDown={e => e.stopPropagation()}\n                        onDoubleClick={this.handlePanelDoubleClick}\n                        onMouseEnter={this.handlePanelEnter}\n                        onMouseLeave={this.handlePanelLeave}>\n                        <div className='player-slider'>\n                            <span className='player-slider-buffer-track' style={{ width: bufferedValue * 100 + '%'}}/>\n                            <Slider\n                                value={value}\n                                min={0}\n                                max={1}\n                                step={0.001}\n                                classes={{\n                                    root: 'player-slider-root',\n                                    rail: 'player-slider-rail',\n                                    track: 'player-slider-track',\n                                    thumb: 'player-slider-thumb',\n                                    active: 'player-slider-active'\n                                }}\n                                onChange={this.handleChange}\n                                onChangeCommitted={this.handleChangeCommitted}\n                                onMouseDown={this.handleMouseDown}\n                            />\n                        </div>\n                        <div className='player-controls'>\n                            <button className='player-button' onClick={this.handleClick}>\n                                {play ? <PauseIcon/> : <PlayIcon/>}\n                            </button>\n                            <div className='player-time'>\n                                {`${timeString} / ${durationString}`}\n                            </div>\n                            <div className='player-volume'>\n                                <Slider\n                                    value={volume}\n                                    min={0}\n                                    max={1}\n                                    step={0.001}\n                                    classes={{\n                                        root: 'player-volume-root',\n                                        rail: 'player-volume-rail',\n                                        track: 'player-volume-track',\n                                        thumb: 'player-volume-thumb',\n                                        active: 'player-volume-active'\n                                    }}\n                                    onChange={this.handleVolumeSliderChange}\n                                    onChangeCommitted={this.handleVolumeSliderChangeCommitted}\n                                />\n                            </div>\n                            <button className='player-button' onClick={this.handleMute}>\n                                {Player.getVolumeIcon(volume)}\n                            </button>\n                            <button className='player-button' disabled={!fullscreenEnabled} onClick={this.handleFullScreen}>\n                                <FullScreen/>\n                            </button>\n                            {/*<button className='player-button' disabled={!pictureInPictureEnabled} onClick={this.handlePictureInPicture}>*/}\n                            {/*    <PictureInPictureIcon/>*/}\n                            {/*</button>*/}\n                        </div>\n                    </div>\n                    <Progress waiting={waiting}/>\n                </div>\n            </div>\n        )\n    }\n}\n\nPipPlayer.propTypes = {\n\n};\n\nexport default PipPlayer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M17,2 C19.209139,2 21,3.790861 21,6 L21,20.2543508 C21,21.3589203 20.1045695,22.2543871 19,22.2543871 C18.5225775,22.2543871 18.0609035,22.0835665 17.6984173,21.772864 L12,16.8885064 L6.30158275,21.772864 C5.46293106,22.4917083 4.2003311,22.3945852 3.4814868,21.5559335 C3.17078432,21.1934473 3,20.7317733 3,20.2543508 L3,6 C3,3.790861 4.790861,2 7,2 L17,2 Z M17,4 L7,4 C5.8954305,4 5,4.8954305 5,6 L5,20.2543508 L10.6984173,15.3699931 C11.4473967,14.7280108 12.5526033,14.7280108 13.3015827,15.3699931 L19,20.2543508 L19,6 C19,4.8954305 18.1045695,4 17,4 Z' />,\n    'Saved'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { isUserOnline } from '../../Utils/User';\nimport { getChatUserId } from '../../Utils/Chat';\nimport UserStore from './../../Stores/UserStore';\nimport './OnlineStatus.css';\n\nclass OnlineStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const userId = getChatUserId(props.chatId);\n        const user = UserStore.get(userId);\n\n        this.state = {\n            userId,\n            online: isUserOnline(user)\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.state;\n        const { user_id } = update;\n        if (user_id !== userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        this.setState({ online: isUserOnline(user) });\n    };\n\n    render() {\n        const { size, borderSize } = this.props;\n        const { online } = this.state;\n        if (!online) return null;\n\n        return (\n            <div className='online-status' style={{ width: size, height: size }}>\n                <div className='online-status-icon' style={{ padding: borderSize }}>\n                    <div className='online-status-indicator' />\n                </div>\n            </div>\n        );\n    }\n}\n\nOnlineStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    borderSize: PropTypes.number\n};\n\nOnlineStatus.defaultProps = {\n    size: 14,\n    borderSize: 2\n};\n\nexport default OnlineStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport BookmarkBorderIcon from '../../Assets/Icons/Saved';\nimport DeletedAccountIcon from '../../Assets/Icons/DeletedAccount';\nimport OnlineStatus from './OnlineStatus';\nimport { getChatLetters, isMeChat, isPrivateChat, isDeletedPrivateChat, getChatTypeId } from '../../Utils/Chat';\nimport { getSrc, loadChatContent } from '../../Utils/File';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './ChatTile.css';\n\nclass ChatTile extends Component {\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, t } = props;\n\n        if (state.prevChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            const file = chat && chat.photo? chat.photo.small : null;\n\n            const fileId = file ? file.id : -1;\n            const src = getSrc(file);\n            const loaded = state.src === src && src !== '' || fileId === -1;\n            const letters = getChatLetters(chatId, t);\n\n            return {\n                prevChatId: chatId,\n\n                fileId,\n                src,\n                loaded,\n                letters\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { fileId, src, loaded, letters } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.fileId !== fileId) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.loaded !== loaded) {\n            return true;\n        }\n\n        if (nextState.letters !== letters) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBlob = update => {\n        const { chatId } = this.props;\n        const { fileId, loaded } = this.state;\n\n        if (chatId !== update.chatId) return;\n        if (fileId !== update.fileId) return;\n\n        if (!loaded) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return null;\n\n            const { photo } = chat;\n            const src = getSrc(photo ? photo.small : null);\n\n            this.setState({\n                src\n            });\n        }\n    };\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n\n        const chat = ChatStore.get(chatId);\n        const file = chat && chat.photo? chat.photo.small : null;\n\n        const fileId = file ? file.id : -1;\n        const src = getSrc(file);\n        const loaded = this.state.src === src && src !== '' || fileId === -1;\n\n        this.setState({\n            fileId,\n            src,\n            loaded\n        });\n\n        if (photo) {\n            const store = FileStore.getStore();\n            loadChatContent(store, chatId);\n        }\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId, t } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        const letters = getChatLetters(chatId, t);\n\n        this.setState({ letters });\n    };\n\n    handleSelect = event => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        event.stopPropagation();\n        onSelect(chatId);\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    render() {\n        const { chatId, showOnline, showSavedMessages, onSelect, small, dialog, big, size } = this.props;\n        const { src, loaded, letters } = this.state;\n\n        let style = null;\n        if (size) {\n            style = {\n                width: size,\n                height: size\n            };\n        }\n\n        if (isDeletedPrivateChat(chatId)) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_0', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <DeletedAccountIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        if (isMeChat(chatId) && showSavedMessages) {\n            return (\n                <div\n                    className={classNames(\n                        'chat-tile',\n                        { 'tile-small': small },\n                        { 'tile-dialog': dialog },\n                        { 'tile-big': big }\n                    )}\n                    style={style}\n                    onClick={this.handleSelect}>\n                    <div className={classNames('tile-photo', 'tile_color_6', { pointer: onSelect })}>\n                        <div className='tile-saved-messages'>\n                            <BookmarkBorderIcon fontSize={big ? 'large' : 'default'} />\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const tileLoaded = src && loaded;\n        const typeId = getChatTypeId(chatId);\n        const tileColor = `tile_color_${(Math.abs(typeId) % 7) + 1}`;\n\n        return (\n            <div\n                className={classNames(\n                    'chat-tile',\n                    { [tileColor]: !tileLoaded },\n                    { pointer: onSelect },\n                    { 'tile-dialog': dialog },\n                    { 'tile-small': small },\n                    { 'tile-big': big }\n                )}\n                style={style}\n                onClick={this.handleSelect}>\n                {!tileLoaded && (\n                    <div className='tile-photo'>\n                        <span className='tile-text'>{letters}</span>\n                    </div>\n                )}\n                {src && <img className='tile-photo' src={src} onLoad={this.handleLoad} draggable={false} alt='' />}\n                {showOnline && isPrivateChat(chatId) && <OnlineStatus chatId={chatId} />}\n            </div>\n        );\n    }\n}\n\nChatTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool,\n    showOnline: PropTypes.bool,\n    size: PropTypes.number\n};\n\nChatTile.defaultProps = {\n    showSavedMessages: true,\n    showOnline: false\n};\n\nexport default withTranslation()(ChatTile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { chatId, selected, onSelect, t } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true, t);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className='forward-target-chat-selection' />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? 'forward-target-chat-mark-selected' : 'forward-target-chat-mark-unselected'\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport async function copy(text) {\n    try {\n        if (navigator.clipboard) {\n            await navigator.clipboard.writeText(text);\n            return true;\n        }\n    } catch (e) {\n        console.error('[clipboard] unable to copy with clipboard.writeText', e);\n    }\n\n    return copyOld(text);\n}\n\nfunction copyOld(text) {\n    let element;\n    let successful;\n    try {\n        element = document.createElement('textarea');\n        element.contentEditable = true;\n        element.readOnly = true;\n        element.value = text;\n        element.style.all = 'unset';\n        element.style.position = 'fixed';\n        element.style.top = 0;\n        element.style.clip = 'rect(0, 0, 0, 0)';\n        element.style.whiteSpace = 'pre';\n        element.style.webkitUserSelect = 'text';\n        element.style.MozUserSelect = 'text';\n        element.style.msUserSelect = 'text';\n        element.style.userSelect = 'text';\n\n        document.body.appendChild(element);\n\n        element.focus();\n        element.select();\n\n        successful = document.execCommand('copy');\n        if (!successful) {\n            throw new Error();\n        }\n        return true;\n    } catch {\n        console.error('[clipboard] unable to copy with document.execCommand', successful);\n    } finally {\n        if (element) {\n            document.body.removeChild(element);\n        }\n    }\n\n    return false;\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { copy } from '../../Utils/Text';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { clearSelection, forward } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        forward(null);\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n        clearSelection();\n\n        const { chatId, messageIds, inputMessageContent } = this.props;\n        if (!chatId && !messageIds && !inputMessageContent) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (inputMessageContent) {\n                if (text) {\n                    if ('caption' in inputMessageContent) {\n                        inputMessageContent.caption = {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        };\n                    } else {\n                        TdLibController.send({\n                            '@type': 'sendMessage',\n                            chat_id: targetChatId,\n                            reply_to_message_id: 0,\n                            disable_notifications: false,\n                            from_background: false,\n                            reply_markup: null,\n                            input_message_content: {\n                                '@type': 'inputMessageText',\n                                text: {\n                                    '@type': 'formattedText',\n                                    text,\n                                    entities: null\n                                },\n                                disable_web_page_preview: false,\n                                clear_draft: false\n                            }\n                        });\n                    }\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: inputMessageContent\n                });\n\n                return;\n            }\n\n            const size = this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text,\n                            entities: null\n                        },\n                        disable_web_page_preview: false,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        // console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = element => {\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = async () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const element = this.searchRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n\n        const innerText = this.getInnerText(element).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [], globalSearchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults });\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatsOnServer',\n            query: innerText,\n            limit: 100\n        });\n\n        if (this.state.searchText !== innerText) {\n            return;\n        }\n\n        this.setState({\n            globalSearchResults: result.chat_ids\n        });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const element = this.messageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatIds,\n            searchText,\n            searchResults,\n            globalSearchResults,\n            savedMessages,\n            publicMessageLink\n        } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id && canSendMessages(x)))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const searchResultsMap = new Map((searchResults || []).map(x => [x, x]));\n        const filteredResults = (globalSearchResults || []).filter(\n            x => x !== savedMessages.id && canSendMessages(x) && !searchResultsMap.has(x)\n        );\n\n        const foundChats = (searchResults || [])\n            .concat(filteredResults)\n            .map(x => (\n                <ForwardTargetChat\n                    key={x}\n                    chatId={x}\n                    selected={this.targetChats.has(x)}\n                    onSelect={() => this.handleChangeSelection(x)}\n                />\n            ));\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className='forward-dialog'>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className='forward-dialog-content'>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && <div className='forward-dialog-search-list'>{foundChats}</div>}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    inputMessageContent: PropTypes.object\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.1715729,2 C12.9672223,2 13.7302841,2.31607052 14.2928932,2.87867966 L21.1213203,9.70710678 C21.6839295,10.2697159 22,11.0327777 22,11.8284271 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L12.1715729,2 Z M11,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,19 C4,19.5522847 4.44771525,20 5,20 L19,20 C19.5522847,20 20,19.5522847 20,19 L20,13 L14,13 C12.4023191,13 11.0963391,11.75108 11.0050927,10.1762728 L11,10 L11,4 Z M19.586,11 L13,4.414 L13,10 C13,10.5128358 13.3860402,10.9355072 13.8833789,10.9932723 L14,11 L19.586,11 Z' />,\n    'Document2'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,2 C20.6568542,2 22,3.34314575 22,5 L22,19 C22,20.6568542 20.6568542,22 19,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,5 C2,3.34314575 3.34314575,2 5,2 L19,2 Z M8.95903938,14.4653367 L8.89694708,14.4202095 C8.68789701,14.291568 8.42133316,14.3352159 8.26303498,14.5116789 L8.2090719,14.5840012 L4.88033327,19.9929138 L4.93969424,19.9982115 L4.93969424,19.9982115 L12.446,20 L9.05890452,14.5810435 C9.0316623,14.5374559 8.99794603,14.4984621 8.95903938,14.4653367 L8.89694708,14.4202095 L8.95903938,14.4653367 Z M15.6580762,12.1926572 C15.4476303,12.0663122 15.1815603,12.1128758 15.0252035,12.2910614 L14.9720355,12.3639701 L12.551,16.396 L14.803,20 L19,20 C19.5410622,20 19.9817615,19.5702952 19.9994483,19.0335352 L15.8247114,12.3563345 C15.7828678,12.2893847 15.7257647,12.2332952 15.6580762,12.1926572 Z M19,4 L5,4 C4.44771525,4 4,4.44771525 4,5 L4,17.606 L6.50573804,13.5358344 C7.19919591,12.4089238 8.64230264,12.0252274 9.79631538,12.6320827 L9.94511393,12.7168756 C10.2187146,12.885239 10.4567799,13.1044297 10.6467737,13.3619985 L10.7549011,13.5210456 L11.361,14.492 L13.2573282,11.3345145 C13.9384069,10.2000794 15.3772263,9.80060652 16.5378139,10.3947912 L16.6875318,10.4779499 C16.9695672,10.6472749 17.2148477,10.8702509 17.409849,11.1335934 L17.5207081,11.2963367 L20,15.264 L20,5 C20,4.44771525 19.5522847,4 19,4 Z' />,\n    'SharedMedia'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M23,12L20.56,9.22L20.9,5.54L17.29,4.72L15.4,1.54L12,3L8.6,1.54L6.71,4.72L3.1,5.53L3.44,9.21L1,12L3.44,14.78L3.1,18.47L6.71,19.29L8.6,22.47L12,21L15.4,22.46L17.29,19.28L20.9,18.46L20.56,14.78L23,12M10,17L6,13L7.41,11.59L10,14.17L16.59,7.58L18,9L10,17Z' />,\n    'Verified'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CheckDecagramIcon from '../../Assets/Icons/Verified';\nimport { getChatTitle, isChatVerified } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogTitle.css';\n\nclass DialogTitle extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n    }\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, chatId, showSavedMessages } = this.props;\n\n        const isVerified = isChatVerified(chatId);\n        const title = getChatTitle(chatId, showSavedMessages, t);\n\n        return (\n            <div className='dialog-title'>\n                <span className='dialog-title-span'>{title}</span>\n                {isVerified && <CheckDecagramIcon className='dialog-title-icon' />}\n            </div>\n        );\n    }\n}\n\nDialogTitle.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool\n};\n\nDialogTitle.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(DialogTitle);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    updateSubtitle = chatId => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (\n            type &&\n            (type['@type'] === 'chatTypePrivate' || type['@type'] === 'chatTypeSecret') &&\n            type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup_id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeBasicGroup' && type.basic_group_id === update.basic_group.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { type } = chat;\n        if (!type) return;\n\n        if (type && type['@type'] === 'chatTypeSupergroup' && type.supergroup_id === update.supergroup.id) {\n            this.updateSubtitle(chatId);\n        }\n    };\n\n    render() {\n        const { subtitle: externalSubtitle } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div className={classNames('dialog-status', { 'dialog-status-accent': isAccent })}>\n                {externalSubtitle ? externalSubtitle + ', ' : null}\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default DialogStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport { isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './Chat.css';\n\nclass Chat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            chat: ChatStore.get(chatId)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, subtitle, onTileSelect, showStatus, showSavedMessages, big, showTitle } = this.props;\n\n        const isSavedMessages = isMeChat(chatId);\n\n        return (\n            <div className={classNames('chat', { 'chat-big': big })} onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile big={big} chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    {showTitle && (\n                        <div className='chat-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                            </div>\n                            {showStatus && (!isSavedMessages || !showSavedMessages) && (\n                                <div className='tile-second-row'>\n                                    <DialogStatus chatId={chatId} subtitle={subtitle} />\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    subtitle: PropTypes.string,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    showTitle: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChat.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true,\n    showTitle: true\n};\n\nexport default Chat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.29289322,11.2928932 L11.2928932,4.29289322 C11.6834175,3.90236893 12.3165825,3.90236893 12.7071068,4.29289322 C13.0675907,4.65337718 13.0953203,5.22060824 12.7902954,5.61289944 L12.7071068,5.70710678 L7.414,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L7.414,13 L12.7071068,18.2928932 C13.0675907,18.6533772 13.0953203,19.2206082 12.7902954,19.6128994 L12.7071068,19.7071068 C12.3466228,20.0675907 11.7793918,20.0953203 11.3871006,19.7902954 L11.2928932,19.7071068 L4.29289322,12.7071068 C3.93240926,12.3466228 3.90467972,11.7793918 4.20970461,11.3871006 L4.29289322,11.2928932 L11.2928932,4.29289322 L4.29289322,11.2928932 Z' />,\n    'Back'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport './ChatDetailsHeader.css';\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className='header-right-button' onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { isChatMuted } from '../../Utils/Chat';\nimport { debounce } from '../../Utils/Common';\nimport { toggleChatNotificationSettings } from '../../Actions/Chat';\nimport { NOTIFICATION_DEBOUNCE_DELAY_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport NotificationStore from '../../Stores/NotificationStore';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = props;\n\n        this.state = {\n            prevChatId: chatId,\n            isMuted: isChatMuted(chatId)\n        };\n\n        this.debouncedSetChatNotificationSettings = debounce(\n            this.setChatNotificationSettings,\n            NOTIFICATION_DEBOUNCE_DELAY_MS\n        );\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                isMuted: isChatMuted(chatId)\n            };\n        }\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatNotificationSettings', this.onUpdateChatNotificationSettings);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onUpdateChatNotificationSettings = update => {\n        const { chat_id } = update;\n        const { chatId } = this.props;\n\n        if (!chat_id) return;\n        if (chat_id !== chatId) return;\n\n        this.setState({ isMuted: isChatMuted(chatId) });\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.setState({ isMuted: isChatMuted(chatId) });\n                }\n                break;\n            }\n        }\n    };\n\n    handleSetChatNotifications = () => {\n        this.setState({ isMuted: !this.state.isMuted });\n        this.debouncedSetChatNotificationSettings();\n    };\n\n    setChatNotificationSettings = () => {\n        const { chatId } = this.props;\n        const { isMuted } = this.state;\n\n        toggleChatNotificationSettings(chatId, isMuted);\n    };\n}\n\nexport default Notifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Notifications from '../ColumnMiddle/Notifications';\n\nclass NotificationsListItem extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className='list-item-rounded' onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>\n                    <Checkbox\n                        edge='start'\n                        checked={!isMuted}\n                        color='primary'\n                        tabIndex={-1}\n                        disableRipple\n                        onChange={this.handleSetChatNotifications}\n                    />\n                </ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                    secondary={!isMuted ? t('PopupEnabled') : t('PopupDisabled')}\n                />\n            </ListItem>\n        );\n    }\n}\n\nexport default withTranslation()(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Animator from '../../../Utils/Animatior';\nimport { clamp, throttle } from '../../../Utils/Common';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaTabs.css';\n\nclass SharedMediaTabs extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        this.setSelection();\n\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const { chatId } = this.props;\n\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaTab',\n                chatId,\n                index: selectedIndex\n            });\n        }\n\n        this.setState({\n            selectedIndex,\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    }\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chatId, media } = update;\n        if (chatId !== currentChatId) return;\n\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onClientUpdateMediaTab = update => {\n        const { chatId, index } = update;\n        if (chatId !== this.props.chatId) return;\n\n        this.setState({\n            selectedIndex: index\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { selectedIndex, isSmallWidth } = this.state;\n        if (selectedIndex === -1) return;\n\n        const padding = 3;\n\n        const scroll = this.filtersRef.current;\n\n        let item = null;\n        let left = 0;\n        const photoAndVideoFilter = this.filterRef.get('photoAndVideo');\n        if (selectedIndex === 1 && photoAndVideoFilter) {\n            item = photoAndVideoFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const documentFilter = this.filterRef.get('document');\n        if (selectedIndex === 2 && documentFilter) {\n            item = documentFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const audioFilter = this.filterRef.get('audio');\n        if (selectedIndex === 3 && audioFilter) {\n            item = audioFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const urlFilter = this.filterRef.get('url');\n        if (selectedIndex === 4 && urlFilter) {\n            item = urlFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        const voiceNoteFilter = this.filterRef.get('voiceNote');\n        if (selectedIndex === 5 && voiceNoteFilter) {\n            item = voiceNoteFilter.firstChild;\n            left = item.offsetLeft;\n        }\n\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n        const { chatId, onClick } = this.props;\n\n        onClick && onClick(event);\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTab',\n            chatId,\n            index: id\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { selectedIndex, photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const tabsCount =\n            (photoAndVideo.length > 0 ? 1 : 0) +\n            (document.length > 0 ? 1 : 0) +\n            (audio.length > 0 ? 1 : 0) +\n            (url.length > 0 ? 1 : 0) +\n            (voiceNote.length > 0 ? 1 : 0);\n\n        const hasSharedMedia = photoAndVideo.length > 0\n            || document.length > 0\n            || audio.length > 0\n            || url.length > 0\n            || voiceNote.length > 0;\n\n        if (!hasSharedMedia) {\n            return null;\n        }\n\n        this.filterRef = new Map();\n        return (\n            <div className='shared-media-tabs'>\n                <div className='shared-media-tabs-bottom-border'/>\n                <div ref={this.filtersRef} className={classNames('filters', {'shared-media-tabs-container': tabsCount > 1})}>\n                    {photoAndVideo.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('photoAndVideo', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 1})}\n                            onMouseDown={e => this.handleFilterClick(e, 1)}>\n                            <span>{t('SharedMediaTab2')}</span>\n                        </div>\n                    )}\n                    {document.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('document', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 2})}\n                            onMouseDown={e => this.handleFilterClick(e, 2)}>\n                            <span>{t('SharedFilesTab2')}</span>\n                        </div>\n                    )}\n                    {audio.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('audio', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 3})}\n                            onMouseDown={e => this.handleFilterClick(e, 3)}>\n                            <span>{t('SharedMusicTab2')}</span>\n                        </div>\n                    )}\n                    {url.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('url', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 4})}\n                            onMouseDown={e => this.handleFilterClick(e, 4)}>\n                            <span>{t('SharedLinksTab2')}</span>\n                        </div>\n                    )}\n                    {voiceNote.length > 0 && (\n                        <div\n                            ref={r => this.filterRef.set('voiceNote', r)}\n                            className={classNames('filter', {'shared-media-tab': tabsCount > 1}, { 'item-selected': selectedIndex === 5})}\n                            onMouseDown={e => this.handleFilterClick(e, 5)}>\n                            <span>{t('SharedVoiceTab2')}</span>\n                        </div>\n                    )}\n                    <div ref={this.filterSelectionRef} className='filter-selection'/>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nSharedMediaTabs.propTypes = {\n    chatId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaTabs);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,6.5 C18.5522847,6.5 19,6.94771525 19,7.5 L19,18 C19,19.6568542 17.6568542,21 16,21 L8,21 C6.34314575,21 5,19.6568542 5,18 L5,7.5 C5,6.94771525 5.44771525,6.5 6,6.5 L18,6.5 Z M17,8.5 L7,8.5 L7,18 C7,18.5522847 7.44771525,19 8,19 L16,19 C16.5522847,19 17,18.5522847 17,18 L17,8.5 Z M10,2 L14,2 C14.2210137,2 14.434484,2.07316447 14.6080295,2.20608063 L14.7071068,2.29289322 L15.415,3 L19,3 C19.5128358,3 19.9355072,3.38604019 19.9932723,3.88337887 L20,4 C20,4.51283584 19.6139598,4.93550716 19.1166211,4.99327227 L19,5 L5,5 C4.44771525,5 4,4.55228475 4,4 C4,3.48716416 4.38604019,3.06449284 4.88337887,3.00672773 L5,3 L8.584,3 L9.29289322,2.29289322 C9.44917353,2.1366129 9.65185492,2.03740171 9.86855602,2.00867243 L10,2 L14,2 L10,2 Z' />,\n    'Delete'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.8025478,4.79529691 C11.8025478,3.93005081 12.5039683,3.22863025 13.3692144,3.22863025 C13.7633775,3.22863025 14.1430567,3.37720768 14.4325315,3.64473128 L22.2284036,10.8494344 C22.8638434,11.4366882 22.9029059,12.4278772 22.2883553,13.0917108 L22.2284036,13.1505656 L14.4325315,20.3552687 C13.7970916,20.9425225 12.8059026,20.90346 12.2186488,20.2680201 C11.9511252,19.9785454 11.8025478,19.5988662 11.8025478,19.2047031 L11.8025478,16.4249931 C8.21922017,16.6092505 5.79479016,17.8111183 4.43312712,19.9909578 L4.29164834,20.2262356 C3.95336498,20.8131459 3.20334729,21.0146979 2.61643694,20.6764146 C2.24185558,20.4605134 2.00860424,20.0633528 2.00249611,19.6310483 C1.8981509,12.2459874 5.13388305,8.13673748 11.4825227,7.6491321 L11.8025478,7.62777147 L11.8025478,4.79529691 Z M13.8025478,5.78581808 L13.8025478,8.6 C13.8025478,9.15228475 13.3548325,9.6 12.8025478,9.6 C7.49232524,9.6 4.65375859,12.0566924 4.1006582,17.2535243 C6.09650127,15.345115 9.01935671,14.4 12.8025478,14.4 C13.3548325,14.4 13.8025478,14.8477153 13.8025478,15.4 L13.8025478,18.2142808 L20.5271714,12.0005066 L13.8025478,5.78581808 Z' />,\n    'Share'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ChatBubbleOutlineOutlinedIcon from '@material-ui/icons/ChatBubbleOutlineOutlined';\nimport DeleteIcon from '../../../Assets/Icons/Delete';\nimport ShareIcon from '../../../Assets/Icons/Share';\nimport { deleteMessages, forwardMessages, openChat } from '../../../Actions/Client';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './ContextMenu.css';\n\nclass ContextMenu extends React.Component {\n    handleOpenMessage = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        openChat(chatId, messageId);\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n\n        deleteMessages(chatId, [messageId]);\n    };\n\n    render() {\n        const { t, chatId, messageId, open, onClose, anchorPosition, showOpenMessage } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { can_be_forwarded, can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n\n        return (\n            <Popover\n                open={open}\n                onClose={onClose}\n                anchorReference='anchorPosition'\n                anchorPosition={anchorPosition}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}\n                onClick={e => e.stopPropagation()}>\n                <MenuList>\n                    {showOpenMessage && (\n                        <MenuItem onClick={this.handleOpenMessage}>\n                            <ListItemIcon>\n                                <ChatBubbleOutlineOutlinedIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('GoToMessage')} />\n                        </MenuItem>\n                    )}\n                    {can_be_forwarded && (\n                        <MenuItem onClick={this.handleForward}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Forward')} />\n                        </MenuItem>\n                    )}\n                    {(can_be_deleted_only_for_self || can_be_deleted_for_all_users) && (\n                        <MenuItem color='secondary' onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    )}\n                </MenuList>\n            </Popover>\n        );\n    }\n\n}\n\nContextMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object.isRequired,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    showOpenMessage: PropTypes.bool\n};\n\nexport default withTranslation()(ContextMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getSize } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedPhoto.css';\n\nclass SharedPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { photo, size, thumbnailSize } = props;\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0,\n\n            photoSize: getSize(photo.sizes, size),\n            thumbSize: getSize(photo.sizes, thumbnailSize),\n            minithumbnail: photo.minithumbnail\n        };\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { photoSize, thumbSize } = this.state;\n        const { fileId } = update;\n\n        if (photoSize && photoSize.photo && photoSize.photo.id === fileId) {\n            this.forceUpdate();\n        } else if (thumbSize && thumbSize.photo && thumbSize.photo.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, showOpenMessage, style } = this.props;\n        const { minithumbnail, thumbSize, photoSize, contextMenu, left, top } = this.state;\n\n        if (!photoSize) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbSize ? thumbSize.photo : null);\n        const src = getSrc(photoSize.photo);\n        const isBlurred = miniSrc || isBlurredThumbnail(thumbSize);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover' }}>\n                        {src !== thumbSrc && (\n                            <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                        )}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedPhoto.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedPhoto.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedPhoto;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ContextMenu from './ContextMenu';\nimport { openMedia } from '../../../Utils/Message';\nimport { getMedia } from '../../../Utils/Media';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedDocument.css';\nimport { withTranslation } from 'react-i18next';\n\nclass SharedDocument extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, showOpenMessage, i18n } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        return (\n            <>\n                <div className='shared-document' onContextMenu={this.handleOpenContextMenu}>\n                    {getMedia(message, () => openMedia(chatId, messageId, true), { date: dateString })}\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedDocument.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired\n};\n\nexport default withTranslation()(SharedDocument);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport Photo from '../../Message/Media/Photo';\nimport SafeLink from '../../Additional/SafeLink';\nimport { getFirstLetter } from '../../../Utils/Common';\nimport { openMedia, substring } from '../../../Utils/Message';\nimport punycode from '../../../Utils/Punycode';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedLink.css';\n\nclass SharedLink extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    isValidEntityType(type) {\n        if (!type) return false;\n\n        return (\n            type.type['@type'] === 'textEntityTypeUrl' ||\n            type.type['@type'] === 'textEntityTypeTextUrl' ||\n            type.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getTitleFromUrl(url) {\n        try {\n            url = url.startsWith('http') ? url : 'http://' + url;\n            const decodedUrl = decodeURI(url);\n\n            const hostname = new URL(decodedUrl).hostname.split('.');\n            const domain = hostname.length >= 2 ? hostname[hostname.length - 2] : new URL(decodedUrl).hostname;\n\n            return punycode.ToUnicode(domain);\n        } catch (error) {\n            console.error('url: ' + url + '\\n' + error);\n        }\n\n        return null;\n    }\n\n    render() {\n        const { chatId, messageId, webPage, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = null;\n        let { display_url, description, photo, title, url } = webPage || {\n            title: '',\n            description: '',\n            photo: null,\n            url: ''\n        };\n        if (webPage) {\n            title = title || this.getTitleFromUrl(url);\n\n            content = (\n                <SafeLink className='shared-link-url' url={url}>\n                    {display_url}\n                </SafeLink>\n            );\n        } else {\n            const { text } = message.content;\n            if (text) {\n                const { entities } = text;\n                if (entities && entities.length > 0) {\n                    content = entities.filter(this.isValidEntityType).map(x => {\n                        const entityText = substring(text.text, x.offset, x.offset + x.length);\n                        let url = entityText;\n                        let mail = false;\n\n                        switch (x.type['@type']) {\n                            case 'textEntityTypeTextUrl': {\n                                const { url: typeUrl } = x.type;\n                                if (typeUrl) {\n                                    url = typeUrl;\n                                }\n                                break;\n                            }\n                            case 'textEntityTypeUrl': {\n                                break;\n                            }\n                            case 'textEntityTypeEmailAddress':\n                                mail = true;\n                                break;\n                        }\n\n                        title = title || this.getTitleFromUrl(url) || ' ';\n\n                        return (\n                            <SafeLink className='shared-link-url' url={url} mail={mail}>\n                                {entityText}\n                            </SafeLink>\n                        );\n                    });\n                }\n            }\n        }\n\n        const tileColor = `tile_color_${(Math.abs(title.charCodeAt(0)) % 7) + 1}`;\n\n        return (\n            <>\n                <div className='shared-link' onContextMenu={this.handleOpenContextMenu}>\n                    <div className={classNames('shared-link-photo', tileColor)}>\n                        {getFirstLetter(title)}\n                        {photo && (\n                            <Photo\n                                displaySize={90}\n                                chatId={chatId}\n                                messageId={messageId}\n                                photo={photo}\n                                openMedia={openMedia}\n                                showProgress={false}\n                                style={{ width: 48, height: 48, position: 'absolute', top: 0, left: 0 }}\n                            />\n                        )}\n                    </div>\n                    <div className='shared-link-content'>\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description.text}</div>}\n                        {content}\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedLink.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    webPage: PropTypes.object,\n\n    openMedia: PropTypes.func\n};\n\nexport default SharedLink;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AudioAction from '../../Message/Media/AudioAction';\nimport ContextMenu from './ContextMenu';\nimport MediaStatus from '../../Message/Media/MediaStatus';\nimport MessageAuthor from '../../Message/MessageAuthor';\nimport VoiceNoteTile from '../VoiceNoteTile';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './SharedVoiceNote.css';\n\nclass SharedVoiceNote extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, i18n, messageId, voiceNote, openMedia, showOpenMessage } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        if (!voiceNote) return null;\n\n        const { date, sender_user_id } = message;\n        const dateString = new Date(date * 1000).toLocaleDateString([i18n.language], {\n            day: 'numeric',\n            month: 'short',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: false\n        });\n\n        const { duration, voice: file } = voiceNote;\n\n        return (\n            <>\n                <div className='shared-voice-note' onContextMenu={this.handleOpenContextMenu}>\n                    <VoiceNoteTile chatId={chatId} messageId={messageId} file={file} openMedia={openMedia} />\n                    <div className='voice-note-content'>\n                        <div className='document-title'><MessageAuthor chatId={chatId} messageId={messageId} userId={sender_user_id} /></div>\n                        <div className='voice-note-meta'>\n                            <AudioAction\n                                chatId={chatId}\n                                messageId={messageId}\n                                duration={duration}\n                                file={file}\n                                date={dateString}\n                            />\n                            <MediaStatus chatId={chatId} messageId={messageId} icon={'\\u00A0•'} />\n                        </div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n\n        );\n    }\n}\n\nSharedVoiceNote.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    voiceNote: PropTypes.object.isRequired,\n\n    openMedia: PropTypes.func\n};\n\nexport default withTranslation()(SharedVoiceNote);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ContextMenu from './ContextMenu';\nimport { getSrc } from '../../../Utils/File';\nimport { getDurationString } from '../../../Utils/Common';\nimport { isBlurredThumbnail } from '../../../Utils/Media';\nimport { PHOTO_SIZE, PHOTO_THUMBNAIL_SIZE, THUMBNAIL_BLURRED_SIZE_90 } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport './SharedVideo.css';\n\nclass SharedVideo extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateVideoThumbnailBlob);\n    }\n\n    onClientUpdateVideoThumbnailBlob = update => {\n        const { thumbnail } = this.props.video;\n        const { fileId } = update;\n\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (file && file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        const { chatId, messageId, openMedia, style, showOpenMessage } = this.props;\n        const { minithumbnail, thumbnail, duration } = this.props.video;\n        const { contextMenu, left, top } = this.state;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const isBlurred = thumbSrc ? isBlurredThumbnail(thumbnail) : Boolean(miniSrc);\n\n        return (\n            <>\n                <div className='shared-photo' style={style} onClick={openMedia} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='shared-video-wrapper'>\n                        <div\n                            className={classNames('shared-video-content', {\n                                'media-blurred': isBlurred,\n                                'media-mini-blurred': !thumbSrc && isBlurred\n                            })}\n                            style={{ backgroundImage: `url(${thumbSrc || miniSrc})` }}\n                        />\n                        <div className='shared-video-meta'>{getDurationString(duration)}</div>\n                    </div>\n                </div>\n                <ContextMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    showOpenMessage={showOpenMessage}\n                    onClose={this.handleCloseContextMenu}\n                />\n            </>\n        );\n    }\n}\n\nSharedVideo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    video: PropTypes.object.isRequired,\n    showOpenMessage: PropTypes.bool.isRequired,\n    openMedia: PropTypes.func,\n\n    size: PropTypes.number,\n    thumbnailSize: PropTypes.number,\n    style: PropTypes.object\n};\n\nSharedVideo.defaultProps = {\n    size: PHOTO_SIZE,\n    thumbnailSize: PHOTO_THUMBNAIL_SIZE\n};\n\nexport default SharedVideo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { throttle } from '../../../Utils/Common';\nimport './SharedMediaContent.css';\nimport MessageStore from '../../../Stores/MessageStore';\nimport { openMedia } from '../../../Utils/Message';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport FileStore from '../../../Stores/FileStore';\nimport { loadMessageContents } from '../../../Utils/File';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport { SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\n\nclass SharedMediaContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        this.state = { }\n\n        // this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    static isValidMessage(selectedIndex, message) {\n        if (!message) return false;\n\n        return SharedMediaContent.isValidContent(selectedIndex, message.content);\n    };\n\n    static isValidContent(selectedIndex, content) {\n        switch (selectedIndex) {\n            case 1: {\n                return SharedMediaContent.isValidPhotoAndVideoContent(content);\n            }\n            case 2: {\n                return SharedMediaContent.isValidDocumentContent(content);\n            }\n            case 3: {\n                return SharedMediaContent.isValidAudioContent(content);\n            }\n            case 4: {\n                return SharedMediaContent.isValidUrlContent(content);\n            }\n            case 5: {\n                return SharedMediaContent.isValidVoiceNoteContent(content);\n            }\n        }\n\n        return false;\n    }\n\n    static isValidPhotoAndVideoContent(content) {\n        return content && (content['@type'] === 'messagePhoto' || content['@type'] === 'messageVideo');\n    }\n\n    static isValidAudioContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    static isValidDocumentContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    static isValidUrlContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    static isValidVoiceNoteContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    static getFilter(selectedIndex) {\n        switch (selectedIndex) {\n            case 1: {\n                return { '@type': 'searchMessagesFilterPhotoAndVideo' }\n            }\n            case 2: {\n                return { '@type': 'searchMessagesFilterDocument' }\n            }\n            case 3: {\n                return { '@type': 'searchMessagesFilterAudio' }\n            }\n            case 4: {\n                return { '@type': 'searchMessagesFilterUrl' }\n            }\n            case 5: {\n                return { '@type': 'searchMessagesFilterVoiceNote' }\n            }\n        }\n\n        return null;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId } = props;\n\n        if (chatId !== state.prevChatId) {\n            const media = MessageStore.getMedia(props.chatId);\n\n            const photoAndVideo = media ? media.photoAndVideo : [];\n            const document = media ? media.document : [];\n            const audio = media ? media.audio : [];\n            const url = media ? media.url : [];\n            const voiceNote = media ? media.voiceNote : [];\n\n            let source = [];\n            let selectedIndex = -1;\n            if (photoAndVideo.length > 0) {\n                selectedIndex = 1;\n            } else if (document.length > 0) {\n                selectedIndex = 2;\n            } else if (audio.length > 0) {\n                selectedIndex = 3;\n            } else if (url.length > 0) {\n                selectedIndex = 4;\n            } else if (voiceNote.length > 0) {\n                selectedIndex = 5;\n            }\n            source = photoAndVideo.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n            return {\n                prevChatId: props.chatId,\n                selectedIndex,\n                items: source.slice(0, 40),\n                photoAndVideo,\n                document,\n                audio,\n                url,\n                voiceNote,\n                isSmallWidth: false,\n                params: {\n                    loading: false,\n                    completed: false,\n                    migrateCompleted: false,\n                    filter: SharedMediaContent.getFilter(selectedIndex)\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.on('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n        MessageStore.off('clientUpdateChatMedia', this.onClientUpdateChatMedia);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        // MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { message } = update;\n        if (chatId !== message.chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { selectedIndex } = this.state;\n        const { chat_id } = update;\n        if (chatId !== chat_id) {\n            return;\n        }\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    setMediaState = (media, selectedIndex) => {\n        const photoAndVideo = media ? media.photoAndVideo : [];\n        const document = media ? media.document : [];\n        const audio = media ? media.audio : [];\n        const url = media ? media.url : [];\n        const voiceNote = media ? media.voiceNote : [];\n\n        const hasPhotoAndVideo = photoAndVideo.length > 0;\n        const hasDocument = document.length > 0;\n        const hasAudio = audio.length > 0;\n        const hasUrl = url.length > 0;\n        const hasVoiceNote = voiceNote.length > 0;\n\n        const replaceSelectedIndex =\n            selectedIndex === -1\n            || selectedIndex === 1 && !hasPhotoAndVideo\n            || selectedIndex === 2 && !hasDocument\n            || selectedIndex === 3 && !hasAudio\n            || selectedIndex === 4 && !hasUrl\n            || selectedIndex === 5 && !hasVoiceNote;\n        if (replaceSelectedIndex) {\n            if (hasPhotoAndVideo) {\n                selectedIndex = 1;\n            } else if (hasDocument) {\n                selectedIndex = 2;\n            } else if (hasAudio) {\n                selectedIndex = 3;\n            } else if (hasUrl) {\n                selectedIndex = 4;\n            } else if (hasVoiceNote) {\n                selectedIndex = 5;\n            }\n        }\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            items: source.slice(0, 40),\n            photoAndVideo,\n            document,\n            audio,\n            url,\n            voiceNote\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.items !== this.props.chatId || prevState.selectedIndex !== this.state.selectedIndex) {\n            const { items } = this.state;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, items);\n        }\n\n        // this.unobserveResize();\n        // this.observeResize();\n    }\n\n    onClientUpdateMediaTab = update => {\n        const { chatId: currentChatId } = this.props;\n        const { photoAndVideo, document, audio, url, voiceNote } = this.state;\n\n        const { chatId, index: selectedIndex } = update;\n        if (chatId !== currentChatId) return;\n\n        let source = [];\n        if (selectedIndex === 1) {\n            source = photoAndVideo;\n        } else if (selectedIndex === 2) {\n            source = document;\n        } else if (selectedIndex === 3) {\n            source = audio;\n        } else if (selectedIndex === 4) {\n            source = url;\n        } else if (selectedIndex === 5) {\n            source = voiceNote;\n        }\n        source = source.filter(x => SharedMediaContent.isValidContent(selectedIndex, x.content));\n\n        this.setState({\n            selectedIndex,\n            items: source.slice(0, 40),\n            params: {\n                loading: false,\n                completed: false,\n                migrateCompleted: false,\n                filter: SharedMediaContent.getFilter(selectedIndex)\n            }\n        });\n    };\n\n    onClientUpdateChatMedia = update => {\n        const { chatId: currentChatId } = this.props;\n        const { selectedIndex } = this.state;\n\n        const { chatId } = update;\n        if (chatId !== currentChatId) return;\n\n        const media = MessageStore.getMedia(chatId);\n        this.setMediaState(media, selectedIndex);\n    };\n\n    getItemTemplate = (selectedIndex, message) => {\n        const { chat_id, id, content } = message;\n        const migratedChatId = -1;\n\n        switch (selectedIndex) {\n            case 1: {\n                if (content['@type'] === 'messageVideo') {\n                    return (\n                        <SharedVideo\n                            key={`chat_id=${chat_id}_message_id=${id}`}\n                            chatId={chat_id}\n                            messageId={id}\n                            video={content.video}\n                            openMedia={() => openMedia(chat_id, id, false)}\n                            showOpenMessage={chat_id !== migratedChatId}\n                        />\n                    );\n                }\n\n                return (\n                    <SharedPhoto\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        photo={content.photo}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 2: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 3: {\n                return (\n                    <SharedDocument\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 4: {\n                return (\n                    <SharedLink\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        webPage={content.web_page}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n            case 5: {\n                return (\n                    <SharedVoiceNote\n                        key={`chat_id=${chat_id}_message_id=${id}`}\n                        chatId={chat_id}\n                        messageId={id}\n                        voiceNote={content.voice_note}\n                        openMedia={() => openMedia(chat_id, id, false)}\n                        showOpenMessage={chat_id !== migratedChatId}\n                    />\n                );\n            }\n        }\n\n        return null;\n    };\n\n    handleScroll = event => {\n        const { params } = this.state;\n\n        if (params && !params.completed) {\n            this.onLoadNext(params);\n        } else {\n            // this.onLoadMigratedNext(params);\n        }\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { items, selectedIndex } = this.state;\n        const { completed, filter, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n        if (!filter) return;\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(x => SharedMediaContent.isValidMessage(selectedIndex, x)));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            // this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    render() {\n        const { selectedIndex, items } = this.state;\n        if (!items || !items.length) {\n            return null;\n        }\n\n        return (\n            <div className={classNames('shared-media-content', { 'shared-photos-list': selectedIndex === 1 })}>\n                {items.map(x => this.getItemTemplate(selectedIndex, x))}\n            </div>\n        );\n    }\n}\n\nSharedMediaContent.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default SharedMediaContent;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport GroupIcon from '@material-ui/icons/Group';\nimport CallIcon from '@material-ui/icons/Call';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Divider from '@material-ui/core/Divider';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HeadsetIcon from '@material-ui/icons/Headset';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport InsertLinkIcon from '@material-ui/icons/InsertLink';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MicIcon from '@material-ui/icons/Mic';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport Typography from '@material-ui/core/Typography';\nimport VideocamIcon from '@material-ui/icons/Videocam';\nimport User from '../Tile/User';\nimport Chat from '../Tile/Chat';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport SharedMediaTabs from './SharedMedia/SharedMediaTabs';\nimport SharedMediaContent from './SharedMedia/SharedMediaContent';\nimport { copy } from '../../Utils/Text';\nimport { getFormattedText, getUrlMentionHashtagEntities } from '../../Utils/Message';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    isMeChat, isChannelChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Phone';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS, SCROLL_PRECISION } from '../../Constants';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MoreListItem.css';\nimport './ChatDetails.css';\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.dividerRef = React.createRef();\n        this.mediaRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        // console.log(\n        //     `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        // );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme, counters, migratedCounters } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.counters !== counters) {\n            return true;\n        }\n\n        if (nextProps.migratedCounters !== migratedCounters) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.loadContent();\n        }\n\n        const { current: list } = this.listRef;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop;\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        MessageStore.on('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        MessageStore.off('clientUpdateMediaTab', this.onClientUpdateMediaTab);\n    }\n\n    onClientUpdateMediaTab = update => {\n\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    loadContent = () => {\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId, popup } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n\n        if (popup) {\n            getChatFullInfo(chatId);\n        }\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        this.handleScheduledAction(t('PhoneCopied'));\n    };\n\n    handleHeaderClick = () => {\n        this.listRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.listRef) return 0;\n\n        return this.listRef.current.clientHeight;\n    };\n\n    handleTabClick = event => {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: divider } = this.dividerRef;\n        if (!divider) return;\n\n        list.scrollTo({\n            top: divider.offsetTop,\n            behavior: 'smooth'\n        });\n    };\n\n    handleScroll = event => {\n        if (!this.listRef) return;\n        if (!this.mediaRef) return;\n\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { current: media } = this.mediaRef;\n        if (!media) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            media.handleScroll(event);\n        }\n    };\n\n    render() {\n        const {\n            backButton,\n            className,\n            chatId,\n            onClose,\n            onOpenGroupInCommon,\n            onOpenSharedAudios,\n            onOpenSharedDocuments,\n            onOpenSharedLinks,\n            onOpenSharedMedia,\n            onOpenSharedPhotos,\n            onOpenSharedVideos,\n            onOpenSharedVoiceNotes,\n            popup,\n            t\n        } = this.props;\n\n        let { counters, migratedCounters } = this.props;\n        counters = counters || [0, 0, 0, 0, 0, 0];\n        migratedCounters = migratedCounters || [0, 0, 0, 0, 0, 0];\n\n        const [photoCount, videoCount, documentCount, audioCount, urlCount, voiceAndVideoNoteCount] = counters.map(\n            (el, i) => el + migratedCounters[i]\n        );\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.listRef} className={classNames('chat-details-list', 'scrollbars-hidden')} />\n                </div>\n            );\n        }\n\n        let groupInCommonCount = 0;\n        if (isPrivateChat(chatId)) {\n            const fullInfo = UserStore.getFullInfo(chat.type.user_id);\n            groupInCommonCount = fullInfo ? fullInfo.group_in_common_count : groupInCommonCount;\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        let bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className='list-item' key={user.id}>\n                <User userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        if (isGroupChat(chatId) || isChannelChat(chatId)) {\n            const { text: bioText, entities: bioEntities } = getUrlMentionHashtagEntities(bio, []);\n            if (bioEntities.length > 0) {\n                bio = getFormattedText({ '@type': 'formattedText', text: bioText, entities: bioEntities });\n            }\n        }\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('chat-details-list', 'scrollbars-hidden')}\n                    onScroll={this.handleScroll}>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                        {!isMe && (\n                            <List className='chat-details-items'>\n                                {bio && (\n                                    <ListItem className='list-item-rounded' alignItems='flex-start'>\n                                        <ListItemIcon>\n                                            <ErrorOutlineIcon className='chat-details-info-icon' />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={bio}\n                                            secondary={t('Bio')}\n                                            style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                        />\n                                    </ListItem>\n                                )}\n                                {username && (\n                                    <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handleUsernameHint}>\n                                        <ListItemIcon>\n                                            <AlternateEmailIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {username}\n                                                </Typography>\n                                            }\n                                            secondary={t('Username')}\n                                        />\n                                    </ListItem>\n                                )}\n                                {phoneNumber && (\n                                    <>\n                                        <ListItem button className='list-item-rounded' alignItems='flex-start' onClick={this.handlePhoneHint}>\n                                            <ListItemIcon>\n                                                <CallIcon />\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={\n                                                    <Typography variant='inherit' noWrap>\n                                                        {formatPhoneNumber(phoneNumber)}\n                                                    </Typography>\n                                                }\n                                                secondary={t('Phone')}\n                                            />\n                                        </ListItem>\n                                    </>\n                                )}\n                                <NotificationsListItem chatId={chatId} />\n                                {popup && !isGroup && (\n                                    <ListItem button className='list-item-rounded' onClick={this.handleOpenChat}>\n                                        <ListItemText\n                                            primary={\n                                                <Typography color='primary' variant='inherit' noWrap>\n                                                    {t('SendMessage').toUpperCase()}\n                                                </Typography>\n                                            }\n                                            style={{ paddingLeft: 40 }}\n                                        />\n                                    </ListItem>\n                                )}\n                            </List>\n                        )}\n                    </div>\n\n                    <div ref={this.dividerRef}/>\n                    <SharedMediaTabs chatId={chatId} onClick={this.handleTabClick}/>\n                    <SharedMediaContent ref={this.mediaRef} chatId={chatId}/>\n                    {/*{(photoCount > 0 ||*/}\n                    {/*    videoCount > 0 ||*/}\n                    {/*    documentCount > 0 ||*/}\n                    {/*    audioCount > 0 ||*/}\n                    {/*    urlCount > 0 ||*/}\n                    {/*    voiceAndVideoNoteCount > 0 ||*/}\n                    {/*    groupInCommonCount > 0) && (*/}\n                    {/*    <>*/}\n                            {/*<Divider />*/}\n                            {/*<List className='shared-media-list'>*/}\n                            {/*    {photoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedPhotos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <PhotoIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {photoCount === 1 ? '1 photo' : `${photoCount} photos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {videoCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVideos}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <VideocamIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {videoCount === 1 ? '1 video' : `${videoCount} videos`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {documentCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedDocuments}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertDriveFileIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {documentCount === 1 ? '1 file' : `${documentCount} files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {audioCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedAudios}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <HeadsetIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {audioCount === 1 ? '1 audio file' : `${audioCount} audio files`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {urlCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedLinks}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <InsertLinkIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {urlCount === 1 ? '1 shared link' : `${urlCount} shared links`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {voiceAndVideoNoteCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenSharedVoiceNotes}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <MicIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {voiceAndVideoNoteCount === 1*/}\n                            {/*                            ? '1 voice message'*/}\n                            {/*                            : `${voiceAndVideoNoteCount} voice messages`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*    {groupInCommonCount > 0 && (*/}\n                            {/*        <ListItem button className='list-item' onClick={onOpenGroupInCommon}>*/}\n                            {/*            <ListItemIcon>*/}\n                            {/*                <GroupIcon />*/}\n                            {/*            </ListItemIcon>*/}\n                            {/*            <ListItemText*/}\n                            {/*                primary={*/}\n                            {/*                    <Typography variant='inherit' noWrap>*/}\n                            {/*                        {groupInCommonCount === 1*/}\n                            {/*                            ? '1 group in common'*/}\n                            {/*                            : `${groupInCommonCount} groups in common`}*/}\n                            {/*                    </Typography>*/}\n                            {/*                }*/}\n                            {/*            />*/}\n                            {/*        </ListItem>*/}\n                            {/*    )}*/}\n                            {/*</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                    {/*{items.length > 0 && (*/}\n                    {/*    <>*/}\n                    {/*        <Divider />*/}\n                    {/*        <List>{items}</List>*/}\n                    {/*    </>*/}\n                    {/*)}*/}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenGroupInCommon: PropTypes.func,\n    onOpenSharedDocuments: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenSharedLinks: PropTypes.func,\n    onOpenSharedPhotos: PropTypes.func,\n    onOpenSharedVideos: PropTypes.func,\n    onOpenSharedVoiceNotes: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './GroupsInCommonHeader.css';\n\nclass GroupsInCommonHeader extends React.Component {\n    render() {\n        const { onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default GroupsInCommonHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from '../Tile/Chat';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <Chat chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.5,3 C13.0898509,3 16,5.91014913 16,9.5 C16,10.9337106 15.5358211,12.2590065 14.7495478,13.3338028 L19.7071068,18.2928932 C20.0976311,18.6834175 20.0976311,19.3165825 19.7071068,19.7071068 C19.3466228,20.0675907 18.7793918,20.0953203 18.3871006,19.7902954 L18.2928932,19.7071068 L13.3338028,14.7495478 C12.2590065,15.5358211 10.9337106,16 9.5,16 C5.91014913,16 3,13.0898509 3,9.5 C3,5.91014913 5.91014913,3 9.5,3 Z M9.5,5 C7.01471863,5 5,7.01471863 5,9.5 C5,11.9852814 7.01471863,14 9.5,14 C11.9852814,14 14,11.9852814 14,9.5 C14,7.01471863 11.9852814,5 9.5,5 Z' />,\n    'Search'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport { ANIMATION_DURATION_200MS } from '../../../Constants';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            openSearch: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.state;\n\n        if (openSearch && openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInputRef.current) {\n                    this.searchInputRef.current.focus();\n                }\n            }, ANIMATION_DURATION_200MS);\n        }\n    }\n\n    handleSearch = () => {\n        if (this.searchInputRef.current) {\n            const innerText = this.searchInputRef.current.innerText;\n            if (innerText) {\n                this.searchInputRef.current.innerText = '';\n\n                const { onSearch } = this.props;\n                if (!onSearch) return;\n\n                onSearch('');\n                return;\n            }\n        }\n\n        const { onCloseSearch } = this.props;\n        const { openSearch } = this.state;\n\n        this.setState({ openSearch: !openSearch });\n\n        if (onCloseSearch) {\n            onCloseSearch();\n        }\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        const { onSearch } = this.props;\n        if (!onSearch) return;\n\n        onSearch(innerText);\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    render() {\n        const { t, title, onClick, onClose, onSearch } = this.props;\n        const { openSearch } = this.state;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <IconButton className='header-left-button' onClick={onClose}>\n                            <ArrowBackIcon />\n                        </IconButton>\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{title}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInputRef}\n                                placeholder={t('Search')}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                {Boolean(onSearch) && (\n                    <IconButton className='header-right-button' onMouseDown={this.handleSearch}>\n                        <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nSharedMediaHeader.propTypes = {\n    title: PropTypes.string,\n    onClick: PropTypes.func,\n    onClose: PropTypes.func,\n    onCloseSearch: PropTypes.func,\n    onSearch: PropTypes.func\n};\n\nexport default withTranslation()(SharedMediaHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport SharedDocument from '../../Tile/SharedMedia/SharedDocument';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport { between, insertByOrder } from '../../../Utils/Common';\nimport { loadMessageContents } from '../../../Utils/File';\nimport { messageComparatorDesc } from '../../../Utils/Message';\nimport { SCROLL_PRECISION, SHARED_MESSAGE_SLICE_LIMIT } from '../../../Constants';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './SharedMediaBase.css';\n\nclass SharedMediaBase extends React.Component {\n    getListClassName() {\n        return null;\n    }\n\n    getSearchListClassName() {\n        return null;\n    }\n\n    constructor(props) {\n        if (new.target === SharedMediaBase) {\n            throw new TypeError('Cannot construct SharedMediaBase instances directly');\n        }\n\n        // console.log('SharedMediaBase.ctor');\n\n        super(props);\n\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: [],\n            migratedItems: [],\n            searchItems: [],\n            searchMigratedItems: []\n        };\n    }\n\n    hasSearch() {\n        return true;\n    }\n\n    isValidContent(content) {\n        throw new Error('Virtual method isValidContent is not implemented');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, id } = message;\n\n        return (\n            <SharedDocument\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n\n    getSearchFilter() {\n        throw new Error('Virtual method getSearchFilter is not implemented');\n    }\n\n    getHeader() {\n        throw new Error('Virtual method getHeader is not implemented');\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_id, old_content, new_content } = update;\n\n        const message = MessageStore.get(chat_id, message_id);\n        // console.log(`SharedDocuments.onUpdateMessageContent chat_id=${chat_id} message_id=${message_id}`, this.state.items);\n\n        if (chat_id === chatId) {\n            if (!items.length) return;\n            if (!between(message_id, items[0].id, items[items.length - 1].id, true)) return;\n\n            const index = items.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({ items: insertByOrder(items, message, messageComparatorDesc) });\n                } else {\n                    // replace document\n                    this.setState({ items: [...items.slice(0, index), message, ...items.slice(index + 1)] });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ items: items.filter(x => x.id !== message_id) });\n                }\n            }\n        } else if (chat_id === migratedChatId) {\n            if (!migratedItems.length) return;\n            if (!between(message_id, migratedItems[0].id, migratedItems[migratedItems.length - 1].id, true)) return;\n\n            const index = migratedItems.findIndex(x => x.id === message_id);\n            if (this.isValidContent(new_content)) {\n                if (index === -1) {\n                    // add new document\n                    this.setState({\n                        migratedItems: insertByOrder(migratedItems, message, messageComparatorDesc)\n                    });\n                } else {\n                    // replace document\n                    this.setState({\n                        migratedItems: [...migratedItems.slice(0, index), message, ...migratedItems.slice(index + 1)]\n                    });\n                }\n            } else {\n                if (index === -1) {\n                } else {\n                    // remove none document\n                    this.setState({ migratedItems: migratedItems.filter(x => x.id !== message_id) });\n                }\n            }\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { message } = update;\n        const { chat_id } = message;\n\n        if (chat_id !== chatId) return;\n        if (!this.isValidMessage(message)) return;\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n\n        if (chat_id === chatId) {\n            this.setState({ items: [message].concat(items) });\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: [message].concat(migratedItems) });\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, migratedChatId } = this.props;\n        const { items, migratedItems } = this.state;\n\n        const { chat_id, message_ids } = update;\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        const callback = () => {\n            if (this.state.items.length + this.state.migratedItems.length < SHARED_MESSAGE_SLICE_LIMIT) {\n                this.onLoadNext(this.params);\n            }\n        };\n\n        if (chat_id === chatId) {\n            this.setState({ items: items.filter(x => !map.has(x.id)) }, callback);\n        } else if (chat_id === migratedChatId) {\n            this.setState({ migratedItems: migratedItems.filter(x => !map.has(x.id)) }, callback);\n        }\n    };\n\n    loadContent = () => {\n        this.params = {\n            loading: false,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onLoadNext(this.params);\n    };\n\n    onLoadNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading } = params;\n\n        // console.log('SharedMediaBase.onLoadNext', completed, loading);\n\n        if (loading) return;\n        if (completed) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT * 2,\n            filter\n        });\n\n        const { messages } = result;\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        MessageStore.setItems(result.messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n\n        this.setState({ items: params.items });\n\n        if (params.completed) {\n            this.onLoadMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onLoadNext(params, false);\n        }\n    };\n\n    onLoadMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migrateCompleted, migratedItems: items } = params;\n\n        // console.log('SharedMediaBase.onLoadMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query: '',\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (params.migrateCompleted) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ migratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onLoadMigratedNext(params, false);\n        }\n    };\n\n    handleScroll = () => {\n        if (!this.listRef) return;\n\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { params } = this;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (params && !params.completed) {\n                this.onLoadNext(params);\n            } else {\n                this.onLoadMigratedNext(params);\n            }\n        }\n    };\n\n    handleHeaderClick = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        list.scrollTop = 0;\n    };\n\n    handleSearchScroll = () => {\n        if (!this.searchListRef) return;\n\n        const list = this.searchListRef.current;\n        if (!list) return;\n\n        const { searchParams } = this;\n        if (!searchParams) return;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (!searchParams.completed) {\n                this.onSearchNext(searchParams);\n            } else {\n                this.onSearchMigratedNext(searchParams);\n            }\n        }\n    };\n\n    onSearchNext = async (params, loadIncomplete = true) => {\n        const { chatId } = this.props;\n        const { completed, filter, items, loading, query } = params;\n\n        // console.log('SharedMediaBase.onSearchNext', completed, loading);\n\n        if (completed) return;\n        if (loading) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: chatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.items = items.concat(messages.filter(this.isValidMessage));\n        params.completed = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (params.completed) {\n            this.onSearchMigratedNext(params, true);\n        } else if (incompleteResults) {\n            this.onSearchNext(params, false);\n        }\n    };\n\n    onSearchMigratedNext = async (params, loadIncomplete = true) => {\n        const { migratedChatId } = this.props;\n        const { filter, loading, migratedItems: items, migrateCompleted, query } = params;\n\n        // console.log('SharedMediaBase.onSearchMigratedNext', migratedChatId, loading, migrateCompleted);\n\n        if (!migratedChatId) return;\n        if (loading) return;\n        if (migrateCompleted) return;\n\n        const fromMessageId = items.length > 0 ? items[items.length - 1].id : 0;\n        params.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: migratedChatId,\n            query,\n            sender_user_id: 0,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: SHARED_MESSAGE_SLICE_LIMIT,\n            filter\n        }).finally(() => {\n            params.loading = false;\n        });\n\n        const { messages } = result;\n        params.migratedItems = items.concat(messages.filter(this.isValidMessage));\n        params.migrateCompleted = messages.length === 0 || messages.total_count === 0;\n        const incompleteResults = loadIncomplete && messages.length > 0 && messages.length < SHARED_MESSAGE_SLICE_LIMIT;\n\n        if (this.searchParams !== params) return;\n\n        MessageStore.setItems(messages);\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n\n        this.setState({ searchItems: params.items, searchMigratedItems: params.migratedItems });\n\n        if (incompleteResults) {\n            this.onSearchMigratedNext(params, false);\n        }\n    };\n\n    handleSearch = async text => {\n        const query = text ? text.trim() : '';\n        if (!query) {\n            this.handleCloseSearch();\n            return;\n        }\n\n        this.searchParams = {\n            query,\n            completed: false,\n            migrateCompleted: false,\n            items: [],\n            migratedItems: [],\n            filter: this.getSearchFilter()\n        };\n        this.onSearchNext(this.searchParams, true);\n    };\n\n    handleCloseSearch = () => {\n        this.searchParams = null;\n        this.setState({ searchItems: [], searchMigratedItems: [] });\n    };\n\n    isValidMessage = message => {\n        if (!message) return false;\n\n        return this.isValidContent(message.content);\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { items, migratedItems, searchItems, searchMigratedItems } = this.state;\n        const { searchParams } = this;\n\n        const messages = items.concat(migratedItems).map(x => this.getItemTemplate(x));\n        const searchMessages = searchItems.concat(searchMigratedItems).map(x => this.getItemTemplate(x));\n\n        return (\n            <>\n                <SharedMediaHeader\n                    title={this.getHeader()}\n                    onClick={this.handleHeaderClick}\n                    onClose={onClose}\n                    onSearch={this.hasSearch() ? this.handleSearch : null}\n                    onCloseSearch={this.handleCloseSearch}\n                />\n                <div\n                    ref={this.listRef}\n                    className={classNames('shared-media-list', this.getListClassName())}\n                    onScroll={this.handleScroll}\n                    style={{ minHeight: popup ? minHeight : null }}>\n                    {messages}\n                </div>\n                {Boolean(searchParams) && (\n                    <div\n                        ref={this.searchListRef}\n                        className={classNames('shared-media-search-list', this.getSearchListClassName())}\n                        onScroll={this.handleSearchScroll}>\n                        {searchMessages}\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nSharedMediaBase.propTypes = {};\n\nexport default SharedMediaBase;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedAudios.css';\n\nclass SharedAudios extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageAudio';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterAudio' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('AudioTitle');\n    }\n}\n\nSharedAudios.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedAudios.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedAudios);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport './SharedDocuments.css';\n\nclass SharedDocuments extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageDocument';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterDocument' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('DocumentsTitle');\n    }\n}\n\nSharedDocuments.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedDocuments.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedDocuments);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedLink from '../../Tile/SharedMedia/SharedLink';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedLinks.css';\n\nclass SharedLinks extends SharedMediaBase {\n    isValidContent(content) {\n        if (!content) return false;\n\n        const { web_page, text } = content;\n        if (web_page) return true;\n        if (!text) return false;\n\n        const { entities } = text;\n        if (!entities) return false;\n\n        return entities.find(\n            x =>\n                x.type['@type'] === 'textEntityTypeUrl' ||\n                x.type['@type'] === 'textEntityTypeTextUrl' ||\n                x.type['@type'] === 'textEntityTypeEmailAddress'\n        );\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterUrl' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('LinksTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedLink\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                webPage={content.web_page}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedLinks.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedLinks.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedLinks);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport './SharedMediaHeader.css';\n\nclass SharedMediaHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className='header-left-button' onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SharedMediaHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeader from './SharedMediaHeader';\nimport './SharedMedia.css';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeader close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedPhoto from '../../Tile/SharedMedia/SharedPhoto';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedPhotos.css';\n\nclass SharedPhotos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messagePhoto';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterPhoto' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('PhotosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedPhoto\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                photo={content.photo}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedPhotos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedPhotos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedPhotos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVideo from '../../Tile/SharedMedia/SharedVideo';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVideos.css';\n\nclass SharedVideos extends SharedMediaBase {\n    getListClassName() {\n        return 'shared-photos-list';\n    }\n\n    getSearchListClassName() {\n        return 'shared-photos-search-list';\n    }\n\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVideo';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVideo' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VideosTitle');\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVideo\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                video={content.video}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVideos.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVideos.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVideos);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SharedMediaBase from './SharedMediaBase';\nimport SharedVoiceNote from '../../Tile/SharedMedia/SharedVoiceNote';\nimport { openMedia } from '../../../Utils/Message';\nimport './SharedVoiceNotes.css';\n\nclass SharedVoiceNotes extends SharedMediaBase {\n    isValidContent(content) {\n        return content && content['@type'] === 'messageVoiceNote';\n    }\n\n    getSearchFilter() {\n        return { '@type': 'searchMessagesFilterVoiceNote' };\n    }\n\n    getHeader() {\n        const { t } = this.props;\n\n        return t('VoiceTitle');\n    }\n\n    hasSearch() {\n        return false;\n    }\n\n    getItemTemplate(message) {\n        const { migratedChatId } = this.props;\n        const { chat_id, content, id } = message;\n\n        return (\n            <SharedVoiceNote\n                key={`chat_id=${chat_id}_message_id=${id}`}\n                chatId={chat_id}\n                messageId={id}\n                voiceNote={content.voice_note}\n                openMedia={() => openMedia(chat_id, id, false)}\n                showOpenMessage={chat_id !== migratedChatId}\n            />\n        );\n    }\n}\n\nSharedVoiceNotes.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    migratedChatId: PropTypes.number,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedVoiceNotes.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default withTranslation()(SharedVoiceNotes);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedAudios from './SharedMedia/SharedAudios';\nimport SharedDocuments from './SharedMedia/SharedDocuments';\nimport SharedLinks from './SharedMedia/SharedLinks';\nimport SharedMedia from './SharedMedia';\nimport SharedPhotos from './SharedMedia/SharedPhotos';\nimport SharedVideos from './SharedMedia/SharedVideos';\nimport SharedVoiceNotes from './SharedMedia/SharedVoiceNotes';\nimport { changeChatDetailsVisibility, getChatCounters } from '../../Actions/Chat';\nimport { getPhotoFromChat, getSupergroupId, isSupergroup } from '../../Utils/Chat';\nimport { loadProfileMediaViewerContent } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n        const { chatId, dialogChatId } = AppStore;\n\n        this.state = {\n            chatId: popup ? dialogChatId : chatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: null,\n            migratedCounters: null\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent(this.state.chatId);\n\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.state;\n        if (chatId !== prevState.chatId) {\n            this.loadContent(chatId);\n        }\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n        if (!isSmallWidth) return;\n\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.handleCloseChatDetails();\n    };\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        const { chatId } = this.state;\n\n        if (popup) return;\n        if (chatId === update.nextChatId) return;\n\n        this.sharedAudios = null;\n        this.sharedDocuments = null;\n        this.sharedLinks = null;\n        this.sharedPhotos = null;\n        this.sharedVideos = null;\n        this.sharedVoiceNotes = null;\n\n        this.setState({\n            chatId: update.nextChatId,\n            migratedChatId: 0,\n            userChatId: null,\n            openGroupInCommon: false,\n            openSharedAudios: false,\n            openSharedDocuments: false,\n            openSharedLinks: false,\n            openSharedMedia: false,\n            openSharedPhotos: false,\n            openSharedVideos: false,\n            openSharedVoiceNotes: false,\n            counters: ChatStore.getCounters(update.nextChatId),\n            migratedCounters: null\n        });\n\n        if (!update.nextChatId) {\n            this.handleCloseChatDetails();\n        }\n    };\n\n    loadContent = chatId => {\n        this.loadChatCounters(chatId);\n        this.loadMigratedCounters(chatId);\n\n        const photo = getPhotoFromChat(chatId);\n        if (!photo) return;\n        loadProfileMediaViewerContent(chatId, [photo]);\n    };\n\n    loadChatCounters = async chatId => {\n        const counters = await getChatCounters(chatId);\n        ChatStore.setCounters(chatId, counters);\n\n        if (chatId !== this.state.chatId) return;\n\n        this.setState({ counters });\n    };\n\n    loadMigratedCounters = async chatId => {\n        if (!isSupergroup(chatId)) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(getSupergroupId(chatId));\n        if (!fullInfo) return;\n\n        const { upgraded_from_basic_group_id: basic_group_id } = fullInfo;\n        if (!basic_group_id) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id,\n            force: true\n        });\n\n        if (!chat) return;\n\n        const counters = await getChatCounters(chat.id);\n        ChatStore.setCounters(chat.id, counters);\n\n        if (this.state.chatId !== chatId) return;\n\n        this.setState({ migratedChatId: chat.id, migratedCounters: ChatStore.getCounters(chat.id) });\n    };\n\n    handleOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupInCommon = () => {\n        this.setState({ openGroupInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleOpenSharedDocuments = () => {\n        this.setState({ openSharedDocuments: true });\n    };\n\n    handleCloseSharedDocuments = () => {\n        this.setState({ openSharedDocuments: false });\n    };\n\n    handleOpenSharedAudios = () => {\n        this.setState({ openSharedAudios: true });\n    };\n\n    handleCloseSharedAudios = () => {\n        this.setState({ openSharedAudios: false });\n    };\n\n    handleOpenSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: true });\n    };\n\n    handleCloseSharedVoiceNotes = () => {\n        this.setState({ openSharedVoiceNotes: false });\n    };\n\n    handleOpenSharedLinks = () => {\n        this.setState({ openSharedLinks: true });\n    };\n\n    handleCloseSharedLinks = () => {\n        this.setState({ openSharedLinks: false });\n    };\n\n    handleOpenSharedPhotos = () => {\n        this.setState({ openSharedPhotos: true });\n    };\n\n    handleCloseSharedPhotos = () => {\n        this.setState({ openSharedPhotos: false });\n    };\n\n    handleOpenSharedVideos = () => {\n        this.setState({ openSharedVideos: true });\n    };\n\n    handleCloseSharedVideos = () => {\n        this.setState({ openSharedVideos: false });\n    };\n\n    render() {\n        const { className, popup } = this.props;\n        const {\n            chatId,\n            counters,\n            migratedChatId,\n            migratedCounters,\n            userChatId,\n            openSharedAudios,\n            openSharedDocuments,\n            openSharedLinks,\n            openSharedMedia,\n            openSharedPhotos,\n            openSharedVideos,\n            openSharedVoiceNotes,\n            openGroupInCommon\n        } = this.state;\n\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openSharedAudios) {\n            this.sharedAudios = this.sharedAudios || (\n                <SharedAudios\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedAudios}\n                />\n            );\n\n            content = this.sharedAudios;\n        } else if (openSharedDocuments) {\n            this.sharedDocuments = this.sharedDocuments || (\n                <SharedDocuments\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedDocuments}\n                />\n            );\n\n            content = this.sharedDocuments;\n        } else if (openSharedLinks) {\n            this.sharedLinks = this.sharedLinks || (\n                <SharedLinks\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedLinks}\n                />\n            );\n\n            content = this.sharedLinks;\n        } else if (openSharedPhotos) {\n            this.sharedPhotos = this.sharedPhotos || (\n                <SharedPhotos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedPhotos}\n                />\n            );\n\n            content = this.sharedPhotos;\n        } else if (openSharedVideos) {\n            this.sharedVideos = this.sharedVideos || (\n                <SharedVideos\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVideos}\n                />\n            );\n\n            content = this.sharedVideos;\n        } else if (openSharedVoiceNotes) {\n            this.sharedVoiceNotes = this.sharedVoiceNotes || (\n                <SharedVoiceNotes\n                    chatId={currentChatId}\n                    migratedChatId={migratedChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedVoiceNotes}\n                />\n            );\n\n            content = this.sharedVoiceNotes;\n        } else if (openGroupInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    counters={counters}\n                    migratedCounters={migratedCounters}\n                    onOpenGroupInCommon={this.handleOpenGroupInCommon}\n                    onOpenSharedAudios={this.handleOpenSharedAudios}\n                    onOpenSharedDocuments={this.handleOpenSharedDocuments}\n                    onOpenSharedMedia={this.handleOpenSharedMedia}\n                    onOpenSharedLinks={this.handleOpenSharedLinks}\n                    onOpenSharedPhotos={this.handleOpenSharedPhotos}\n                    onOpenSharedVideos={this.handleOpenSharedVideos}\n                    onOpenSharedVoiceNotes={this.handleOpenSharedVoiceNotes}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames('chat-info', { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default ChatInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport {\n    getChatTypingString,\n    getChatDraft,\n    getLastMessageSenderName,\n    getLastMessageContent,\n    showChatDraft, isPrivateChat\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport './DialogContent.css';\n\nclass DialogContent extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateUserChatAction', this.onUpdate);\n        UserStore.on('updateUser', this.onUpdateUser);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateUserChatAction', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateUser = update => {\n        const { chatId } = this.props;\n        const { user } = update;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (isPrivateChat(chatId)) return;\n\n        const { last_message } = chat;\n        if (!last_message) return;\n\n        const { sender_user_id } = last_message;\n        if (sender_user_id !== user.id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n\n        if (this.clearHistory) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return <div className='dialog-content'>{'\\u00A0'}</div>;\n\n        let contentControl = null;\n        const typingString = getChatTypingString(chatId);\n        if (typingString) {\n            contentControl = <span className='dialog-content-accent'>{typingString}</span>;\n        }\n\n        if (!contentControl) {\n            const draft = getChatDraft(chatId);\n            if (showChatDraft(chatId)) {\n                const text = draft.text || '\\u00A0';\n\n                contentControl = (\n                    <>\n                        <span className='dialog-content-draft'>{t('Draft') + ': '}</span>\n                        {text}\n                    </>\n                );\n            }\n        }\n\n        if (!contentControl) {\n            const content = getLastMessageContent(chat, t) || '\\u00A0';\n            const senderName = getLastMessageSenderName(chat, t);\n            contentControl = (\n                <>\n                    {senderName && <span className='dialog-content-accent'>{senderName}: </span>}\n                    {content}\n                </>\n            );\n        }\n\n        return <div className='dialog-content'>{contentControl}</div>;\n    }\n}\n\nexport default withTranslation()(DialogContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd'>\n        <line x1='10.5' y1='13.5' x2='7' y2='17' id='Path-51' strokeWidth='1.66' strokeLinecap='round' />\n        <path\n            d='M15.2734195,6.29329584 L17.7068554,8.72673178 C18.0977149,9.11759123 18.0977149,9.7512996 17.7068554,10.142159 C17.6489915,10.200023 17.5842494,10.2505721 17.5140791,10.2926743 L15.0747102,11.7562956 C15.5465193,13.1717229 15.0755189,14.5863414 13.661709,16.0001513 L8,10.3384422 C9.41380985,8.92463237 10.8284284,8.45363199 12.2438557,8.92544107 L13.707477,6.48607217 C13.991869,6.01208547 14.6066564,5.85838861 15.0806431,6.14278063 C15.1508135,6.18488284 15.2155555,6.2354319 15.2734195,6.29329584 Z'\n            strokeWidth='1.66'\n            strokeLinecap='round'\n            strokeLinejoin='round'\n        />\n    </g>,\n    'Pin'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport EventEmitter from './EventEmitter';\nimport TdLibController from '../Controllers/TdLibController';\nimport { isValidPoll } from '../Utils/Poll';\n\nclass FilterStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.reset();\n\n        this.addTdLibListener();\n    }\n\n    reset = () => {\n        this.chatList = { '@type': 'chatListMain' };\n        this.filters = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                }\n\n                break;\n            }\n            case 'updateChatFilters': {\n                const { chat_filters } = update;\n\n                this.filters = chat_filters;\n                this.emit('updateChatFilters', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateChatList': {\n                const { chatList } = update;\n\n                this.chatList = chatList;\n\n                this.emit('clientUpdateChatList', update);\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n}\n\nconst store = new FilterStore();\nwindow.filter = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport PinIcon from '../../Assets/Icons/Pin';\nimport {\n    isChatMuted,\n    isChatPinned,\n    showChatUnreadCount,\n    showChatUnreadMentionCount\n} from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport NotificationStore from '../../Stores/NotificationStore';\nimport './DialogBadge.css';\n\nclass DialogBadge extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, chatList } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.on('updateChatPosition', this.onUpdate);\n        ChatStore.on('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadOutbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.on('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatIsMarkedAsUnread', this.onUpdate);\n        ChatStore.off('updateChatPosition', this.onUpdate);\n        ChatStore.off('updateChatNotificationSettings', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadOutbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n        NotificationStore.off('updateScopeNotificationSettings', this.onUpdateScopeNotificationSettings);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (update.chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateScopeNotificationSettings = update => {\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        switch (update.scope['@type']) {\n            case 'notificationSettingsScopeGroupChats': {\n                if (chat.type['@type'] === 'chatTypeBasicGroup' || chat.type['@type'] === 'chatTypeSupergroup') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'notificationSettingsScopePrivateChats': {\n                if (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') {\n                    this.forceUpdate();\n                }\n                break;\n            }\n        }\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId, chatList } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { unread_count } = chat;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        const showUnreadMentionCount = showChatUnreadMentionCount(chatId);\n        const showUnreadCount = showChatUnreadCount(chatId);\n        const isMuted = isChatMuted(chatId);\n\n        return (\n            <>\n                {showUnreadMentionCount && (\n                    <div className='dialog-badge'>\n                        <div className='dialog-badge-mention'>@</div>\n                    </div>\n                )}\n                {showUnreadCount && (\n                    <div className={classNames({ 'dialog-badge-muted': isMuted }, 'dialog-badge')}>\n                        <span className='dialog-badge-text'>{unread_count > 0 ? unread_count : ''}</span>\n                    </div>\n                )}\n                {isPinned && !showUnreadCount && !showUnreadMentionCount && (\n                    <div className='dialog-badge-pinned'>\n                        <PinIcon className='dialog-badge-pinned-icon' />\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default DialogBadge;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='none' strokeWidth='1' fill='none' fillRule='evenodd'>\n        <g transform='translate(-3.000000, 0.000000)' fill='#E53935' fillRule='nonzero'>\n            <path d='M10,0.4 C13.6450793,0.4 16.6,3.35492065 16.6,7 C16.6,10.6450793 13.6450793,13.6 10,13.6 C6.35492065,13.6 3.4,10.6450793 3.4,7 C3.4,3.35492065 6.35492065,0.4 10,0.4 Z M10,9.25 C9.58578644,9.25 9.25,9.58578644 9.25,10 C9.25,10.4142136 9.58578644,10.75 10,10.75 C10.4142136,10.75 10.75,10.4142136 10.75,10 C10.75,9.58578644 10.4142136,9.25 10,9.25 Z M10,2.85 C9.64101491,2.85 9.35,3.14101491 9.35,3.5 L9.35,7.5 C9.35,7.85898509 9.64101491,8.15 10,8.15 C10.3589851,8.15 10.65,7.85898509 10.65,7.5 L10.65,3.5 C10.65,3.14101491 10.3589851,2.85 10,2.85 Z' />\n        </g>\n    </g>,\n    'Error'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g strokeWidth='1' fill='none' fillRule='evenodd' strokeLinecap='round' strokeLinejoin='round'>\n        <g transform='translate(-3.000000, 0.000000)'>\n            <circle strokeWidth='1.2' cx='10' cy='7' r='6' />\n            <line x1='10' y1='3.5' x2='10' y2='7' strokeWidth='1.3' />\n            <line x1='12' y1='9' x2='10' y2='7' strokeWidth='1.3' />\n        </g>\n    </g>,\n    'Pending'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-4.000000, -2.000000)'\n        d='M7.96833846,10.0490996 L14.5108251,2.571972 C14.7472185,2.30180819 15.1578642,2.27443181 15.428028,2.51082515 C15.6711754,2.72357915 15.717665,3.07747757 15.5522007,3.34307913 L15.4891749,3.428028 L8.48917485,11.428028 C8.2663359,11.6827011 7.89144111,11.7199091 7.62486888,11.5309823 L7.54038059,11.4596194 L4.54038059,8.45961941 C4.2865398,8.20577862 4.2865398,7.79422138 4.54038059,7.54038059 C4.7688373,7.31192388 5.12504434,7.28907821 5.37905111,7.47184358 L5.45961941,7.54038059 L7.96833846,10.0490996 L14.5108251,2.571972 L7.96833846,10.0490996 Z'\n    />,\n    'Sent'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path\n        transform='translate(-1.000000, -2.000000)'\n        d='M4.96833846,10.0490996 L11.5108251,2.571972 C11.7472185,2.30180819 12.1578642,2.27443181 12.428028,2.51082515 C12.6711754,2.72357915 12.717665,3.07747757 12.5522007,3.34307913 L12.4891749,3.428028 L5.48917485,11.428028 C5.2663359,11.6827011 4.89144111,11.7199091 4.62486888,11.5309823 L4.54038059,11.4596194 L1.54038059,8.45961941 C1.2865398,8.20577862 1.2865398,7.79422138 1.54038059,7.54038059 C1.7688373,7.31192388 2.12504434,7.28907821 2.37905111,7.47184358 L2.45961941,7.54038059 L4.96833846,10.0490996 L11.5108251,2.571972 L4.96833846,10.0490996 Z M9.96833846,10.0490996 L16.5108251,2.571972 C16.7472185,2.30180819 17.1578642,2.27443181 17.428028,2.51082515 C17.6711754,2.72357915 17.717665,3.07747757 17.5522007,3.34307913 L17.4891749,3.428028 L10.4891749,11.428028 C10.2663359,11.6827011 9.89144111,11.7199091 9.62486888,11.5309823 L9.54038059,11.4596194 L8.54038059,10.4596194 C8.2865398,10.2057786 8.2865398,9.79422138 8.54038059,9.54038059 C8.7688373,9.31192388 9.12504434,9.28907821 9.37905111,9.47184358 L9.45961941,9.54038059 L9.96833846,10.0490996 L16.5108251,2.571972 L9.96833846,10.0490996 Z'\n    />,\n    'Succeeded'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ErrorIcon from '../../Assets/Icons/Error';\nimport PendingIcon from '../../Assets/Icons/Pending';\nimport SentIcon from '../../Assets/Icons/Sent';\nimport SucceededIcon from '../../Assets/Icons/Succeeded';\nimport { isMessageUnread } from '../../Utils/Message';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Status.css';\n\nclass Status extends React.Component {\n    state = {};\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const sendingState = message ? message.sending_state : null;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                sendingState,\n                unread: isMessageUnread(chatId, messageId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        ChatStore.on('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.on('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatReadOutbox', this.onUpdateChatReadOutbox);\n\n        MessageStore.off('updateMessageSendFailed', this.onUpdateMessageSend);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSend);\n    }\n\n    onUpdateMessageSend = update => {\n        const { chatId, messageId } = this.props;\n        const { old_message_id, message } = update;\n\n        if (messageId !== old_message_id) return;\n        if (!message) return;\n\n        const { chat_id, id, sending_state } = message;\n        if (chatId !== chat_id) return;\n\n        this.newMessageId = id;\n        this.setState({ sendingState: sending_state });\n    };\n\n    onUpdateChatReadOutbox = update => {\n        const { chatId, messageId } = this.props;\n        const { chat_id, last_read_outbox_message_id } = update;\n        const { newMessageId } = this;\n\n        if (chatId !== chat_id) return;\n\n        if ((newMessageId && newMessageId <= last_read_outbox_message_id) || messageId <= last_read_outbox_message_id) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    };\n\n    render() {\n        const { sendingState, unread } = this.state;\n        if (!unread) {\n            return <SucceededIcon className='status' viewBox='0 0 17 10' style={{ width: 16, height: 9 }} />;\n        }\n\n        if (sendingState) {\n            return sendingState['@type'] === 'messageSendingStateFailed' ? (\n                <ErrorIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)' }}\n                />\n            ) : (\n                <PendingIcon\n                    className='status'\n                    viewBox='0 0 14 14'\n                    style={{ width: 16, height: 12, transform: 'translate(0, 1px)', stroke: 'currentColor' }}\n                />\n            );\n        }\n\n        return <SentIcon className='status' viewBox='0 0 12 10' style={{ width: 16, height: 9 }} />;\n    }\n}\n\nStatus.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default Status;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Status from '../Message/Status';\nimport { getLastMessageDate, isMeChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport './DialogMeta.css';\n\nclass DialogMeta extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatDraftMessage', this.onUpdate);\n        ChatStore.on('updateChatLastMessage', this.onUpdate);\n        ChatStore.on('updateChatReadInbox', this.onUpdate);\n        ChatStore.on('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.on('updateMessageMentionRead', this.onUpdate);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatDraftMessage', this.onUpdate);\n        ChatStore.off('updateChatLastMessage', this.onUpdate);\n        ChatStore.off('updateChatReadInbox', this.onUpdate);\n        ChatStore.off('updateChatUnreadMentionCount', this.onUpdate);\n        ChatStore.off('updateMessageMentionRead', this.onUpdate);\n    }\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.clearHistory = update.inProgress;\n            this.forceUpdate();\n        }\n    };\n\n    onFastUpdatingComplete = update => {\n        this.forceUpdate();\n    };\n\n    onUpdate = update => {\n        const { chatId } = this.props;\n\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    render() {\n        if (this.clearHistory) return null;\n\n        const { chatId } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const isMe = isMeChat(chatId);\n\n        const { last_message } = chat;\n        if (!last_message) return null;\n\n        const date = getLastMessageDate(chat);\n        if (!date) return null;\n\n        const { id, is_outgoing } = last_message;\n\n        return (\n            <div className='dialog-meta'>\n                {is_outgoing && !isMe && (\n                    <>\n                        <Status chatId={chatId} messageId={id} />\n                        <span> </span>\n                    </>\n                )}\n                {date}\n            </div>\n        );\n    }\n}\n\nexport default DialogMeta;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M8.29289322,11.2928932 C8.68341751,10.9023689 9.31658249,10.9023689 9.70710678,11.2928932 L9.70710678,11.2928932 L12,13.5857864 L14.2928932,11.2928932 C14.6834175,10.9023689 15.3165825,10.9023689 15.7071068,11.2928932 C16.0976311,11.6834175 16.0976311,12.3165825 15.7071068,12.7071068 L15.7071068,12.7071068 L12.7071068,15.7071068 C12.3165825,16.0976311 11.6834175,16.0976311 11.2928932,15.7071068 L11.2928932,15.7071068 L8.29289322,12.7071068 C7.90236893,12.3165825 7.90236893,11.6834175 8.29289322,11.2928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Archive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M16.5,1 C17.7590292,1 18.9445825,1.59277663 19.7,2.6 L19.7,2.6 L21.2,4.6 C21.7192885,5.29238468 22,6.13451915 22,7 L22,7 L22,8 C22,8.11615513 21.980196,8.22768478 21.9437804,8.33139667 C21.9809544,8.54881122 22,8.77218145 22,9 L22,18 C22,20.209139 20.209139,22 18,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,9 C2,8.77218145 2.01904557,8.54881122 2.05563136,8.33139468 C2.01980398,8.22768478 2,8.11615513 2,8 L2,8 L2,7 C2,6.13451915 2.28071149,5.29238468 2.8,4.6 L2.8,4.6 L4.3,2.6 C5.05541753,1.59277663 6.24097079,1 7.5,1 L7.5,1 Z M18,7 L6,7 C4.8954305,7 4,7.8954305 4,9 L4,18 C4,19.1045695 4.8954305,20 6,20 L18,20 C19.1045695,20 20,19.1045695 20,18 L20,9 C20,7.8954305 19.1045695,7 18,7 Z M12.7071068,10.7928932 L15.7071068,13.7928932 C16.0976311,14.1834175 16.0976311,14.8165825 15.7071068,15.2071068 C15.3165825,15.5976311 14.6834175,15.5976311 14.2928932,15.2071068 L12,12.9142136 L9.70710678,15.2071068 C9.31658249,15.5976311 8.68341751,15.5976311 8.29289322,15.2071068 C7.90236893,14.8165825 7.90236893,14.1834175 8.29289322,13.7928932 L11.2928932,10.7928932 C11.6834175,10.4023689 12.3165825,10.4023689 12.7071068,10.7928932 Z M16.5,3 L7.5,3 C6.87048539,3 6.27770876,3.29638831 5.9,3.8 L5.9,3.8 L4.88040369,5.15879948 C5.23567546,5.05542416 5.61136523,5 6,5 L18,5 C18.3882729,5 18.7636249,5.055321 19.1186039,5.15851085 L18.1,3.8 C17.7222912,3.29638831 17.1295146,3 16.5,3 L16.5,3 Z' />,\n    'Unarchive'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z' />,\n    'Pin2'\n);\n\n// <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n// <svg width=\"16px\" height=\"21px\" viewBox=\"0 0 16 21\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n//     <!-- Generator: Sketch 61.2 (89653) - https://sketch.com -->\n// <title>Combined Shape</title>\n// <desc>Created with Sketch.</desc>\n// <g id=\"Graphics\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\">\n// <g id=\"Graphics-/-Icons-/-Pin\" transform=\"translate(-4.000000, -2.000000)\" fill=\"#707579\" fill-rule=\"nonzero\">\n// <path d=\"M18.1483713,2 L18.2928313,2.00686658 C19.0534832,2.07955132 19.6483713,2.72030388 19.6483713,3.5 C19.6483713,3.93788733 19.4570272,4.35391161 19.1245584,4.6388849 L16.9591265,6.49496934 L16.5350978,11.1592857 L19.5076921,14.5034542 C20.0580691,15.1226284 20.002298,16.070737 19.3831238,16.621114 C19.1085471,16.8651821 18.7539493,17 18.3865781,17 L12.9994219,17 L13,22 C13,22.5128358 12.6139598,22.9355072 12.1166211,22.9932723 L12,23 C11.4477153,23 11,22.5522847 11,22 L11,22 L10.9994219,17 L5.61342192,17 C4.7849948,17 4.11342192,16.3284271 4.11342192,15.5 C4.11342192,15.1326288 4.24823977,14.7780309 4.49230794,14.5034542 L7.46490224,11.1592857 L7.04087348,6.49496934 L4.87544164,4.6388849 C4.24645288,4.09975168 4.17361057,3.1528017 4.7127438,2.52381294 C4.9977171,2.19134409 5.41374137,2 5.8516287,2 L18.1483713,2 Z M16.7967426,4 L7.20325741,4 L8.34245623,4.97645613 C8.73788815,5.31539777 8.98550756,5.79522213 9.0326599,6.31389784 L9.45668865,10.9782142 C9.50671685,11.5285243 9.32683472,12.0750103 8.95972088,12.4880133 L6.72684384,15 L17.2731562,15 L15.0402791,12.4880133 C14.6731653,12.0750103 14.4932831,11.5285243 14.5433113,10.9782142 L14.9673401,6.31389784 C15.0144924,5.79522213 15.2621119,5.31539777 15.6575438,4.97645613 L16.7967426,4 Z\" id=\"Combined-Shape\"></path>\n// </g>\n// </g>\n// </svg>\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M3.30352462,2.28241931 C3.6998335,1.89776658 4.33292796,1.90721575 4.71758069,2.30352462 L4.71758069,2.30352462 L21.2175807,19.3035246 C21.6022334,19.6998335 21.5927842,20.332928 21.1964754,20.7175807 C20.8001665,21.1022334 20.167072,21.0927842 19.7824193,20.6964754 L19.7824193,20.6964754 L18.127874,18.9919007 C18.1241295,18.9923786 18.1203785,18.9928359 18.1166211,18.9932723 L18,19 L4,19 C3.23933773,19 2.77101468,18.1926118 3.11084891,17.5416503 L3.16794971,17.4452998 L5,14.6972244 L5,9 C5,7.98873702 5.21529462,7.00715088 5.62359521,6.10821117 L3.28241931,3.69647538 C2.89776658,3.3001665 2.90721575,2.66707204 3.30352462,2.28241931 Z M7.00817933,8.71121787 L7,9 L7,14.6972244 C7,15.0356672 6.91413188,15.3676193 6.75167088,15.6624466 L6.66410059,15.8066248 L5.86851709,17 L16.1953186,16.9999993 L7.16961011,7.7028948 C7.08210009,8.02986218 7.02771758,8.36725335 7.00817933,8.71121787 Z M12,2 C15.7854517,2 18.8690987,5.00478338 18.995941,8.75935025 L19,9 L19,12 C19,12.5522847 18.5522847,13 18,13 C17.4871642,13 17.0644928,12.6139598 17.0067277,12.1166211 L17,12 L17,9 C17,6.23857625 14.7614237,4 12,4 C11.3902636,4 10.7970241,4.10872043 10.239851,4.31831953 C9.72293204,4.51277572 9.14624852,4.25136798 8.95179232,3.734449 C8.75733613,3.21753002 9.01874387,2.6408465 9.53566285,2.4463903 C10.3171048,2.15242503 11.1488212,2 12,2 Z' />,\n    'Mute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13,20 C13.5522847,20 14,20.4477153 14,21 C14,21.5522847 13.5522847,22 13,22 L13,22 L11,22 C10.4477153,22 10,21.5522847 10,21 C10,20.4477153 10.4477153,20 11,20 L11,20 Z M12,2 C15.8659932,2 19,5.13400675 19,9 L19,14.6972244 L20.8320503,17.4452998 C21.2750868,18.1098545 20.7986954,19 20,19 L4,19 C3.20130462,19 2.72491322,18.1098545 3.16794971,17.4452998 L5,14.6972244 L5,9 C5,5.13400675 8.13400675,2 12,2 Z M12,4 C9.23857625,4 7,6.23857625 7,9 L7,14.6972244 C7,15.0920743 6.88312395,15.4780897 6.66410059,15.8066248 L5.86851709,17 L18.1314829,17 L17.3358994,15.8066248 C17.1168761,15.4780897 17,15.0920743 17,14.6972244 L17,9 C17,6.23857625 14.7614237,4 12,4 Z' />,\n    'Unmute'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,12 C15.9072418,12 18.715318,13.0364023 20.3351717,15.1788288 C20.7665758,15.7493929 21,16.4451545 21,17.1604559 L21,18.2857143 C21,19.7847729 19.7847729,21 18.2857143,21 L5.71428571,21 C4.21522711,21 3,19.7847729 3,18.2857143 L3,17.160494 C3,16.445199 3.23340019,15.7494497 3.66478123,15.178891 C5.28463457,13.0364199 8.09272555,12 12,12 Z M12,14 C8.66170181,14 6.44476079,14.8182362 5.26012276,16.3850773 C5.09133017,16.6083279 5,16.8805766 5,17.160494 L5,18.2857143 C5,18.6802034 5.31979661,19 5.71428571,19 L18.2857143,19 C18.6802034,19 19,18.6802034 19,18.2857143 L19,17.1604559 C19,16.8805572 18.9086617,16.6083073 18.7398491,16.38504 C17.5552048,14.8182236 15.3382718,14 12,14 Z M12,2 C14.209139,2 16,3.790861 16,6 C16,8.209139 14.209139,10 12,10 C9.790861,10 8,8.209139 8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 C10,7.1045695 10.8954305,8 12,8 C13.1045695,8 14,7.1045695 14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'User'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M8,13 C11.3229116,13 13.7530244,13.8337117 15.2223821,15.5699359 C15.724477,16.1632234 16,16.915291 16,17.6925226 L16,18.5 C16,19.8807119 14.8807119,21 13.5,21 L2.5,21 C1.11928813,21 0,19.8807119 0,18.5 L0,17.6925204 C0,16.9152876 0.275524605,16.1632192 0.777621166,15.569932 C2.24697824,13.8337108 4.67709024,13 8,13 Z M17.9515112,14.0335753 L18.0683205,14.0347288 C20.2213596,14.1802785 21.8813904,14.7876525 23.0130897,15.8958397 C23.5916808,16.4623828 23.9388003,17.2206225 23.9926356,18.0235027 L24,18.2434663 L24,18.75 C24,19.940864 23.0748384,20.9156449 21.9040488,20.9948092 L21.75,21 L19,21 C18.4477153,21 18,20.5522847 18,20 C18,19.4871642 18.3860402,19.0644928 18.8833789,19.0067277 L19,19 L21.75,19 C21.8683467,19 21.9674868,18.9177666 21.9933973,18.8073227 L22,18.75 L22,18.2434663 C22,17.8977921 21.8608093,17.5666871 21.6138154,17.3248364 C20.8641159,16.5907126 19.6490875,16.1461566 17.9334244,16.0301743 C17.3823973,15.9929238 16.9658991,15.5160306 17.0031496,14.9650035 C17.0377394,14.4533355 17.4514089,14.0576643 17.9515112,14.0335753 L17.9515112,14.0335753 Z M8,15 C5.21130036,15 3.33538166,15.6435809 2.30428673,16.861943 C2.10781409,17.0940989 2,17.3883868 2,17.6925212 L2,18.5 C2,18.7761424 2.22385763,19 2.5,19 L13.5,19 C13.7761424,19 14,18.7761424 14,18.5 L14,17.6925226 C14,17.3883883 13.8921864,17.0941004 13.6957148,16.8619448 C12.6646202,15.6435815 10.788701,15 8,15 Z M17,5 C18.9329966,5 20.5,6.56700338 20.5,8.5 C20.5,10.4329966 18.9329966,12 17,12 C15.0670034,12 13.5,10.4329966 13.5,8.5 C13.5,6.56700338 15.0670034,5 17,5 Z M8,3 C10.209139,3 12,4.790861 12,7 C12,9.209139 10.209139,11 8,11 C5.790861,11 4,9.209139 4,7 C4,4.790861 5.790861,3 8,3 Z M17,7 C16.1715729,7 15.5,7.67157288 15.5,8.5 C15.5,9.32842712 16.1715729,10 17,10 C17.8284271,10 18.5,9.32842712 18.5,8.5 C18.5,7.67157288 17.8284271,7 17,7 Z M8,5 C6.8954305,5 6,5.8954305 6,7 C6,8.1045695 6.8954305,9 8,9 C9.1045695,9 10,8.1045695 10,7 C10,5.8954305 9.1045695,5 8,5 Z' />,\n    'Group'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.11589252,22.3301061 2,22.0503168 2,21.7585786 L2,6 C2,3.790861 3.790861,2 6,2 L18,2 C20.209139,2 22,3.790861 22,6 L22,15 C22,17.209139 20.209139,19 18,19 L7.41421356,19 Z M4,19.5857864 L6.20502525,17.3807612 C6.44882255,17.1369639 6.77948263,17 7.12426407,17 L18,17 C19.1045695,17 20,16.1045695 20,15 L20,6 C20,4.8954305 19.1045695,4 18,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,19.5857864 Z' />,\n    'Message'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M6,2 L18,2 C20.1421954,2 21.8910789,3.68396847 21.9951047,5.80035966 L22,6 L22,10 C22,10.5522847 21.5522847,11 21,11 C20.4871642,11 20.0644928,10.6139598 20.0067277,10.1166211 L20,10 L20,6 C20,4.9456382 19.1841222,4.08183488 18.1492623,4.00548574 L18,4 L6,4 C4.9456382,4 4.08183488,4.81587779 4.00548574,5.85073766 L4,6 L4,19.5857864 L6.20502525,17.3807612 C6.41399436,17.1717921 6.68678103,17.0413128 6.97757724,17.0082977 L7.12426407,17 L13,17 C13.5522847,17 14,17.4477153 14,18 C14,18.5128358 13.6139598,18.9355072 13.1166211,18.9932723 L13,19 L7.41421356,19 L3.87781746,22.5363961 C3.44824074,22.9659728 2.75175926,22.9659728 2.32218254,22.5363961 C2.14536253,22.3595761 2.034957,22.1287566 2.00702113,21.8826983 L2,21.7585786 L2,6 C2,3.85780461 3.68396847,2.10892112 5.80035966,2.00489531 L6,2 L18,2 L6,2 Z M19,12 C21.209139,12 23,13.790861 23,16 C23,18.209139 21.209139,20 19,20 C16.790861,20 15,18.209139 15,16 C15,13.790861 16.790861,12 19,12 Z M19,14 C17.8954305,14 17,14.8954305 17,16 C17,17.1045695 17.8954305,18 19,18 C20.1045695,18 21,17.1045695 21,16 C21,14.8954305 20.1045695,14 19,14 Z' />,\n    'Unread'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport DialogContent from './DialogContent';\nimport DialogBadge from './DialogBadge';\nimport DialogTitle from './DialogTitle';\nimport DialogMeta from './DialogMeta';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport UnarchiveIcon from '../../Assets/Icons/Unarchive';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport MuteIcon from '../../Assets/Icons/Mute';\nimport UnmuteIcon from '../../Assets/Icons/Unmute';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport MessageIcon from '../../Assets/Icons/Message';\nimport UnreadIcon from '../../Assets/Icons/Unread';\nimport {\n    canAddChatToList,\n    getViewInfoTitle,\n    isChatArchived,\n    isChatMuted,\n    isChatPinned,\n    isChatSecret,\n    isChatUnread,\n    isMeChat,\n    isPrivateChat\n} from '../../Utils/Chat';\nimport {\n    addChatToList,\n    toggleChatIsMarkedAsUnread,\n    toggleChatIsPinned,\n    toggleChatNotificationSettings\n} from '../../Actions/Chat';\nimport { openChat } from '../../Actions/Client';\nimport { viewMessages } from '../../Actions/Message';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialog.css';\n\nclass Dialog extends Component {\n    static contextMenuId;\n\n    constructor(props) {\n        super(props);\n\n        this.dialog = React.createRef();\n\n        const chat = ChatStore.get(this.props.chatId);\n        this.state = {\n            chat,\n            contextMenu: false,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, t, hidden, isLastPinned, chatList, style } = this.props;\n        const { contextMenu } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] Dialog.shouldUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            // console.log('[vl] Dialog.shouldUpdate true t');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] Dialog.shouldUpdate true hidden');\n            return true;\n        }\n\n        if (nextProps.isLastPinned !== isLastPinned) {\n            // console.log('[vl] Dialog.shouldUpdate true isLastPinned');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.chatList !== chatList) {\n            // console.log('[vl] Dialog.shouldUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextProps.style && style && style.top !== nextProps.style.top) {\n            // console.log('[vl] Dialog.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] Dialog.shouldUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.previousChatId || chatId === update.nextChatId) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelect = event => {\n        if (event.button === 0) {\n            openChat(this.props.chatId);\n        }\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { chatId, chatList } = this.props;\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const contextMenuId = new Date();\n            Dialog.contextMenuId = contextMenuId;\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const isPinned = isChatPinned(chatId, chatList);\n            const canTogglePin = (await this.canPinChats(chatId)) || isPinned;\n            const canToggleArchive = canAddChatToList(chatId);\n            const canMute = !isMeChat(chatId);\n\n            if (Dialog.contextMenuId !== contextMenuId) {\n                return;\n            }\n\n            this.setState({\n                contextMenu: true,\n                canTogglePin,\n                canToggleArchive,\n                canMute,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleMute = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        toggleChatNotificationSettings(chatId, !isChatMuted(chatId));\n    };\n\n    canPinChats = async chatId => {\n        const { chatList } = this.props;\n\n        const pinnedSumMaxOption = isChatArchived(chatId)\n            ? OptionStore.get('pinned_archived_chat_count_max')\n            : OptionStore.get('pinned_chat_count_max');\n        if (!pinnedSumMaxOption) return false;\n\n        const isSecret = isChatSecret(chatId);\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: pinnedSumMaxOption.value + 10\n        });\n\n        const pinnedSum = chats.chat_ids.reduce((x, id) => {\n            if (isChatSecret(id) !== isSecret) return x;\n\n            const chat = ChatStore.get(id);\n\n            return x + (chat && isChatPinned(chat.id, chatList) ? 1 : 0);\n        }, 0);\n\n        return pinnedSum < pinnedSumMaxOption.value;\n    };\n\n    handlePin = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId, chatList } = this.props;\n        const isPinned = isChatPinned(chatId, chatList);\n\n        if (!isPinned && !this.canPinChats(chatId)) return;\n\n        toggleChatIsPinned(chatId, chatList, !isPinned);\n    };\n\n    handleArchive = async event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n        if (!canAddChatToList(chatId)) return;\n\n        addChatToList(chatId, { '@type': isChatArchived(chatId) ? 'chatListMain' : 'chatListArchive' });\n    };\n\n    handleViewInfo = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        openChat(chatId, null, true);\n    };\n\n    handleRead = event => {\n        this.handleCloseContextMenu(event);\n\n        const { chatId } = this.props;\n\n        const isUnread = isChatUnread(chatId);\n        if (isUnread) {\n            const chat = ChatStore.get(chatId);\n            if (!chat) return;\n\n            const { is_marked_as_unread, last_message, unread_count } = chat;\n            if (unread_count > 0 && last_message) {\n                viewMessages(chatId, [last_message.id], true);\n            } else if (is_marked_as_unread) {\n                toggleChatIsMarkedAsUnread(chatId, false);\n            }\n        } else {\n            toggleChatIsMarkedAsUnread(chatId, true);\n        }\n    };\n\n    render() {\n        const { chatId, chatList, showSavedMessages, hidden, t, isLastPinned, style } = this.props;\n        const { contextMenu, left, top, canToggleArchive, canTogglePin, canMute } = this.state;\n\n        const isPinned = isChatPinned(chatId, chatList);\n        const currentChatId = ApplicationStore.getChatId();\n        const isSelected = currentChatId === chatId;\n        const isMuted = isChatMuted(chatId);\n        const isUnread = isChatUnread(chatId);\n        const isArchived = isChatArchived(chatId);\n        return (\n            <div\n                ref={this.dialog}\n                className={classNames('dialog', { 'item-selected': isSelected }, { 'dialog-hidden': hidden })}\n                onMouseDown={this.handleSelect}\n                onContextMenu={this.handleContextMenu}\n                style={style}>\n                <div className='dialog-wrapper'>\n                    <ChatTile chatId={chatId} dialog showSavedMessages={showSavedMessages} showOnline />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} />\n                            <DialogMeta chatId={chatId} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <DialogContent chatId={chatId} />\n                            <DialogBadge chatId={chatId} chatList={chatList} />\n                        </div>\n                    </div>\n                </div>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {canToggleArchive && (\n                            <MenuItem onClick={this.handleArchive}>\n                                {isArchived ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnarchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Unarchive')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <ArchiveIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('Archive')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canTogglePin && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleViewInfo}>\n                            <ListItemIcon>\n                                {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                            </ListItemIcon>\n                            <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                        </MenuItem>\n                        { canMute && (\n                            <MenuItem onClick={this.handleMute}>\n                                {isMuted ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnmuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsUnmute')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <MuteIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('ChatsMute')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        <MenuItem onClick={this.handleRead}>\n                            {isUnread ? (\n                                <>\n                                    <ListItemIcon>\n                                        <MessageIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsRead')} />\n                                </>\n                            ) : (\n                                <>\n                                    <ListItemIcon>\n                                        <UnreadIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary={t('MarkAsUnread')} />\n                                </>\n                            )}\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nDialog.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    chatList: PropTypes.object.isRequired,\n    hidden: PropTypes.bool,\n    showSavedMessages: PropTypes.bool,\n    isLastPinned: PropTypes.bool,\n    style: PropTypes.object\n};\n\nDialog.defaultProps = {\n    hidden: false,\n    showSavedMessages: true\n};\n\nexport default withTranslation()(Dialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function viewMessages(chatId, messageIds, forceRead) {\n    TdLibController.send({\n        '@type': 'viewMessages',\n        chat_id: chatId,\n        message_ids: messageIds,\n        force_read: forceRead\n    });\n}\n\nexport function pinMessage(chatId, messageId, disableNotification = false) {\n    TdLibController.send({\n        '@type': 'pinChatMessage',\n        chat_id: chatId,\n        message_id: messageId,\n        disable_notification: disableNotification\n    });\n}\n\nexport function unpinMessage(chatId) {\n    TdLibController.send({\n        '@type': 'unpinChatMessage',\n        chat_id: chatId\n    });\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatTitle } from '../../Utils/Chat';\nimport './DialogPlaceholder.css';\n\nclass DialogPlaceholder extends React.Component {\n    render() {\n        const { chatId, index, showTitle } = this.props;\n\n        let title = null;\n        if (showTitle) {\n            title = getChatTitle(chatId, true);\n        }\n\n        const titleWidth = `${50 + Math.sin(index) * 10}%`;\n        const contentWidth = `${70 + Math.cos(index) * 10}%`;\n\n        return (\n            <div className='dialog-placeholder'>\n                <div className='dialog-placeholder-wrapper'>\n                    <div className='dialog-placeholder-tile' />\n                    <div className='dialog-placeholder-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {showTitle ? (\n                                title\n                            ) : (\n                                <div className='dialog-placeholder-title' style={{ width: titleWidth }} />\n                            )}\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-placeholder-content' style={{ width: contentWidth }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDialogPlaceholder.propTypes = {\n    index: PropTypes.number.isRequired,\n    showTitle: PropTypes.bool\n};\n\nexport default DialogPlaceholder;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './VirtualizedList.css';\n\nconst style = {\n    listWrapper: height => ({\n        height,\n        position: 'relative'\n    }),\n    item: (index, height) => ({\n        height,\n        left: 0,\n        right: 0,\n        top: height * index,\n        position: 'absolute'\n    })\n};\n\nexport class VirtualizedList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        this.state = {\n            scrollTop: 0,\n            renderIds: new Map(),\n            renderIdsList: [],\n            viewportHeight: 0\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.source !== this.props.source) {\n            this.setViewportHeight();\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        return true;\n\n        // const { renderIds } = this.state;\n        // const { renderIds: nextRenderIds } = nextState;\n        //\n        // if (renderIds.size === nextRenderIds.size) {\n        //     renderIds.forEach((value, key) => {\n        //         if (!nextRenderIds.has(key)) {\n        //             return true;\n        //         }\n        //     });\n        //\n        //     return false;\n        // }\n        //\n        // return true;\n    }\n\n    componentDidMount() {\n        window.addEventListener('resize', this.setViewportHeight, true);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.addEventListener('scroll', this.setScrollPosition, true);\n\n        this.setViewportHeight();\n    }\n\n    setViewportHeight = () => {\n        const { source } = this.props;\n        const { scrollTop } = this.state;\n        const { current } = this.listRef;\n        if (!current) return;\n\n        const viewportHeight = parseFloat(window.getComputedStyle(current, null).getPropertyValue('height'));\n        const renderIds = this.getRenderIds(source, viewportHeight, scrollTop);\n\n        // console.log('[vl] setViewportHeight');\n        this.setState({ viewportHeight, ...renderIds });\n    };\n\n    getRenderIds(source, viewportHeight, scrollTop) {\n        const renderIds = new Map();\n        const renderIdsList = [];\n        source.forEach((item, index) => {\n            if (this.isVisibleItem(index, viewportHeight, scrollTop)) {\n                renderIds.set(index, index);\n                renderIdsList.push(index);\n            }\n        });\n\n        return { renderIds, renderIdsList };\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.setViewportHeight);\n\n        const { current } = this.listRef;\n        if (!current) return;\n        current.removeEventListener('scroll', this.setScrollPosition);\n    }\n\n    getListRenderIds() {\n        const { renderIds } = this.state;\n\n        return renderIds;\n    }\n\n    setScrollPosition = event => {\n        const { source, rowHeight, onScroll } = this.props;\n        const { viewportHeight, scrollTop } = this.state;\n\n        if (Math.abs(event.target.scrollTop - scrollTop) >= rowHeight) {\n            const renderIds = this.getRenderIds(source, viewportHeight, event.target.scrollTop);\n\n            this.setState({\n                scrollTop: event.target.scrollTop,\n                ...renderIds\n            });\n        }\n\n        if (onScroll) {\n            onScroll(event);\n        }\n    };\n\n    getListRef() {\n        return this.listRef;\n    }\n\n    isVisibleItem = (index, viewportHeight, scrollTop) => {\n        const { overScanCount, rowHeight } = this.props;\n\n        const itemTop = index * rowHeight;\n        const itemBottom = (index + 1) * rowHeight;\n\n        return (\n            itemTop > scrollTop - overScanCount * rowHeight &&\n            itemBottom < scrollTop + viewportHeight + overScanCount * rowHeight\n        );\n    };\n\n    render() {\n        const { className, source, renderItem, rowHeight } = this.props;\n        const { renderIds } = this.state;\n\n        const items = (source || []).map((item, index) => {\n            return renderIds.has(index) && renderItem({ index, style: style.item(index, rowHeight) });\n        });\n\n        // console.log('[vl] render', source, renderIds);\n\n        return (\n            <div ref={this.listRef} className={classNames('vlist', className)}>\n                <div style={style.listWrapper((source || []).length * rowHeight)}>{items}</div>\n                {/*<div className='vlist-top-border'/>*/}\n            </div>\n        );\n    }\n}\n\nVirtualizedList.defaultProps = {\n    source: [],\n    rowHeight: 72,\n    overScanCount: 5\n};\n\nVirtualizedList.propTypes = {\n    renderItem: PropTypes.func,\n    onScroll: PropTypes.func,\n    rowHeight: PropTypes.number,\n    className: PropTypes.string,\n    source: PropTypes.array.isRequired,\n    overScanCount: PropTypes.number.isRequired\n};\n\nexport default VirtualizedList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport function findLastTextNode(element) {\n    if (element.nodeType === Node.TEXT_NODE) {\n        return element;\n    }\n\n    for (let i = element.childNodes.length - 1; i >= 0; i--) {\n        const textNode = findLastTextNode(element.childNodes[i]);\n        if (textNode) {\n            return textNode;\n        }\n    }\n\n    return null;\n}\n\nexport function focusInput(element) {\n    if (!element) return;\n\n    const textNode = findLastTextNode(element);\n    if (textNode) {\n        const range = document.createRange();\n        range.setStart(textNode, textNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n    }\n\n    element.focus();\n}\n\nexport function scrollTop(element, behavior = 'smooth') {\n    if (!element) return;\n\n    element.scrollTop = Math.min(element.scrollTop, 100);\n    setTimeout(() => {\n        element.scrollTo({\n            top: 0,\n            behavior\n        });\n    }, 50);\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18.5,1.6784749 C19.8807119,1.6784749 21,2.79776303 21,4.1784749 L21,19.8215251 C21,20.4013736 20.7984395,20.9631907 20.4298256,21.4107932 C19.552097,22.4766065 17.9765451,22.6290792 16.9107319,21.7513507 L12,17.7064749 L12,19.5 C12,21.0976809 10.75108,22.4036609 9.17627279,22.4949073 L9,22.5 C7.34314575,22.5 6,21.1568542 6,19.5 L6,19.5 L5.99981203,16.8999437 C3.71766536,16.4366008 2,14.4188915 2,12 C2,9.23857625 4.23857625,7 7,7 L11.1412346,7 L16.9107319,2.24864931 C17.3583344,1.88003543 17.9201515,1.6784749 18.5,1.6784749 Z M8,19.5 C8,20.0522847 8.44771525,20.5 9,20.5 C9.55228475,20.5 10,20.0522847 10,19.5 L10,19.5 L10,16.9994749 L8,16.9994749 Z M18.5,3.6784749 C18.3840303,3.6784749 18.2716669,3.71878701 18.1821464,3.79250978 L12.4126491,8.54386047 C12.054567,8.83875158 11.6051134,9 11.1412346,9 L7,9 C5.34314575,9 4,10.3431458 4,12 C4,13.6568542 5.34314575,15 7,15 L11.1412346,15 C11.6051134,15 12.054567,15.1612484 12.4126491,15.4561395 L18.1821464,20.2074902 C18.395309,20.3830359 18.7104194,20.3525414 18.8859651,20.1393787 C18.9596879,20.0498582 19,19.9374948 19,19.8215251 L19,4.1784749 C19,3.90233253 18.7761424,3.6784749 18.5,3.6784749 Z' />,\n    'Channel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4,16 L20,16 C20.5522847,16 21,16.4477153 21,17 C21,17.5128358 20.6139598,17.9355072 20.1166211,17.9932723 L20,18 L4,18 C3.44771525,18 3,17.5522847 3,17 C3,16.4871642 3.38604019,16.0644928 3.88337887,16.0067277 L4,16 L20,16 L4,16 Z M4,11 L20,11 C20.5522847,11 21,11.4477153 21,12 C21,12.5128358 20.6139598,12.9355072 20.1166211,12.9932723 L20,13 L4,13 C3.44771525,13 3,12.5522847 3,12 C3,11.4871642 3.38604019,11.0644928 3.88337887,11.0067277 L4,11 Z M4,6 L20,6 C20.5522847,6 21,6.44771525 21,7 C21,7.51283584 20.6139598,7.93550716 20.1166211,7.99327227 L20,8 L4,8 C3.44771525,8 3,7.55228475 3,7 C3,6.48716416 3.38604019,6.06449284 3.88337887,6.00672773 L4,6 Z' />,\n    'Menu'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M11.9779053,15.294165 C12.6523978,15.294165 13.1985107,15.8124506 13.1985107,16.4732666 C13.1985107,17.1238794 12.6418359,17.6523682 11.9779053,17.6523682 C11.3175981,17.6523682 10.7572998,17.1168932 10.7572998,16.4732666 C10.7572998,15.8194152 11.3070616,15.294165 11.9779053,15.294165 Z M12.3306885,6.9 C14.2795758,6.9 15.719873,7.96860761 15.719873,9.65625 C15.719873,10.6709643 15.2884676,11.3128276 14.2962576,12.0165438 L13.7962596,12.3573922 C13.1714716,12.7953495 12.9391113,13.1198405 12.9391113,13.5887451 L12.9391113,13.7132568 C12.9391113,14.2033083 12.5618823,14.5499512 11.9986572,14.5499512 C11.4068652,14.5499512 11.0789551,14.2281702 11.0789551,13.630249 L11.0789551,13.4953613 C11.0789551,12.5573197 11.487326,11.9745882 12.4189711,11.3276124 L12.7619755,11.0871498 C13.5110635,10.5470305 13.7248291,10.2540011 13.7248291,9.73925781 C13.7248291,8.99900037 13.149745,8.51113281 12.2580566,8.51113281 C11.6278214,8.51113281 11.1498312,8.8062186 10.7980484,9.38963394 L10.5277106,9.73161327 L10.5277106,9.73161327 L10.4428973,9.8298462 C10.2452762,10.0412654 10.0433297,10.1297852 9.70556641,10.1297852 C9.27040611,10.1297852 8.9,9.79174463 8.9,9.31384277 C8.9,9.13743147 8.92867764,8.96536563 8.98734042,8.76592778 C9.31829759,7.6784971 10.623966,6.9 12.3306885,6.9 Z' />,\n    'Help'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M13.4542714,1 C14.5034049,1 15.447759,1.80035641 15.6254934,2.83409123 L15.8863908,4.35151652 C16.4016786,4.58533298 16.8892685,4.86975342 17.3418997,5.20083722 L18.729489,4.68523838 C19.7215225,4.31661974 20.8874905,4.74674629 21.4093705,5.66596818 L22.3631385,7.34590292 C22.8807104,8.25753682 22.6641696,9.47960173 21.8668015,10.158283 L20.7203437,11.1340925 C20.7523279,11.4263818 20.768775,11.713662 20.768775,12 C20.768775,12.2863013 20.7523321,12.5735444 20.7203561,12.8657949 L21.8666717,13.8411466 C22.6665193,14.5217032 22.8803536,15.7423983 22.3631806,16.6535107 L21.4094127,18.3337799 C20.8871999,19.2537711 19.7186485,19.6823124 18.729489,19.3147616 L17.3418997,18.7991628 C16.8892685,19.1302466 16.4016786,19.414667 15.8863908,19.6484835 L15.6254934,21.1659088 C15.4482371,22.1968626 14.500959,23 13.4542714,23 L11.5464067,23 C10.4973482,23 9.55294448,22.1997516 9.37499917,21.1661206 L9.11371177,19.6483803 C8.59870239,19.4145642 8.11116816,19.1301583 7.65836517,18.7991106 L6.27103566,19.3147347 C5.27906015,19.683419 4.11313098,19.25315 3.59116388,18.3339086 L2.63706709,16.6536394 C2.11936149,15.741903 2.33579039,14.5197379 3.13332831,13.8411466 L4.27990265,12.8655748 C4.24777315,12.5724368 4.23122501,12.2856623 4.23122501,12 C4.23122501,11.7143012 4.24777739,11.4274899 4.27991498,11.1343127 L3.1331985,10.158283 C2.33341387,9.47754488 2.11971252,8.25678535 2.6371093,7.34577419 L3.59120609,5.66583945 C4.11357343,4.74607633 5.28204594,4.31769072 6.27103566,4.68526527 L7.65836517,5.20088944 C8.02060756,4.93605128 8.40507795,4.70106385 8.80806121,4.49794854 L9.11371177,4.35161967 L9.37499917,2.83387942 C9.55246572,1.80302941 10.4997942,1 11.5464067,1 L13.4542714,1 Z M13.4542714,3 L11.5464067,3 C11.4759721,3 11.3587093,3.09940116 11.3460046,3.17319893 L10.9911423,5.23448734 C10.9307198,5.5854636 10.6881938,5.87781899 10.3544182,6.00203275 C9.66471384,6.25870451 9.03276419,6.62813555 8.48454956,7.09507573 C8.20871593,7.3300162 7.82737524,7.39737412 7.48774669,7.2711455 L5.57427032,6.55997006 C5.50662795,6.53482964 5.36908018,6.58525743 5.33030218,6.65353615 L4.37620539,8.3334709 C4.33235155,8.41068695 4.36153792,8.57741281 4.42951339,8.63527025 L5.99467372,9.96745916 C6.26327177,10.1960769 6.39156502,10.5492878 6.3322987,10.8969923 C6.26535074,11.2897637 6.23122501,11.6509097 6.23122501,12 C6.23122501,12.3490903 6.26535074,12.7102363 6.3322987,13.1030077 C6.39157523,13.4507721 6.26322722,13.80404 5.99454391,14.0326513 L4.42938358,15.3643802 C4.36263141,15.4211768 4.33280785,15.5895892 4.3762476,15.6660914 L5.33034439,17.3463606 C5.36962791,17.4155432 5.5053715,17.4656373 5.57427032,17.4400299 L7.48774669,16.7288545 C7.82737524,16.6026259 8.20871593,16.6699838 8.48454956,16.9049243 C9.03276419,17.3718644 9.66471384,17.7412955 10.3544182,17.9979673 C10.6881938,18.122181 10.9307198,18.4145364 10.9911423,18.7655127 L11.3460046,20.8268011 C11.3591616,20.9032262 11.473368,21 11.5464067,21 L13.4542714,21 C13.5246311,21 13.6417446,20.9007069 13.6544151,20.8270129 L14.0088212,18.7657245 C14.0691981,18.4145617 14.3118672,18.1220527 14.6458423,17.9978703 C15.3359969,17.7412494 15.9677081,17.3719578 16.5150513,16.9052644 C16.7908836,16.6700754 17.1723926,16.6025695 17.512181,16.7288276 L19.4261097,17.4400031 C19.4938321,17.4651673 19.631347,17.4147366 19.6700861,17.3464893 L20.623854,15.6662201 C20.6677382,15.5889085 20.6385289,15.422164 20.5706164,15.3643802 L19.0054561,14.0326513 C18.7363402,13.803672 18.6080436,13.4496677 18.6679701,13.1014383 C18.7347206,12.7135552 18.768775,12.3516302 18.768775,12 C18.768775,11.6483698 18.7347206,11.2864448 18.6679701,10.8985617 C18.6080539,10.5503923 18.7362957,10.196445 19.0053263,9.96745916 L20.5704866,8.63527025 C20.6374086,8.57830946 20.6672761,8.40975011 20.6238962,8.33334216 L19.6701283,6.65340742 C19.6309511,6.58440211 19.4952014,6.53432393 19.4261097,6.55999695 L17.512181,7.27117239 C17.1723926,7.39743055 16.7908836,7.32992456 16.5150513,7.09473562 C15.9677081,6.62804223 15.3359969,6.25875055 14.6458423,6.00212967 C14.3118672,5.87794735 14.0691981,5.58543825 14.0088212,5.23427554 L13.6544151,3.17298713 C13.6412929,3.0966658 13.5272352,3 13.4542714,3 Z M12.5,10 C13.6045695,10 14.5,10.8954305 14.5,12 C14.5,13.1045695 13.6045695,14 12.5,14 C11.3954305,14 10.5,13.1045695 10.5,12 C10.5,10.8954305 11.3954305,10 12.5,10 Z' />,\n    'Settings'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nclass CacheManager {\n    async load(key) {\n        const value = localStorage.getItem(key);\n        if (!value) return null;\n\n        try {\n            return JSON.parse(value);\n        } catch {\n            return null;\n        }\n    }\n\n    async save(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    async remove(key) {\n        localStorage.removeItem(key);\n    }\n\n    async clear() {\n        localStorage.clear();\n    }\n}\n\nconst manager = new CacheManager();\nexport default manager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport EventEmitter from './EventEmitter';\nimport { debounce } from '../Utils/Common';\nimport CacheManager from '../Workers/CacheManager';\nimport BasicGroupStore from './BasicGroupStore';\nimport ChatStore from './ChatStore';\nimport FileStore from './FileStore';\nimport MessageStore from './MessageStore';\nimport OptionStore from './OptionStore';\nimport SupergroupStore from './SupergroupStore';\nimport UserStore from './UserStore';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass CacheStore extends EventEmitter {\n    constructor() {\n        super();\n\n        this.cacheContacts = false;\n\n        this.reset();\n\n        this.addTdLibListener();\n\n        this.saveInternal = debounce(this.saveInternal, 2000);\n    }\n\n    reset = () => {\n        this.filters = null;\n        this.chatIds = [];\n        this.archiveChatIds = [];\n        this.meChat = null;\n        if (this.cacheContacts) {\n            this.contacts = null;\n        }\n\n        this.cache = null;\n    };\n\n    onUpdate = update => {\n        switch (update['@type']) {\n            case 'updateAuthorizationState': {\n                const { authorization_state } = update;\n                if (!authorization_state) break;\n\n                switch (authorization_state['@type']) {\n                    case 'authorizationStateClosed': {\n                        this.reset();\n                        break;\n                    }\n                    case 'authorizationStateLoggingOut':\n                    case 'authorizationStateWaitCode':\n                    case 'authorizationStateWaitPhoneNumber':\n                    case 'authorizationStateWaitPassword':\n                    case 'authorizationStateWaitRegistration': {\n                        CacheManager.remove('cache');\n                        CacheManager.remove('files');\n                        if (this.cacheContacts) {\n                            CacheManager.remove('contacts');\n                        }\n                        break;\n                    }\n                }\n\n                break;\n            }\n            default:\n                break;\n        }\n    };\n\n    onClientUpdate = update => {\n        switch (update['@type']) {\n            case 'clientUpdateDialogsReady': {\n                this.clear();\n            }\n            default:\n                break;\n        }\n    };\n\n    addTdLibListener = () => {\n        TdLibController.on('update', this.onUpdate);\n        TdLibController.on('clientUpdate', this.onClientUpdate);\n    };\n\n    removeTdLibListener = () => {\n        TdLibController.off('update', this.onUpdate);\n        TdLibController.off('clientUpdate', this.onClientUpdate);\n    };\n\n    async load() {\n        // console.log('[cm] getChats start');\n        const promises = [];\n        promises.push(CacheManager.load('cache').catch(error => null));\n        promises.push(CacheManager.load('files').catch(error => null));\n        promises.push(CacheManager.load('filters').catch(error => null));\n        if (this.cacheContacts) {\n            promises.push(CacheManager.load('contacts').catch(error => null));\n        }\n        const [cache, files, filters, contacts] = await Promise.all(promises);\n        this.cache = cache;\n        if (this.cache) {\n            this.cache.files = files || [];\n        }\n\n        if (this.cacheContacts) {\n            if (contacts) {\n                (contacts || []).forEach(x => {\n                    UserStore.set(x);\n                })\n\n                this.contacts = {\n                    '@type': 'users',\n                    user_ids: contacts.map(x => x.id),\n                    total_count: contacts.length\n                };\n            }\n        }\n\n        this.filters = filters;\n\n        if (this.cache) {\n            this.parseCache(this.cache);\n        }\n\n        // console.log('[cm] load', this.filters, filters);\n        return this.cache;\n    }\n\n    parseCache(cache) {\n        if (!cache) return;\n\n        const { meChat, chats, archiveChats, users, basicGroups, supergroups, files, options } = cache;\n        // console.log('[cache] parseCache', cache);\n\n        (files || []).filter(x => Boolean(x)).forEach(({ id, url }) => {\n            FileStore.setDataUrl(id, url);\n        });\n\n        (users || []).forEach(x => {\n            UserStore.set(x);\n        });\n\n        (basicGroups || []).forEach(x => {\n            BasicGroupStore.set(x);\n        });\n\n        (supergroups || []).forEach(x => {\n            SupergroupStore.set(x);\n        });\n\n        (chats || []).concat(archiveChats || []).concat([meChat]).forEach(x => {\n            if (x) {\n                delete x.OutputTypingManager;\n\n                ChatStore.set(x);\n                if (x.photo) {\n                    if (x.photo.small) FileStore.set(x.photo.small);\n                    if (x.photo.big) FileStore.set(x.photo.big);\n                }\n                if (x.position) {\n                    ChatStore.updateChatChatLists(x.id);\n                }\n                if (x.last_message) {\n                    MessageStore.set(x.last_message);\n                }\n            }\n        });\n\n        (options || []).forEach(([id, option]) => {\n            OptionStore.set(id, option);\n        });\n    }\n\n    async getCache(chatIds, archiveChatIds) {\n        const fileMap = new Map();\n        const userMap = new Map();\n        const basicGroupMap = new Map();\n        const supergroupMap = new Map();\n        const meChat = this.meChat;\n        const chats = chatIds.map(x => ChatStore.get(x));\n        const archiveChats = archiveChatIds.map(x => ChatStore.get(x));\n\n\n        chats.concat(archiveChats).concat([meChat]).forEach(x => {\n            const { photo, type, last_message } = x;\n            if (photo && photo.small) {\n                const { id } = photo.small;\n                if (id) {\n                    const blob = FileStore.getBlob(id);\n                    if (blob) {\n                        fileMap.set(id, blob);\n                    }\n                }\n            }\n\n            switch (type['@type']) {\n                case 'chatTypeBasicGroup': {\n                    const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                    if (basicGroup) {\n                        basicGroupMap.set(basicGroup.id, basicGroup);\n                    }\n                }\n                case 'chatTypePrivate':\n                case 'chatTypeSecret': {\n                    const user = UserStore.get(type.user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n                case 'chatTypeSupergroup': {\n                    const supergroup = SupergroupStore.get(type.supergroup_id);\n                    if (supergroup) {\n                        supergroupMap.set(supergroup.id, supergroup);\n                    }\n                }\n            }\n\n            if (last_message) {\n                const { sender_user_id } = last_message;\n                if (sender_user_id) {\n                    const user = UserStore.get(sender_user_id);\n                    if (user) {\n                        userMap.set(user.id, user);\n                    }\n                }\n            }\n        });\n\n        return {\n            meChat,\n            chats,\n            archiveChats,\n            users: [...userMap.values()],\n            basicGroups: [...basicGroupMap.values()],\n            supergroups: [...supergroupMap.values()],\n            files: [...fileMap.entries()],\n            options: [...OptionStore.items.entries()]\n        };\n    }\n\n    async save(filters, chatIds, archiveChatIds) {\n        this.chatIds = chatIds;\n        this.archiveChatIds = archiveChatIds;\n        this.meChat = this.meChat || await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: false\n        });\n        if (this.cacheContacts) {\n            this.contacts = this.contacts || await TdLibController.send({\n                '@type': 'getContacts'\n            });\n        }\n        this.filters = filters;\n\n        this.saveInternal();\n    }\n\n    async saveInternal() {\n        // console.log('[cm] saveInternal', this.filters, this.chatIds, this.archiveChatIds);\n        const cache = await this.getCache(this.chatIds, this.archiveChatIds);\n        const files = cache.files;\n        cache.files = [];\n        // console.log('[cm] save cache', cache);\n        await CacheManager.save('cache', cache);\n\n        const promises = [];\n        files.forEach(x => {\n            const [id, blob] = x;\n            promises.push(\n                new Promise((resolve, reject) => {\n                    const fileReader = new FileReader();\n                    fileReader.readAsDataURL(blob);\n                    fileReader.onload = e => {\n                        resolve({ id, url: e.target.result });\n                    };\n                    fileReader.onerror = e => {\n                        resolve(null);\n                    };\n                })\n            );\n        });\n        // console.log('[cm] save files start', files);\n        const results = await Promise.all(promises);\n        // console.log('[cm] save files', results);\n        await CacheManager.save('files', results);\n\n        if (this.cacheContacts) {\n            const contacts = this.contacts.user_ids.map(x => UserStore.get(x));\n            await CacheManager.save('contacts', contacts);\n        }\n\n        if (this.filters) {\n            await CacheManager.save('filters', this.filters);\n        }\n    }\n\n    clear() {\n        if (this.cache) {\n            const { files } = this.cache;\n\n            files.filter(x => Boolean(x)).forEach(({ id, url }) => {\n                FileStore.deleteDataUrl(id);\n            });\n        }\n    }\n}\n\nconst store = new CacheStore();\nwindow.cache = store;\nexport default store;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport ChannelIcon from '../../Assets/Icons/Channel';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ArchiveIcon from '../../Assets/Icons/Archive';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MenuIcon from '../../Assets/Icons/Menu';\nimport GroupIcon from '../../Assets/Icons/Group';\nimport HelpIcon from '../../Assets/Icons/Help';\nimport SavedIcon from '../../Assets/Icons/Saved';\nimport SettingsIcon from '../../Assets/Icons/Settings';\nimport UserIcon from '../../Assets/Icons/User';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport { openArchive, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            anchorEl: null,\n            isSmallWidth: AppStore.isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        //await update();\n    };\n\n    handleNewChannel = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: true\n        });\n    };\n\n    handleNewGroup = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: true\n        });\n    };\n\n    handleContacts = event => {\n        this.handleMenuClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: true\n        });\n    };\n\n    handleArchived = event => {\n        this.handleMenuClose();\n\n        openArchive();\n    };\n\n    handleSaved = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        openChat(chat.id);\n    };\n\n    handleSettings = async event => {\n        this.handleMenuClose();\n\n        let chat = CacheStore.cache ? CacheStore.cache.meChat : null;\n        if (!chat) {\n            chat = await TdLibController.send({\n                '@type': 'createPrivateChat',\n                user_id: UserStore.getMyId(),\n                force: false\n            });\n        }\n\n        if (!chat) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: true,\n            chatId: chat.id\n        });\n    };\n\n    handleHelp = async event => {\n        this.handleMenuClose();\n        // unregister();\n    };\n\n    handleSearch = () => {\n        this.handleMenuClose();\n\n        searchChat(0);\n    };\n\n    render() {\n        const { t, timeout, popup, showClose, onClose } = this.props;\n        const { anchorEl, authorizationState, isSmallWidth } = this.state;\n\n        const mainMenuControl =\n            !showClose && isAuthorizationReady(authorizationState) ? (\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left'\n                    }}>\n                    <MenuItem onClick={this.handleNewChannel}>\n                        <ListItemIcon>\n                            <ChannelIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewChannel')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleNewGroup}>\n                        <ListItemIcon>\n                            <GroupIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('NewGroup')} />\n                    </MenuItem>\n                    { isSmallWidth && (\n                        <MenuItem onClick={this.handleSearch}>\n                            <ListItemIcon>\n                                <SearchIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Search')} />\n                        </MenuItem>\n                    )}\n                    <MenuItem onClick={this.handleContacts}>\n                        <ListItemIcon>\n                            <UserIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Contacts')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleArchived}>\n                        <ListItemIcon>\n                            <ArchiveIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Archived')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSaved}>\n                        <ListItemIcon>\n                            <SavedIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Saved')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleSettings}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Settings')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleHelp}>\n                        <ListItemIcon>\n                            <HelpIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('SettingsHelp')} />\n                    </MenuItem>\n                </Menu>\n            ) : null;\n\n        const closeIcon = popup\n            ? <CloseIcon/>\n            : <ArrowBackIcon/>;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-left-button main-menu-button'\n                    aria-label='Menu'\n                    onClick={showClose ? onClose : this.handleMenuOpen}>\n                    { timeout\n                        ? (<SpeedDialIcon open={showClose} openIcon={<ArrowBackIcon />} icon={<MenuIcon />} />)\n                        : (<>{showClose ? closeIcon : <MenuIcon />}</>)\n                    }\n\n                </IconButton>\n                {mainMenuControl}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport SearchIcon from '../../../Assets/Icons/Search';\nimport './SearchInput.css';\n\nclass SearchInput extends React.Component {\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        } else if (event.keyCode === 27) {\n            const { onChange, onClose } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n\n            if (element.innerText) {\n                event.stopPropagation();\n                event.nativeEvent.stopImmediatePropagation();\n\n                element.innerText = null;\n                if (onChange) onChange(element.innerText);\n                return;\n            }\n\n            if (onClose) {\n                onClose(event);\n            }\n        } else if (event.keyCode === 8) {\n            const { onBackspace } = this.props;\n\n            const element = event.target;\n            if (!element) return;\n            if (element.innerText) return;\n\n            if (onBackspace) {\n                event.stopPropagation();\n                onBackspace();\n            }\n        }\n    };\n\n    handleKeyUp = event => {\n        const element = event.target;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = event => {\n        const { onChange } = this.props;\n\n        const element = event.target;\n        if (!element) return;\n\n        if (onChange) {\n            onChange(element.innerText);\n        }\n    };\n\n    render() {\n        const { inputRef, t, onFocus, hint, showIcon } = this.props;\n\n        return (\n            <div className='search-input'>\n                <div\n                    id='search-inputbox'\n                    ref={inputRef}\n                    placeholder={hint || t('Search')}\n                    contentEditable\n                    suppressContentEditableWarning\n                    onKeyDown={this.handleKeyDown}\n                    onKeyUp={this.handleKeyUp}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                    onFocus={onFocus}\n                />\n                {showIcon && <SearchIcon className='search-input-icon' />}\n            </div>\n        );\n    }\n}\n\nSearchInput.propTypes = {\n    inputRef: PropTypes.object,\n    hint: PropTypes.string,\n    showIcon: PropTypes.bool,\n    onBackspace: PropTypes.func,\n    onChange: PropTypes.func,\n    onFocus: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nSearchInput.defaultProps = {\n    showIcon: true\n}\n\nexport default withTranslation()(SearchInput);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MainMenuButton from './MainMenuButton';\nimport SearchInput from './Search/SearchInput';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport '../ColumnMiddle/Header.css';\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            open: false\n        };\n    }\n\n    setInitQuery(query) {\n        const { onSearchTextChange } = this.props;\n\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.innerText = query;\n            if (searchInput.childNodes.length > 0) {\n                const range = document.createRange();\n                range.setStart(searchInput.childNodes[0], searchInput.childNodes[0].length);\n                range.collapse(true);\n\n                const selection = window.getSelection();\n                selection.removeAllRanges();\n                selection.addRange(range);\n            }\n            searchInput.focus();\n            onSearchTextChange(query);\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { openSearch } = this.props;\n\n        if (openSearch !== prevProps.openSearch) {\n            if (openSearch) {\n                this.focusInput();\n            } else {\n                const searchInput = this.searchInputRef.current;\n                if (searchInput) {\n                    searchInput.innerText = null;\n                }\n            }\n        }\n    }\n\n    focusInput() {\n        const searchInput = this.searchInputRef.current;\n        if (searchInput) {\n            searchInput.focus();\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.popup) {\n            this.focusInput();\n        }\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleSearchTextChange = () => {\n        const { onSearchTextChange } = this.props;\n\n        const element = this.searchInputRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        onSearchTextChange(innerText);\n    };\n\n    handleCloseSearch = () => {\n        this.handleSearch();\n    };\n\n    handleFocus = () => {\n        this.handleSearch();\n    };\n\n    render() {\n        const { openSearch, timeout, popup } = this.props;\n\n        let content = null;\n        let showBack = false;\n        if (openSearch) {\n            showBack = true;\n            content = (\n                <SearchInput\n                    inputRef={this.searchInputRef}\n                    onChange={this.handleSearchTextChange}\n                    onClose={this.handleCloseSearch}\n                />\n            );\n        } else {\n            content = <SearchInput inputRef={this.searchInputRef} onFocus={this.handleFocus} />;\n        }\n\n        return (\n            <div className='header-master'>\n                <MainMenuButton timeout={timeout} showClose={showBack} popup={popup} onClose={this.handleCloseSearch} />\n                {content}\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired,\n    timeout: PropTypes.bool,\n    popup: PropTypes.bool\n};\n\nexport default DialogsHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport Animator from '../../Utils/Animatior';\nimport { clamp, getFirstLetter, throttle } from '../../Utils/Common';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filters.css';\n\nclass Filters extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.filterRef = new Map();\n        this.filtersRef = React.createRef();\n        this.filterSelectionRef = React.createRef();\n\n        const { isSmallWidth } = AppStore;\n        const { filters, chatList } = FilterStore;\n\n        this.state = {\n            isSmallWidth,\n            filters,\n            chatList\n        };\n\n        this.onWindowResize = throttle(this.onWindowResize, 250);\n    }\n\n    componentDidMount() {\n        this.observeResize();\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n\n        this.setSelection();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.unobserveResize();\n        this.observeResize();\n    }\n\n    componentWillUnmount() {\n        this.unobserveResize();\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguageChange);\n    }\n\n    hasObserver = () => {\n        return 'ResizeObserver' in window;\n    };\n\n    observeResize() {\n        if (!this.hasObserver()) return;\n        const filters = this.filtersRef.current;\n        if (!filters) return;\n\n        const observer = new ResizeObserver(this.onWindowResize);\n        observer.observe(filters);\n\n        this.resizeObserver = { observer, filters }\n    }\n\n    unobserveResize() {\n        if (!this.hasObserver()) return;\n        if (!this.resizeObserver) return;\n\n        const { observer, filters } = this.resizeObserver;\n        if (!observer) return;\n        if (!filters) return;\n\n        observer.unobserve(filters);\n    }\n\n    onClientUpdateLanguageChange = update => {\n        if (!this.hasObserver()) this.setSelection(false);\n    };\n\n    onClientUpdateCacheLoaded = update => {\n        const { filters } = this.state;\n        if (filters) return;\n\n        const { filters: cachedFilters } = CacheStore;\n        if (!cachedFilters) return;\n\n        this.setState({\n            filters: cachedFilters\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    onWindowResize = () => {\n        this.setSelection(true);\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = AppStore;\n        this.setState({\n            isSmallWidth\n        }, () => {\n            if (!this.hasObserver()) this.setSelection(false);\n        });\n    };\n\n    setSelection = (transition = true) => {\n        const { chatList, filters, isSmallWidth } = this.state;\n\n        const scroll = this.filtersRef.current;\n        const padding = 3;\n\n        let item = null;\n        let left = 9;\n        if (chatList['@type'] === 'chatListMain') {\n            const main = this.filterRef.get('chatListMain');\n            if (main){\n                item = main.firstChild;\n                left = item.offsetLeft;\n            }\n        } else if (chatList['@type'] === 'chatListFilter') {\n            for (let i = 0; i < filters.length; i++) {\n                const filter = this.filterRef.get('chatListFilter_id=' + filters[i].id);\n                if (filters[i].id === chatList.chat_filter_id) {\n                    item = filter.firstChild;\n                    left = item.offsetLeft;\n                    break;\n                }\n            }\n        }\n        if (!item) return;\n\n        const filterSelection = this.filterSelectionRef.current;\n        if (filterSelection) {\n            const transitionStyle = transition ? 'transition: left 0.25s ease, width 0.25s ease' : null;\n            filterSelection.style.cssText = `left: ${left - padding}px; width: ${item.scrollWidth + 2 * padding}px; ${transitionStyle}`;\n        }\n\n        if (item && transition){\n            const { animator } = this;\n\n            if (animator) {\n                animator.stop();\n            }\n\n            this.animator = new Animator(250, [\n                {\n                    from: scroll.scrollLeft,\n                    to: clamp(left - scroll.offsetWidth / 2 + item.offsetWidth / 2, 0, scroll.scrollWidth - scroll.offsetWidth),\n                    func: left => (scroll.scrollLeft = left)\n                }\n            ]);\n\n            setTimeout(() => {\n                if (!this.animator) return;\n\n                this.animator.start();\n            }, 0);\n\n\n            // item.scrollIntoView();\n        }\n    };\n\n    onUpdateChatFilters = update => {\n        const { chatList } = this.state;\n        const { filters } = FilterStore;\n\n        this.setState({\n            filters\n        }, () => {\n            if (chatList['@type'] === 'chatListFilter' && filters.findIndex(x => x.id === chatList.chat_filter_id) === -1) {\n                this.handleMainClick();\n            } else {\n                if (!this.hasObserver()) this.setSelection();\n            }\n        });\n    };\n\n    onClientUpdateChatList = update => {\n        const { chatList } = FilterStore;\n\n        this.setState({\n            chatList\n        }, () => {\n            if (!this.hasObserver()) this.setSelection();\n        });\n    };\n\n    handleMainClick = event => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListMain'\n            }\n        });\n    };\n\n    handleFilterClick = (event, id) => {\n        if (event && event.button !== 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatList',\n            chatList: {\n                '@type': 'chatListFilter',\n                chat_filter_id: id\n            }\n        });\n    };\n\n    handleWheel = event => {\n        if (!event.deltaY) {\n            return;\n        }\n\n        event.currentTarget.scrollLeft += event.deltaY;\n        event.stopPropagation();\n    };\n\n    render() {\n        const { t } = this.props;\n        const { filters, chatList, isSmallWidth } = this.state;\n\n        if (!filters) return null;\n        if (!filters.length) return null;\n\n        this.filterRef = new Map();\n        return (\n            <div ref={this.filtersRef} className='filters' onWheel={this.handleWheel}>\n                <div\n                    ref={r => this.filterRef.set('chatListMain', r)}\n                    className={classNames('filter', { 'item-selected': chatList['@type'] === 'chatListMain'})}\n                    onMouseDown={this.handleMainClick}\n                    title={isSmallWidth ? t('FilterAllChats') : null}>\n                    <span>{isSmallWidth ? getFirstLetter(t('FilterAllChats')) : t('FilterAllChats')}</span>\n                </div>\n                {filters.map(x => (\n                    <div\n                        key={x.id}\n                        ref={r => this.filterRef.set('chatListFilter_id=' + x.id, r)}\n                        className={classNames('filter', { 'item-selected': chatList.chat_filter_id === x.id})}\n                        onMouseDown={e => this.handleFilterClick(e, x.id)}\n                        title={isSmallWidth ? x.title : null}>\n                        <span>{isSmallWidth ? getFirstLetter(x.title) : x.title}</span>\n                    </div>))}\n                <div ref={this.filterSelectionRef} className='filter-selection'/>\n            </div>\n        );\n    }\n}\n\nFilters.propTypes = {\n\n};\n\nexport default withTranslation()(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '../Tile/Dialog';\nimport DialogPlaceholder from '../Tile/DialogPlaceholder';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { isAuthorizationReady, orderCompare } from '../../Utils/Common';\nimport { scrollTop } from '../../Utils/DOM';\nimport { chatListEquals, getChatOrder, hasChatList, isChatMember, isChatPinned, positionListEquals } from '../../Utils/Chat';\nimport { CHAT_SLICE_LIMIT, SCROLL_CHATS_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './DialogsList.css';\nimport FilterStore from '../../Stores/FilterStore';\nimport DialogsHeader from './DialogsHeader';\nimport Filters from './Filters';\n\nclass DialogListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, chatList, style, hidden } = this.props;\n        if (nextProps.chatId !== chatId) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.chatList !== chatList) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.hidden !== hidden) {\n            // console.log('[vl] UserListItem.shouldUpdate true userId');\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            // console.log('[vl] UserListItem.shouldUpdate true style');\n            return true;\n        }\n\n        // console.log('[vl] UserListItem.shouldUpdate false', nextProps, this.props);\n        return false;\n    }\n\n    render() {\n        const { chatId, chatList, hidden, style } = this.props;\n\n        return (\n            <div className='dialog-list-item' style={style}>\n                <Dialog chatId={chatId} chatList={chatList} hidden={hidden} />\n            </div>\n        );\n    }\n}\n\nclass DialogsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hiddenChats = new Map();\n\n        this.listRef = React.createRef();\n\n        const { authorizationState } = AppStore;\n\n        this.state = {\n            authorizationState,\n            offset: 0,\n            chats: null,\n            fistSliceLoaded: false,\n            chatList: props.type === 'chatListMain' ? { '@type': 'chatListMain' } : { '@type': 'chatListArchive' }\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, open, showArchive, archiveTitle, items, cacheItems } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        if (nextProps.items !== items) {\n            return true;\n        }\n\n        if (nextProps.cacheItems !== cacheItems) {\n            return true;\n        }\n\n        if (nextProps.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextProps.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.offset !== offset) {\n            return true;\n        }\n\n        if (nextState.chats !== chats) {\n            return true;\n        }\n\n        // if (nextState.chatList !== chatList) {\n        //     return true;\n        // }\n\n        return false;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { current: list } = this.listRef;\n        if (!list) return { scrollTop: 0 };\n\n        return { scrollTop: list.scrollTop };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { current: list } = this.listRef;\n        if (!list) return;\n\n        const { scrollTop } = snapshot;\n\n        // if (prevState.offset > this.state.offset) {\n        //     list.scrollTop += ( - this.state.offset + prevState.offset) * 72;\n        // }\n        // list.scrollTop = scrollTop;\n    }\n\n    componentDidMount() {\n        this.loadFirstSlice();\n\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.on('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.on('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.on('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.on('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n\n        ChatStore.off('clientUpdateFastUpdatingComplete', this.onFastUpdatingComplete);\n        ChatStore.off('clientUpdateLeaveChat', this.onClientUpdateLeaveChat);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatPosition);\n\n        FilterStore.off('clientUpdateChatList', this.onClientUpdateChatList);\n\n        SupergroupStore.off('updateSupegroup', this.onUpdateSupergroup);\n    }\n\n    onClientUpdateChatList = update => {\n        const { chatList } = update;\n\n        this.setState({\n            chatList\n        }, () => {\n            this.loadFirstSlice();\n        });\n    };\n\n    onUpdateSupergroup = update => {\n        // const { supegroup, prevSupergroup } = update;\n        //\n        // if (!hasLeftSupergroup(supegroup, prevSupergroup)) {\n        //     return;\n        // }\n\n\n    };\n\n    onClientUpdateLeaveChat = update => {\n        const { inProgress, chatId } = update;\n\n        if (inProgress) {\n            this.hiddenChats.set(chatId, chatId);\n        } else {\n            this.hiddenChats.delete(chatId);\n        }\n\n        this.forceUpdate();\n    };\n\n    onUpdateAuthorizationState = update => {\n        const { authorization_state: authorizationState } = update;\n\n        this.setState({ authorizationState }, () => this.loadFirstSlice());\n    };\n\n    onFastUpdatingComplete = update => {\n        this.onLoadNext(true);\n        // this.setState({ chats: [] }, () => this.onLoadNext(true));\n    };\n\n    loadFirstSlice = async () => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        await FileStore.initDB(() => this.onLoadNext(true));\n    };\n\n    saveCache = () => {\n        const { onSaveCache, type } = this.props;\n        const { chatList } = this.state;\n        if (type !== 'chatListMain') return;\n        if (chatList['@type'] !== 'chatListMain') return;\n\n        if (onSaveCache) onSaveCache();\n    };\n\n    onUpdateChatPosition = update => {\n        const { chatList } = this.state;\n        const { position } = update;\n\n        if (!chatListEquals(chatList, position.list)) {\n            return;\n        }\n\n        this.onUpdateChatOrder(update);\n    };\n\n    onUpdateChatOrder = update => {\n        const { chats, chatList } = this.state;\n        if (!chats) return;\n\n        const { loading } = this;\n        if (loading && !chats.length) return;\n\n        const { chat_id } = update;\n\n        const chat = ChatStore.get(chat_id);\n        if (!chat) {\n            return;\n        }\n\n        if (!hasChatList(chat_id, chatList)) {\n            return;\n        }\n\n        const order = getChatOrder(chat_id, chatList);\n        const currentIndex = chats.findIndex(x => x === chat_id);\n        if (currentIndex === -1 && order === '0') {\n            return;\n        }\n\n        const chatIds = [];\n        for (let i = 0; i < chats.length; i++) {\n            const chat = ChatStore.get(chats[i]);\n            const chatOrder = getChatOrder(chats[i], chatList);\n            if (chat && chatOrder !== '0') {\n                chatIds.push(chat.id);\n            }\n        }\n\n        const newChatIds = [];\n        if (order === '0') {\n            // unselect deleted chat\n            if (chat_id === AppStore.getChatId() && !chat.last_message) {\n                TdLibController.setChatId(0);\n                changeChatDetailsVisibility(false);\n            }\n        } else {\n            if (currentIndex === -1) {\n                if (this.loading) {\n                    console.error('[vl] skip add while getChats', update);\n                    // TODO: check and add if within loaded part\n                } else {\n                    newChatIds.push(chat_id);\n                }\n            }\n        }\n\n        this.reorderChats(chatIds, newChatIds, () => {\n            this.loadChatContents(newChatIds);\n            this.saveCache();\n        });\n    };\n\n    reorderChats(chatIds, newChatIds = [], callback) {\n        const { chatList } = this.state;\n\n        const orderedChatIds = chatIds.concat(newChatIds).sort((a, b) => {\n            return orderCompare(getChatOrder(b, chatList), getChatOrder(a, chatList));\n        });\n\n        if (!DialogsList.isDifferentOrder(this.state.chats, orderedChatIds)) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ chats: orderedChatIds }, callback);\n    }\n\n    static isDifferentOrder(oldChatIds, newChatIds) {\n        if (oldChatIds.length === newChatIds.length) {\n            for (let i = 0; i < oldChatIds.length; i++) {\n                if (oldChatIds[i] !== newChatIds[i]) return true;\n            }\n\n            return false;\n        }\n\n        return true;\n    }\n\n    handleScroll = () => {\n        // console.log('[vl] onScroll');\n        const list = this.listRef.current.getListRef().current;\n        if (!list) return;\n\n        // console.log(`[vl] onScroll [scrollTop, offsetHeight, scrollHeight] = [${list.scrollTop}, ${list.offsetHeight}, ${list.scrollHeight}]`, list.scrollTop + list.offsetHeight, (list.scrollHeight - SCROLL_CHATS_PRECISION));\n        if (list.scrollTop <= SCROLL_CHATS_PRECISION) {\n            this.onLoadPrev();\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - list.offsetHeight) {\n            // console.log(`[vl] onScroll onLoadNext`);\n            this.onLoadNext();\n        }\n    };\n\n    onLoadPrev() {\n        this.setState({\n            offset: Math.max(this.state.offset - CHAT_SLICE_LIMIT, 0)\n        });\n    }\n\n    async onLoadNext(replace = false) {\n        const { type } = this.props;\n        const { offset, chats, chatList } = this.state;\n\n        if (chats && offset + 2 * CHAT_SLICE_LIMIT < chats.length) {\n            this.setState({\n                offset: offset + CHAT_SLICE_LIMIT\n            });\n            return;\n        }\n\n        if (this.loading) {\n            return;\n        }\n\n        let offsetOrder = '9223372036854775807'; // 2^63 - 1\n        let offsetChatId = 0;\n        if (!replace && chats && chats.length > 0) {\n            const chat = ChatStore.get(chats[chats.length - 1]);\n            if (chat) {\n                offsetOrder = getChatOrder(chat.id, chatList);\n                offsetChatId = chat.id;\n            }\n        }\n\n        if (type === 'chatListMain') console.log('[p] GETCHATS start', type, offsetOrder, offsetChatId);\n        this.loading = true;\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: chatList,\n            offset_chat_id: offsetChatId,\n            offset_order: offsetOrder,\n            limit: CHAT_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n            if (replace) {\n                TdLibController.clientUpdate({ '@type': 'clientUpdateDialogsReady', list: chatList });\n            }\n        });\n        if (type === 'chatListMain') console.log('[p] GETCHATS stop', replace, type, result);\n\n        if (result.chat_ids.length > 0 && result.chat_ids[0] === offsetChatId) {\n            result.chat_ids.shift();\n        }\n\n        if (replace) {\n            this.replaceChats(result.chat_ids, () => {\n                this.loadChatContents(result.chat_ids);\n                this.saveCache();\n\n                if (result.chat_ids.length < CHAT_SLICE_LIMIT) {\n                    this.onLoadNext();\n                }\n\n                const list = this.listRef.current.getListRef().current;\n                if (!list) return;\n                list.scrollTop = 0;\n            });\n        } else {\n            // console.log('DialogsList.onLoadNext setState start', offsetChatId, offsetOrder);\n            this.appendChats(result.chat_ids, () => {\n                // console.log('DialogsList.onLoadNext setState stop', offsetChatId, offsetOrder);\n                this.loadChatContents(result.chat_ids);\n            });\n        }\n    }\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    appendChats(chatIds, callback) {\n        if (chatIds.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const { chats } = this.state;\n\n        const newChats = (chats || []).concat(chatIds);\n        this.setState({ chats: newChats, offset: newChats.length - 2 * CHAT_SLICE_LIMIT }, callback);\n    }\n\n    replaceChats(chats, callback) {\n        this.setState({ chats, offset: 0 }, callback);\n    }\n\n    scrollToTop() {\n        const list = this.listRef.current.getListRef().current;\n\n        scrollTop(list);\n    }\n\n    renderItem = ({ index, style }, source) => {\n        const { chatList } = this.state;\n        const x = source[index];\n\n        return <DialogListItem key={x} chatId={x} chatList={chatList} hidden={this.hiddenChats.has(x)} style={style} />;\n\n        // return <Dialog key={x} chatId={x} hidden={this.hiddenChats.has(x)} style={style} />\n    };\n\n    render() {\n        const { open, cacheItems, showArchive, archiveTitle } = this.props;\n        const { chats, offset, chatList } = this.state;\n\n        // console.log('[dl] render', type, open, chats, cacheChats);\n        if (!open) return null;\n\n        this.source = [];\n        let dialogs = null;\n        if (chats) {\n            let lastPinnedId = 0;\n            chats.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = chats;\n            // dialogs = chats.slice(offset, offset + 2 * CHAT_SLICE_LIMIT).map(x => (\n            //     <Dialog key={x} chatId={x} isLastPinned={x === lastPinnedId} hidden={this.hiddenChats.has(x)} />\n            // ));\n        } else if (cacheItems) {\n            let lastPinnedId = 0;\n            cacheItems.forEach(x => {\n                if (isChatPinned(x, chatList)) {\n                    lastPinnedId = x;\n                }\n            });\n            this.source = cacheItems.map(x => x.id);\n            // dialogs = cacheItems.map(x => (\n            //     <Dialog\n            //         key={x.id}\n            //         chatId={x.id}\n            //         isLastPinned={x === lastPinnedId}\n            //         hidden={this.hiddenChats.has(x.id)}\n            //     />\n            // ));\n        } else {\n            if (chatList['@type'] === 'chatListMain') {\n                dialogs = Array.from(Array(10)).map((x, index) => <DialogPlaceholder key={index} index={index} />);\n            }\n        }\n\n        console.log('[vl] render', this.source);\n\n        return (\n            <VirtualizedList\n                ref={this.listRef}\n                className='dialogs-list'\n                source={this.source}\n                rowHeight={76}\n                overScanCount={20}\n                renderItem={x => this.renderItem(x, this.source)}\n                onScroll={this.handleScroll}\n            />\n        );\n    }\n}\n\nDialogsList.propTypes = {\n    type: PropTypes.oneOf(['chatListMain', 'chatListArchive']).isRequired,\n    showArchive: PropTypes.bool,\n    archiveTitle: PropTypes.string,\n    cacheItems: PropTypes.array,\n    items: PropTypes.array\n};\n\nexport default DialogsList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport DialogsList from './DialogsList';\n\nclass Archive extends React.Component {\n    render() {\n        const { t, innerListRef, items, cacheItems, onClose } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button main-menu-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ArchivedChats')}</span>\n                    </div>\n                </div>\n                <div className='dialogs-content'>\n                    <DialogsList\n                        type='chatListArchive'\n                        ref={innerListRef}\n                        cacheItems={cacheItems}\n                        open={true}\n                        items={items}\n                    />\n                </div>\n            </>\n        );\n    }\n}\n\nArchive.propTypes = {};\n\nexport default withTranslation()(Archive);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nclass TopChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { chatId, onSelect, showSavedMessages, t } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages, t);\n\n        return (\n            <>\n                <ListItem button className='top-chat' onClick={onSelect} onContextMenu={this.handleContextMenu}>\n                    <ChatTile dialog chatId={chatId} showSavedMessages={showSavedMessages} showOnline />\n                    <div className='top-chat-title'>{shortTitle}</div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withTranslation()(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Chat from './Chat';\nimport './RecentlyFoundChat.css';\n\nclass RecentlyFoundChat extends React.PureComponent {\n    state = {\n        contextMenu: false,\n        top: 0,\n        left: 0\n    };\n\n    handleContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    handleDelete = event => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete();\n    };\n\n    render() {\n        const { t, chatId, onClick } = this.props;\n        const { contextMenu, top, left } = this.state;\n\n        return (\n            <>\n                <ListItem\n                    button\n                    className='recently-found-chat'\n                    onClick={onClick}\n                    onContextMenu={this.handleContextMenu}>\n                    <Chat chatId={chatId} />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport Chat from './Chat';\nimport { getChatUsername } from '../../Utils/Chat';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    render() {\n        const { chatId, onClick } = this.props;\n        const { nextChatId: selectedChatId } = this.state;\n\n        const username = getChatUsername(chatId);\n\n        return (\n            <ListItem\n                button\n                className={classNames('found-public-chat', { 'item-selected': chatId === selectedChatId })}\n                onClick={onClick}>\n                <div className='found-public-chat-wrapper'>\n                    <Chat chatId={chatId} subtitle={username ? '@' + username : null} />\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default FoundPublicChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport AppStore from '../../Stores/ApplicationStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport './FoundMessage.css';\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: AppStore.getChatId(),\n            nextMessageId: AppStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message, t);\n        const senderFullName = getMessageSenderFullName(message, t);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile =\n            sender_user_id && chatSearch ? (\n                <UserTile userId={sender_user_id} dialog />\n            ) : (\n                <ChatTile chatId={chatId} dialog />\n            );\n\n        return (\n            <ListItem button className={classNames('found-message', { 'item-selected': selected })} onClick={onClick}>\n                <div className='dialog-wrapper'>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} />\n                            )}\n                            <div className='dialog-meta'>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className='dialog-content'>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './SectionHeader.css';\n\nfunction SectionHeader({ command, multiline, onClick, children }) {\n    return (\n        <div className='section-header'>\n            <div className={classNames('section-header-title', { 'section-header-title-multiline': multiline })}>{children}</div>\n            {Boolean(command) && <a onClick={onClick}>{command}</a>}\n        </div>\n    );\n}\n\nSectionHeader.propTypes = {\n    command: PropTypes.string,\n    multiline: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default SectionHeader;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../../Additional/KeyboardManager';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Chat from '../../Tile/Chat';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SectionHeader from '../SectionHeader';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterDuplicateMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { getChatOrder } from '../../../Utils/Chat';\nimport { modalManager } from '../../../Utils/Modal';\nimport { SCROLL_PRECISION, USERNAME_LENGTH_MIN } from '../../../Constants';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport MessageStore from '../../../Stores/MessageStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n        this.listRef = React.createRef();\n        this.state = {};\n    }\n\n    componentDidMount() {\n        const { text } = this.props;\n\n        this.searchOrLoadContent(text);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                event.preventDefault();\n                event.stopPropagation();\n                event.target.blur();\n\n                this.handleClose();\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.searchOrLoadContent(text);\n        } else if (prevProps.chatId !== chatId) {\n            this.searchOrLoadContent(text);\n        }\n    }\n\n    searchOrLoadContent(text) {\n        const trimmedText = text ? text.trim() : '';\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    }\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n            for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(getChatOrder(b), getChatOrder(a));\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        // console.log('[se] searchText=' + text);\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        let linkMessage = null;\n        if (!chatId) {\n            try {\n                const messageLinkInfo = await TdLibController.send({\n                    '@type': 'getMessageLinkInfo',\n                    url: text\n                });\n                // console.log('[se] searchText=' + text + ' messageLinkInfo', messageLinkInfo);\n\n                MessageStore.setItems([messageLinkInfo.message]);\n\n                linkMessage = messageLinkInfo;\n            } catch (error) {\n                console.log('[se] searchText=' + text + ' messageLinkInfo error', error);\n            }\n        }\n\n        // console.log('[se] searchText=' + text + ' result', messages, linkMessage);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        // console.log('[se] searchText=' + text + ' result session', messages, linkMessage);\n\n        this.setState({\n            messages,\n            linkMessage\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        if (linkMessage) {\n            const { chat_id, sender_user_id } = linkMessage;\n\n            chats.set(chat_id, chat_id);\n            if (sender_user_id) {\n                users.set(sender_user_id, sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null,\n                linkMessage: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top,\n            recentlyFound,\n            savedMessages,\n            local: null,\n            global: null,\n            messages: null,\n            linkMessage: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                chat_list: { '@type': 'chatListMain' },\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterDuplicateMessages(result, messages ? messages.messages : []);\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    handleDeleteRecentlyFoundChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeRecentlyFoundChat',\n            chat_id: chatId\n        });\n\n        const { recentlyFound } = this.state;\n        if (!recentlyFound) return;\n\n        this.setState({\n            recentlyFound: { ...recentlyFound, chat_ids: recentlyFound.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    handleDeleteTopChat = async chatId => {\n        if (!chatId) return;\n\n        await TdLibController.send({\n            '@type': 'removeTopChat',\n            chat_id: chatId,\n            category: {\n                '@type': 'topChatCategoryUsers'\n            }\n        });\n\n        const { top } = this.state;\n        if (!top) return;\n\n        this.setState({\n            top: { ...top, chat_ids: top.chat_ids.filter(x => x !== chatId) }\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { top, recentlyFound, local, global, messages, linkMessage } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat\n                          key={x}\n                          chatId={x}\n                          onSelect={() => this.handleSelectMessage(x, null, false, false)}\n                          onDelete={() => this.handleDeleteTopChat(x)}\n                      />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                          onDelete={() => this.handleDeleteRecentlyFoundChat(x)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChatsMap = new Map();\n        const globalChats = global\n            ? global.map(x => {\n                  globalChatsMap.set(x, x);\n\n                  return (\n                      <FoundPublicChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, true)}\n                      />\n                  );\n              })\n            : [];\n\n        const globalLinkChat =\n            linkMessage && linkMessage.chat_id && !linkMessage.message && !globalChatsMap.has(linkMessage.chat_id) ? (\n                <FoundPublicChat\n                    key={linkMessage.chat_id}\n                    chatId={linkMessage.chat_id}\n                    onClick={() => this.handleSelectMessage(linkMessage.chat_id, null, true, true)}\n                />\n            ) : null;\n\n        const globalMessagesMap = new Map();\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => {\n                      const key = `${x.chat_id}_${x.id}`;\n                      globalMessagesMap.set(key, key);\n\n                      return (\n                          <FoundMessage\n                              key={key}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              chatSearch={Boolean(chatId)}\n                              onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                          />\n                      );\n                  })\n                : [];\n\n        const globalLinkMessage =\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`) ? (\n                <FoundMessage\n                    key={`${linkMessage.message.chat_id}_${linkMessage.message.id}`}\n                    chatId={linkMessage.message.chat_id}\n                    messageId={linkMessage.message.id}\n                    chatSearch={false}\n                    onClick={() =>\n                        this.handleSelectMessage(linkMessage.message.chat_id, linkMessage.message.id, false, true)\n                    }\n                />\n            ) : null;\n\n        let count = messages ? messages.total_count : 0;\n        if (\n            linkMessage &&\n            linkMessage.message &&\n            !globalMessagesMap.has(`${linkMessage.message.chat_id}_${linkMessage.message.id}`)\n        ) {\n            count++;\n        }\n\n        let messagesCaption = t('NoMessages');\n        if (count) {\n            messagesCaption = count === 1 ? 'Found 1 message' : `Found ${count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className='search' onScroll={this.handleScroll}>\n                {chat && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('SearchMessagesIn')}</SectionHeader>\n                            <div className='search-chat-wrapper'>\n                                <div className='search-chat-control'>\n                                    <Chat chatId={chatId} showStatus={false} />\n                                </div>\n                                <IconButton\n                                    className='header-right-button'\n                                    aria-label='Search'\n                                    onMouseDown={this.handleClose}>\n                                    <CloseIcon />\n                                </IconButton>\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {topChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatHints')}</SectionHeader>\n                            <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                                <div className='search-top-chats-placeholder' />\n                                {topChats}\n                                <div className='search-top-chats-placeholder' />\n                            </div>\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader command={t('ClearButton')} onClick={this.handleClearRecentlyFound}>\n                            {t('Recent')}\n                        </SectionHeader>\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('ChatsAndContacts')}</SectionHeader>\n                            {localChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {globalChats.length > 0 && (\n                    <>\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('GlobalSearch')}</SectionHeader>\n                            {globalLinkChat}\n                            {globalChats}\n                        </div>\n                        <div className='sidebar-page-section-divider' />\n                    </>\n                )}\n                {(messages || (linkMessage && linkMessage.message)) && (\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{messagesCaption}</SectionHeader>\n                        {globalLinkMessage}\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { Slide } from '@material-ui/core';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport { modalManager } from '../../Utils/Modal';\nimport './SidebarPage.css';\n\nclass SidebarPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape':\n                const { onClose } = this.props;\n                if (onClose) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    event.target.blur();\n\n                    onClose();\n                }\n                break;\n        }\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.props;\n\n        if (prevProps.open !== open) {\n            if (open) {\n                KeyboardManager.add(this.keyboardHandler);\n            } else {\n                KeyboardManager.remove(this.keyboardHandler);\n            }\n        }\n    }\n\n    render() {\n        const { children, open, timeout, onClose } = this.props;\n\n        return (\n            <Slide direction='right' in={open} timeout={timeout} mountOnEnter unmountOnExit>\n                <div className='sidebar-page'>{onClose ? React.cloneElement(children, { onClose }) : children}</div>\n            </Slide>\n        );\n    }\n}\n\nSidebarPage.propTypes = {\n    open: PropTypes.bool.isRequired,\n    timeout: PropTypes.oneOfType([PropTypes.object, PropTypes.number]),\n    onClose: PropTypes.func\n};\n\nexport default SidebarPage;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.37867966,2 C9.97541676,2 10.5501571,2.2133476 11.0009229,2.59780217 L11.1464466,2.73223305 L13.267767,4.85355339 C13.3427815,4.92856794 13.4391777,4.97728504 13.542631,4.9937713 L13.6213203,5 L19,5 C21.1421954,5 22.8910789,6.68396847 22.9951047,8.80035966 L23,9 L23,18 C23,20.1421954 21.3160315,21.8910789 19.1996403,21.9951047 L19,22 L5,22 C2.85780461,22 1.10892112,20.3160315 1.00489531,18.1996403 L1,18 L1,6 C1,3.85780461 2.68396847,2.10892112 4.80035966,2.00489531 L5,2 L9.37867966,2 Z M9.37867966,4 L5,4 C3.9456382,4 3.08183488,4.81587779 3.00548574,5.85073766 L3,6 L3,18 C3,19.0543618 3.81587779,19.9181651 4.85073766,19.9945143 L5,20 L19,20 C20.0543618,20 20.9181651,19.1841222 20.9945143,18.1492623 L21,18 L21,9 C21,7.9456382 20.1841222,7.08183488 19.1492623,7.00548574 L19,7 L13.6213203,7 C13.0245832,7 12.4498429,6.7866524 11.9990771,6.40219783 L11.8535534,6.26776695 L9.73223305,4.14644661 C9.6572185,4.07143206 9.56082233,4.02271496 9.45736903,4.0062287 L9.37867966,4 Z M19,10 C19.5522847,10 20,10.4477153 20,11 C20,11.5128358 19.6139598,11.9355072 19.1166211,11.9932723 L19,12 L5,12 C4.44771525,12 4,11.5522847 4,11 C4,10.4871642 4.38604019,10.0644928 4.88337887,10.0067277 L5,10 L19,10 Z'/>,\n    'Folder'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M7.70710678,20.7071068 C7.5195704,20.8946432 7.26521649,21 7,21 L4,21 C3.44771525,21 3,20.5522847 3,20 L3,17 C3,16.7347835 3.10535684,16.4804296 3.29289322,16.2928932 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L7.70710678,20.7071068 Z M5,17.4142136 L5,19 L6.58578644,19 L16.5857864,9 L15,7.41421356 L5,17.4142136 Z M18,4.41421356 L16.414,5.99921356 L18,7.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Edit'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11,2 C13.209139,2 15,3.790861 15,6 C15,6.55228475 14.5522847,7 14,7 C13.4477153,7 13,6.55228475 13,6 L13,6 L12.9945143,5.85073766 C12.9181651,4.81587779 12.0543618,4 11,4 L11,4 L6,4 C4.8954305,4 4,4.8954305 4,6 L4,6 L4,18 C4,19.1045695 4.8954305,20 6,20 L6,20 L11,20 C12.1045695,20 13,19.1045695 13,18 L13,18 L13.0067277,17.8833789 C13.0644928,17.3860402 13.4871642,17 14,17 C14.5522847,17 15,17.4477153 15,18 C15,20.209139 13.209139,22 11,22 L11,22 L6,22 C3.790861,22 2,20.209139 2,18 L2,18 L2,6 C2,3.790861 3.790861,2 6,2 L6,2 Z M18.7071068,7.29289322 L22.7071068,11.2928932 C22.7355731,11.3213595 22.7623312,11.3515341 22.787214,11.3832499 L22.7071068,11.2928932 C22.7425008,11.3282873 22.774687,11.3656744 22.8036654,11.4046934 C22.8215099,11.4288693 22.8382813,11.453725 22.8539326,11.4793398 C22.8613931,11.4913869 22.8685012,11.5036056 22.8753288,11.5159379 C22.8862061,11.5357061 22.8966234,11.5561086 22.9063462,11.5769009 C22.914321,11.5939015 22.9218036,11.6112044 22.9287745,11.628664 C22.9366843,11.6484208 22.9438775,11.6682023 22.9504533,11.6882636 C22.9552713,11.7031487 22.9599023,11.7185367 22.9641549,11.734007 C22.9701664,11.7555635 22.9753602,11.7772539 22.9798348,11.7992059 C22.9832978,11.8166247 22.9863719,11.834051 22.9889822,11.8515331 C22.9962388,11.8996379 23,11.9493797 23,12 L22.9962979,11.9137692 C22.9978436,11.9317345 22.9989053,11.9497336 22.9994829,11.9677454 L23,12 C23,12.0112225 22.9998151,12.0224019 22.9994483,12.0335352 C22.9988772,12.050591 22.997855,12.0679231 22.996384,12.0852242 C22.994564,12.1070574 22.9920941,12.1281144 22.9889807,12.1489612 C22.9863719,12.165949 22.9832978,12.1833753 22.9797599,12.2007258 C22.9753602,12.2227461 22.9701664,12.2444365 22.964279,12.2658396 C22.9599023,12.2814633 22.9552713,12.2968513 22.9502619,12.3121425 C22.9438775,12.3317977 22.9366843,12.3515792 22.928896,12.3710585 C22.9218036,12.3887956 22.914321,12.4060985 22.9063266,12.4232215 C22.8966234,12.4438914 22.8862061,12.4642939 22.8751242,12.484277 C22.8685012,12.4963944 22.8613931,12.5086131 22.8540045,12.5207088 C22.8382813,12.546275 22.8215099,12.5711307 22.8036865,12.5951593 C22.7982466,12.602603 22.7927155,12.6098424 22.7870723,12.6170223 C22.7849289,12.6196628 22.7826279,12.6225624 22.7803112,12.625449 L22.7071068,12.7071068 L22.7071068,12.7071068 L18.7071068,16.7071068 C18.3165825,17.0976311 17.6834175,17.0976311 17.2928932,16.7071068 C16.9023689,16.3165825 16.9023689,15.6834175 17.2928932,15.2928932 L19.585,13 L13,13 C12.4871642,13 12.0644928,12.6139598 12.0067277,12.1166211 L12,12 C12,11.4477153 12.4477153,11 13,11 L13,11 L19.585,11 L17.2928932,8.70710678 C16.9023689,8.31658249 16.9023689,7.68341751 17.2928932,7.29289322 C17.6834175,6.90236893 18.3165825,6.90236893 18.7071068,7.29289322 Z' />,\n    'LogOut'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,16 C13.1045695,16 14,16.8954305 14,18 C14,19.1045695 13.1045695,20 12,20 C10.8954305,20 10,19.1045695 10,18 C10,16.8954305 10.8954305,16 12,16 Z M12,10 C13.1045695,10 14,10.8954305 14,12 C14,13.1045695 13.1045695,14 12,14 C10.8954305,14 10,13.1045695 10,12 C10,10.8954305 10.8954305,10 12,10 Z M12,4 C13.1045695,4 14,4.8954305 14,6 C14,7.1045695 13.1045695,8 12,8 C10.8954305,8 10,7.1045695 10,6 C10,4.8954305 10.8954305,4 12,4 Z' />,\n    'More'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport LogOutIcon from '../../../Assets/Icons/LogOut';\nimport MoreIcon from '../../../Assets/Icons/More';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\n\nclass SettingsMenuButton extends React.Component {\n    state = {\n        anchorEl: null,\n        open: false\n    };\n\n    handleMenuOpen = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, open } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='header-right-button'\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleLogOut}>\n                        <ListItemIcon>\n                            <LogOutIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('LogOut')} />\n                    </MenuItem>\n                </Menu>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleClose}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureLogout')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDone} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nSettingsMenuButton.propTypes = {};\n\nexport default withTranslation()(SettingsMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12,1 C14.6887547,1 16.8818181,3.12230671 16.9953805,5.78311038 L17,6 L17,8 C18.6568542,8 20,9.34314575 20,11 L20,19 C20,20.6568542 18.6568542,22 17,22 L7,22 C5.34314575,22 4,20.6568542 4,19 L4,11 C4,9.34314575 5.34314575,8 7,8 L7,6 C7,3.23857625 9.23857625,1 12,1 Z M17,10 L7,10 C6.44771525,10 6,10.4477153 6,11 L6,19 C6,19.5522847 6.44771525,20 7,20 L17,20 C17.5522847,20 18,19.5522847 18,19 L18,11 C18,10.4477153 17.5522847,10 17,10 Z M12,13.5 C12.8284271,13.5 13.5,14.1715729 13.5,15 C13.5,15.8284271 12.8284271,16.5 12,16.5 C11.1715729,16.5 10.5,15.8284271 10.5,15 C10.5,14.1715729 11.1715729,13.5 12,13.5 Z M12.1762728,3.00509269 L12,3 C10.4023191,3 9.09633912,4.24891996 9.00509269,5.82372721 L9,6 L9,8 L15,8 L15,6 C15,4.40231912 13.75108,3.09633912 12.1762728,3.00509269 L12,3 L12.1762728,3.00509269 Z' />,\n    'Data'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M12.4100787,14.6155108 L10.33,12.56 L10.33,12.56 L10.36,12.53 C12.1,10.59 13.34,8.36 14.07,6 L16,6 C16.5522847,6 17,5.55228475 17,5 C17,4.44771525 16.5522847,4 16,4 L10,4 L10,4 L10,3 C10,2.44771525 9.55228475,2 9,2 C8.44771525,2 8,2.44771525 8,3 L8,4 L8,4 L1.995,4 C1.44547667,4 1,4.44547667 1,4.995 C1,5.54452333 1.44547667,5.99 1.995,5.99 L12.17,5.99 L12.17,5.99 C11.5,7.92 10.44,9.75 9,11.35 C8.29025814,10.5639418 7.67370319,9.7196418 7.15033516,8.83487918 C7.09974701,8.74935905 7.03930045,8.64304956 6.96899548,8.51595071 C6.79288115,8.1975972 6.45776707,8 6.09394677,8 L5.69,8 C5.34408921,8 5.06367311,8.2804161 5.06367311,8.62632689 C5.06367311,8.72554854 5.08724633,8.82335055 5.13246346,8.91167013 C5.1653189,8.97586688 5.19575217,9.03408878 5.22376326,9.08633583 C5.88285067,10.3156835 6.70136504,11.4828779 7.67,12.56 L3.29489879,16.8749328 C2.90279535,17.2616439 2.89842396,17.8929978 3.28513501,18.2851012 C3.28675102,18.2867397 3.28837269,18.2883727 3.29,18.29 L3.29289322,18.2928932 C3.68341751,18.6834175 4.31658249,18.6834175 4.70710678,18.2928932 L9,14 L9,14 L11.3403247,16.3403247 C11.6133932,16.6133932 12.0561246,16.6133932 12.3291931,16.3403247 C12.4001325,16.2693853 12.4549762,16.1840114 12.49,16.09 L12.6442671,15.6759147 C12.7816472,15.3071575 12.6899849,14.8921111 12.4100787,14.6155108 Z M17.8069995,10 L17.1930005,10 C16.7761559,10 16.4030352,10.2585728 16.2566713,10.6488766 L12.3511234,21.0636708 C12.2167367,21.4220355 12.3983067,21.8214894 12.7566713,21.9558761 C12.8344793,21.9850541 12.916901,22 13,22 L13.3059169,22 C13.7232965,22 14.0967782,21.7407727 14.2427584,21.3497542 L15.12,19 L15.12,19 L19.87,19 L20.7561047,21.3524905 C20.9028501,21.74208 21.2756099,22 21.6919201,22 L22,22 C22.3827336,22 22.6930005,21.6897331 22.6930005,21.3069995 C22.6930005,21.2239005 22.6780546,21.1414789 22.6488766,21.0636708 L18.7433287,10.6488766 C18.5969648,10.2585728 18.2238441,10 17.8069995,10 Z M17.5,12.67 L19.12,17 L15.88,17 L17.5,12.67 Z' />,\n    'Language'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { IconButton } from '@material-ui/core';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport FilterIcon from '../../../Assets/Icons/Folder';\nimport Chat from '../../Tile/Chat';\nimport EditIcon from '../../../Assets/Icons/Edit';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SettingsIcon from '../../../Assets/Icons/Settings';\nimport SettingsMenuButton from './SettingsMenuButton';\nimport UnmuteIcon from '../../../Assets/Icons/Unmute';\nimport DataIcon from '../../../Assets/Icons/Data';\nimport LanguageIcon from '../../../Assets/Icons/Language';\nimport packageJson from '../../../../package.json';\nimport { setProfileMediaViewerContent } from '../../../Actions/Client';\nimport ChatStore from '../../../Stores/ChatStore';\nimport './Main.css';\n\nclass Main extends React.Component {\n\n    handleOpenViewer = () => {\n        const { chatId } = this.props;\n        \n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId });\n    };\n\n    render() {\n        const {\n            chatId,\n            popup,\n            t,\n            onClose,\n            onEditProfile,\n            onGeneral,\n            onNotifications,\n            onPrivacySecurity,\n            onLanguage,\n            onFilters\n        } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Settings')}</span>\n                    </div>\n                    <SettingsMenuButton />\n                </div>\n                <div className='sidebar-page-content settings-main-content'>\n                    <div className='chat-details-info'>\n                        <Chat\n                            chatId={chatId}\n                            big={true}\n                            showStatus={true}\n                            showSavedMessages={false}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    <ListItem className='settings-list-item' button onClick={onEditProfile}>\n                        <ListItemIcon>\n                            <EditIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('EditProfile')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onGeneral}>\n                        <ListItemIcon>\n                            <SettingsIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('GeneralSettings')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onNotifications}>\n                        <ListItemIcon>\n                            <UnmuteIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Notifications')} />\n                    </ListItem>\n                    <ListItem className='settings-list-item' button onClick={onPrivacySecurity}>\n                        <ListItemIcon>\n                            <DataIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('PrivacySettings')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onFilters}>\n                        <ListItemIcon>\n                            <FilterIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Filters')} />\n                    </ListItem>\n                    <ListItem autoFocus={false} className='settings-list-item' button onClick={onLanguage}>\n                        <ListItemIcon>\n                            <LanguageIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Language')} />\n                    </ListItem>\n                    <div className='settings-main-footer'>\n                        {packageJson.version}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nMain.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onEditProfile: PropTypes.func,\n    onGeneral: PropTypes.func,\n    onNotifications: PropTypes.func,\n    onPrivacySecurity: PropTypes.func,\n    onLanguage: PropTypes.func,\n    onFilters: PropTypes.func\n};\n\nexport default withTranslation()(Main);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.8833789,16.0067277 L20,16 C20.5128358,16 20.9355072,16.3860402 20.9932723,16.8833789 L21,17 L21,19 L23,19 C23.5128358,19 23.9355072,19.3860402 23.9932723,19.8833789 L24,20 C24,20.5128358 23.6139598,20.9355072 23.1166211,20.9932723 L23,21 L21,21 L21,23 C21,23.5128358 20.6139598,23.9355072 20.1166211,23.9932723 L20,24 C19.4871642,24 19.0644928,23.6139598 19.0067277,23.1166211 L19,23 L19,21 L17,21 C16.4871642,21 16.0644928,20.6139598 16.0067277,20.1166211 L16,20 C16,19.4871642 16.3860402,19.0644928 16.8833789,19.0067277 L17,19 L19,19 L19,17 C19,16.4871642 19.3860402,16.0644928 19.8833789,16.0067277 L20,16 L19.8833789,16.0067277 Z M8.41421356,2 L13.5857864,2 C14.0572824,2 14.5116128,2.16648982 14.8701798,2.46691315 L15,2.58578644 L16.4142136,4 L18,4 C19.5976809,4 20.9036609,5.24891996 20.9949073,6.82372721 L21,7 L21,12 C21,12.5522847 20.5522847,13 20,13 C19.4871642,13 19.0644928,12.6139598 19.0067277,12.1166211 L19,12 L19,7 C19,6.48716416 18.6139598,6.06449284 18.1166211,6.00672773 L18,6 L16.4142136,6 C15.9427176,6 15.4883872,5.83351018 15.1298202,5.53308685 L15,5.41421356 L13.5857864,4 L8.41421356,4 L7,5.41421356 C6.66660199,5.74761157 6.22761579,5.95114561 5.76163928,5.99225938 L5.58578644,6 L4,6 C3.48716416,6 3.06449284,6.38604019 3.00672773,6.88337887 L3,7 L3,18 C3,18.5128358 3.38604019,18.9355072 3.88337887,18.9932723 L4,19 L13,19 C13.5522847,19 14,19.4477153 14,20 C14,20.5128358 13.6139598,20.9355072 13.1166211,20.9932723 L13,21 L4,21 C2.40231912,21 1.09633912,19.75108 1.00509269,18.1762728 L1,18 L1,7 C1,5.40231912 2.24891996,4.09633912 3.82372721,4.00509269 L4,4 L5.58578644,4 L7,2.58578644 C7.33339801,2.25238843 7.77238421,2.04885439 8.23836072,2.00774062 L8.41421356,2 L13.5857864,2 L8.41421356,2 Z M11,7 C13.7614237,7 16,9.23857625 16,12 C16,14.7614237 13.7614237,17 11,17 C8.23857625,17 6,14.7614237 6,12 C6,9.23857625 8.23857625,7 11,7 Z M11,9 C9.34314575,9 8,10.3431458 8,12 C8,13.6568542 9.34314575,15 11,15 C12.6568542,15 14,13.6568542 14,12 C14,10.3431458 12.6568542,9 11,9 Z' />,\n    'AddImage'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Cropper from 'react-cropper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport AddImageIcon from '../../Assets/Icons/AddImage';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CheckIcon from '../../Assets/Icons/Check';\nimport { getFitSize, readImageSize } from '../../Utils/Common';\nimport 'cropperjs/dist/cropper.css';\nimport './NewChatPhoto.css';\n\nclass NewChatPhoto extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.attachPhotoRef = React.createRef();\n        this.cropperRef = React.createRef();\n\n        const { defaultURL } = this.props;\n\n        this.state = {\n            blobURL: defaultURL,\n            open: false\n        }\n    }\n\n    handleCancel = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    handleDone = () => {\n        const cropper = this.cropperRef.current;\n        if (!cropper) return;\n\n        cropper.getCroppedCanvas().toBlob(blob => {\n            const blobURL = URL.createObjectURL(blob);\n\n            this.setState({\n                blob,\n                blobURL\n            });\n\n            const { onChoose } = this.props;\n            if (!onChoose) return;\n\n            onChoose(blob, blobURL);\n        }, 'image/jpeg');\n\n        this.handleCancel();\n    };\n\n    handleAttach = () => {\n        this.attachPhotoRef.current.click();\n    };\n\n    handleAttachComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ file, ...rest ] = Array.from(files);\n            if (!file) return;\n\n            const [width, height] = await readImageSize(file);\n\n            this.setState({\n                open: true,\n                file,\n                fileURL: URL.createObjectURL(file),\n                width,\n                height\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    render() {\n        const { t } = this.props;\n        const { open, width, height, fileURL, blobURL } = this.state;\n\n        const { width: fitWidth, height: fitHeight } = getFitSize({ width, height }, 400, true);\n\n        return (\n            <>\n                <div className='new-chat-photo'>\n                    { blobURL ? (\n                        <img className='new-chat-photo-image-button' alt='' src={blobURL} onClick={this.handleAttach}/>\n                        ) : (\n                        <div className='new-chat-photo-image-button new-chat-photo-button' onClick={this.handleAttach}>\n                            <AddImageIcon className='new-chat-photo-icon'/>\n                        </div>\n                    )}\n                </div>\n                <input\n                    ref={this.attachPhotoRef}\n                    className='inputbox-attach-button'\n                    type='file'\n                    multiple={false}\n                    accept='image/*'\n                    onChange={this.handleAttachComplete}\n                />\n                { open && (\n                    <Dialog\n                        transitionDuration={0}\n                        open={true}\n                        onClose={this.handleCancel}\n                        aria-labelledby='dialog-title'>\n                        <div className='header-master'>\n                            <IconButton className='header-left-button' onClick={this.handleCancel}>\n                                <CloseIcon/>\n                            </IconButton>\n                            <div className='header-status grow cursor-pointer'>\n                                <span className='header-status-content'>{t('DragToReposition')}</span>\n                            </div>\n                        </div>\n                        <DialogContent>\n                            <Cropper\n                                ref={this.cropperRef}\n                                src={fileURL}\n                                style={{ height: fitHeight, width: fitWidth, margin: '0 46px 62px' }}\n                                // Cropper.js options\n                                aspectRatio={1}\n                                viewMode={3}\n                                guides={false} />\n                        </DialogContent>\n                        <div className='new-chat-photo-done-button ' onClick={this.handleDone}>\n                            <CheckIcon/>\n                        </div>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n\n}\n\nNewChatPhoto.propTypes = {\n    defaultURL: PropTypes.string,\n    onChoose: PropTypes.func\n};\n\nexport default withTranslation()(NewChatPhoto);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport TextField from '@material-ui/core/TextField';\nimport { IconButton } from '@material-ui/core';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport NewChatPhoto from '../NewChatPhoto';\nimport { getSrc, loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditProfile.css';\nimport { getSimpleMarkupEntities, getFormattedText } from '../../../Utils/Message';\n\nclass EditProfile extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.firstNameRef = React.createRef();\n        this.lastNameRef = React.createRef();\n        this.bioRef = React.createRef();\n        this.usernameRef = React.createRef();\n\n        const user = UserStore.get(UserStore.getMyId());\n        const userFullInfo = UserStore.getFullInfo(UserStore.getMyId());\n\n        this.state = {\n            firstName: user ? user.first_name : '',\n            lastName: user ? user.last_name : '',\n            bio: userFullInfo ? userFullInfo.bio : '',\n            username: user ? user.username : '',\n            usernameCheck: null\n        };\n    }\n\n    componentWillUnmount() {\n        this.setName();\n        this.setBio();\n        this.setUsername();\n    }\n\n    setUsername() {\n        const { username, usernameCheck } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n\n        if (username === newUsername) return;\n        if (!usernameCheck) return;\n        if (usernameCheck['@type'] !== 'checkChatUsernameResultOk') return;\n\n        TdLibController.send({\n            '@type': 'setUsername',\n            username: newUsername\n        });\n    }\n\n    setName() {\n        const { firstName, lastName } = this.state;\n        const newFirstName = this.firstNameRef.current.value;\n        const newLastName = this.lastNameRef.current.value;\n\n        if (newFirstName === firstName && newLastName === lastName) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setName',\n            first_name: newFirstName,\n            last_name: newLastName\n        });\n    }\n\n    setBio() {\n        const { bio } = this.state;\n        const newBio = this.bioRef.current.value;\n        if (newBio === bio) {\n            return;\n        }\n\n        TdLibController.send({\n            '@type': 'setBio',\n            bio: newBio\n        });\n    }\n\n    handleUsernameChange = async () => {\n        const { chatId } = this.props;\n        const { username } = this.state;\n        let newUsername = this.usernameRef.current.value;\n        if (newUsername.startsWith('@') && newUsername.length > 1) {\n            newUsername = newUsername.substr(1);\n        }\n        if (username === newUsername || newUsername === '') {\n            this.setState({\n                usernameCheck: null\n            });\n\n            // console.log('[un] checkChatUsername', 'null');\n        } else {\n            // console.log('[un] checkChatUsername start', chatId, newUsername);\n            const result = await TdLibController.send({\n                '@type': 'checkChatUsername',\n                chat_id: chatId,\n                username: newUsername\n            });\n\n            // console.log('[un] checkChatUsername end', chatId, newUsername, result);\n\n            let newUsername2 = this.usernameRef.current.value;\n            if (newUsername2.startsWith('@') && newUsername2.length > 1) {\n                newUsername2 = newUsername2.substr(1);\n            }\n            if (newUsername2 === newUsername) {\n                this.setState({\n                    usernameCheck: result\n                });\n            }\n        }\n    };\n\n    handleChoosePhoto = async data => {\n        const { chatId } = this.props;\n\n        await TdLibController.send({\n            '@type': 'setProfilePhoto',\n            photo: { '@type': 'inputFileBlob', name: 'profile_photo.jpg', data }\n        });\n\n        const store = FileStore.getStore();\n        loadChatContent(store, chatId, true);\n    };\n\n    render() {\n        let { chatId, t, onClose } = this.props;\n        const { firstName, lastName, bio, username, usernameCheck } = this.state;\n\n        let hasError = false;\n        let usernameLabel = t('Username');\n        if (usernameCheck) {\n            switch (usernameCheck['@type']) {\n                case 'checkChatUsernameResultOk': {\n                    hasError = false;\n                    usernameLabel = 'Username is available';\n                    break;\n                }\n                case 'checkChatUsernameResultPublicChatsTooMuch':\n                case 'checkChatUsernameResultPublicGroupsUnavailable':\n                case 'checkChatUsernameResultUsernameInvalid': {\n                    hasError = true;\n                    usernameLabel = 'Invalid username';\n                    break;\n                }\n                case 'checkChatUsernameResultUsernameOccupied': {\n                    hasError = true;\n                    usernameLabel = 'Username is already taken';\n                    break;\n                }\n            }\n        }\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { photo } = chat;\n\n        const src = getSrc(photo ? photo.small : null);\n        const entities = [];\n        const text = getSimpleMarkupEntities(t('UsernameHelp'), entities);\n        const formattedText = getFormattedText({ '@type': 'formattedText', text, entities });\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('EditProfile')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <NewChatPhoto defaultURL={src} onChoose={this.handleChoosePhoto}/>\n                    <div className='edit-profile-name'>\n                        <TextField\n                            inputRef={this.firstNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FirstName')}\n                            defaultValue={firstName}\n                        />\n                        <TextField\n                            inputRef={this.lastNameRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('LastName')}\n                            defaultValue={lastName}\n                        />\n                        <TextField\n                            inputRef={this.bioRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('Bio')}\n                            defaultValue={bio}\n                        />\n                        <div className='edit-profile-hint'>{t('BioAbout')}</div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='edit-profile-username'>\n                        <TextField\n                            inputRef={this.usernameRef}\n                            error={hasError}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={usernameLabel}\n                            defaultValue={username}\n                            onChange={this.handleUsernameChange}\n                        />\n                        <div className='edit-profile-hint'>\n                            {formattedText}\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nEditProfile.propTypes = {\n    chatId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(EditProfile);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fill='currentColor' fillRule='nonzero' d='M11.8833789,4.00672773 L12,4 C12.5128358,4 12.9355072,4.38604019 12.9932723,4.88337887 L13,5 L13,11 L19,11 C19.5128358,11 19.9355072,11.3860402 19.9932723,11.8833789 L20,12 C20,12.5128358 19.6139598,12.9355072 19.1166211,12.9932723 L19,13 L13,13 L13,19 C13,19.5128358 12.6139598,19.9355072 12.1166211,19.9932723 L12,20 C11.4871642,20 11.0644928,19.6139598 11.0067277,19.1166211 L11,19 L11,13 L5,13 C4.48716416,13 4.06449284,12.6139598 4.00672773,12.1166211 L4,12 C4,11.4871642 4.38604019,11.0644928 4.88337887,11.0067277 L5,11 L11,11 L11,5 C11,4.48716416 11.3860402,4.06449284 11.8833789,4.00672773 L12,4 L11.8833789,4.00672773 Z'/>,\n    'Add'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M18,18 C23.8608627,18 28.072977,19.5546034 30.5027576,22.7682432 C31.1498637,23.6240893 31.5,24.6677318 31.5,25.7406839 L31.5,27.4285714 C31.5,29.6771593 29.6771593,31.5 27.4285714,31.5 L8.57142857,31.5 C6.32284066,31.5 4.5,29.6771593 4.5,27.4285714 L4.5,25.740741 C4.5,24.6677985 4.85010028,23.6241745 5.49717185,22.7683365 C7.92695186,19.5546298 12.1390883,18 18,18 Z M18,21 C12.9925527,21 9.66714119,22.2273543 7.89018414,24.5776159 C7.63699525,24.9124919 7.5,25.3208649 7.5,25.740741 L7.5,27.4285714 C7.5,28.0203051 7.97969491,28.5 8.57142857,28.5 L27.4285714,28.5 C28.0203051,28.5 28.5,28.0203051 28.5,27.4285714 L28.5,25.7406839 C28.5,25.3208358 28.3629925,24.9124609 28.1097736,24.5775601 C26.3328071,22.2273354 23.0074077,21 18,21 Z M18,3 C21.3137085,3 24,5.6862915 24,9 C24,12.3137085 21.3137085,15 18,15 C14.6862915,15 12,12.3137085 12,9 C12,5.6862915 14.6862915,3 18,3 Z M18,6 C16.3431458,6 15,7.34314575 15,9 C15,10.6568542 16.3431458,12 18,12 C19.6568542,12 21,10.6568542 21,9 C21,7.34314575 19.6568542,6 18,6 Z'/>,\n    'NewPrivate'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.6742675,16.1038947 16.9426297,16.7664653 16.9917833,17.4602417 L17,17.6925226 L17,18.5 C17,19.8254834 15.9684641,20.9100387 14.6643757,20.9946823 L14.5,21 L3.5,21 C2.1745166,21 1.08996133,19.9684641 1.00531768,18.6643757 L1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.14055953,17.0554062 3.03840077,17.2920167 3.00889582,17.5415166 L3,17.6925212 L3,18.5 C3,18.7454599 3.17687516,18.9496084 3.41012437,18.9919443 L3.5,19 L14.5,19 C14.7454599,19 14.9496084,18.8231248 14.9919443,18.5898756 L15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M19,14 C19.5522847,14 20,14.4477153 20,15 C20,15.5522847 19.5522847,16 19,16 C18.4477153,16 18,15.5522847 18,15 C18,14.4477153 18.4477153,14 19,14 Z M19,3 C21.209139,3 23,4.790861 23,7 C23,8.80747736 21.8011592,10.3349504 20.1552529,10.8306439 L20,10.873 L20,11.5 C20,12.0128358 19.6139598,12.4355072 19.1166211,12.4932723 L19,12.5 C18.4871642,12.5 18.0644928,12.1139598 18.0067277,11.6166211 L18,11.5 L18,10 C18,9.48716416 18.3860402,9.06449284 18.8833789,9.00672773 L19,9 C20.1045695,9 21,8.1045695 21,7 C21,5.8954305 20.1045695,5 19,5 C17.8954305,5 17,5.8954305 17,7 C17,7.55228475 16.5522847,8 16,8 C15.4477153,8 15,7.55228475 15,7 C15,4.790861 16.790861,3 19,3 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z'/>,\n    'NonContacts'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,19.5 C16.9843673,19.5 20.6295366,20.7505675 22.8335731,23.3549038 C23.5867154,24.2448351 24,25.3729365 24,26.538784 L24,27.75 C24,29.8210678 22.3210678,31.5 20.25,31.5 L3.75,31.5 C1.67893219,31.5 0,29.8210678 0,27.75 L0,26.5387806 C0,25.3729314 0.413286907,24.2448288 1.16643175,23.354898 C3.37046736,20.7505662 7.01563535,19.5 12,19.5 Z M26.9272668,21.0503629 L27.1024807,21.0520931 C30.3320395,21.2704178 32.8220855,22.1814787 34.5196345,23.8437596 C35.3875212,24.6935741 35.9082005,25.8309338 35.9889534,27.0352541 L36,27.3651995 L36,28.125 C36,29.911296 34.6122576,31.3734674 32.8560732,31.4922138 L32.625,31.5 L28.5,31.5 C27.6715729,31.5 27,30.8284271 27,30 C27,29.2307462 27.5790603,28.5967393 28.3250683,28.5100916 L28.5,28.5 L32.625,28.5 C32.8025201,28.5 32.9512302,28.3766499 32.990096,28.2109841 L33,28.125 L33,27.3651995 C33,26.8466882 32.7912139,26.3500306 32.4207231,25.9872546 C31.2961739,24.8860689 29.4736312,24.2192349 26.9001365,24.0452615 C26.0735959,23.9893857 25.4488487,23.2740458 25.5047245,22.4475052 C25.5566091,21.6800032 26.1771133,21.0864965 26.9272668,21.0503629 L26.9272668,21.0503629 Z M12,22.5 C7.81695054,22.5 5.00307249,23.4653713 3.4564301,25.2929144 C3.16172113,25.6411484 3,26.0825803 3,26.5387817 L3,27.75 C3,28.1642136 3.33578644,28.5 3.75,28.5 L20.25,28.5 C20.6642136,28.5 21,28.1642136 21,27.75 L21,26.538784 C21,26.0825825 20.8382796,25.6411507 20.5435722,25.2929172 C18.9969303,23.4653723 16.1830516,22.5 12,22.5 Z M25.5,7.5 C28.3994949,7.5 30.75,9.85050506 30.75,12.75 C30.75,15.6494949 28.3994949,18 25.5,18 C22.6005051,18 20.25,15.6494949 20.25,12.75 C20.25,9.85050506 22.6005051,7.5 25.5,7.5 Z M12,4.5 C15.3137085,4.5 18,7.1862915 18,10.5 C18,13.8137085 15.3137085,16.5 12,16.5 C8.6862915,16.5 6,13.8137085 6,10.5 C6,7.1862915 8.6862915,4.5 12,4.5 Z M25.5,10.5 C24.2573593,10.5 23.25,11.5073593 23.25,12.75 C23.25,13.9926407 24.2573593,15 25.5,15 C26.7426407,15 27.75,13.9926407 27.75,12.75 C27.75,11.5073593 26.7426407,10.5 25.5,10.5 Z M12,7.5 C10.3431458,7.5 9,8.84314575 9,10.5 C9,12.1568542 10.3431458,13.5 12,13.5 C13.6568542,13.5 15,12.1568542 15,10.5 C15,8.84314575 13.6568542,7.5 12,7.5 Z'/>,\n    'NewGroup'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M27.75,2.51771235 C29.8210678,2.51771235 31.5,4.19664454 31.5,6.26771235 L31.5,29.7322876 C31.5,30.6020604 31.1976592,31.444786 30.6447384,32.1161898 C29.3281456,33.7149097 26.9648177,33.9436189 25.3660978,32.627026 L18,26.5597124 L18,29.25 C18,31.6465213 16.1266201,33.6054913 13.7644092,33.742361 L13.5,33.75 C11.1034787,33.75 9.14450868,31.8766201 9.00763904,29.5144092 L9,29.25 L8.99971804,25.3499156 C5.57649804,24.6549011 3,21.6283372 3,18 C3,13.8578644 6.35786438,10.5 10.5,10.5 L16.7118519,10.5 L25.3660978,3.37297397 C26.0375017,2.82005314 26.8802273,2.51771235 27.75,2.51771235 Z M12,25.4992124 L12,29.25 C12,30.0784271 12.6715729,30.75 13.5,30.75 C14.2692538,30.75 14.9032607,30.1709397 14.9899084,29.4249317 L15,29.25 L15,25.4992124 L12,25.4992124 L12,29.25 L12,25.4992124 Z M27.75,5.51771235 C27.5760455,5.51771235 27.4075003,5.57818051 27.2732196,5.68876467 L18.6189737,12.8157907 C18.0818506,13.2581274 17.4076701,13.5 16.7118519,13.5 L10.5,13.5 C8.01471863,13.5 6,15.5147186 6,18 C6,20.4852814 8.01471863,22.5 10.5,22.5 L16.7118519,22.5 C17.4076701,22.5 18.0818506,22.7418726 18.6189737,23.1842093 L27.2732196,30.3112353 C27.5929635,30.5745539 28.0656291,30.5288121 28.3289477,30.2090681 C28.4395318,30.0747873 28.5,29.9062422 28.5,29.7322876 L28.5,6.26771235 C28.5,5.85349879 28.1642136,5.51771235 27.75,5.51771235 Z'/>,\n    'NewChannel'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M17,3 C19.1421954,3 20.8910789,4.68396847 20.9951047,6.80035966 L21,7 L21,10.5 C21,11.0522847 20.5522847,11.5 20,11.5 C19.4871642,11.5 19.0644928,11.1139598 19.0067277,10.6166211 L19,10.5 L19,7 C19,5.9456382 18.1841222,5.08183488 17.1492623,5.00548574 L17,5 L7,5 C5.9456382,5 5.08183488,5.81587779 5.00548574,6.85073766 L5,7 L5,19.585 L7.20502525,17.3807612 C7.41399436,17.1717921 7.68678103,17.0413128 7.97757724,17.0082977 L8.12426407,17 L12.5,17 C13.0522847,17 13.5,17.4477153 13.5,18 C13.5,18.5128358 13.1139598,18.9355072 12.6166211,18.9932723 L12.5,19 L8.413,19 L4.87781746,22.5363961 C4.47892479,22.9352888 3.84989486,22.9637811 3.41812544,22.6218731 L3.32218254,22.5363961 C3.14536253,22.3595761 3.034957,22.1287566 3.00702113,21.8826983 L3,21.7585786 L3,7 C3,4.85780461 4.68396847,3.10892112 6.80035966,3.00489531 L7,3 L17,3 Z M22.7071068,12.2928932 C23.0675907,12.6533772 23.0953203,13.2206082 22.7902954,13.6128994 L22.7071068,13.7071068 L17.7071068,18.7071068 C17.3466228,19.0675907 16.7793918,19.0953203 16.3871006,18.7902954 L16.2928932,18.7071068 L13.7928932,16.2071068 C13.4023689,15.8165825 13.4023689,15.1834175 13.7928932,14.7928932 C14.1533772,14.4324093 14.7206082,14.4046797 15.1128994,14.7097046 L15.2071068,14.7928932 L17,16.585 L21.2928932,12.2928932 C21.6834175,11.9023689 22.3165825,11.9023689 22.7071068,12.2928932 Z'/>,\n    'ReadChats'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path fillRule='nonzero' d='M12,1 C12.5128358,1 12.9355072,1.38604019 12.9932723,1.88337887 L13,2 L13,3 L13.5,3 C16.7383969,3 19.3775718,5.56557489 19.4958615,8.77506174 L19.5,9 L19.5,11 L20,11 L20.1762728,11.0050927 C21.6927538,11.0929596 22.9070404,12.3072462 22.9949073,13.8237272 L23,14 L23,17 L22.9932723,17.1166211 C22.9355072,17.6139598 22.5128358,18 22,18 C21.4871642,18 21.0644928,17.6139598 21.0067277,17.1166211 L21,17 L21,14 L20.9932723,13.8833789 C20.9399506,13.424297 20.575703,13.0600494 20.1166211,13.0067277 L20,13 L19.5,13 L19.5,18 C19.5,20.1421954 17.8160315,21.8910789 15.6996403,21.9951047 L15.5,22 L8.5,22 C6.35780461,22 4.60892112,20.3160315 4.50489531,18.1996403 L4.5,18 L4.5,13 L4,13 C3.48716416,13 3.06449284,13.3860402 3.00672773,13.8833789 L3,14 L3,17 C3,17.5522847 2.55228475,18 2,18 C1.48716416,18 1.06449284,17.6139598 1.00672773,17.1166211 L1,17 L1,14 C1,12.4023191 2.24891996,11.0963391 3.82372721,11.0050927 L4,11 L4.5,11 L4.5,9 C4.5,5.76160306 7.06557489,3.12242824 10.2750617,3.00413847 L10.5,3 L11,3 L11,2 C11,1.44771525 11.4477153,1 12,1 Z M16.6762728,12.9949073 L16.5,13 L7.5,13 C7.14939781,13 6.81284272,12.9398572 6.5,12.8293257 L6.5,18 C6.5,19.0543618 7.31587779,19.9181651 8.35073766,19.9945143 L8.5,20 L15.5,20 C16.5543618,20 17.4181651,19.1841222 17.4945143,18.1492623 L17.5,18 L17.5009007,12.8289758 C17.2406443,12.9210572 16.9638938,12.9782422 16.6762728,12.9949073 Z M13.5,5 L10.5,5 C8.35780461,5 6.60892112,6.68396847 6.50489531,8.80035966 L6.5,9 L6.5,10 C6.5,10.5128358 6.88604019,10.9355072 7.38337887,10.9932723 L7.5,11 L16.5,11 C17.0128358,11 17.4355072,10.6139598 17.4932723,10.1166211 L17.5,10 L17.5,9 C17.5,6.85780461 15.8160315,5.10892112 13.6996403,5.00489531 L13.5,5 Z M9.5,7.5 C10.0522847,7.5 10.5,7.94771525 10.5,8.5 C10.5,9.05228475 10.0522847,9.5 9.5,9.5 C8.94771525,9.5 8.5,9.05228475 8.5,8.5 C8.5,7.94771525 8.94771525,7.5 9.5,7.5 Z M14.5,7.5 C15.0522847,7.5 15.5,7.94771525 15.5,8.5 C15.5,9.05228475 15.0522847,9.5 14.5,9.5 C13.9477153,9.5 13.5,9.05228475 13.5,8.5 C13.5,7.94771525 13.9477153,7.5 14.5,7.5 Z'/>,\n    'Bots'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M4.70710678,12.2928932 C4.31658249,11.9023689 3.68341751,11.9023689 3.29289322,12.2928932 C2.90236893,12.6834175 2.90236893,13.3165825 3.29289322,13.7071068 L8.29289322,18.7071068 C8.68341751,19.0976311 9.31658249,19.0976311 9.70710678,18.7071068 L20.7071068,7.70710678 C21.0976311,7.31658249 21.0976311,6.68341751 20.7071068,6.29289322 C20.3165825,5.90236893 19.6834175,5.90236893 19.2928932,6.29289322 L9,16.5857864 L4.70710678,12.2928932 Z' />,\n    'Done'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport ChatTile from './ChatTile';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getChatTitle, getChatType } from '../../Utils/Chat';\nimport './FilterChat.css';\n\nclass FilterChat extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0,\n        checked: false\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { chatId, onDelete } = this.props;\n\n        onDelete && onDelete(chatId);\n    };\n\n    render() {\n        const { chatId, t, type, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        const title = getChatTitle(chatId, true, t);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        <ChatTile chatId={chatId} small={true} showSavedMessages={true}/>\n                    </div>\n                    <div className='filter-chat-content'>\n                        <div className='filter-chat-title'>\n                            {title}\n                        </div>\n                        { type && (\n                            <div className='filter-chat-subtitle'>\n                                {getChatType(chatId, t)}\n                            </div>\n                        )}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    type: PropTypes.bool,\n    onDelete: PropTypes.func,\n    checked: PropTypes.bool,\n    onChange: PropTypes.func\n};\n\nexport default withTranslation()(FilterChat);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport Radio from '@material-ui/core/Radio';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport './FilterText.css';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass FilterText extends React.Component {\n\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleOpenContextMenu = event => {\n        const { onDelete } = this.props;\n        if (!onDelete) return;\n\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n\n        const { onDelete } = this.props;\n\n        onDelete && onDelete();\n    };\n\n    render() {\n        const { t, className, icon, text, checked, onClick } = this.props;\n        const { contextMenu, left, top } = this.state;\n\n        return (\n            <>\n                <ListItem className={classNames(className, 'settings-list-item2', 'filter-chat-text')} role={undefined} button onMouseDown={onClick} onContextMenu={this.handleOpenContextMenu}>\n                    <div className='filter-chat-tile'>\n                        {icon}\n                    </div>\n                    <div className='filter-chat-content'>\n                        {text}\n                    </div>\n                    { checked !== undefined && (\n                        <Radio className='filter-chat-checkbox' color='primary' checked={checked} />\n                    )}\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nFilterText.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func,\n    onChange: PropTypes.func,\n    onDelete: PropTypes.func\n};\n\nexport default withTranslation()(FilterText);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport './Chip.css';\n\nclass Chip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { icon, text, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <div className='chip-icon'>\n                    {icon}\n                </div>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{text}</div>\n            </div>\n        )\n    }\n}\n\nChip.propTypes = {\n    icon: PropTypes.object,\n    text: PropTypes.string,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default Chip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ChatChip.css';\n\nclass ChatChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { chatId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <ChatTile chatId={chatId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getChatShortTitle(chatId)}</div>\n            </div>\n        )\n    }\n}\n\nChatChip.propTypes = {\n    chatId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default ChatChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport SectionHeader from '../SectionHeader';\nimport SearchInput from '../Search/SearchInput';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport Chip from '../../Tile/Chip';\nimport ChatChip from '../../Tile/ChatChip';\nimport { loadChatsContent } from '../../../Utils/File';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './EditFilterChats.css';\n\nclass EditFilterChats extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            focusedItem: null,\n            searchItems: null,\n            error: false\n        }\n    }\n\n    handleChatChange = (chatId, search) => {\n        const { mode } = this.props;\n\n        if (search) {\n            const input = this.searchInputRef.current;\n            input.focus();\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        this.handleChange(mode === 'include' ? 'included_chat_ids' : 'excluded_chat_ids', chatId);\n    };\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { filter, mode } = this.props;\n        const { filter : prevFilter } = prevProps;\n\n        if (prevProps.filter === filter) {\n            return null;\n        }\n\n        const include = mode === 'include';\n        const prevItems = include ? prevProps.filter.included_chat_ids : prevProps.filter.excluded_chat_ids;\n        const items = include ? filter.included_chat_ids : filter.excluded_chat_ids;\n\n        const isDeleting =\n            prevItems.length > items.length\n            || prevFilter.include_contacts && !filter.include_contacts\n            || prevFilter.include_non_contacts && !filter.include_non_contacts\n            || prevFilter.include_groups && !filter.include_groups\n            || prevFilter.include_channels && !filter.include_channels\n            || prevFilter.include_bots && !filter.include_bots\n            || prevFilter.exclude_read && !filter.exclude_read\n            || prevFilter.exclude_muted && !filter.exclude_muted\n            || prevFilter.exclude_archived && !filter.exclude_archived;\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        return { items: prevMap, panel: { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.filter === this.props.filter) {\n            return;\n        }\n\n        this.animatePanel(snapshot.panel);\n        // this.animateItems(snapshot.items);\n    }\n\n    animatePanel(snapshot) {\n        if (!snapshot) return;\n\n        const { isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText } = snapshot;\n\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        if (!prevOffsets) return;\n\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                            + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                        + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 100);\n        });\n    }\n\n    handleBackspace = () => {\n        const { filter, mode } = this.props;\n        const { focusedItem } = this.state;\n        if (!filter) return;\n\n        if (focusedItem) {\n            switch (focusedItem) {\n                case 'include_contacts':\n                case 'include_non_contacts':\n                case 'include_bots':\n                case 'include_groups':\n                case 'include_channels':\n                case 'exclude_muted':\n                case 'exclude_read':\n                case 'exclude_archived': {\n                    this.handleChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n                default: {\n                    this.handleChatChange(focusedItem);\n\n                    this.setState({\n                        focusedItem: null\n                    });\n                    break;\n                }\n            }\n            return;\n        }\n\n        const include = mode === 'include';\n        if (include) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = filter;\n\n            if (included_chat_ids.length > 0) {\n                const lastItem = included_chat_ids[included_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (include_bots) {\n                this.setState({\n                    focusedItem: 'include_bots'\n                });\n            } else if (include_channels) {\n                this.setState({\n                    focusedItem: 'include_channels'\n                });\n            } else if (include_groups) {\n                this.setState({\n                    focusedItem: 'include_groups'\n                });\n            } else if (include_non_contacts) {\n                this.setState({\n                    focusedItem: 'include_non_contacts'\n                });\n            } else if (include_contacts) {\n                this.setState({\n                    focusedItem: 'include_contacts'\n                });\n            }\n        } else {\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = filter;\n\n            if (excluded_chat_ids.length > 0) {\n                const lastItem = excluded_chat_ids[excluded_chat_ids.length - 1];\n                if (!lastItem) return;\n\n                this.setState({\n                    focusedItem: lastItem\n                });\n            } else if (exclude_archived) {\n                this.setState({\n                    focusedItem: 'exclude_archived'\n                });\n            } else if (exclude_read) {\n                this.setState({\n                    focusedItem: 'exclude_read'\n                });\n            } else if (exclude_muted) {\n                this.setState({\n                    focusedItem: 'exclude_muted'\n                });\n            }\n        }\n    };\n\n    handleChange = (type, value) => {\n        const { onChange } = this.props;\n\n        onChange(type, value);\n\n        this.setState({\n            focusedItem: null\n        });\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchChats',\n                query,\n                limit: 100\n            })\n        );\n        const [searchItems] = await Promise.all(promises);\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, searchItems.chat_ids);\n\n        this.setState({ searchItems, focusedItem: null });\n    };\n\n    render() {\n        const { t, filter, chats, limit, mode, onClose, onChange, onScroll } = this.props;\n        const { focusedItem, searchItems } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = filter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = filter;\n\n        const include = mode === 'include';\n        const items = include ? included_chat_ids : excluded_chat_ids;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{mode === 'include' ? t('FilterInclude') : t('FilterExclude')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    { include && (\n                        <>\n                            {include_contacts && <Chip onClick={() => this.handleChange('include_contacts')} ref={el => { this.itemsRef.set('include_contacts', el); }} selected={focusedItem === 'include_contacts'} icon={<ContactsIcon viewBox='0 0 36 36'/>} text={t('FilterContacts')}/>}\n                            {include_non_contacts && <Chip onClick={() => this.handleChange('include_non_contacts')} ref={el => { this.itemsRef.set('include_non_contacts', el); }} selected={focusedItem === 'include_non_contacts'} icon={<NonContactsIcon />} text={t('FilterNonContacts')}/>}\n                            {include_groups && <Chip onClick={() => this.handleChange('include_groups')} ref={el => { this.itemsRef.set('include_groups', el); }} selected={focusedItem === 'include_groups'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterGroups')}/>}\n                            {include_channels && <Chip onClick={() => this.handleChange('include_channels')} ref={el => { this.itemsRef.set('include_channels', el); }} selected={focusedItem === 'include_channels'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterChannels')}/>}\n                            {include_bots && <Chip onClick={() => this.handleChange('include_bots')} ref={el => { this.itemsRef.set('include_bots', el); }} selected={focusedItem === 'include_bots'} icon={<BotsIcon />} text={t('FilterBots')}/>}\n                        </>\n                    )}\n                    { !include && (\n                        <>\n                            {exclude_muted && <Chip onClick={() => this.handleChange('exclude_muted')} ref={el => { this.itemsRef.set('exclude_muted', el); }} selected={focusedItem === 'exclude_muted'} icon={<GroupsIcon viewBox='0 0 36 36'/>} text={t('FilterMuted')}/>}\n                            {exclude_read && <Chip onClick={() => this.handleChange('exclude_read')} ref={el => { this.itemsRef.set('exclude_read', el); }} selected={focusedItem === 'exclude_read'} icon={<ChannelsIcon viewBox='0 0 36 36'/>} text={t('FilterRead')}/>}\n                            {exclude_archived && <Chip onClick={() => this.handleChange('exclude_archived')} ref={el => { this.itemsRef.set('exclude_archived', el); }} selected={focusedItem === 'exclude_archived'} icon={<BotsIcon />} text={t('FilterArchived')}/>}\n                        </>\n                    )}\n                    {items.map(x => <ChatChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} chatId={x} onClick={() => this.handleChatChange(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('Search')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                <div ref={this.scrollRef} className='sidebar-page-content' style={{ marginTop: -3, position: 'relative', height: '100%' }} onScroll={onScroll}>\n                    <SectionHeader>{t('FilterChatTypes')}</SectionHeader>\n                    {include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('include_contacts')} checked={include_contacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_non_contacts')} checked={include_non_contacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />\n                            <FilterText onClick={() => this.handleChange('include_groups')} checked={include_groups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />\n                            <FilterText onClick={() => this.handleChange('include_channels')} checked={include_channels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />\n                            <FilterText onClick={() => this.handleChange('include_bots')} checked={include_bots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />\n                        </>\n                    )}\n                    {!include && (\n                        <>\n                            <FilterText onClick={() => this.handleChange('exclude_muted')} checked={exclude_muted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />\n                            <FilterText onClick={() => this.handleChange('exclude_read')} checked={exclude_read} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />\n                            <FilterText onClick={() => this.handleChange('exclude_archived')} checked={exclude_archived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />\n                        </>\n                    )}\n                    { chats && chats.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' style={{ margin: '8px -8px' }}/>\n                            <SectionHeader>{t('FilterChats')}</SectionHeader>\n                            { (chats || []).slice(0, limit).map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </>\n                    )}\n                    { searchItems && (\n                        <div className='edit-filter-chats-search'>\n                            { searchItems.chat_ids.map(x => <FilterChat type={true} onClick={() => this.handleChatChange(x, true)} key={x} chatId={x} checked={mode === 'include' ? included_chat_ids.includes(x) : excluded_chat_ids.includes(x)}/>) }\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nEditFilterChats.propTypes = {\n    filter: PropTypes.object,\n    chats: PropTypes.array,\n    mode: PropTypes.string,\n    onChange: PropTypes.func,\n    onScroll: PropTypes.func\n};\n\nexport default withTranslation()(EditFilterChats);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport ContactsIcon from '../../../Assets/Icons/NewPrivate';\nimport NonContactsIcon from '../../../Assets/Icons/NonContacts';\nimport GroupsIcon from '../../../Assets/Icons/NewGroup';\nimport ChannelsIcon from '../../../Assets/Icons/NewChannel';\nimport MutedIcon from '../../../Assets/Icons/Mute';\nimport ReadIcon from '../../../Assets/Icons/ReadChats';\nimport ArchivedIcon from '../../../Assets/Icons/Archive';\nimport BotsIcon from '../../../Assets/Icons/Bots';\nimport RemoveIcon from '@material-ui/icons/Remove';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport DoneIcon from '../../../Assets/Icons/Done';\nimport EditFilterChats from './EditFilterChats';\nimport FilterChat from '../../Tile/FilterChat';\nimport FilterText from '../../Tile/FilterText';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { isFilterValid } from '../../../Utils/Filter';\nimport { CHAT_SLICE_LIMIT, FILTER_TITLE_MAX_LENGTH, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './CreateFilter.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass CreateFilter extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            prevFilterId: -1,\n            data: null,\n            openFilterChats: false,\n            mode: null,\n            title: '',\n            error: false,\n            shook: false,\n            chats: [],\n            limit: 0\n        }\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { filter, filterId } = props;\n        const { prevFilterId } = state;\n\n        if (filter && prevFilterId !== filterId){\n            return {\n                prevFilterId: filterId,\n                editFilter: {...filter},\n                title: filter.title\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [ fetch('data/Folders_2.json') ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleDone = () => {\n        const { onDone } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.titleRef.current.focus();\n            this.setState({\n                error: true\n            })\n            return;\n        } else {\n            this.setState({\n                error: false\n            })\n        }\n\n        editFilter.title = title;\n\n        if (!isFilterValid(editFilter)) {\n            this.handleScheduledAction('Please choose at least one chat for this folder.');\n            return;\n        }\n\n        onDone && onDone(editFilter);\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleDeleteIncludeContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeNonContacts = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_non_contacts: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterNonContacts')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeGroups = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_groups: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterGroups')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeChannels = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_channels: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterChannels')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludeBots = () => {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, include_bots: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        });\n\n        const title = this.titleRef.current.value;\n        if (title === t('FilterBots')){\n            this.setState({\n                title: ''\n            });\n        }\n    };\n\n    handleDeleteIncludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, included_chat_ids: editFilter.included_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeMuted = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_muted: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeRead = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_read: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludeArchived = () => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, exclude_archived: false };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleDeleteExcludedChat = chatId => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        const newEditFilter = { ...editFilter, excluded_chat_ids: editFilter.excluded_chat_ids.filter(x => x !== chatId) };\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleOpenFilterChats = async mode => {\n        const result = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 1000\n        });\n\n        this.setState({\n            openFilterChats: true,\n            mode,\n            chats: result.chat_ids,\n            limit: CHAT_SLICE_LIMIT\n        })\n    };\n\n    setDefaultFilterTitle() {\n        const { t } = this.props;\n        const { editFilter } = this.state;\n\n        const title = this.titleRef.current.value;\n        if (!title) {\n            const {\n                include_contacts,\n                include_non_contacts,\n                include_bots,\n                include_groups,\n                include_channels,\n                included_chat_ids\n            } = editFilter;\n\n            const {\n                exclude_muted,\n                exclude_read,\n                exclude_archived,\n                excluded_chat_ids\n            } = editFilter;\n\n            if (!included_chat_ids.length) {\n                if (include_contacts && !include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterContacts')\n                    });\n                } else if (!include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterNonContacts')\n                    });\n                } else if (include_contacts && include_non_contacts && !include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('ChatHints')\n                    });\n                } else if (!include_contacts && !include_non_contacts && include_bots && !include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterBots')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && include_groups && !include_channels) {\n                    this.setState({\n                        title: t('FilterGroups')\n                    });\n                } else if (!include_contacts && !include_non_contacts && !include_bots && !include_groups && include_channels) {\n                    this.setState({\n                        title: t('FilterChannels')\n                    });\n                }\n            }\n        }\n    }\n\n    handleCloseFilterChats = () => {\n\n        this.setDefaultFilterTitle();\n\n        this.setState({\n            openFilterChats: false,\n            mode: null\n        })\n    };\n\n    handleChange = (type, value) => {\n        const { editFilter } = this.state;\n        if (!editFilter) return;\n\n        let newEditFilter = null;\n        switch (type) {\n            case 'include_contacts': {\n                newEditFilter = { ...editFilter, include_contacts: !editFilter.include_contacts };\n                break;\n            }\n            case 'include_non_contacts': {\n                newEditFilter = { ...editFilter, include_non_contacts: !editFilter.include_non_contacts };\n                break;\n            }\n            case 'include_bots': {\n                newEditFilter = { ...editFilter, include_bots: !editFilter.include_bots };\n                break;\n            }\n            case 'include_groups': {\n                newEditFilter = { ...editFilter, include_groups: !editFilter.include_groups };\n                break;\n            }\n            case 'include_channels': {\n                newEditFilter = { ...editFilter, include_channels: !editFilter.include_channels };\n                break;\n            }\n            case 'included_chat_ids': {\n                let included, excluded;\n                if (editFilter.included_chat_ids.includes(value)) {\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                    excluded = editFilter.excluded_chat_ids;\n                } else {\n                    included = [ ...editFilter.included_chat_ids, value ];\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n                break;\n            }\n            case 'exclude_muted': {\n                newEditFilter = { ...editFilter, exclude_muted: !editFilter.exclude_muted };\n                break;\n            }\n            case 'exclude_read': {\n                newEditFilter = { ...editFilter, exclude_read: !editFilter.exclude_read };\n                break;\n            }\n            case 'exclude_archived': {\n                newEditFilter = { ...editFilter, exclude_archived: !editFilter.exclude_archived };\n                break;\n            }\n            case 'excluded_chat_ids': {\n                let included, excluded;\n                if (editFilter.excluded_chat_ids.includes(value)) {\n                    excluded = editFilter.excluded_chat_ids.filter(x => x !== value);\n                    included = editFilter.included_chat_ids;\n                } else {\n                    excluded = [ ...editFilter.excluded_chat_ids, value ];\n                    included = editFilter.included_chat_ids.filter(x => x !== value);\n                }\n\n                newEditFilter = {\n                    ...editFilter,\n                    included_chat_ids: included,\n                    excluded_chat_ids: excluded\n                };\n\n                break;\n            }\n        }\n\n        // console.log('[f] onChange', type, value, newEditFilter);\n        if (!newEditFilter) return;\n\n        this.setState({\n            editFilter: newEditFilter\n        })\n    };\n\n    handleTitleChange = () => {\n        const title = this.titleRef.current.value.substr(0, FILTER_TITLE_MAX_LENGTH);\n\n        this.setState({\n            title\n        });\n    }\n\n    handleScroll = event => {\n        const scroll = event.target;\n        if (scroll.scrollTop + scroll.offsetHeight >= scroll.scrollHeight) {\n            this.setState({\n                limit: this.state.limit + CHAT_SLICE_LIMIT\n            })\n        }\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, filter, id, onClose } = this.props;\n        if (!filter) return null;\n\n        const { editFilter, data, openFilterChats, mode, chats, limit, title, error, shook } = this.state;\n\n        const {\n            include_contacts,\n            include_non_contacts,\n            include_bots,\n            include_groups,\n            include_channels,\n            included_chat_ids\n        } = editFilter;\n\n        const {\n            exclude_muted,\n            exclude_read,\n            exclude_archived,\n            excluded_chat_ids\n        } = editFilter;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{id >= 0 ? t('FilterEdit') : t('CreateNewFilter')}</span>\n                    </div>\n                    <IconButton className='header-right-button' color='primary' onClick={this.handleDone}>\n                        <DoneIcon />\n                    </IconButton>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='filters-create-animation'>\n                        { data && (\n                            <React.Suspense fallback={null}>\n                                <RLottie\n                                    ref={this.lottieRef}\n                                    options={{\n                                        width: 80,\n                                        height: 80,\n                                        autoplay: true,\n                                        loop: false,\n                                        fileId: 'createFilter',\n                                        stringData: data\n                                    }}\n                                    onClick={this.handleAnimationClick}\n                                />\n                            </React.Suspense>\n                        )}\n                    </div>\n\n\n                    <div className='create-filter-title'>\n                        <TextField\n                            inputRef={this.titleRef}\n                            className='edit-profile-input'\n                            variant='outlined'\n                            fullWidth\n                            label={t('FilterNameHint')}\n                            value={title}\n                            error={error}\n                            onChange={this.handleTitleChange}\n                        />\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterInclude')}</SectionHeader>\n                        <FilterText className='create-filter-add-chats' icon={<AddIcon/>} text={t('FilterAddChats')} onClick={() => this.handleOpenFilterChats('include')}/>\n                        {include_contacts && <FilterText onDelete={this.handleDeleteIncludeContacts} icon={<ContactsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterContacts')} />}\n                        {include_non_contacts && <FilterText onDelete={this.handleDeleteIncludeNonContacts} icon={<NonContactsIcon className='filter-text-subtle-icon'/>} text={t('FilterNonContacts')} />}\n                        {include_groups && <FilterText onDelete={this.handleDeleteIncludeGroups} icon={<GroupsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterGroups')} />}\n                        {include_channels && <FilterText onDelete={this.handleDeleteIncludeChannels} icon={<ChannelsIcon className='filter-text-subtle-icon' viewBox='0 0 36 36'/>} text={t('FilterChannels')} />}\n                        {include_bots && <FilterText onDelete={this.handleDeleteIncludeBots} icon={<BotsIcon className='filter-text-subtle-icon'/>} text={t('FilterBots')} />}\n                        { included_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteIncludedChat}/>\n                        ))}\n                    </div>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('FilterExclude')}</SectionHeader>\n                        <FilterText className='create-filter-remove-chats' icon={<RemoveIcon/>} text={t('FilterRemoveChats')} onClick={() => this.handleOpenFilterChats('exclude')}/>\n                        {exclude_muted && <FilterText onDelete={this.handleDeleteExcludeMuted} icon={<MutedIcon className='filter-text-subtle-icon'/>} text={t('FilterMuted')} />}\n                        {exclude_read && <FilterText onDelete={this.handleDeleteExcludeRead} icon={<ReadIcon className='filter-text-subtle-icon'/>} text={t('FilterRead')} />}\n                        {exclude_archived && <FilterText onDelete={this.handleDeleteExcludeArchived} icon={<ArchivedIcon className='filter-text-subtle-icon'/>} text={t('FilterArchived')} />}\n                        { excluded_chat_ids.map(x => (\n                            <FilterChat key={x} chatId={x} onDelete={this.handleDeleteExcludedChat}/>\n                        ))}\n                    </div>\n                </div>\n                <SidebarPage open={openFilterChats} onClose={this.handleCloseFilterChats}>\n                    <EditFilterChats filter={editFilter} mode={mode} chats={chats} limit={limit} onChange={this.handleChange} onScroll={this.handleScroll}/>\n                </SidebarPage>\n            </>\n        );\n    }\n\n}\n\nCreateFilter.propTypes = {\n    filter: PropTypes.object,\n    id: PropTypes.number,\n    onDone: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(CreateFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { getChatOrder } from './Chat';\n\nexport function isFilterValid(filter) {\n    if (!filter) return false;\n\n    const {\n        include_contacts,\n        include_non_contacts,\n        include_bots,\n        include_groups,\n        include_channels,\n        included_chat_ids,\n        title\n    } = filter;\n\n    if (!title) return false;\n\n    return include_contacts || include_non_contacts || include_bots || include_groups || include_channels || included_chat_ids.length > 0;\n}\n\nexport function getFilterSubtitle(t, filterId, chats) {\n    if (!chats) return ' ';\n\n    let count = 0;\n    for (let i = 0; i < chats.chat_ids.length; i++) {\n        if (getChatOrder(chats.chat_ids[i], { '@type': 'chatListFilter', chat_filter_id: filterId }) !== '0') {\n            count++;\n        }\n    }\n\n    if (!count) {\n        return t('FilterNoChats');\n    }\n\n    return count === 1 ? '1 chat' : `${count} chats`;\n}","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport { getFilterSubtitle } from '../../Utils/Filter';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Filter.css';\n\nclass Filter extends React.Component {\n\n    state = {\n        dialog: false,\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleDelete = () => {\n        this.handleCloseContextMenu();\n        this.handleOpenDialog();\n    };\n\n    handleOpenDialog = () => {\n        this.setState({\n            dialog: true\n        })\n    };\n\n    handleCloseDialog = () => {\n        this.setState({\n            dialog: false\n        })\n    };\n\n    handleDeleteCancel = () => {\n        this.handleCloseDialog();\n    };\n\n    handleDeleteConfirm = () => {\n        const { info } = this.props;\n        if (!info) return;\n\n        this.handleCloseDialog();\n\n        TdLibController.send({\n            '@type': 'deleteChatFilter',\n            chat_filter_id: info.id\n        });\n    };\n\n    handleOpenContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        this.setState({\n            contextMenu: true,\n            left: event.clientX,\n            top: event.clientY\n        });\n    };\n\n    handleCloseContextMenu = () => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    render() {\n        const { t, info, onEdit, chats } = this.props;\n        if (!info) return null;\n\n        const { dialog, contextMenu, top, left } = this.state;\n\n        const { title } = info;\n        const subtitle = getFilterSubtitle(t, info.id, chats);\n\n        return (\n            <>\n                <ListItem className='settings-list-item2' role={undefined} button onClick={onEdit} onContextMenu={this.handleOpenContextMenu}>\n                    <ListItemText\n                        className='settings-list-item-text2'\n                        primary={title}\n                        secondary={subtitle}\n                    />\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleDelete}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Delete')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={dialog}\n                    onClose={this.handleCancel}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {t('FilterDeleteAlert')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleDeleteCancel} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteConfirm} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nFilter.propTypes = {\n    info: PropTypes.object.isRequired,\n    chats: PropTypes.object,\n    onEdit: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Filter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './RecommendedFilter.css';\n\nclass RecommendedFilter extends React.Component {\n\n    handleAdd = () => {\n        const { filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return;\n\n        const { filter } = recommendedFilter;\n\n        TdLibController.send({\n            '@type': 'createChatFilter',\n            filter\n        });\n    };\n\n    render() {\n        const { t, filter: recommendedFilter } = this.props;\n        if (!recommendedFilter) return null;\n\n        const { filter, description } = recommendedFilter;\n\n        return (\n            <ListItem\n                className='settings-list-item2'\n                role={undefined}\n                button>\n                <ListItemText\n                    className='settings-list-item-text'\n                    primary={filter.title}\n                    secondary={description}\n                />\n                <Button className='recommended-filter-add' variant='contained' disableElevation color='primary' onClick={this.handleAdd}>\n                    {t('Add')}\n                </Button>\n            </ListItem>\n        );\n    }\n\n}\n\nRecommendedFilter.propTypes = {\n    filter: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(RecommendedFilter);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '../../../Assets/Icons/Add';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport CloseIcon from '../../../Assets/Icons/Close';\nimport CreateFilter from './CreateFilter';\nimport Filter from '../../Tile/Filter';\nimport RecommendedFilter from '../../Tile/RecommendedFilter';\nimport SectionHeader from '../SectionHeader';\nimport SidebarPage from '../SidebarPage';\nimport { FILTER_COUNT_MAX, NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../../Constants';\nimport FilterStore from '../../../Stores/FilterStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Filters.css';\n\nconst RLottie = React.lazy(() => import('../../Viewer/RLottie'));\n\nclass Filters extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.lottieRef = React.createRef();\n\n        this.state = {\n            openFilter: false,\n            filterId: -1,\n            filter: null,\n            editFilter: null,\n            recommendedFilters: null,\n            chats: null,\n            filtersMap: new Map()\n        };\n    }\n\n    componentDidMount() {\n        this.loadAnimationData();\n        this.loadData();\n\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        setTimeout(() => {\n            this.loadData();\n        }, 100);\n    };\n\n    async loadData() {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            chat_list: { '@type': 'chatListMain' },\n            offset_chat_id: 0,\n            offset_order: '9223372036854775807',\n            limit: 1000\n        });\n\n        const { filters: filterInfo } = FilterStore;\n        const promises = [];\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            promises.push(TdLibController.send({\n                '@type': 'getChatFilter',\n                chat_filter_id: filterInfo[i].id\n            }).catch(e => null));\n        }\n        const filters = await Promise.all(promises);\n\n        const filtersMap = new Map();\n        for (let i = 0; filterInfo && i < filterInfo.length; i++) {\n            filtersMap.set(filterInfo[i].id, filters[i]);\n        }\n\n        const recommendedFilters = await TdLibController.send({\n            '@type': 'getRecommendedChatFilters'\n        });\n\n        this.setState({\n            chats,\n            filtersMap,\n            recommendedFilters\n        });\n    }\n\n    loadAnimationData = async () => {\n        const { closeData } = this.state;\n        if (closeData) return;\n\n        try {\n            const requests = [\n                fetch('data/Folders_1.json'),\n                fetch('data/Folders_2.json'),\n            ];\n\n            const results = await Promise.all(requests);\n\n            const [data] = await Promise.all(results.map(x => x.text()));\n\n            this.setState({ data });\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    handleCreateFilter = () => {\n        const { t } = this.props;\n        const { filters } = FilterStore;\n        if (filters.length >= FILTER_COUNT_MAX) {\n            this.handleScheduledAction(t('FilterCreateError'));\n            return;\n        }\n\n        const filter = {\n            '@type': 'chatFiler',\n            title: '',\n            icon_name: '',\n            pinned_chat_ids: [],\n            included_chat_ids: [],\n            excluded_chat_ids: [],\n            exclude_muted: false,\n            exclude_read: false,\n            exclude_archived: false,\n            include_contacts: false,\n            include_non_contacts: false,\n            include_bots: false,\n            include_groups: false,\n            include_channels: false\n        };\n\n        this.setState({\n            openFilter: true,\n            filterId: -1,\n            filter\n        });\n    };\n\n    handleCloseFilter = () => {\n        this.setState({\n            openFilter: false,\n            filterId: -1,\n            filter: null\n        })\n    };\n\n    handleEditFilter = async info => {\n        const filter = await TdLibController.send({\n            '@type': 'getChatFilter',\n            chat_filter_id: info.id\n        });\n\n        if (!filter) return;\n\n        this.setState({\n            openFilter: true,\n            filterId: info.id,\n            filter\n        })\n    };\n\n    handleDone = filter => {\n        const { filterId } = this.state;\n\n        this.handleCloseFilter();\n        if (!filter) return;\n\n        if (filterId !== -1) {\n            TdLibController.send({\n                '@type': 'editChatFilter',\n                chat_filter_id: filterId,\n                filter\n            });\n        } else {\n            TdLibController.send({\n                '@type': 'createChatFilter',\n                filter\n            });\n        }\n    };\n\n    handleAnimationClick = () => {\n        const lottie = this.lottieRef.current;\n        if (!lottie) return;\n        if (!lottie.isPaused) return;\n\n        lottie.play();\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { recommendedFilters, openFilter, filter, filterId, data, chats, filtersMap } = this.state;\n        const { filters } = FilterStore;\n\n        const hasFilters = filters && filters.length > 0;\n        const hasRecommendedFilters = recommendedFilters\n            && recommendedFilters.chat_filters.length > 0\n            && (!filters || filters.length < FILTER_COUNT_MAX);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('FilterAvailableTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section filters-create'>\n                        <div className='filters-create-animation'>\n                            { data && (\n                                <React.Suspense fallback={null}>\n                                    <RLottie\n                                        ref={this.lottieRef}\n                                        options={{\n                                            width: 80,\n                                            height: 80,\n                                            autoplay: true,\n                                            loop: false,\n                                            fileId: 'filters',\n                                            stringData: data\n                                        }}\n                                        onClick={this.handleAnimationClick}\n                                    />\n                                </React.Suspense>\n                            )}\n                        </div>\n\n                        <div className='filters-create-hint'>{t('CreateNewFilterInfo')}</div>\n                        <Button className='filters-create-button' color='primary' variant='contained' disableElevation startIcon={<AddIcon/>} onClick={this.handleCreateFilter}>\n                            {t('CreateNewFilter')}\n                        </Button>\n                    </div>\n                    { hasFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('Filters')}</SectionHeader>\n                                {(filters || []).map(x => (<Filter key={x.id} info={x} filter={filtersMap.get(x.id)} chats={chats} onEdit={() => this.handleEditFilter(x)}/>))}\n                            </div>\n                        </>\n                    )}\n                    { hasRecommendedFilters && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('FilterRecommended')}</SectionHeader>\n                                {recommendedFilters.chat_filters.map(x => (<RecommendedFilter key={x.filter.title} filter={x}/>))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <SidebarPage open={openFilter} onClose={this.handleCloseFilter}>\n                    <CreateFilter filter={filter} id={filterId} onDone={this.handleDone}/>\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nFilters.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar,\n);\n\nexport default enhance(Filters);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19.2869988,2.88316725 L19.4142136,3 L21,4.58578644 C21.7399408,5.3257272 21.778885,6.50121136 21.1168328,7.28699879 L21,7.41421356 L17.414,10.9992136 L18.2071068,11.7928932 C18.5976311,12.1834175 18.5976311,12.8165825 18.2071068,13.2071068 C17.8466228,13.5675907 17.2793918,13.5953203 16.8871006,13.2902954 L16.7928932,13.2071068 L16,12.4142136 L7.70710678,20.7071068 C7.55082647,20.8633871 7.34814508,20.9625983 7.13144398,20.9913276 L7,21 L4,21 C3.48716416,21 3.06449284,20.6139598 3.00672773,20.1166211 L3,20 L3,17 C3,16.7789863 3.07316447,16.565516 3.20608063,16.3919705 L3.29289322,16.2928932 L11.585,7.99921356 L10.7928932,7.20710678 C10.4023689,6.81658249 10.4023689,6.18341751 10.7928932,5.79289322 C11.1533772,5.43240926 11.7206082,5.40467972 12.1128994,5.70970461 L12.2071068,5.79289322 L13,6.58521356 L16.5857864,3 C17.3257272,2.26005924 18.5012114,2.22111499 19.2869988,2.88316725 Z M13,9.415 L5,17.414 L5,18.999 L6.585,18.999 L14.585,11 L13,9.415 Z M18,4.41421356 L14.414,7.99921356 L16,9.58521356 L19.5857864,6 L18,4.41421356 Z' />,\n    'Colorize'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getSrc } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './Wallpaper.css';\nimport FileProgress from '../Viewer/FileProgress';\n\nclass Wallpaper extends React.Component {\n    state = {\n        loaded: false\n    };\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.props;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.forceUpdate();\n    };\n\n    handleLoad = () => {\n        this.setState({ loaded: true });\n    };\n\n    handleClick = () => {\n        const { wallpaper, onClick } = this.props;\n\n        if (onClick) {\n            onClick(wallpaper);\n        }\n    };\n\n    render() {\n        const { wallpaper, isSelected } = this.props;\n        const { loaded  } = this.state;\n\n        const { document } = wallpaper;\n        const { minithumbnail, thumbnail } = document;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbSrc = getSrc(thumbnail ? thumbnail.file : null);\n        const tileLoaded = thumbSrc && loaded;\n        const src = thumbSrc || miniSrc;\n\n        return (\n            <div className='shared-photo' onClick={this.handleClick}>\n                <div className='shared-photo-content' style={{ backgroundImage: `url(${thumbSrc || miniSrc})`, backgroundSize: 'cover', backgroundPosition: '50%' }}>\n                    {src !== thumbSrc && (\n                        <div className='shared-photo-main-content' style={{ backgroundImage: `url(${src})` }} />\n                    )}\n                </div>\n                { isSelected && <><div className='wallpaper-selected'/><div className='wallpaper-selected-inner'/></> }\n                { document && document.document && <FileProgress file={document.document} cancelButton={false}/> }\n            </div>\n        );\n    }\n\n}\n\nWallpaper.propTypes = {\n    wallpaper: PropTypes.object.isRequired,\n    isSelected: PropTypes.bool\n};\n\nexport default Wallpaper;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Wallpaper from '../../Tile/Wallpaper';\nimport { getSrc, loadBackgroundContent, loadBackgroundsContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ChatBackground.css';\n\nclass ChatBackground extends React.Component {\n    state = {\n        selectedId: ChatStore.wallpaper ? ChatStore.wallpaper.id : -1\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { backgrounds } = this.props;\n        if (!backgrounds) return;\n\n        const store = FileStore.getStore();\n        loadBackgroundsContent(store, backgrounds.backgrounds);\n    }\n\n    handleClick = wallpaper => {\n        this.setState({\n            selectedId: wallpaper.id\n        });\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail, document: file } = document;\n        if (!file) return;\n\n        const src = getSrc(file);\n        if (!src) {\n            const store = FileStore.getStore();\n            loadBackgroundContent(store, wallpaper, true);\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateChatBackground',\n            wallpaper\n        });\n    };\n\n    render() {\n        const { t, backgrounds, onClose } = this.props;\n        const { selectedId } = this.state;\n\n        const wallpapers = backgrounds.backgrounds.filter(x => x.type['@type'] === 'backgroundTypeWallpaper');\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('ChatBackground')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content shared-media-list shared-photos-list'>\n                    { wallpapers.map(x => (<Wallpaper key={x.id} wallpaper={x} isSelected={x.id === selectedId} onClick={this.handleClick}/>)) }\n                </div>\n            </>\n        );\n    }\n}\n\nChatBackground.propTypes = {\n    backgrounds: PropTypes.object\n};\n\nexport default withTranslation()(ChatBackground);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport withTheme from '@material-ui/core/styles/withTheme';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './ThemePicker.css';\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case '#50A2E9':\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return { main: '#50A2E9' };\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { type, color, open } = this.state;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>{t('Appearance')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Theme')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className='theme-picker-group'\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className='theme-picker-form'>\n                        <FormLabel focused component='legend'>\n                            {t('Accent')}\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className='theme-picker-group'\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-red'\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-orange'\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-amber'\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-green'\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-blue'\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-indigo'\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        color='primary'\n                                        classes={{\n                                            root: 'theme-picker-deep-purple'\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTheme,\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport ColorizeIcon from '../../../Assets/Icons/Colorize';\nimport ChatBackground from './ChatBackground';\nimport SidebarPage from '../SidebarPage';\nimport SharedMediaIcon from '../../../Assets/Icons/SharedMedia';\nimport ThemePicker from '../ThemePicker';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './General.css';\n\nclass General extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            backgrounds: null,\n            openChatBackground: false\n        };\n\n        this.themePickerRef = React.createRef();\n    }\n\n    handleAppearance = () => {\n        this.themePickerRef.current.open();\n    };\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent = () => {\n        TdLibController.send({\n            '@type': 'getBackgrounds',\n            for_dark_theme: false\n        }).then(backgrounds => this.setState({ backgrounds }));\n    };\n\n    openChatBackground = () => {\n        if (!this.state.backgrounds) return;\n\n        this.setState({\n            openChatBackground: true\n        });\n    };\n\n    closeChatBackground = () => {\n        this.setState({\n            openChatBackground: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { backgrounds, openChatBackground } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GeneralSettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        {/*<ListItem autoFocus={false} className='settings-list-item' button onClick={this.openChatBackground}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <SharedMediaIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('ChatBackground')} />*/}\n                        {/*</ListItem>*/}\n                        <ListItem autoFocus={false} className='settings-list-item' button onClick={this.handleAppearance}>\n                            <ListItemIcon>\n                                <ColorizeIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Appearance')} />\n                        </ListItem>\n                    </div>\n                </div>\n                <SidebarPage open={openChatBackground} onClose={this.closeChatBackground}>\n                    <ChatBackground backgrounds={backgrounds} />\n                </SidebarPage>\n                <ThemePicker ref={this.themePickerRef} />\n            </>\n        );\n    }\n}\n\nGeneral.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(General);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Radio from '@material-ui/core/Radio';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Language.css';\n\nclass Language extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            language: language || 'en'\n        };\n    }\n\n    handleChange = language => {\n        this.setState({ language });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <div key={x.id} className='settings-item' onClick={() => this.handleChange(x.id)}>\n                <Radio\n                    color='primary'\n                    className='settings-item-control'\n                    checked={language === x.id}\n                    tabIndex={-1}\n                    inputProps={{ 'aria-labelledby': 'label-2' }}\n                />\n                <ListItemText id='label-2' primary={x.name} secondary={x.native_name} />\n            </div>\n        ));\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Language')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>{languages}</div>\n            </>\n        );\n    }\n}\n\nLanguage.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Language);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport NotificationStore from '../../../Stores/NotificationStore';\nimport OptionStore from '../../../Stores/OptionStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Notifications.css';\n\nclass Notifications extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n\n        this.state = {\n            privateChatsSettings: NotificationStore.settings.get('notificationSettingsScopePrivateChats'),\n            groupChatsSettings: NotificationStore.settings.get('notificationSettingsScopeGroupChats'),\n            channelChatsSettings: NotificationStore.settings.get('notificationSettingsScopeChannelChats'),\n            contactJoined: !contactJoinedOption || !contactJoinedOption.value\n        };\n    }\n\n    componentWillUnmount() {\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n        this.setScopeNotificationSettings('notificationSettingsScopePrivateChats', privateChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeGroupChats', groupChatsSettings);\n        this.setScopeNotificationSettings('notificationSettingsScopeChannelChats', channelChatsSettings);\n        this.setContactJoinedOption(contactJoined);\n    }\n\n    setContactJoinedOption() {\n        const { contactJoined } = this.state;\n\n        const contactJoinedOption = OptionStore.get('disable_contact_registered_notifications');\n        const oldContactJoined = !contactJoinedOption || !contactJoinedOption.value;\n        if (oldContactJoined === contactJoined) return;\n\n        TdLibController.send({\n            '@type': 'setOption',\n            name: 'disable_contact_registered_notifications',\n            value: {\n                '@type': 'optionValueBoolean',\n                value: !contactJoined\n            }\n        });\n    }\n\n    setScopeNotificationSettings(scope, settings) {\n        if (!scope) return;\n        if (!settings) return;\n        const oldSettings = NotificationStore.settings.get(scope);\n        if (!oldSettings) return;\n\n        const { mute_for, show_preview } = settings;\n        const { mute_for: oldMuteFor, show_preview: oldShowPreview } = oldSettings;\n        if (mute_for === oldMuteFor && show_preview === oldShowPreview) return;\n\n        TdLibController.send({\n            '@type': 'setScopeNotificationSettings',\n            scope: { '@type': scope },\n            notification_settings: settings\n        });\n    }\n\n    handleMuteFor = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { mute_for } = settings;\n        const newSettings = { ...settings, mute_for: mute_for === 0 ? 365 * 24 * 60 * 60 : 0 };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleShowPreview = property => {\n        const settings = this.state[property];\n        if (!settings) return;\n\n        const { show_preview } = settings;\n        const newSettings = { ...settings, show_preview: !show_preview };\n\n        this.setState({ [property]: newSettings });\n    };\n\n    handleContactJoined = () => {\n        this.setState({ contactJoined: !this.state.contactJoined });\n    };\n\n    isEnabled(settings) {\n        if (!settings) return false;\n\n        const { mute_for } = settings;\n\n        return mute_for === 0;\n    }\n\n    showPreview(settings) {\n        if (!settings) return false;\n\n        const { show_preview } = settings;\n\n        return show_preview;\n    }\n\n    render() {\n        const { t, onClose } = this.props;\n        const { privateChatsSettings, groupChatsSettings, channelChatsSettings, contactJoined } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('Notifications')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsPrivateChats')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForPrivateChats')}\n                                secondary={\n                                    this.isEnabled(privateChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('privateChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(privateChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(privateChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsGroups')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForGroups')}\n                                secondary={\n                                    this.isEnabled(groupChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('groupChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(groupChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(groupChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsChannels')}</SectionHeader>\n                        <div className='settings-item' onClick={() => this.handleMuteFor('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.isEnabled(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('NotificationsForChannels')}\n                                secondary={\n                                    this.isEnabled(channelChatsSettings)\n                                        ? t('NotificationsEnabled')\n                                        : t('NotificationsDisabled')\n                                }\n                            />\n                        </div>\n                        <div className='settings-item' onClick={() => this.handleShowPreview('channelChatsSettings')}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={this.showPreview(channelChatsSettings)}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-2' }}\n                            />\n                            <ListItemText\n                                id='label-2'\n                                primary={t('MessagePreview')}\n                                secondary={\n                                    this.showPreview(channelChatsSettings) ? t('PreviewEnabled') : t('PreviewDisabled')\n                                }\n                            />\n                        </div>\n                    </div>\n                    <div className='sidebar-page-section-divider' />\n                    <div className='sidebar-page-section'>\n                        <SectionHeader>{t('NotificationsOther')}</SectionHeader>\n                        <div className='settings-item' onClick={this.handleContactJoined}>\n                            <Checkbox\n                                color='primary'\n                                className='settings-item-control'\n                                checked={contactJoined}\n                                tabIndex={-1}\n                                inputProps={{ 'aria-labelledby': 'label-1' }}\n                            />\n                            <ListItemText\n                                id='label-1'\n                                primary={t('ContactJoined')}\n                                secondary={contactJoined ? t('ContactJoinedEnabled') : t('ContactJoinedDisabled')}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNotifications.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Notifications);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -1.000000)' fillRule='nonzero'>\n        <path d='M12,1 C18.0751322,1 23,5.92486775 23,12 C23,18.0751322 18.0751322,23 12,23 C5.92486775,23 1,18.0751322 1,12 C1,5.92486775 5.92486775,1 12,1 Z M12,3 C7.02943725,3 3,7.02943725 3,12 C3,16.9705627 7.02943725,21 12,21 C16.9705627,21 21,16.9705627 21,12 C21,7.02943725 16.9705627,3 12,3 Z M8,11 L16,11 C16.5522847,11 17,11.4477153 17,12 C17,12.5128358 16.6139598,12.9355072 16.1166211,12.9932723 L16,13 L8,13 C7.44771525,13 7,12.5522847 7,12 C7,11.4871642 7.38604019,11.0644928 7.88337887,11.0067277 L8,11 L16,11 L8,11 Z' />\n    </g>,\n    'Stop'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport { getMessageDate } from '../../Utils/Chat';\nimport './Session.css';\n\nclass Session extends React.Component {\n    state = {\n        contextMenu: false,\n        left: 0,\n        top: 0\n    };\n\n    handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { session } = this.props;\n        if (!session) return;\n        if (session.is_current) return;\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            const left = event.clientX;\n            const top = event.clientY;\n\n            this.setState({\n                contextMenu: true,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        this.setState({\n            contextMenu: false,\n            left: 0,\n            top: 0\n        });\n    };\n\n    handleTerminate = event => {\n        this.handleCloseContextMenu(event);\n\n        const { onTerminate, session } = this.props;\n\n        onTerminate(session);\n    };\n\n    render() {\n        const { session, t } = this.props;\n        if (!session) return null;\n\n        const { left, top, contextMenu } = this.state;\n        const {\n            is_current,\n            application_name,\n            application_version,\n            device_model,\n            platform,\n            system_version,\n            ip,\n            region,\n            country,\n            last_active_date\n        } = session;\n        const showDate = !is_current;\n\n        return (\n            <>\n                <ListItem className='settings-list-item' button onContextMenu={this.handleContextMenu}>\n                    <div className='session'>\n                        <div className='session-title'>\n                            <div className='session-app'>{`${application_name} ${application_version}`}</div>\n                            {showDate && (\n                                <div className='session-date'>{getMessageDate({ date: last_active_date })}</div>\n                            )}\n                        </div>\n                        <div className='session-subtitle1'>{`${device_model}, ${platform} ${system_version}`}</div>\n                        <div className='session-subtitle2'>\n                            {`${ip} - `}\n                            {region && `${region}, `}\n                            {country && `${country}`}\n                        </div>\n                    </div>\n                </ListItem>\n                <Popover\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    anchorReference='anchorPosition'\n                    anchorPosition={{ top, left }}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        <MenuItem onClick={this.handleTerminate}>\n                            <ListItemIcon>\n                                <StopIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Terminate')} />\n                        </MenuItem>\n                    </MenuList>\n                </Popover>\n            </>\n        );\n    }\n}\n\nSession.propTypes = {\n    session: PropTypes.object.isRequired,\n    onTerminate: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(Session);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Button from '@material-ui/core/Button';\nimport { Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport Session from '../../Tile/Session';\nimport StopIcon from '../../../Assets/Icons/Stop';\nimport SectionHeader from '../SectionHeader';\nimport { modalManager } from '../../../Utils/Modal';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './ActiveSessions.css';\n\nclass ActiveSessions extends React.Component {\n    state = {\n        open: false,\n        openAll: false,\n        session: null\n    };\n\n    handleTerminate = session => {\n        this.setState({\n            open: true,\n            session\n        });\n    };\n\n    handleTerminateAllOther = () => {\n        this.setState({\n            openAll: true\n        });\n    };\n\n    handleCloseConfirmation = () => {\n        this.setState({\n            open: false,\n            session: null\n        });\n    };\n\n    handleDoneConfirmation = async () => {\n        const { sessions } = this.props;\n        const { session } = this.state;\n        if (!session) return;\n\n        this.setState({\n            open: false,\n            session: null\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateSession',\n            session_id: session.id\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => x.id !== session.id);\n        this.forceUpdate();\n    };\n\n    handleCloseAllConfirmation = () => {\n        this.setState({\n            openAll: false\n        });\n    };\n\n    handleDoneAllConfirmation = async () => {\n        const { sessions } = this.props;\n\n        this.setState({\n            openAll: false\n        });\n\n        await TdLibController.send({\n            '@type': 'terminateAllOtherSessions'\n        });\n\n        sessions.sessions = sessions.sessions.filter(x => !x.is_current);\n        this.forceUpdate();\n    };\n\n    render() {\n        const { t, sessions, onClose } = this.props;\n        const { open, openAll } = this.state;\n\n        const current = sessions.sessions.find(x => x.is_current);\n        const other = sessions.sessions.filter(x => !x.is_current);\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('SessionsTitle')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    {Boolean(current) && (\n                        <div className='sidebar-page-section'>\n                            <SectionHeader>{t('CurrentSession')}</SectionHeader>\n                            <Session session={current} onTerminate={this.handleTerminate} />\n                            {other.length > 0 && (\n                                <ListItem\n                                    className='settings-list-item'\n                                    button\n                                    disableRipple\n                                    onClick={this.handleTerminateAllOther}>\n                                    <ListItemIcon>\n                                        <StopIcon color='secondary' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primaryTypographyProps={{ color: 'secondary' }}\n                                        primary={t('TerminateAllSessions')}\n                                    />\n                                </ListItem>\n                            )}\n                        </div>\n                    )}\n                    {other.length > 0 && (\n                        <>\n                            <div className='sidebar-page-section-divider' />\n                            <div className='sidebar-page-section'>\n                                <SectionHeader>{t('OtherSessions')}</SectionHeader>\n                                {other.map(x => (\n                                    <Session key={x.id} session={x} onTerminate={this.handleTerminate} />\n                                ))}\n                            </div>\n                        </>\n                    )}\n                </div>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={open}\n                    onClose={this.handleCloseConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('TerminateSessionText')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    manager={modalManager}\n                    transitionDuration={0}\n                    open={openAll}\n                    onClose={this.handleCloseAllConfirmation}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText style={{ whiteSpace: 'pre-wrap' }}>\n                            {t('AreYouSureSessions')}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseAllConfirmation} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDoneAllConfirmation} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nActiveSessions.propTypes = {\n    sessions: PropTypes.object.isRequired,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ActiveSessions);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,1 C20.6887547,1 22.8818181,3.12230671 22.9953805,5.78311038 L23,6 L23,9 C23,9.55228475 22.5522847,10 22,10 C21.4871642,10 21.0644928,9.61395981 21.0067277,9.11662113 L21,9 L21,6 C21,4.34314575 19.6568542,3 18,3 C16.4023191,3 15.0963391,4.24891996 15.0050927,5.82372721 L15,6 L15,8 C16.6568542,8 18,9.34314575 18,11 L18,19 C18,20.6568542 16.6568542,22 15,22 L5,22 C3.34314575,22 2,20.6568542 2,19 L2,11 C2,9.34314575 3.34314575,8 5,8 L13,8 L13,6 C13,3.3112453 15.1223067,1.11818189 17.7831104,1.00461951 L18,1 Z M15,10 L5,10 C4.44771525,10 4,10.4477153 4,11 L4,19 C4,19.5522847 4.44771525,20 5,20 L15,20 C15.5522847,20 16,19.5522847 16,19 L16,11 C16,10.4477153 15.5522847,10 15,10 Z M10,13.5 C10.8284271,13.5 11.5,14.1715729 11.5,15 C11.5,15.8284271 10.8284271,16.5 10,16.5 C9.17157288,16.5 8.5,15.8284271 8.5,15 C8.5,14.1715729 9.17157288,13.5 10,13.5 Z' />,\n    'Unblock'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useTranslation, withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Popover from '@material-ui/core/Popover';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport SectionHeader from '../SectionHeader';\nimport User from '../../Tile/User';\nimport UnblockIcon from '../../../Assets/Icons/Unblock';\nimport { loadUsersContent } from '../../../Utils/File';\nimport { openUser } from '../../../Actions/Client';\nimport FileStore from '../../../Stores/FileStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './BlockedUsers.css';\n\nconst BlockedUser = React.memo(({ userId, onClick, onUnblock }) => {\n    const [contextMenu, setContextMenu] = React.useState(false);\n    const [top, setTop] = React.useState(0);\n    const [left, setLeft] = React.useState(0);\n    const { t } = useTranslation();\n\n    const handleContextMenu = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        if (contextMenu) {\n            setContextMenu(false);\n        } else {\n            const { clientX, clientY } = event;\n\n            setContextMenu(true);\n            setLeft(clientX);\n            setTop(clientY);\n        }\n    };\n\n    const handleCloseContextMenu = () => {\n        setContextMenu(false);\n        setLeft(0);\n        setTop(0);\n    };\n\n    const handleClick = () => {\n        onClick(userId);\n    };\n\n    const handleUnblock = () => {\n        handleCloseContextMenu();\n        onUnblock(userId);\n    };\n\n    return (\n        <>\n            <ListItem className='settings-list-item' button onClick={handleClick} onContextMenu={handleContextMenu}>\n                <User userId={userId} />\n            </ListItem>\n            <Popover\n                open={contextMenu}\n                onClose={handleCloseContextMenu}\n                anchorReference='anchorPosition'\n                anchorPosition={{ top, left }}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'right'\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'left'\n                }}\n                onMouseDown={e => e.stopPropagation()}>\n                <MenuList onClick={e => e.stopPropagation()}>\n                    <MenuItem onClick={handleUnblock}>\n                        <ListItemIcon>\n                            <UnblockIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('Unblock')} />\n                    </MenuItem>\n                </MenuList>\n            </Popover>\n        </>\n    );\n});\n\nBlockedUser.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onUnblock: PropTypes.func.isRequired\n};\n\nclass BlockedUsers extends React.Component {\n\n    componentDidMount() {\n        this.loadContent();\n    }\n\n    loadContent() {\n        const { users } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadUsersContent(store, users.user_ids);\n    }\n\n    handleUnblock = async userId => {\n        await TdLibController.send({\n           '@type': 'unblockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { onClose, users, t } = this.props;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('BlockedUsers')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        { users.user_ids.length > 0 ? (\n                            <>\n                                <SectionHeader multiline>{t('BlockedUsersInfo')}</SectionHeader>\n                                {\n                                    users.user_ids.map(x => <BlockedUser key={x} userId={x} onClick={openUser} onUnblock={this.handleUnblock}/>)\n                                }\n                            </>\n                        ) : (\n                            <SectionHeader>{t('NoBlocked')}</SectionHeader>\n                        )}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nBlockedUsers.propTypes = {\n    users: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(BlockedUsers);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(0.000000, -2.000000)' fillRule='nonzero'>\n        <path d='M18,2 C20.209139,2 22,3.790861 22,6 L22,6 L22,8 C22,8.55228475 21.5522847,9 21,9 C20.4477153,9 20,8.55228475 20,8 L20,8 L20,6 C20,4.8954305 19.1045695,4 18,4 L18,4 L4,4 C2.8954305,4 2,4.8954305 2,6 L2,6 L2,14 C2,15.1045695 2.8954305,16 4,16 L4,16 L14,16 C14.5522847,16 15,16.4477153 15,17 C15,17.5522847 14.5522847,18 14,18 L14,18 L12,18 L12,20 L14,20 C14.5128358,20 14.9355072,20.3860402 14.9932723,20.8833789 L15,21 C15,21.5522847 14.5522847,22 14,22 L14,22 L8,22 C7.44771525,22 7,21.5522847 7,21 C7,20.4477153 7.44771525,20 8,20 L8,20 L10,20 L10,18 L4,18 C1.85780461,18 0.108921124,16.3160315 0.00489530723,14.1996403 L0,14 L0,6 C0,3.790861 1.790861,2 4,2 L4,2 Z M22,11 C23.1045695,11 24,11.8954305 24,13 L24,20 C24,21.1045695 23.1045695,22 22,22 L19,22 C17.8954305,22 17,21.1045695 17,20 L17,13 C17,11.8954305 17.8954305,11 19,11 L22,11 Z M22,13 L19,13 L19,20 L22,20 L22,13 Z' />\n    </g>,\n    'Device'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g transform='translate(-1.000000, -3.000000)' fillRule='nonzero'>\n        <path d='M9,13 C12.3229116,13 14.7530244,13.8337117 16.2223821,15.5699359 C16.724477,16.1632234 17,16.915291 17,17.6925226 L17,18.5 C17,19.8807119 15.8807119,21 14.5,21 L3.5,21 C2.11928813,21 1,19.8807119 1,18.5 L1,17.6925204 C1,16.9152876 1.2755246,16.1632192 1.77762117,15.569932 C3.24697824,13.8337108 5.67709024,13 9,13 Z M9,15 C6.21130036,15 4.33538166,15.6435809 3.30428673,16.861943 C3.10781409,17.0940989 3,17.3883868 3,17.6925212 L3,18.5 C3,18.7761424 3.22385763,19 3.5,19 L14.5,19 C14.7761424,19 15,18.7761424 15,18.5 L15,17.6925226 C15,17.3883883 14.8921864,17.0941004 14.6957148,16.8619448 C13.6646202,15.6435815 11.788701,15 9,15 Z M16,10 L22,10 C22.5522847,10 23,10.4477153 23,11 C23,11.5128358 22.6139598,11.9355072 22.1166211,11.9932723 L22,12 L16,12 C15.4477153,12 15,11.5522847 15,11 C15,10.4871642 15.3860402,10.0644928 15.8833789,10.0067277 L16,10 L22,10 L16,10 Z M9,3 C11.209139,3 13,4.790861 13,7 C13,9.209139 11.209139,11 9,11 C6.790861,11 5,9.209139 5,7 C5,4.790861 6.790861,3 9,3 Z M9,5 C7.8954305,5 7,5.8954305 7,7 C7,8.1045695 7.8954305,9 9,9 C10.1045695,9 11,8.1045695 11,7 C11,5.8954305 10.1045695,5 9,5 Z' />\n    </g>,\n    'RemoveMember'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ActiveSessions from './ActiveSessions';\nimport ArrowBackIcon from '../../../Assets/Icons/Back';\nimport BlockedUsers from './BlockedUsers';\nimport DeviceIcon from '../../../Assets/Icons/Device';\nimport RemoveMemberIcon from '../../../Assets/Icons/RemoveMember';\nimport SidebarPage from '../SidebarPage';\nimport SectionHeader from '../SectionHeader';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './PrivacySecurity.css';\n\nclass PrivacySecurity extends React.Component {\n    state = {\n        sessions: null,\n        users: null,\n        openBlockedUsers: false,\n        openActiveSessions: false\n    };\n\n    componentDidMount() {\n        this.loadContent();\n\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n    }\n\n    onUpdateUserFullInfo = update => {\n        const { user_id, user_full_info } = update;\n        const { users } = this.state;\n        if (!users) return;\n\n        const { total_count, user_ids } = users;\n        const { is_blocked } = user_full_info;\n        const prevIsBlocked = user_ids.indexOf(user_id) !== -1;\n        if (is_blocked === prevIsBlocked) return;\n\n        if (is_blocked) {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count + 1,\n                    user_ids: [user_id, ...user_ids]\n                }\n            });\n        } else {\n            this.setState({\n                users: {\n                    ...users,\n                    total_count: total_count - 1,\n                    user_ids: user_ids.filter(x => x !== user_id)\n                }\n            });\n        }\n    };\n\n    async loadContent() {\n        TdLibController.send({\n            '@type': 'getActiveSessions'\n        }).then(sessions => this.setState({ sessions }));\n\n        TdLibController.send({\n            '@type': 'getBlockedUsers',\n            offset: 0,\n            limit: 100\n        }).then(users => this.setState({ users }));\n    }\n\n    openActiveSessions = () => {\n        if (!this.state.sessions) return;\n\n        this.setState({\n            openActiveSessions: true\n        });\n    };\n\n    closeActiveSessions = () => {\n        this.setState({\n            openActiveSessions: false\n        });\n    };\n\n    openBlockedUsers = () => {\n        if (!this.state.users) return;\n\n        this.setState({\n            openBlockedUsers: true\n        });\n    };\n\n    closeBlockedUsers = () => {\n        this.setState({\n            openBlockedUsers: false\n        });\n    };\n\n    render() {\n        const { t, onClose } = this.props;\n        const { openBlockedUsers, users, openActiveSessions, sessions } = this.state;\n\n        const sessionsCount =\n            sessions && sessions.sessions.length > 0\n                ? sessions.sessions.length === 1\n                    ? '1 session'\n                    : `${sessions.sessions.length} sessions`\n                : '1 session';\n\n        const usersCount =\n            users && users.total_count > 0\n                ? users.total_count === 1\n                    ? '1 user'\n                    : `${users.total_count} users`\n                : 'no users';\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('PrivacySettings')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='sidebar-page-section'>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openBlockedUsers}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <RemoveMemberIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('BlockedUsers')}\n                                secondary={usersCount}\n                            />\n                        </ListItem>\n                        <ListItem\n                            className='settings-list-item2'\n                            role={undefined}\n                            button\n                            onClick={this.openActiveSessions}>\n                            <ListItemIcon className='settings-list-item-icon'>\n                                <DeviceIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                id='label-2'\n                                className='settings-list-item-text'\n                                primary={t('SessionsTitle')}\n                                secondary={sessionsCount}\n                            />\n                        </ListItem>\n                    </div>\n                    {/*<div className='sidebar-page-section-divider' />*/}\n                    {/*<div className='sidebar-page-section'>*/}\n                    {/*    <SectionHeader>{t('PrivacyTitle')}</SectionHeader>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyPhoneTitle')}*/}\n                    {/*            secondary={t('LastSeenContacts')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('LastSeenTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyProfilePhotoTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('PrivacyForwardsTitle')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*    <ListItem className='settings-list-item2' role={undefined} button>*/}\n                    {/*        <ListItemText*/}\n                    {/*            className='settings-list-item-text2'*/}\n                    {/*            primary={t('WhoCanAddMe')}*/}\n                    {/*            secondary={t('LastSeenEverybody')}*/}\n                    {/*        />*/}\n                    {/*    </ListItem>*/}\n                    {/*</div>*/}\n                </div>\n                <SidebarPage open={openBlockedUsers} onClose={this.closeBlockedUsers}>\n                    <BlockedUsers users={users} />\n                </SidebarPage>\n                <SidebarPage open={openActiveSessions} onClose={this.closeActiveSessions}>\n                    <ActiveSessions sessions={sessions} />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nPrivacySecurity.propTypes = {\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(PrivacySecurity);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../../Utils/HOC';\nimport Main from './Main';\nimport EditProfile from './EditProfile';\nimport Filters from './Filters';\nimport General from './General';\nimport Language from '../Language';\nimport Notifications from './Notifications';\nimport PrivacySecurity from './PrivacySecurity';\nimport SidebarPage from '../SidebarPage';\nimport { loadChatContent } from '../../../Utils/File';\nimport ChatStore from '../../../Stores/ChatStore';\nimport FileStore from '../../../Stores/FileStore';\nimport UserStore from '../../../Stores/UserStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Settings.css';\n\nclass Settings extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openEditProfile: false,\n            openGeneral: false,\n            openNotifications: false,\n            openPrivacySecurity: false,\n            openLanguage: false,\n            openFilters: false\n        };\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatPhoto', this.onUpdateChatPhoto);\n    }\n\n    onUpdateChatPhoto = update => {\n        const { chatId } = this.props;\n        const { chat_id, photo } = update;\n\n        if (chat_id !== chatId) return;\n        if (!photo) return;\n\n        const store = FileStore.get();\n        loadChatContent(store, chatId, true);\n    };\n\n    async loadContent() {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatContent(store, chatId, true);\n\n        const result = await TdLibController.send({\n            '@type': 'getUserFullInfo',\n            user_id: UserStore.getMyId()\n        });\n\n        UserStore.setFullInfo(UserStore.getMyId(), result);\n    }\n\n    openEditProfile = () => {\n        this.setState({\n            openEditProfile: true\n        });\n    };\n\n    closeEditProfile = () => {\n        this.setState({\n            openEditProfile: false\n        });\n    };\n\n    openGeneral = () => {\n        this.setState({\n            openGeneral: true\n        });\n    };\n\n    closeGeneral = () => {\n        this.setState({\n            openGeneral: false\n        });\n    };\n\n    openNotifications = () => {\n        this.setState({\n            openNotifications: true\n        });\n    };\n\n    closeNotifications = () => {\n        this.setState({\n            openNotifications: false\n        });\n    };\n\n    openPrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: true\n        });\n    };\n\n    closePrivacySecurity = () => {\n        this.setState({\n            openPrivacySecurity: false\n        });\n    };\n\n    openLanguage = () => {\n        this.setState({\n            openLanguage: true\n        });\n    };\n\n    closeLanguage = () => {\n        this.setState({\n            openLanguage: false\n        });\n    };\n\n    openFilters = () => {\n        this.setState({\n            openFilters: true\n        });\n    };\n\n    closeFilters = () => {\n        this.setState({\n            openFilters: false\n        });\n    };\n\n    handleCloseSettings = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSettings',\n            open: false\n        });\n    };\n\n    render() {\n        const { chatId, popup } = this.props;\n        const { openEditProfile, openGeneral, openNotifications, openPrivacySecurity, openLanguage, openFilters } = this.state;\n\n        return (\n            <>\n                <Main\n                    chatId={chatId}\n                    popup={popup}\n                    onClose={this.handleCloseSettings}\n                    onEditProfile={this.openEditProfile}\n                    onGeneral={this.openGeneral}\n                    onNotifications={this.openNotifications}\n                    onPrivacySecurity={this.openPrivacySecurity}\n                    onLanguage={this.openLanguage}\n                    onFilters={this.openFilters}\n                />\n                <SidebarPage open={openEditProfile} onClose={this.closeEditProfile}>\n                    <EditProfile chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openGeneral} onClose={this.closeGeneral}>\n                    <General chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openNotifications} onClose={this.closeNotifications}>\n                    <Notifications chatId={chatId} />\n                </SidebarPage>\n                <SidebarPage open={openPrivacySecurity} onClose={this.closePrivacySecurity}>\n                    <PrivacySecurity />\n                </SidebarPage>\n                <SidebarPage open={openFilters} onClose={this.closeFilters}>\n                    <Filters />\n                </SidebarPage>\n                <SidebarPage open={openLanguage} onClose={this.closeLanguage}>\n                    <Language />\n                </SidebarPage>\n            </>\n        );\n    }\n}\n\nSettings.propTypes = {\n    chatId: PropTypes.number,\n    popup: PropTypes.bool\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Settings);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { openUser } from '../../Actions/Client';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass Contacts extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n\n        this.state = {\n            items: null,\n            searchItems: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        openUser(userId, false);\n        this.handleClose();\n    };\n\n    renderItem = ({ index, style }, items) => {\n        const userId = items.user_ids[index];\n\n        return <UserListItem key={userId} userId={userId} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null\n            });\n            return;\n        }\n\n        const searchItems = await TdLibController.send({\n            '@type': 'searchContacts',\n            query,\n            limit: 1000\n        });\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids.slice(0, 20));\n\n        this.setState({ searchItems });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateContacts',\n            open: false\n        });\n    };\n\n    render() {\n        const { popup } = this.props;\n        const { items, searchItems } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <SearchInput inputRef={this.searchInputRef} onChange={this.handleSearch} />\n                </div>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nContacts.propTypes = {\n    popup: PropTypes.bool\n};\n\nexport default Contacts;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DownloadIcon from '../../Assets/Icons/Download';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './UpdatePanel.css';\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { isSmallWidth } = AppStore;\n\n        this.state = {\n            newContentAvailable: false,\n            isSmallWidth\n        };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n    }\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable, isSmallWidth } = this.state;\n        const { t } = this.props;\n\n        if (!newContentAvailable) {\n            return null;\n        }\n\n        return (\n            <Button className='update-button' variant='contained' color='primary' onClick={this.handleUpdate}>\n                {isSmallWidth ? <DownloadIcon/> : t('Update')}\n            </Button>\n        );\n    }\n}\n\nexport default withTranslation()(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NextIcon from '../../Assets/Icons/Back';\nimport NewChatPhoto from './NewChatPhoto';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewChannel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.descriptionRef = React.createRef();\n\n        this.state = {\n            error: false,\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewChannel',\n            open: false\n        });\n    };\n\n    handleDone = async () => {\n        const { error } = this.state;\n        const { defaultPhoto, defaultPhotoFile } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            });\n        }\n\n        this.handleClose();\n\n        const description = this.descriptionRef.current.value;\n\n        const chat = await TdLibController.send({\n            '@type': 'createNewSupergroupChat',\n            title,\n            description,\n            is_channel: true,\n            location: null\n        });\n\n        if (defaultPhotoFile) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n            });\n        } else if (defaultPhoto) {\n            TdLibController.send({\n                '@type': 'setChatPhoto',\n                chat_id: chat.id,\n                photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n            });\n        }\n\n        openChat(chat.id);\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { error } = this.state;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewChannel')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto onChoose={this.handleChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('EnterChannelName')}\n                                defaultValue={''}\n                            />\n                            <TextField\n                                inputRef={this.descriptionRef}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('DescriptionOptionalPlaceholder')}\n                                defaultValue={''}\n                            />\n                            <div className='edit-profile-hint'>{t('DescriptionInfo')}</div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewChannel.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewChannel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport UserTile from './UserTile';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport { getUserShortName } from '../../Utils/User';\nimport './UserChip.css';\n\nclass UserChip extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.divRef = React.createRef();\n    }\n\n    getOffset() {\n        const {\n            offsetLeft: left,\n            offsetTop: top,\n            offsetWidth: width,\n            offsetHeight: height\n        } = this.divRef.current;\n\n        return { left, top, width, height }\n    }\n\n    setStyleCSSText(text) {\n        const div = this.divRef.current;\n        if (!div) return;\n\n        div.style.cssText = text;\n    }\n\n    render() {\n        const { userId, selected, onClick } = this.props;\n\n        return (\n            <div ref={this.divRef} className={classNames('chip', { 'item-selected': selected })} onClick={onClick}>\n                <UserTile userId={userId} small={true}/>\n                <div className='chip-delete'>\n                    <CloseIcon className='chip-delete-icon'/>\n                </div>\n                <div className='chip-text'>{getUserShortName(userId)}</div>\n            </div>\n        )\n    }\n}\n\nUserChip.propTypes = {\n    userId: PropTypes.number,\n    selected: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default UserChip;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport User from '../Tile/User';\nimport UserChip from '../Tile/UserChip';\nimport SearchInput from './Search/SearchInput';\nimport VirtualizedList from '../Additional/VirtualizedList';\nimport { loadUsersContent } from '../../Utils/File';\nimport { debounce, throttle } from '../../Utils/Common';\nimport { getUserFullName } from '../../Utils/User';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Contacts.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId, selected, style } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextProps.selected !== selected) {\n            return true;\n        }\n\n        if (nextProps.style.top !== style.top) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, selected, onClick, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' onClick={() => onClick(userId)} button style={style}>\n                <Checkbox className='user-list-item-checkbox' checked={selected} color='primary' />\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass AddParticipants extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n        this.searchInputRef = React.createRef();\n        this.listRef = React.createRef();\n        this.searchListRef = React.createRef();\n        this.wrapPanelRef = React.createRef();\n        this.itemsRef = new Map();\n\n        this.state = {\n            items: null,\n            searchItems: null,\n            selectedItems: {\n                array: [],\n                map: new Map()\n            },\n            focusedItem: null\n        };\n\n        this.handleDebounceScroll = debounce(this.handleDebounceScroll, 100, false);\n        this.handleThrottleScroll = throttle(this.handleThrottleScroll, 200, false);\n    }\n\n    getUserIds() {\n        return this.state.selectedItems.array;\n    }\n\n    componentDidMount() {\n        const { current } = this.searchInputRef;\n        if (current) {\n            setTimeout(() => current.focus(), 50);\n        }\n\n        this.loadContent();\n    }\n\n    handleScroll = event => {\n        this.handleDebounceScroll();\n        this.handleThrottleScroll();\n    };\n\n    handleDebounceScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    handleThrottleScroll() {\n        this.loadRenderIdsContent();\n    }\n\n    loadRenderIdsContent = () => {\n        const { items, searchItems } = this.state;\n\n        const currentItems = searchItems || items;\n\n        const { current } = currentItems === searchItems ? this.searchListRef : this.listRef;\n        if (!current) return;\n\n        const renderIds = current.getListRenderIds();\n        if (renderIds.size > 0) {\n            const userIds = [];\n            [...renderIds.keys()].forEach(key => {\n                userIds.push(currentItems.user_ids[key]);\n            });\n\n            const store = FileStore.getStore();\n            loadUsersContent(store, userIds);\n        }\n    };\n\n    async loadContent() {\n        let contacts = CacheStore.contacts;\n        if (!contacts) {\n            contacts = await TdLibController.send({\n                '@type': 'getContacts'\n            });\n            contacts.user_ids = contacts.user_ids.sort((x, y) => getUserFullName(x).localeCompare(getUserFullName(y)));\n            CacheStore.contacts = contacts;\n        }\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, contacts.user_ids.slice(0, 20));\n\n        this.setState({\n            items: contacts\n        });\n    }\n\n    handleOpenUser = userId => {\n        const { selectedItems, focusedItem } = this.state;\n        const { map, array } = selectedItems;\n\n        const newMap = new Map(map);\n        let newArray;\n        let newFocusedItem = null;\n        let isDeleting = false;\n        if (map.has(userId)) {\n            newMap.delete(userId);\n            newArray = array.filter(x => x !== userId);\n            newFocusedItem = focusedItem === userId ? null : focusedItem;\n            isDeleting = true;\n        } else {\n            newMap.set(userId, userId);\n            newArray = array.concat([userId]);\n            newFocusedItem = null;\n        }\n\n        const input = this.searchInputRef.current;\n        input.focus();\n        if (!isDeleting) {\n            input.innerText = '';\n            this.handleSearch('');\n        }\n\n        const wrapPanel = this.wrapPanelRef.current;\n        const prevHeight = wrapPanel.scrollHeight;\n        const prevOffsetHeight = wrapPanel.offsetHeight;\n\n        const prevMap = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const offset = el.getOffset();\n                prevMap.set(key, offset);\n            }\n        }\n\n        const prevCSSText = wrapPanel.style.cssText;\n        const prevScrollTop = wrapPanel.scrollTop;\n        if (isDeleting) {\n            wrapPanel.style.cssText = null;\n        }\n\n        this.setState({\n            focusedItem: newFocusedItem,\n            selectedItems: {\n                array: newArray,\n                map: newMap\n            }\n        }, () => {\n            this.animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText);\n            this.animateItems(prevMap);\n        });\n    };\n\n    animatePanel(isDeleting, prevHeight, prevOffsetHeight, prevScrollTop, prevCSSText) {\n        const wrapPanel = this.wrapPanelRef.current;\n\n        const currentHeight = wrapPanel.scrollHeight;\n        const currentOffsetHeight = wrapPanel.offsetHeight;\n\n        const expanded = currentHeight > prevHeight;\n        const collapsed = currentHeight < prevHeight;\n\n        const maxHeight = 123;\n        if (expanded) {\n            if (prevHeight < maxHeight) {\n                wrapPanel.style.cssText = `max-height: ${Math.min(prevHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `max-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                    setTimeout(() => {\n                        this.searchInputRef.current.scrollIntoView({ behavior: 'auto' });\n                    }, 250);\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        } else if (collapsed) {\n            if (currentHeight < maxHeight) {\n                wrapPanel.style.cssText = `min-height: ${Math.min(prevOffsetHeight, maxHeight)}px;`;\n                requestAnimationFrame(() => {\n                    wrapPanel.style.cssText = `min-height: ${Math.min(currentHeight, maxHeight)}px;`;\n                });\n            } else {\n                wrapPanel.style.cssText = `max-height: ${maxHeight}px;`;\n                wrapPanel.scrollTop = prevScrollTop;\n            }\n        } else {\n            if (isDeleting) {\n                wrapPanel.style.cssText = prevCSSText;\n                wrapPanel.scrollTop = prevScrollTop;\n            } else {\n                this.searchInputRef.current.scrollIntoView({ behavior: 'smooth' });\n            }\n        }\n    }\n\n    animateItems(prevOffsets) {\n        const doubleTransform = new Map();\n        for (let key of this.itemsRef.keys()) {\n            const el = this.itemsRef.get(key);\n            if (el) {\n                const currentOffset = el.getOffset();\n                const prevOffset = prevOffsets.has(key) ? prevOffsets.get(key) : null;\n                if (prevOffset) {\n                    if (prevOffset.left < currentOffset.left) {\n                        doubleTransform.set(el, { prevOffset, currentOffset });\n                    }\n\n                    const transform = `transform: translate(${prevOffset.left - currentOffset.left}px, ${prevOffset.top - currentOffset.top}px)`;\n                    el.setStyleCSSText(transform);\n                }\n            }\n        }\n\n        requestAnimationFrame(() => {\n            for (let key of this.itemsRef.keys()) {\n                const el = this.itemsRef.get(key);\n                if (el) {\n                    let transition = `transition: transform 0.25s ease`;\n                    if (doubleTransform.has(el)) {\n                        const { prevOffset, currentOffset } = doubleTransform.get(el);\n                        transition = `transform: translate(${prevOffset.left - currentOffset.left - prevOffset.width}px, ${prevOffset.top - currentOffset.top}px);`\n                                   + 'transition: transform 0.1s ease;'\n                    }\n\n                    el.setStyleCSSText(transition);\n                }\n            }\n\n            if (!doubleTransform.size) return;\n\n            setTimeout(() => {\n                for (let el of doubleTransform.keys()) {\n                    const { currentOffset } = doubleTransform.get(el);\n                    const transition = `transform: translate(${currentOffset.width}px, 0);`\n                                     + 'transition: transform 0s ease;';\n\n                    el.setStyleCSSText(transition);\n                }\n\n                requestAnimationFrame(() => {\n                    for (let el of doubleTransform.keys()) {\n                        const transition = 'transition: transform 0.15s ease';\n\n                        el.setStyleCSSText(transition);\n                    }\n                });\n\n            }, 101);\n        });\n    }\n\n    renderItem = ({ index, style }, items, selectedItemsMap) => {\n        const userId = items[index];\n        const isSelected = selectedItemsMap.has(userId);\n\n        return <UserListItem key={userId} userId={userId} selected={isSelected} onClick={() => this.handleOpenUser(userId)} style={style} />;\n    };\n\n    handleSearch = async text => {\n        const query = text.trim();\n        if (!query) {\n            this.setState({\n                searchItems: null,\n                publicItems: null,\n                focusedItem: null\n            });\n            return;\n        }\n\n        const promises = [];\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchContacts',\n                query,\n                limit: 20\n            })\n        );\n        promises.push(\n            TdLibController.send({\n                '@type': 'searchPublicChats',\n                query\n            })\n        );\n        const [searchItems, publicChats] = await Promise.all(promises);\n\n        searchItems.user_ids = searchItems.user_ids.sort((x, y) =>\n            getUserFullName(x).localeCompare(getUserFullName(y))\n        );\n\n        const publicItems = { '@type': 'users', user_ids: [] };\n        publicChats.chat_ids.reduce((array, chatId) => {\n            const chat = ChatStore.get(chatId);\n            if (chat && chat.type['@type'] === 'chatTypePrivate') {\n                array.push(chat.type.user_id);\n            }\n            return array;\n        }, publicItems.user_ids);\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, searchItems.user_ids);\n        loadUsersContent(store, publicItems.user_ids);\n\n        this.setState({ searchItems, publicItems, focusedItem: null });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleSearchClose = event => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { map } = selectedItems;\n        if (!map.has(focusedItem)) return;\n\n        event.stopPropagation();\n        event.nativeEvent.stopImmediatePropagation();\n\n        this.setState({\n            focusedItem: null\n        })\n    };\n\n    handleBackspace = () => {\n        const { selectedItems, focusedItem } = this.state;\n        if (!selectedItems) return;\n\n        const { array, map } = selectedItems;\n        if (!array) return;\n        if (!array.length) return;\n\n        if (map.has(focusedItem)) {\n            this.handleOpenUser(focusedItem);\n            return;\n        }\n\n        const lastItem = array[array.length - 1];\n        if (!lastItem) return;\n\n        this.setState({\n            focusedItem: lastItem\n        });\n    };\n\n    render() {\n        const { popup, t } = this.props;\n        const { items, searchItems, publicItems, selectedItems, focusedItem } = this.state;\n\n        const style = popup ? { minHeight: 800 } : null;\n\n        this.itemsRef.clear();\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        { popup ? <CloseIcon/> : <ArrowBackIcon /> }\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('GroupAddMembers')}</span>\n                    </div>\n                </div>\n                <div ref={this.wrapPanelRef} className='animated-wrap-panel'>\n                    {selectedItems.array.map(x => <UserChip selected={focusedItem === x} ref={el => { this.itemsRef.set(x, el); }} key={x} userId={x} onClick={() => this.handleOpenUser(x)}/>)}\n                    <SearchInput inputRef={this.searchInputRef} hint={t('SendMessageTo')} onClose={this.handleSearchClose} onChange={this.handleSearch} onBackspace={this.handleBackspace} />\n                </div>\n                <div className='contacts-border'/>\n                <div className='contacts-content' style={style}>\n                    {items && (\n                        <VirtualizedList\n                            ref={this.listRef}\n                            className='contacts-list'\n                            source={items.user_ids}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, items.user_ids, selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                    {searchItems && publicItems && (\n                        <VirtualizedList\n                            ref={this.searchListRef}\n                            className='contacts-list contacts-search-list'\n                            source={searchItems.user_ids.concat(publicItems.user_ids)}\n                            rowHeight={72}\n                            overScanCount={20}\n                            renderItem={x => this.renderItem(x, searchItems.user_ids.concat(publicItems.user_ids), selectedItems.map)}\n                            onScroll={this.handleScroll}\n                        />\n                    )}\n                </div>\n            </>\n        );\n    }\n}\n\nAddParticipants.propTypes = {\n    popup: PropTypes.bool,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(AddParticipants);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport { compose, withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport TextField from '@material-ui/core/TextField';\nimport ArrowBackIcon from '../../Assets/Icons/Back';\nimport SectionHeader from './SectionHeader';\nimport User from '../Tile/User';\nimport NewChatPhoto from './NewChatPhoto';\nimport { loadUsersContent } from '../../Utils/File';\nimport FileStore from '../../Stores/FileStore';\nimport './NewGroupParams.css';\n\nclass UserListItem extends React.Component {\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { userId } = this.props;\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { userId, style } = this.props;\n\n        return (\n            <ListItem className='user-list-item' button style={style}>\n                <User userId={userId} />\n            </ListItem>\n        );\n    }\n}\n\nclass NewGroupParams extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.titleRef = React.createRef();\n\n        this.state = {\n            error: false\n        };\n    }\n\n    componentDidMount() {\n        const { userIds } = this.props;\n\n        const store = FileStore.getStore();\n        loadUsersContent(store, userIds);\n    }\n\n    getTitle() {\n        const { error } = this.state;\n\n        const title = this.titleRef.current.value.trim();\n        if (!title) {\n            this.setState({\n                error: true\n            });\n            return title;\n        }\n\n        if (error) {\n            this.setState({\n                error: false\n            })\n        }\n\n        return title;\n    }\n\n    handleClose = () => {\n        const { onClose } = this.props;\n        if (!onClose) return;\n\n        onClose();\n    };\n\n    render() {\n        const { t, userIds, defaultPhotoURL, onChoosePhoto } = this.props;\n        const { error } = this.state;\n\n        const items = userIds.map(userId => (<UserListItem key={userId} userId={userId} />));\n\n        const itemsCaption = userIds.length !== 1 ? `${userIds.length} members` : `${userIds.length} member`;\n\n        return (\n            <>\n                <div className='header-master'>\n                    <IconButton className='header-left-button' onClick={this.handleClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                    <div className='header-status grow cursor-pointer'>\n                        <span className='header-status-content'>{t('NewGroup')}</span>\n                    </div>\n                </div>\n                <div className='sidebar-page-content'>\n                    <div className='new-chat-content'>\n                        <NewChatPhoto defaultURL={defaultPhotoURL} onChoose={onChoosePhoto}/>\n                        <div className='new-chat-title'>\n                            <TextField\n                                inputRef={this.titleRef}\n                                error={error}\n                                className='new-chat-input'\n                                variant='outlined'\n                                fullWidth\n                                label={t('GroupName')}\n                                defaultValue={''}\n                            />\n                        </div>\n                        <SectionHeader>{itemsCaption}</SectionHeader>\n                        {items}\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroupParams.propTypes = {\n    userIds: PropTypes.array,\n    defaultPhotoURL: PropTypes.string,\n    onChoosePhoto: PropTypes.func,\n    onClose: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(NewGroupParams);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AddParticipants from './AddParticipants';\nimport NewGroupParams from './NewGroupParams';\nimport SidebarPage from './SidebarPage';\nimport NextIcon from '../../Assets/Icons/Back';\nimport { openChat } from '../../Actions/Client';\nimport { THUMBNAIL_PRIORITY } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './NewGroup.css';\n\nclass NewGroup extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.addParticipantsRef = React.createRef();\n        this.newGroupParamsRef = React.createRef();\n\n        this.state = {\n            openParams: false,\n            userIds: [],\n            defaultPhoto: null,\n            defaultPhotoURL: null,\n            defaultPhotoFile: null\n        };\n    }\n\n    handleDone = async () => {\n        const { openParams } = this.state;\n        if (!openParams) {\n            const userIds = this.addParticipantsRef.current.getUserIds();\n            if (!userIds.length) return;\n\n            this.setState({\n                openParams: true,\n                userIds\n            })\n        } else {\n            const { userIds, defaultPhoto, defaultPhotoFile } = this.state;\n\n            const title = this.newGroupParamsRef.current.getTitle();\n            if (!title) {\n                return;\n            }\n\n            this.handleClose();\n\n            const chat = await TdLibController.send({\n                '@type': 'createNewSupergroupChat',\n                title,\n                is_channel: false,\n                description: '',\n                location: null\n            });\n\n            if (defaultPhotoFile) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileId', id: defaultPhotoFile.id }\n                });\n            } else if (defaultPhoto) {\n                TdLibController.send({\n                    '@type': 'setChatPhoto',\n                    chat_id: chat.id,\n                    photo: { '@type': 'inputFileBlob', name: 'photo.jpg', data: defaultPhoto }\n                });\n            }\n\n            if (userIds.length > 0) {\n                TdLibController.send({\n                    '@type': 'addChatMembers',\n                    chat_id: chat.id,\n                    user_ids: userIds\n                });\n            }\n\n            openChat(chat.id);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewGroup',\n            open: false\n        });\n    };\n\n    handleCloseParams = () => {\n        this.setState({\n            openParams: false,\n            userIds: []\n        })\n    };\n\n    handleChoosePhoto = async (blob, blobURL) => {\n        this.setState({\n            defaultPhoto: blob,\n            defaultPhotoURL: blobURL\n        });\n\n        const result = await TdLibController.send({\n            '@type': 'uploadFile',\n            file: {\n                '@type': 'inputFileBlob',\n                name: 'photo.jpg',\n                data: blob\n            },\n            file_type: { '@type': 'fileTypePhoto' },\n            priority: THUMBNAIL_PRIORITY\n        });\n\n        this.setState({\n            defaultPhotoFile: result\n        });\n    }\n\n    render() {\n        const { popup } = this.props;\n        const { openParams, userIds, defaultPhotoURL } = this.state;\n\n        return (\n            <>\n                <AddParticipants ref={this.addParticipantsRef} popup={popup} onClose={this.handleClose}/>\n\n                <SidebarPage open={openParams}>\n                    <NewGroupParams\n                        ref={this.newGroupParamsRef}\n                        defaultPhotoURL={defaultPhotoURL}\n                        userIds={userIds}\n                        onChoosePhoto={this.handleChoosePhoto}\n                        onClose={this.handleCloseParams}\n                    />\n                </SidebarPage>\n\n                <div className='new-chat-bottom-button' onClick={this.handleDone}>\n                    <NextIcon/>\n                </div>\n            </>\n        );\n    }\n}\n\nNewGroup.propTypes = {\n    popup: PropTypes.bool,\n    userIds: PropTypes.array\n};\n\nexport default withTranslation()(NewGroup);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Contacts from '../ColumnLeft/Contacts';\nimport DialogsHeader from '../ColumnLeft/DialogsHeader';\nimport Search from '../ColumnLeft/Search/Search';\nimport Settings from '../ColumnLeft/Settings/Settings';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatInfoDialog.css';\nimport { openChat } from '../../Actions/Client';\nimport NewChannel from '../ColumnLeft/NewChannel';\nimport NewGroup from '../ColumnLeft/NewGroup';\n\nclass SidebarDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.headerRef = React.createRef();\n\n        this.state = {\n            openSearch: false,\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { openSearch, searchText, openSettings, openContacts, openNewGroup, openNewChannel } = this.state;\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n    }\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        this.query = query;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null\n            }\n        );\n    };\n\n    handleDialogEnter = () => {\n        if (!this.query) return;\n\n        const header = this.headerRef.current;\n        if (header) {\n            header.setInitQuery(this.query);\n        }\n\n        this.query = null;\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (!isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSettings: false,\n            openContacts: false,\n            openNewGroup: false,\n            openNewChannel: false,\n            openSearch: false\n        });\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        this.handleCloseSearch();\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    render() {\n        const { meChatId, searchChatId, searchText, openSearch, openContacts, openSettings, openNewGroup, openNewChannel } = this.state;\n        if (!openSearch && !openContacts && !openSettings && !openNewGroup && !openNewChannel) {\n            return null;\n        }\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}\n                onEnter={this.handleDialogEnter}\n                >\n                {openSettings && <Settings chatId={meChatId} popup/>}\n                {openContacts && <Contacts popup />}\n                {openNewGroup && <NewGroup popup/>}\n                {openNewChannel && <NewChannel popup />}\n                {openSearch && (\n                    <>\n                        <DialogsHeader\n                            ref={this.headerRef}\n                            openSearch={true}\n                            timeout={false}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                            popup\n                        />\n                        <div className='search-content'>\n                            <Search\n                                chatId={searchChatId}\n                                text={searchText}\n                                onSelectMessage={this.handleSelectMessage}\n                                onClose={this.handleCloseSearch}\n                            />\n                        </div>\n                    </>\n                )}\n            </Dialog>\n        );\n    }\n}\n\nSidebarDialog.propTypes = {};\n\nexport default SidebarDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { orderCompare } from './Common';\nimport { getChatOrder } from './Chat';\nimport ChatStore from '../Stores/ChatStore';\n\nexport function getArchiveTitle() {\n    const archive = ChatStore.chatList.get('chatListArchive');\n    const chats = [];\n    const chatsOrder = [];\n    if (archive) {\n        for (const chatId of archive.keys()) {\n            const chat = ChatStore.get(chatId);\n            if (chat) {\n                const order = getChatOrder(chatId, { '@type': 'chatListArchive' });\n                if (order !== '0') chats.push(chat);\n                chatsOrder.push({ order, id: chatId, title: chat.title });\n            }\n        }\n    }\n\n    const orderedChats = chats.sort((a, b) => orderCompare(getChatOrder(b, { '@type': 'chatListArchive' }), getChatOrder(a, { '@type': 'chatListArchive' })));\n\n    return orderedChats.map(x => x.title).join(', ');\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport CSSTransition from 'react-transition-group/CSSTransition';\nimport Archive from './Archive';\nimport Search from './Search/Search';\nimport Filters from './Filters';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport SidebarPage from './SidebarPage';\nimport Settings from './Settings/Settings';\nimport Contacts from './Contacts';\nimport UpdatePanel from './UpdatePanel';\nimport SidebarDialog from '../Popup/SidebarDialog';\nimport NewGroup from './NewGroup';\nimport NewChannel from './NewChannel';\nimport { openChat } from '../../Actions/Client';\nimport { getArchiveTitle } from '../../Utils/Archive';\nimport { loadChatsContent } from '../../Utils/File';\nimport { duration } from '@material-ui/core/styles/transitions';\nimport AppStore from '../../Stores/ApplicationStore';\nimport CacheStore from '../../Stores/CacheStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport FilterStore from '../../Stores/FilterStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Dialogs.css';\n\nconst defaultTimeout = {\n    enter: duration.enteringScreen,\n    exit: duration.leavingScreen\n};\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogListRef = React.createRef();\n        this.archiveListRef = React.createRef();\n        this.dialogsHeaderRef = React.createRef();\n\n        this.state = {\n            cache: null,\n\n            showArchive: false,\n            archiveTitle: null,\n\n            mainItems: [],\n            archiveItems: [],\n\n            timeout: defaultTimeout,\n            openSearch: false,\n            openArchive: false,\n            openContacts: false,\n            openSettings: false,\n            openNewGroup: false,\n            openNewChannel: false,\n\n            searchChatId: 0,\n            searchText: null,\n            query: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            openSearch,\n            openArchive,\n            openSettings,\n            openContacts,\n            openNewGroup,\n            openNewChannel,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        if (nextState.cache !== cache) {\n            return true;\n        }\n\n        if (nextState.showArchive !== showArchive) {\n            return true;\n        }\n\n        if (nextState.archiveTitle !== archiveTitle) {\n            return true;\n        }\n\n        if (nextState.archiveItems !== archiveItems) {\n            return true;\n        }\n\n        if (nextState.mainItems !== mainItems) {\n            return true;\n        }\n\n        if (nextState.openSearch !== openSearch) {\n            return true;\n        }\n\n        if (nextState.openArchive !== openArchive) {\n            return true;\n        }\n\n        if (nextState.openSettings !== openSettings) {\n            return true;\n        }\n\n        if (nextState.openContacts !== openContacts) {\n            return true;\n        }\n\n        if (nextState.openNewGroup !== openNewGroup) {\n            return true;\n        }\n\n        if (nextState.openNewChannel !== openNewChannel) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadCache();\n\n        AppStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.on('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.on('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.on('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.on('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.on('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.on('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.on('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        AppStore.off('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatOrder);\n        ChatStore.off('updateChatPosition', this.onUpdateChatOrder);\n        ChatStore.off('clientUpdateSettings', this.onClientUpdateSettings);\n        ChatStore.off('clientUpdateArchive', this.onClientUpdateArchive);\n        ChatStore.off('clientUpdateContacts', this.onClientUpdateContacts);\n        ChatStore.off('clientUpdateNewGroup', this.onClientUpdateNewGroup);\n        ChatStore.off('clientUpdateNewChannel', this.onClientUpdateNewChannel);\n        FilterStore.off('updateChatFilters', this.onUpdateChatFilters);\n    }\n\n    onUpdateChatFilters = update => {\n        this.saveCache();\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        if (!isSmallWidth) return;\n\n        const { openSettings, openContacts, openSearch, openNewGroup, openNewChannel } = this.state;\n        if (openSettings || openContacts || openSearch || openNewGroup || openNewChannel) {\n            this.setState({\n                    openContacts: false,\n                    openSettings: false,\n                    openSearch: false,\n                    openNewGroup: false,\n                    openNewChannel: false,\n                    timeout: 0\n                }, () => {\n                    this.setState({\n                        timeout: defaultTimeout\n                    });\n            });\n        }\n    };\n\n    async loadCache() {\n        const cache = (await CacheStore.load()) || {};\n\n        const { chats, archiveChats } = cache;\n\n        FilterStore.filters = FilterStore.filters || CacheStore.filters;\n        this.setState({\n            cache,\n\n            showArchive: archiveChats && archiveChats.length > 0,\n            archiveTitle: getArchiveTitle()\n        });\n\n        this.loadChatContents((chats || []).map(x => x.id));\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateCacheLoaded'\n        });\n    }\n\n    saveCache() {\n        const { current: archiveCurrent } = this.archiveListRef;\n        const archiveChatIds =\n            archiveCurrent && archiveCurrent.state.chats ? archiveCurrent.state.chats.slice(0, 25) : [];\n\n        const { current: mainCurrent } = this.dialogListRef;\n        const mainChatIds = mainCurrent && mainCurrent.state.chats ? mainCurrent.state.chats.slice(0, 25) : [];\n\n        const { filters } = FilterStore;\n\n        CacheStore.save(filters, mainChatIds, archiveChatIds);\n    }\n\n    onUpdateChatOrder = update => {\n        const { showArchive: prevShowArchive } = this.state;\n\n        const { current: mainCurrent } = this.dialogListRef;\n        if (mainCurrent && mainCurrent.loading) {\n            return;\n        }\n\n        const { current: archiveCurrent } = this.archiveListRef;\n        if (archiveCurrent && archiveCurrent.loading) {\n            return;\n        }\n\n        const archiveList = ChatStore.chatList.get('chatListArchive');\n        const showArchive = archiveList && archiveList.size > 0;\n\n        this.setState({ showArchive, archiveTitle: getArchiveTitle() }, () => {\n            if (!prevShowArchive && showArchive) {\n                const { current } = this.dialogListRef;\n                if (current.listRef) {\n                    const { current: listCurrent } = current.listRef;\n                    if (listCurrent && listCurrent.scrollTop > 0) {\n                        current.scrollTop += 68;\n                    }\n                }\n            }\n        });\n\n        if (prevShowArchive && !showArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        }\n    };\n\n    onClientUpdateContacts = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openContacts: open });\n    };\n\n    onClientUpdateSettings = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open, chatId } = update;\n\n        this.setState({ openSettings: open, meChatId: chatId });\n    };\n\n    onClientUpdateNewGroup = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewGroup: open });\n    };\n\n    onClientUpdateNewChannel = async update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { open } = update;\n\n        this.setState({ openNewChannel: open });\n    };\n\n    onClientUpdateArchive = update => {\n        const { open } = update;\n\n        this.setState({ openArchive: open });\n    };\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateSearchChat = update => {\n        const { isSmallWidth } = AppStore;\n        if (isSmallWidth) return;\n\n        const { chatId, query } = update;\n        const { openSearch, searchChatId, searchText } = this.state;\n\n        if (openSearch && chatId === searchChatId && query === searchText) {\n            return;\n        }\n\n        const header = this.dialogsHeaderRef.current;\n        this.setState(\n            {\n                openSearch: true,\n                searchChatId: chatId,\n                searchText: null,\n                openArchive: false,\n                openContacts: false,\n                openSettings: false,\n                openNewGroup: false,\n                openNewChannel: false,\n            },\n            () => {\n                if (header) {\n                    header.setInitQuery(query);\n                }\n            }\n        );\n    };\n\n    handleHeaderClick = () => {\n        const { openArchive } = this.state;\n        if (openArchive) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateCloseArchive'\n            });\n        } else {\n            this.dialogListRef.current.scrollToTop();\n        }\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        openChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch,\n            searchChatId,\n            searchText\n        });\n    };\n\n    handleCloseSearch = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text,\n            query: null\n        });\n    };\n\n    handleSaveCache = () => {\n        this.saveCache();\n    };\n\n    loadChatContents(chatIds) {\n        const store = FileStore.getStore();\n        loadChatsContent(store, chatIds);\n    }\n\n    handleCloseArchive = () => {\n        this.setState({ openArchive: false });\n    };\n\n    handleCloseContacts = () => {\n        this.setState({ openContacts: false });\n    };\n\n    handleCloseSettings = () => {\n        this.setState({ openSettings: false });\n    };\n\n    handleCloseNewGroup = () => {\n        this.setState({ openNewGroup: false });\n    };\n\n    handleCloseNewChannel = () => {\n        this.setState({ openNewChannel: false });\n    };\n\n    render() {\n        const {\n            cache,\n            showArchive,\n            archiveTitle,\n            mainItems,\n            archiveItems,\n            meChatId,\n            openSettings,\n            openContacts,\n            openArchive,\n            openSearch,\n            openNewGroup,\n            openNewChannel,\n            timeout,\n            searchChatId,\n            searchText\n        } = this.state;\n\n        const mainCacheItems = cache ? cache.chats || [] : null;\n        const archiveCacheItems = cache ? cache.archiveChats || [] : null;\n\n        return (\n            <>\n                <div className='dialogs'>\n                    <div className='sidebar-page'>\n                        <DialogsHeader\n                            ref={this.dialogsHeaderRef}\n                            openSearch={openSearch}\n                            timeout={timeout !== 0}\n                            onClick={this.handleHeaderClick}\n                            onSearch={this.handleSearch}\n                            onSearchTextChange={this.handleSearchTextChange}\n                        />\n                        <div className='dialogs-content'>\n                            <div className='dialogs-content-internal'>\n                                <Filters/>\n                                <div className='sidebar-page-top-divider' style={{ zIndex: 1 }}/>\n                                <DialogsList\n                                    type='chatListMain'\n                                    ref={this.dialogListRef}\n                                    cacheItems={mainCacheItems}\n                                    items={mainItems}\n                                    showArchive={showArchive}\n                                    archiveTitle={archiveTitle}\n                                    open={true}\n                                    onSaveCache={this.handleSaveCache}\n                                />\n                            </div>\n                            <CSSTransition\n                                classNames='search'\n                                timeout={timeout}\n                                in={openSearch}\n                                mountOnEnter={true}\n                                unmountOnExit={true}>\n                                <Search\n                                    chatId={searchChatId}\n                                    text={searchText}\n                                    onSelectMessage={this.handleSelectMessage}\n                                    onClose={this.handleCloseSearch}\n                                />\n                            </CSSTransition>\n                        </div>\n                        <UpdatePanel />\n                    </div>\n\n                    <SidebarPage open={openArchive} timeout={timeout} onClose={this.handleCloseArchive}>\n                        <Archive\n                            innerListRef={this.archiveListRef}\n                            items={archiveItems}\n                            cacheItems={archiveCacheItems}\n                        />\n                    </SidebarPage>\n\n                    <SidebarPage open={openContacts} timeout={timeout} onClose={this.handleCloseContacts}>\n                        <Contacts />\n                    </SidebarPage>\n\n                    <SidebarPage open={openSettings} timeout={timeout} onClose={this.handleCloseSettings}>\n                        <Settings chatId={meChatId} />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewGroup} timeout={timeout} onClose={this.handleCloseNewGroup}>\n                        <NewGroup />\n                    </SidebarPage>\n\n                    <SidebarPage open={openNewChannel} timeout={timeout} onClose={this.handleCloseNewChannel}>\n                        <NewChannel />\n                    </SidebarPage>\n\n                    <SidebarDialog/>\n                </div>\n            </>\n        );\n    }\n}\n\nexport default Dialogs;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport { modalManager } from '../../Utils/Modal';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.off('clientUpdateDialogChatId', this.onClientUpdateDialogChatId);\n        ApplicationStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaViewerContent = update => {\n        if (ApplicationStore.mediaViewerContent) {\n            this.handleClose();\n        }\n    };\n\n    onClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{\n                    root: 'chat-info-dialog-root',\n                    container: 'chat-info-dialog-container',\n                    paper: 'chat-info-dialog-paper'\n                }}>\n                <ChatInfo className='chat-info-dialog-content' chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default ChatInfoDialog;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M2.65383364,2.92607697 L4.145798,9.778632 C4.26700994,10.3353554 4.73555061,10.7489799 5.30300879,10.8002098 L16.196355,11.7836569 C16.3159306,11.7944521 16.4041145,11.9001385 16.3933192,12.0197141 C16.3838746,12.1243302 16.3009783,12.2072294 16.1963626,12.2166777 L5.30295988,13.2005138 C4.73552551,13.2517615 4.26701089,13.6653731 4.14579755,14.2220735 L2.65385781,21.074154 C2.55168485,21.543407 2.84926209,22.0066394 3.31851517,22.1088123 C3.50628037,22.1496954 3.70229947,22.1272304 3.87594675,22.0449272 L23.4110848,12.7858981 C23.8450551,12.5802101 24.0301144,12.0616646 23.8244264,11.6276943 C23.7384721,11.4463438 23.5924353,11.300307 23.4110848,11.2143527 L3.87592461,1.95531307 C3.44195432,1.74962507 2.92340882,1.93468443 2.71772082,2.36865471 C2.63541897,2.54229904 2.61295329,2.73831451 2.65383364,2.92607697 Z' />,\n    'Send'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M19,10 C19.5522847,10 20,10.4477153 20,11 C20,15.0792885 16.9468043,18.445465 13.0009551,18.9379871 L13,22 C13,22.5522847 12.5522847,23 12,23 C11.4871642,23 11.0644928,22.6139598 11.0067277,22.1166211 L11,22 L11.0000487,18.9381123 C7.05371356,18.4460359 4,15.0796344 4,11 C4,10.4477153 4.44771525,10 5,10 C5.55228475,10 6,10.4477153 6,11 C6,14.3137085 8.6862915,17 12,17 C15.3137085,17 18,14.3137085 18,11 C18,10.4477153 18.4477153,10 19,10 Z M12,2 C14.209139,2 16,3.790861 16,6 L16,11 C16,13.209139 14.209139,15 12,15 C9.790861,15 8,13.209139 8,11 L8,6 C8,3.790861 9.790861,2 12,2 Z M12,4 C10.8954305,4 10,4.8954305 10,6 L10,11 C10,12.1045695 10.8954305,13 12,13 C13.1045695,13 14,12.1045695 14,11 L14,6 C14,4.8954305 13.1045695,4 12,4 Z' />,\n    'Microphone'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M11.657825,8.68730116 L7.89384699,12.5266719 C6.53977525,13.9078658 6.53979565,16.118605 7.89389288,17.4997739 C9.18119565,18.812813 11.2598788,18.8798255 12.6276396,17.6859428 L12.8071445,17.5177786 L19.3928802,10.8005213 C21.4766204,8.67512215 21.4766204,5.27313659 19.3928802,3.14773741 C17.4051081,1.12022499 14.1862843,1.0310006 12.0906645,2.90336495 L11.834659,3.14773741 L5.26671543,9.84699003 C2.45333216,12.7166196 2.45333216,17.3098454 5.26671543,20.179475 C7.96150749,22.9281424 12.3352577,23.0332941 15.1578204,20.4629606 L15.452067,20.1794113 L19.2160679,16.340063 C19.6027032,15.945688 19.596429,15.3125541 19.202054,14.9259188 C18.8076791,14.5392835 18.1745452,14.5455577 17.7879099,14.9399327 L13.9520378,18.8511531 C11.9281881,20.8353343 8.67903707,20.8031766 6.6948559,18.7793268 C4.64395201,16.6874204 4.64395201,13.3390446 6.6948559,11.2471382 L13.3088798,4.50180526 C14.6072848,3.22884976 16.6917843,3.24948061 17.9647398,4.54788555 C19.2860006,5.89556155 19.2860006,8.05269718 17.9647398,9.40037319 L11.3764629,16.119959 C10.803533,16.6816592 9.88373353,16.6725557 9.32203335,16.0996258 C8.73040544,15.4961698 8.73039653,14.5302606 9.3220133,13.9267937 L13.0859914,10.0874229 C13.4726243,9.6930457 13.4663463,9.05991185 13.0719691,8.67327889 C12.6775919,8.28664594 12.044458,8.29292392 11.657825,8.68730116 Z' />,\n    'Attach'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport AttachFileIcon from '../../Assets/Icons/Attach';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertDriveFileIcon from '../../Assets/Icons/Document2';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport PhotoIcon from '../../Assets/Icons/SharedMedia';\nimport PollIcon from '@material-ui/icons/PollOutlined';\nimport { canSendMediaMessages, canSendPolls, isPrivateChat } from '../../Utils/Chat';\nimport { ANIMATION_DURATION_300MS } from '../../Constants';\nimport './AttachButton.css';\n\nclass AttachButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleAttachPhoto = () => {\n        this.handleMenuClose();\n\n        const { onAttachPhoto } = this.props;\n        if (!onAttachPhoto) return;\n\n        setTimeout(() => onAttachPhoto(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachDocument = () => {\n        this.handleMenuClose();\n\n        const { onAttachDocument } = this.props;\n        if (!onAttachDocument) return;\n\n        setTimeout(() => onAttachDocument(), ANIMATION_DURATION_300MS);\n    };\n\n    handleAttachPoll = () => {\n        this.handleMenuClose();\n\n        const { onAttachPoll } = this.props;\n        if (!onAttachPoll) return;\n\n        onAttachPoll();\n    };\n\n    render() {\n        const { classes, t, chatId } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className='inputbox-icon-button'\n                    aria-label='Attach'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <AttachFileIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    classes={{\n                        paper: 'attach-button-paper'\n                    }}\n                    onClose={this.handleMenuClose}>\n                    <MenuItem onClick={this.handleAttachPhoto} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <PhotoIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachPhoto')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleAttachDocument} disabled={!canSendMediaMessages(chatId)}>\n                        <ListItemIcon>\n                            <InsertDriveFileIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('AttachDocument')} />\n                    </MenuItem>\n                    {!isPrivateChat(chatId) && (\n                        <MenuItem onClick={this.handleAttachPoll} disabled={!canSendPolls(chatId)}>\n                            <ListItemIcon>\n                                <PollIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('Poll')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n            </>\n        );\n    }\n}\n\nAttachButton.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onAttachDocument: PropTypes.func.isRequired,\n    onAttachPhoto: PropTypes.func.isRequired,\n    onAttachPoll: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(AttachButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nexport function focusNode(node, toEnd = false) {\n    if (!node) return;\n\n    if (toEnd && node.childNodes && node.childNodes.length > 0) {\n        const lastNode = node.childNodes[node.childNodes.length - 1];\n        const range = document.createRange();\n        range.setStart(lastNode, lastNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        node.scrollTop = node.scrollHeight;\n    }\n\n    node.focus();\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nconst keys = {\n    backspace: 8,\n    shift: 16,\n    ctrl: 17,\n    alt: 18,\n    delete: 46,\n    cmd: 91,\n    leftArrow: 37,\n    upArrow: 38,\n    rightArrow: 39,\n    downArrow: 40\n};\n\nexport const utils = {\n    special: {},\n    navigational: {},\n    isSpecial(e) {\n        return typeof this.special[e.keyCode] !== 'undefined';\n    },\n    isNavigational(e) {\n        return typeof this.navigational[e.keyCode] !== 'undefined';\n    }\n};\n\nutils.special[keys['backspace']] = true;\nutils.special[keys['shift']] = true;\nutils.special[keys['ctrl']] = true;\nutils.special[keys['alt']] = true;\nutils.special[keys['delete']] = true;\n\nutils.navigational[keys['upArrow']] = true;\nutils.navigational[keys['downArrow']] = true;\nutils.navigational[keys['leftArrow']] = true;\nutils.navigational[keys['rightArrow']] = true;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Radio from '@material-ui/core/Radio';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport { focusNode } from '../../Utils/Component';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { utils } from '../../Utils/Key';\nimport { POLL_OPTION_HINT_LENGTH, POLL_OPTION_LENGTH, POLL_OPTION_MAX_LENGTH } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollOption.css';\n\nclass CreatePollOption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.optionTextRef = React.createRef();\n\n        this.state = {\n            remainLength: POLL_OPTION_MAX_LENGTH\n        };\n    }\n\n    getText = () => {\n        return this.optionTextRef.current.innerText;\n    };\n\n    focus = (toEnd = false) => {\n        const node = this.optionTextRef.current;\n\n        focusNode(node, toEnd);\n    };\n\n    handleDelete = () => {\n        const { option, onDelete } = this.props;\n        if (!option) return;\n        if (!onDelete) return;\n\n        onDelete(option.id);\n    };\n\n    handleInput = event => {\n        const { option } = this.props;\n\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const length = node.dataset.length;\n        const maxLength = node.dataset.maxLength;\n        const text = this.getText();\n\n        this.setState({\n            remainLength: length - text.length\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollOption',\n            id: option.id,\n            text\n        });\n    };\n\n    handleKeyDown = event => {\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = this.getText();\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Backspace': {\n                const text = this.getText();\n                if (!text) {\n                    const { option, onDelete } = this.props;\n                    if (onDelete) {\n                        onDelete(option.id, true);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'Enter': {\n                const { option, onFocusNext } = this.props;\n                if (option && onFocusNext) {\n                    onFocusNext(option.id);\n                }\n\n                event.preventDefault();\n                return false;\n            }\n            case 'ArrowUp': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const firstChild = node.childNodes && node.childNodes.length > 0 ? node.childNodes[0] : null;\n\n                if (!firstChild || (selection.anchorNode === firstChild && !selection.anchorOffset)) {\n                    const { option, onFocusPrev } = this.props;\n                    if (onFocusPrev) {\n                        onFocusPrev(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    const { option, onFocusNext } = this.props;\n                    if (onFocusNext) {\n                        onFocusNext(option.id);\n                    }\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.optionTextRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = this.getText();\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        pasteText = pasteText.replace('\\r\\n', '\\n').replace('\\n', ' ');\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleChange = () => {\n        const { option } = this.props;\n        if (!option) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChooseOption',\n            id: option.id\n        });\n    };\n\n    render() {\n        const { t, option } = this.props;\n        const { remainLength } = this.state;\n\n        const { is_chosen } = option;\n\n        return (\n            <div className='create-poll-option'>\n                <div className='create-poll-option-wrapper'>\n                    <Radio\n                        key={Date.now()}\n                        classes={{ root: 'create-poll-radio-root' }}\n                        color='primary'\n                        checked={is_chosen}\n                        onChange={this.handleChange}\n                    />\n                    <div\n                        ref={this.optionTextRef}\n                        className='create-poll-option-text'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('Option')}\n                        data-length={POLL_OPTION_LENGTH}\n                        data-max-length={POLL_OPTION_MAX_LENGTH}\n                        onInput={this.handleInput}\n                        onKeyDown={this.handleKeyDown}\n                        onPaste={this.handlePaste}\n                    />\n                </div>\n                <div className='create-poll-option-delete-button'>\n                    <IconButton className='create-poll-option-button' onClick={this.handleDelete}>\n                        <CloseIcon fontSize='small' />\n                    </IconButton>\n                </div>\n                <div className='create-poll-option-bottom-border' />\n                {remainLength <= POLL_OPTION_LENGTH - POLL_OPTION_HINT_LENGTH && (\n                    <Typography\n                        align='center'\n                        className='create-poll-option-subtitle'\n                        color={remainLength >= 0 ? 'textSecondary' : 'error'}\n                        variant='subtitle1'>\n                        {remainLength}\n                    </Typography>\n                )}\n            </div>\n        );\n    }\n}\n\nCreatePollOption.propTypes = {\n    option: PropTypes.object.isRequired,\n    onDelete: PropTypes.func.isRequired,\n    onFocusPrev: PropTypes.func.isRequired,\n    onFocusNext: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollOption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withSnackbar } from 'notistack';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Divider from '@material-ui/core/Divider';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport IconButton from '@material-ui/core/IconButton';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport CreatePollOption from './CreatePollOption';\nimport { focusNode } from '../../Utils/Component';\nimport { utils } from '../../Utils/Key';\nimport { hasPollData, isValidPoll } from '../../Utils/Poll';\nimport { modalManager } from '../../Utils/Modal';\nimport {\n    NOTIFICATION_AUTO_HIDE_DURATION_MS,\n    POLL_OPTIONS_MAX_COUNT,\n    POLL_QUESTION_HINT_LENGTH,\n    POLL_QUESTION_LENGTH,\n    POLL_QUESTION_MAX_LENGTH\n} from '../../Constants';\nimport PollStore from '../../Stores/PollStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './CreatePollDialog.css';\n\nclass CreatePollDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.questionRef = React.createRef();\n        this.optionsRefMap = new Map();\n\n        this.state = {\n            poll: null,\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH\n        };\n    }\n\n    componentDidMount() {\n        PollStore.on('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.on('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.on('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.on('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    componentWillUnmount() {\n        PollStore.off('clientUpdatePollChooseOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAnonymous', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeAllowMultipleAnswers', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollChangeType', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePoll', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateDeletePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdateNewPoll', this.handleClientUpdateNewPoll);\n        PollStore.off('clientUpdateNewPollOption', this.handleClientUpdateNewPollOption);\n        PollStore.off('clientUpdatePollOption', this.handleClientUpdatePoll);\n        PollStore.off('clientUpdatePollQuestion', this.handleClientUpdatePollQuestion);\n    }\n\n    handleClientUpdateNewPoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({\n            confirm: false,\n            remainLength: POLL_QUESTION_MAX_LENGTH,\n            poll\n        });\n    };\n\n    handleClientUpdatePollQuestion = update => {\n        const { poll } = PollStore;\n\n        const node = this.questionRef.current;\n        const length = node.dataset.length;\n        const innerText = node.innerText;\n\n        this.setState({\n            remainLength: length - innerText.length,\n            poll\n        });\n    };\n\n    handleClientUpdatePoll = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll });\n    };\n\n    handleClientUpdateNewPollOption = update => {\n        const { poll } = PollStore;\n\n        this.setState({ poll }, () => {\n            setTimeout(() => {\n                const node = this.optionsRefMap.get(poll.options.length - 1);\n\n                node.focus(true);\n            });\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { poll } = this.state;\n\n        if (poll && !prevState.poll) {\n            setTimeout(() => {\n                focusNode(this.questionRef.current, true);\n            }, 0);\n        }\n    }\n\n    handleKeyDown = event => {\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n        const innerText = node.innerText;\n        const length = innerText.length;\n\n        let hasSelection = false;\n        const selection = window.getSelection();\n        const isSpecial = utils.isSpecial(event);\n        const isNavigational = utils.isNavigational(event);\n\n        if (selection) {\n            hasSelection = !!selection.toString();\n        }\n\n        switch (event.key) {\n            case 'Enter': {\n                if (!event.shiftKey) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n            case 'ArrowDown': {\n                const selection = window.getSelection();\n                if (!selection) break;\n                if (!selection.isCollapsed) break;\n\n                const lastChild =\n                    node.childNodes && node.childNodes.length > 0 ? node.childNodes[node.childNodes.length - 1] : null;\n\n                if (!lastChild || (selection.anchorNode === lastChild && selection.anchorOffset === lastChild.length)) {\n                    this.handleFocusNextOption(0);\n\n                    event.preventDefault();\n                    return false;\n                }\n\n                break;\n            }\n        }\n\n        if (isSpecial || isNavigational) {\n            return true;\n        }\n\n        if (length >= maxLength && !hasSelection) {\n            event.preventDefault();\n            return false;\n        }\n\n        return true;\n    };\n\n    handlePaste = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        const maxLength = node.dataset.maxLength;\n\n        const selection = window.getSelection();\n        const selectionString = selection ? selection.toString() : '';\n\n        const innerText = node.innerText;\n        if (innerText.length - selection.length >= maxLength) return;\n\n        let pasteText = event.clipboardData.getData('text/plain');\n        if (!pasteText) return;\n\n        if (innerText.length - selectionString.length + pasteText.length > maxLength) {\n            pasteText = pasteText.substr(0, maxLength - innerText.length + selectionString.length);\n        }\n        document.execCommand('insertText', false, pasteText);\n    };\n\n    handleInput = event => {\n        event.preventDefault();\n\n        const node = this.questionRef.current;\n        //const length = node.dataset.length;\n\n        const innerText = node.innerText;\n        const innerHtml = node.innerHTML;\n\n        if (innerHtml === '<br>') {\n            node.innerText = '';\n        }\n\n        // this.setState({\n        //     remainLength: length - innerText.length\n        // });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollQuestion',\n            question: innerText\n        });\n    };\n\n    handleAddOption = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n        if (options.length >= POLL_OPTIONS_MAX_COUNT) return;\n\n        const option = {\n            id: Date.now(),\n            text: ''\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPollOption',\n            option\n        });\n    };\n\n    handleDeleteOption = (id, backspace = false) => {\n        if (backspace) {\n            this.handleDeleteByBackspace(id);\n        } else {\n            this.handleDelete(id);\n        }\n    };\n\n    handleDelete = id => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePollOption',\n            id\n        });\n    };\n\n    handleDeleteByBackspace = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n        let deleteOption = true;\n        for (let i = index; i < options.length; i++) {\n            const { text } = options[i];\n            if (text) {\n                deleteOption = false;\n                break;\n            }\n        }\n\n        if (deleteOption) {\n            this.handleDeleteOption(id);\n        }\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, true);\n            return;\n        }\n\n        prevNode.focus(true);\n    };\n\n    handleFocusPrevOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const prevIndex = index - 1;\n\n        const prevNode = this.optionsRefMap.get(prevIndex);\n        if (!prevNode) {\n            const element = this.questionRef.current;\n\n            focusNode(element, false);\n            return;\n        }\n\n        prevNode.focus(false);\n    };\n\n    handleFocusNextOption = id => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const index = options.findIndex(x => x.id === id);\n        const nextIndex = index + 1;\n\n        const nextNode = this.optionsRefMap.get(nextIndex);\n        if (!nextNode) {\n            const text = index >= 0 && index < options.length ? options[index].text : '';\n            if (options.length && !text) {\n                return;\n            }\n\n            this.handleAddOption();\n            return;\n        }\n\n        nextNode.focus(nextNode, true);\n    };\n\n    getHint = () => {\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const { options } = poll;\n\n        const addCount = POLL_OPTIONS_MAX_COUNT - options.length;\n\n        if (addCount <= 0) {\n            return 'You have added the maximum number of options.';\n        }\n        if (addCount === 1) {\n            return 'You can add 1 more option.';\n        }\n\n        return `You can add ${POLL_OPTIONS_MAX_COUNT - options.length} more options.`;\n    };\n\n    handleClose = () => {\n        const { poll } = this.state;\n\n        if (hasPollData(poll)) {\n            this.setState({ confirm: true });\n        } else {\n            this.handleConfirmationDone();\n        }\n    };\n\n    handleSend = () => {\n        const { onSend } = this.props;\n\n        const inputMessagePoll = PollStore.getInputMessagePoll();\n        if (!inputMessagePoll) return;\n\n        onSend(inputMessagePoll);\n\n        this.handleConfirmationDone();\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    handleConfirmationDone = () => {\n        this.handleConfirmationClose();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDeletePoll'\n        });\n    };\n\n    handleChangeAnonymous = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAnonymous'\n        });\n    };\n\n    handleChangeAllowMultipleAnswers = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeAllowMultipleAnswers'\n        });\n    };\n\n    handleChangeType = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdatePollChangeType'\n        });\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleAllowMultipleAnswersClick = event => {\n        const { t } = this.props;\n        const { poll } = this.state;\n        if (!poll) return;\n\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n        if (quizPoll) {\n            event.stopPropagation();\n\n            this.handleScheduledAction(t('PollQuizOneRightAnswer'));\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { remainLength, confirm, poll } = this.state;\n        if (!poll) return null;\n\n        const { is_anonymous } = poll;\n\n        const options = poll ? poll.options : [];\n        const allowMultipleAnswers = poll.type.allow_multiple_answers;\n        const allowMultipleAnswersDisabled = poll.type['@type'] !== 'pollTypeRegular';\n        const quizPoll = poll.type['@type'] === 'pollTypeQuiz';\n\n        this.optionsRefMap.clear();\n        const items = options.map((x, i) => (\n            <CreatePollOption\n                ref={el => this.optionsRefMap.set(i, el)}\n                key={x.id}\n                option={x}\n                onDelete={this.handleDeleteOption}\n                onFocusPrev={this.handleFocusPrevOption}\n                onFocusNext={this.handleFocusNextOption}\n            />\n        ));\n\n        const canAddOption = POLL_OPTIONS_MAX_COUNT - options.length > 0;\n        const hint = this.getHint();\n\n        return (\n            <>\n                <Dialog\n                    className={classNames('create-poll-dialog', { 'create-quiz-dialog': quizPoll })}\n                    open\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('NewPoll')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        <div className='create-poll-dialog-question-title'>\n                            <Typography color='primary' variant='subtitle1' style={{ flexGrow: 1 }}>\n                                {t('Question')}\n                            </Typography>\n                            {remainLength <= POLL_QUESTION_LENGTH - POLL_QUESTION_HINT_LENGTH && (\n                                <Typography color={remainLength >= 0 ? 'textSecondary' : 'error'} variant='subtitle1'>\n                                    {remainLength}\n                                </Typography>\n                            )}\n                        </div>\n                        <div\n                            ref={this.questionRef}\n                            id='create-poll-dialog-question'\n                            contentEditable\n                            suppressContentEditableWarning\n                            placeholder={t('QuestionHint')}\n                            data-length={POLL_QUESTION_LENGTH}\n                            data-max-length={POLL_QUESTION_MAX_LENGTH}\n                            onPaste={this.handlePaste}\n                            onKeyDown={this.handleKeyDown}\n                            onInput={this.handleInput}\n                        />\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('PollOptions')}\n                        </Typography>\n                        <List classes={{ root: 'create-poll-dialog-list' }}>\n                            {items}\n                            {canAddOption && (\n                                <ListItem\n                                    selected={false}\n                                    className='create-poll-add-option'\n                                    button\n                                    onClick={this.handleAddOption}>\n                                    <ListItemText disableTypography primary={t('AddAnOption')} />\n                                </ListItem>\n                            )}\n                        </List>\n                        <Typography>{hint}</Typography>\n                        <Divider className='divider' />\n                        <Typography color='primary' variant='subtitle1'>\n                            {t('Settings')}\n                        </Typography>\n                        <FormGroup>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox\n                                        color='primary'\n                                        checked={is_anonymous}\n                                        onChange={this.handleChangeAnonymous}\n                                    />\n                                }\n                                label={t('PollAnonymous')}\n                            />\n                            <div onClick={this.handleAllowMultipleAnswersClick} style={{ background: 'transparent' }}>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            color='primary'\n                                            disabled={allowMultipleAnswersDisabled}\n                                            checked={allowMultipleAnswers}\n                                            onChange={this.handleChangeAllowMultipleAnswers}\n                                        />\n                                    }\n                                    label={t('PollMultiple')}\n                                />\n                            </div>\n                            <FormControlLabel\n                                control={\n                                    <Checkbox color='primary' checked={quizPoll} onChange={this.handleChangeType} />\n                                }\n                                label={t('PollQuiz')}\n                            />\n                        </FormGroup>\n                        <Typography>{t('QuizInfo')}</Typography>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleClose}>\n                            {t('Cancel')}\n                        </Button>\n                        {isValidPoll(poll) && (\n                            <Button color='primary' onClick={this.handleSend}>\n                                {t('Create')}\n                            </Button>\n                        )}\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    className='create-poll-dialog-root'\n                    open={confirm}\n                    manager={modalManager}\n                    transitionDuration={0}\n                    onClose={this.handleConfirmationClose}\n                    aria-labelledby='dialog-title'>\n                    <DialogTitle id='dialog-title'>{t('CancelPollAlertTitle')}</DialogTitle>\n                    <DialogContent classes={{ root: 'create-poll-dialog-root' }}>\n                        {t('CancelPollAlertText')}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button color='primary' onClick={this.handleConfirmationClose}>\n                            {t('Cancel')}\n                        </Button>\n                        <Button color='primary' onClick={this.handleConfirmationDone}>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nCreatePollDialog.propTypes = {\n    onSend: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(CreatePollDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport { validateUrl } from '../../Utils/Url';\nimport { modalManager } from '../../Utils/Modal';\nimport './EditUrlDialog.css';\n\nclass EditUrlDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.textRef = React.createRef();\n        this.textInputRef = React.createRef();\n        this.urlRef = React.createRef();\n        this.urlInputRef = React.createRef();\n\n        this.state = {};\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { defaultText, defaultUrl, open } = this.props;\n\n        if (open && prevProps.open !== open) {\n            setTimeout(() => {\n                const text = this.textInputRef.current;\n                const url = this.urlInputRef.current;\n\n                if (!text) return;\n                if (!url) return;\n\n                if (!defaultText) {\n                    text.focus();\n                } else if (!defaultUrl) {\n                    url.focus();\n                } else {\n                    text.focus();\n                    text.select();\n                }\n            }, 0);\n        }\n    }\n\n    componentDidMount() {\n        // const { defaultText, defaultUrl } = this.props;\n        //\n        // const text = this.textInputRef.current;\n        // const url = this.urlInputRef.current;\n        //\n        // if (!text) return;\n        // if (!url) return;\n        //\n        // setTimeout(() => {\n        //     if (!defaultText) {\n        //         text.focus();\n        //     } else if (!defaultUrl) {\n        //         url.focus();\n        //     } else {\n        //         text.focus();\n        //         // text.select();\n        //     }\n        // }, 0);\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { defaultText, defaultUrl, onDone, onCancel, open } = this.props;\n        const { textError, urlError } = this.state;\n\n        if (nextProps.defaultText !== defaultText) {\n            return true;\n        }\n\n        if (nextProps.defaultUrl !== defaultUrl) {\n            return true;\n        }\n\n        if (nextState.textError !== textError) {\n            return true;\n        }\n\n        if (nextState.urlError !== urlError) {\n            return true;\n        }\n\n        if (nextProps.onDone !== onDone) {\n            return true;\n        }\n\n        if (nextProps.onCancel !== onCancel) {\n            return true;\n        }\n\n        if (nextProps.open !== open) {\n            return true;\n        }\n\n        return false;\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (state.prevOpen !== props.open) {\n            return {\n                prevOpen: true,\n                textError: false,\n                urlError: false,\n                text: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    handleTextKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.urlInputRef.current.focus();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleUrlKeyDown = event => {\n        if (event.key === 'Enter') {\n            this.handleDone();\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    };\n\n    handleTextChange = event => {\n        this.setState({\n            text: event.target.value\n        });\n    };\n\n    handleUrlChange = event => {\n        this.setState({\n            url: event.target.value\n        });\n    };\n\n    handleDone = () => {\n        const { defaultText, defaultUrl } = this.props;\n        let { text, url } = this.state;\n\n        text = text !== null ? text : defaultText;\n        url = url !== null ? url : defaultUrl;\n\n        if (!text && !url) {\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        if (!text) {\n            this.setState({ textError: true });\n            this.textInputRef.current.focus();\n            return;\n        }\n\n        url = validateUrl(url);\n        if (!url) {\n            this.setState({ urlError: true });\n            this.urlInputRef.current.focus();\n            return;\n        }\n\n        const { onDone } = this.props;\n\n        onDone(text, url);\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n\n        onCancel();\n    };\n\n    render() {\n        const { open, defaultUrl, defaultText, t } = this.props;\n        const { textError, urlError } = this.state;\n        if (!open) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-url-dialog-title'>\n                <DialogTitle id='edit-url-dialog-title'>{t('CreateLink')}</DialogTitle>\n                <DialogContent>\n                    <div style={{ display: 'flex', flexDirection: 'column', width: 260 }}>\n                        <TextField\n                            ref={this.textRef}\n                            inputRef={this.textInputRef}\n                            label={t('Text')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultText}\n                            error={textError}\n                            onChange={this.handleTextChange}\n                            onKeyDown={this.handleTextKeyDown}\n                        />\n                        <TextField\n                            ref={this.urlRef}\n                            inputRef={this.urlInputRef}\n                            label={t('URL')}\n                            margin='normal'\n                            autoComplete='off'\n                            defaultValue={defaultUrl}\n                            error={urlError}\n                            onChange={this.handleUrlChange}\n                            onKeyDown={this.handleUrlKeyDown}\n                        />\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Create')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nEditUrlDialog.propTypes = {\n    open: PropTypes.bool,\n    defaultText: PropTypes.string,\n    defaultUrl: PropTypes.string,\n    onDone: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nexport default withTranslation()(EditUrlDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getSrc } from '../../Utils/File';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport { hasVideoNote } from '../../Utils/Message';\nimport FileStore from '../../Stores/FileStore';\nimport './ReplyTile.css';\nimport { THUMBNAIL_BLURRED_SIZE_90 } from '../../Constants';\n\nclass ReplyTile extends React.Component {\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.on('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateAudioThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateStickerThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdatePhotoBlob);\n        FileStore.off('clientUpdateVideoNoteThumbnailBlob', this.onClientUpdatePhotoBlob);\n    }\n\n    onClientUpdatePhotoBlob = update => {\n        const { chatId, messageId, photoSize } = this.props;\n        if (!photoSize) return;\n\n        const { photo } = photoSize;\n        if (!photo) return;\n\n        if (update.chatId === chatId && update.messageId === messageId && update.fileId === photo.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId, messageId, photoSize, minithumbnail } = this.props;\n        if (!photoSize) return null;\n\n        const { photo } = photoSize;\n        if (!photo) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const src = getSrc(photo);\n        const isBlurred = (!src && miniSrc) || isBlurredThumbnail(photoSize, THUMBNAIL_BLURRED_SIZE_90);\n        const isVideoNote = hasVideoNote(chatId, messageId);\n        const hasSrc = Boolean(src || miniSrc);\n\n        return (\n            <div className='reply-tile'>\n                {hasSrc && (\n                    <img\n                        className={classNames(\n                            'reply-tile-photo',\n                            { 'reply-tile-photo-round': isVideoNote },\n                            { 'reply-tile-photo-loading': !src },\n                            { 'media-blurred': src && isBlurred },\n                            { 'media-mini-blurred': !src && miniSrc && isBlurred }\n                        )}\n                        draggable={false}\n                        src={src || miniSrc}\n                        alt=''\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nReplyTile.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    photoSize: PropTypes.object,\n    minithumbnail: PropTypes.object\n};\n\nexport default ReplyTile;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { getContent, getTitle, isDeletedMessage, getReplyPhotoSize, getReplyMinithumbnail } from '../../Utils/Message';\nimport { openChat } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Reply.css';\n\nclass Reply extends React.Component {\n    componentDidMount() {\n        MessageStore.on('getMessageResult', this.onGetMessageResult);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('getMessageResult', this.onGetMessageResult);\n    }\n\n    onGetMessageResult = result => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === result.chat_id && messageId === result.id) {\n            this.forceUpdate();\n        }\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleOpen = event => {\n        if (event.button !== 0) return;\n\n        event.stopPropagation();\n\n        const { chatId, messageId, onClick } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n        if (isDeletedMessage(message)) return null;\n\n        openChat(chatId, messageId, false);\n        if (onClick) onClick();\n    };\n\n    render() {\n        const { t, chatId, messageId } = this.props;\n        let { title } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        title = title || getTitle(message, t);\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            title = null;\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <div className='reply' onMouseDown={this.handleOpen} onClick={this.handleClick}>\n                <div className='reply-wrapper'>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='reply-content'>\n                        {title && <div className='reply-content-title'>{title}</div>}\n                        <div className={classNames('reply-content-subtitle')}>{content}</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nReply.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    title: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(Reply);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport Reply from '../Message/Reply';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBoxHeader.css';\n\nclass InputBoxHeader extends React.Component {\n    componentDidMount() {\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, editMessageId } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id && editMessageId !== message_id) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId, editMessageId } = this.props;\n\n        if (editMessageId) {\n            editMessage(chatId, 0);\n        } else {\n            replyMessage(chatId, 0);\n        }\n    };\n\n    render() {\n        const { chatId, messageId, editMessageId, t, onClick } = this.props;\n        if (!chatId) return null;\n        if (!messageId && !editMessageId) return null;\n\n        return (\n            <div className='inputbox-header'>\n                <div className='inputbox-header-left-column'>\n                    <IconButton className='inputbox-icon-button' aria-label='Close' onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n                <div className='inputbox-header-middle-column'>\n                    <Reply\n                        chatId={chatId}\n                        messageId={editMessageId || messageId}\n                        title={editMessageId ? t('EditMessage') : null}\n                        onClick={onClick}\n                    />\n                </div>\n                <div className='inputbox-header-right-column' />\n            </div>\n        );\n    }\n}\n\nInputBoxHeader.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    editMessageId: PropTypes.number,\n    onClick: PropTypes.func\n};\n\nexport default withTranslation()(InputBoxHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport { modalManager } from '../../Utils/Modal';\nimport './PasteFilesDialog.css';\n\nclass PasteFilesDialog extends React.Component {\n    handleDone = () => {\n        const { onConfirm } = this.props;\n        onConfirm();\n    };\n\n    handleCancel = () => {\n        const { onCancel } = this.props;\n        onCancel();\n    };\n\n    render() {\n        const { files, t } = this.props;\n        if (!files) return null;\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='delete-dialog-title'>\n                <DialogTitle id='delete-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        {files.length > 1 ? t('SendFilesConfirmation') : t('SendFileConfirmation')}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nPasteFilesDialog.propTypes = {\n    files: PropTypes.array,\n    onConfirm: PropTypes.func.isRequired,\n    onCancel: PropTypes.func.isRequired\n};\n\nconst enhance = compose(withTranslation());\n\nexport default enhance(PasteFilesDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport MessageStore from '../../Stores/MessageStore';\nimport './RecordTimer.css';\n\nclass RecordTimer extends React.Component {\n    state = { };\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.on('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        MessageStore.off('clientUpdateRecordError', this.onClientUpdateRecordError);\n    }\n\n    onClientUpdateRecordStart = () => {\n        this.timer = setInterval(() => {\n            const now = new Date();\n            const diff = now - this.startTime;\n\n            // console.log('[recordTimer] ');\n            this.setState({\n                time: diff\n            });\n        }, 25);\n        this.startTime = new Date();\n    }\n\n    onClientUpdateRecordStop = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    onClientUpdateRecordError = () => {\n        if (this.timer) {\n            clearTimeout(this.timer);\n        }\n\n        this.setState({\n            time: null\n        });\n    }\n\n    normalizeM(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr += '0'\n        } else if (msStr.length > 2) {\n            msStr = msStr.substr(0, 2);\n        }\n\n        return msStr;\n    }\n\n    normalizeS(n) {\n        let msStr = n.toString();\n        if (msStr.length === 1) {\n            msStr = '0' + msStr;\n        }\n\n        return msStr;\n    }\n\n    msToTime(s) {\n        let ms = (s % 1000);\n        s = (s - ms) / 1000;\n        let secs = s % 60;\n        s = (s - secs) / 60;\n        let mins = s % 60;\n        let hrs = (s - mins) / 60;\n\n        let result = mins + ':' + this.normalizeS(secs) + ',' + this.normalizeM(ms);\n        if (hrs > 0) {\n            result = hrs + ':' + result;\n        }\n\n        return result;\n    }\n\n    render() {\n        const { time } = this.state;\n        if (!time) return null;\n\n        return (\n            <div className='record-timer'>\n                {this.msToTime(time)}\n                <div className='record-timer-icon'/>\n            </div>\n        );\n    }\n\n}\n\nRecordTimer.propTypes = {};\n\nexport default RecordTimer;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport EditIcon from '@material-ui/icons/Edit';\nimport IconButton from '@material-ui/core/IconButton';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport EditUrlDialog from './EditUrlDialog';\nimport { focusInput } from '../../Utils/DOM';\nimport { editMessage as editMessageAction } from '../../Actions/Client';\nimport { getEntities, getNodes } from '../../Utils/Message';\nimport { getMedia, getMediaPhotoFromFile } from '../../Utils/Media';\nimport { modalManager } from '../../Utils/Modal';\nimport MessageStore from '../../Stores/MessageStore';\nimport './EditMediaDialog.css';\n\nclass EditMediaDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.captionRef = React.createRef();\n        this.editMediaRef = React.createRef();\n\n        this.state = {\n\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevOpen } = state;\n        const { open, chatId, messageId, newItem } = props;\n\n        if (prevOpen !== open) {\n            if (open) {\n                const editMessage = MessageStore.get(chatId, messageId);\n                let sendAsPhoto = false;\n                if (editMessage && editMessage.content['@type'] === 'messagePhoto') {\n                    sendAsPhoto = true;\n                } else if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto'){\n                    sendAsPhoto = true;\n                }\n\n                return {\n                    prevOpen: true,\n                    sendAsPhoto,\n                    editMessage,\n                    editMedia: null,\n                    editFile: null\n                }\n            } else {\n                return {\n                    prevOpen: false,\n                    sendAsPhoto: false,\n                    editMessage: null,\n                    editMedia: null,\n                    editFile: null\n                }\n            }\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('selectionchange', this.handleSelectionChange, true);\n    }\n\n    handleSelectionChange = () => {\n        if (document.activeElement === this.captionRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    handleEnter = () => {\n        const { chatId, messageId, open, newItem } = this.props;\n        if (!open) return;\n\n        let text = null;\n        let caption = null;\n        const message = MessageStore.get(chatId, messageId);\n        if (message) {\n            const { content } = message;\n            if (content) {\n                text = content.text;\n                caption = content.caption;\n            }\n        }\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else if (newItem && newItem.caption) {\n            element.innerHTML = newItem.caption;\n        } else {\n            element.innerText = null;\n        }\n\n        focusInput(element);\n    };\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.captionRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    handleDone = () => {\n        const { chatId, newItem, onSend, onEdit } = this.props;\n        const { editMessage, editFile, editMedia, sendAsPhoto } = this.state;\n\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n\n        element.innerText = null;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const caption = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n\n        const isEditing = Boolean(editMessage);\n        if (isEditing) {\n            if (editMedia) {\n                const { photo } = editMedia;\n                if (!photo) return;\n\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: editFile.name, data: editFile },\n                    width,\n                    height,\n                    caption\n                };\n\n                onEdit(null, content);\n            } else {\n                onEdit(caption, null);\n            }\n\n            editMessageAction(chatId, 0);\n        } else {\n            const { media, file } = newItem;\n            const { audio, photo, document } = media;\n\n            let content = null;\n            if (photo) {\n                const { sizes } = photo;\n                if (!sizes) return;\n\n                const size = sizes[sizes.length - 1];\n\n                const { width, height } = size;\n\n                content = sendAsPhoto\n                    ? {\n                        '@type': 'inputMessagePhoto',\n                        photo: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        width,\n                        height,\n                        caption\n                    }\n                    : {\n                        '@type': 'inputMessageDocument',\n                        document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                        thumbnail: null,\n                        caption\n                    };\n            } else if (document) {\n                content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    caption\n                };\n            } else if (audio) {\n                const { duration, title, performer } = audio;\n\n                content = {\n                    '@type': 'inputMessageAudio',\n                    audio: { '@type': 'inputFileBlob', name: file.name, data: file },\n                    thumbnail: null,\n                    duration,\n                    title,\n                    performer,\n                    caption\n                };\n            }\n            if (!content) return;\n\n            onSend(content, file);\n        }\n    };\n\n    handleCancel = () => {\n        const { chatId, messageId, onCancel } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n\n        if (isEditing) {\n            editMessageAction(chatId, 0);\n        }\n\n        onCancel();\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, code, metaKey, shiftKey, repeat, nativeEvent } = event;\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            event.stopPropagation();\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleDone();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.captionRef.current.focus();\n    }\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n        }\n    };\n\n    handleInput = () => {\n        this.clearInnerHtml();\n    };\n\n    clearInnerHtml() {\n        const element = this.captionRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n    }\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleEditMedia = event => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        element.click();\n    };\n\n    handleEditMediaComplete = async () => {\n        const element = this.editMediaRef.current;\n        if (!element) return;\n\n        const { files } = element;\n        if (files.length === 0) return;\n\n        const [file, ...rest] = Array.from(files);\n        if (!file) return;\n\n        const editMedia = await getMediaPhotoFromFile(file);\n\n        this.setState({\n            editFile: file,\n            editMedia\n        });\n\n        element.value = '';\n    };\n\n    handleSendAsPhoto = () => {\n        const { sendAsPhoto } = this.state;\n\n        this.setState({\n            sendAsPhoto: !sendAsPhoto\n        });\n    };\n\n    render() {\n        const { chatId, messageId, newItem, open, t } = this.props;\n        const { defaultText, defaultUrl, openEditUrl, editMessage, editMedia, sendAsPhoto } = this.state;\n        if (!open) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const isEditing = Boolean(message);\n        let isPhoto = false;\n        if (newItem && newItem.media && newItem.media['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMedia && editMedia['@type'] === 'messagePhoto') {\n            isPhoto = true;\n        } else if (editMessage && editMessage.content['@type'] === 'messagePhoto'){\n            isPhoto = true;\n        }\n\n        let media = null;\n        if (isEditing) {\n            media =\n            editMedia\n                ? getMedia({ content: editMedia })\n                : getMedia(message, null);\n        } else if (newItem) {\n            media = getMedia({ content: newItem.media });\n        }\n        const doneLabel = isEditing ? t('Edit') : t('Send');\n\n        return (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={true}\n                onClose={this.handleCancel}\n                aria-labelledby='edit-media-dialog-title'\n                onEnter={this.handleEnter}>\n                <div className='edit-media-dialog-content'>\n                    <div style={{ margin: 24 }}>{media}</div>\n                    { isEditing && (\n                        <>\n                            <IconButton\n                                disableRipple={true}\n                                aria-label={t('Edit')}\n                                className='edit-media-dialog-edit-button'\n                                size='small'\n                                onClick={this.handleEditMedia}>\n                                <EditIcon fontSize='inherit' />\n                            </IconButton>\n                            <input\n                                ref={this.editMediaRef}\n                                className='inputbox-attach-button'\n                                type='file'\n                                accept='image/*'\n                                onChange={this.handleEditMediaComplete}\n                            />\n                        </>\n                    )}\n                    { !isEditing && isPhoto && (\n                        <RadioGroup value={sendAsPhoto} onChange={this.handleSendAsPhoto} style={{ margin: '0 24px 24px' }}>\n                            <FormControlLabel value={true} control={<Radio color='primary'/>} label={t('SendAsPhoto')} />\n                            <FormControlLabel value={false} control={<Radio color='primary'/>} label={t('SendAsFile')} />\n                        </RadioGroup>\n                    )}\n                </div>\n                <div\n                    ref={this.captionRef}\n                    id='edit-media-dialog-caption'\n                    className='scrollbars-hidden'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Caption')}\n                    onKeyDown={this.handleKeyDown}\n                    onPaste={this.handlePaste}\n                    onInput={this.handleInput}\n                />\n                <DialogActions>\n                    <Button onClick={this.handleCancel} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {doneLabel}\n                    </Button>\n                </DialogActions>\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n            </Dialog>\n        );\n    }\n}\n\nEditMediaDialog.propTypes = {\n    open: PropTypes.bool,\n\n    chatId: PropTypes.number,\n    messageId: PropTypes.number,\n    newItem: PropTypes.object,\n\n    onSend: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCancel: PropTypes.func\n};\n\nexport default withTranslation()(EditMediaDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { TYPING_OUTPUT_INTERVAL_S } from '../Constants';\nimport TdLibController from '../Controllers/TdLibController';\n\nclass OutputTypingManager {\n    constructor(chatId) {\n        this.chatId = chatId;\n        this.lastAction = null;\n    }\n\n    setTyping(action) {\n        if (!this.chatId) return;\n\n        if (this.lastAction && this.lastAction['@type'] === action['@type']) {\n            let now = new Date();\n            now.setSeconds(now.getSeconds() - TYPING_OUTPUT_INTERVAL_S);\n            if (this.lastTypingDate && this.lastTypingDate > now) {\n                return;\n            }\n        }\n\n        this.lastAction = action;\n        this.lastTypingDate = new Date();\n\n        TdLibController.send({\n            '@type': 'sendChatAction',\n            chat_id: this.chatId,\n            action: action\n        });\n    }\n}\n\nexport default OutputTypingManager;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport emojiRegex from 'emoji-regex';\nimport MediaRecorder from 'opus-media-recorder';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport DoneIcon from '../../Assets/Icons/Done';\nimport IconButton from '@material-ui/core/IconButton';\nimport InsertEmoticonIcon from '../../Assets/Icons/Smile';\nimport SendIcon from '../../Assets/Icons/Send';\nimport MicrophoneIcon from '../../Assets/Icons/Microphone';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport AttachButton from './../ColumnMiddle/AttachButton';\nimport CreatePollDialog from '../Popup/CreatePollDialog';\nimport EditUrlDialog from '../Popup/EditUrlDialog';\nimport InputBoxHeader from './InputBoxHeader';\nimport PasteFilesDialog from '../Popup/PasteFilesDialog';\nimport RecordTimer from './RecordTimer';\nimport EditMediaDialog from '../Popup/EditMediaDialog';\nimport OutputTypingManager from '../../Utils/OutputTypingManager';\nimport { draftEquals, getChatDraft, getChatDraftReplyToMessageId, isMeChat, isPrivateChat } from '../../Utils/Chat';\nimport { findLastTextNode, focusInput } from '../../Utils/DOM';\nimport { getMediaDocumentFromFile, getMediaPhotoFromFile, isEditedMedia } from '../../Utils/Media';\nimport { getEntities, getNodes, isTextMessage } from '../../Utils/Message';\nimport { getSize, readImageSize } from '../../Utils/Common';\nimport { editMessage, replyMessage } from '../../Actions/Client';\nimport { PHOTO_SIZE, VOICENOTE_MIN_RECORD_DURATION } from '../../Constants';\nimport AnimationStore from '../../Stores/AnimationStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InputBox.css';\n\nconst EmojiPickerButton = React.lazy(() => import('./../ColumnMiddle/EmojiPickerButton'));\n\nclass InputBox extends Component {\n    constructor(props) {\n        super(props);\n\n        this.attachDocumentRef = React.createRef();\n        this.attachPhotoRef = React.createRef();\n        this.newMessageRef = React.createRef();\n\n        const chatId = AppStore.getChatId();\n\n        this.state = {\n            chatId,\n            replyToMessageId: getChatDraftReplyToMessageId(chatId),\n            editMessageId: 0,\n            recordingReady: true,\n            recordingTime: null,\n            recordPermissionDenied: false,\n            sendFile: null\n        };\n\n        document.execCommand('defaultParagraphSeparator', false, 'br');\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t } = this.props;\n        const {\n            chatId,\n            newDraft,\n            files,\n            replyToMessageId,\n            editMessageId,\n            openEditMedia,\n            openEditUrl,\n            sendFile,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.newDraft !== newDraft) {\n            return true;\n        }\n\n        if (nextState.files !== files) {\n            return true;\n        }\n\n        if (nextState.replyToMessageId !== replyToMessageId) {\n            return true;\n        }\n\n        if (nextState.editMessageId !== editMessageId) {\n            return true;\n        }\n\n        if (nextState.sendFile !== sendFile) {\n            return true;\n        }\n\n        if (nextState.openEditUrl !== openEditUrl) {\n            return true;\n        }\n\n        if (nextState.openEditMedia !== openEditMedia) {\n            return true;\n        }\n\n        if (nextState.recordingTime !== recordingTime) {\n            return true;\n        }\n\n        if (nextState.recordingReady !== recordingReady) {\n            return true;\n        }\n\n        if (nextState.recordPermissionDenied !== recordPermissionDenied) {\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            return true;\n        }\n\n        return false;\n    }\n\n    loadDraft() {\n        this.setDraft();\n        this.setInputFocus();\n        this.handleInput();\n    }\n\n    saveDraft() {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let innerHTML = null;\n        if (editMessageId) {\n            innerHTML = this.beforeEditText ? this.beforeEditText.innerHTML : null;\n        } else {\n            innerHTML = element.innerHTML;\n        }\n\n        const draftMessage = this.getDraftMessage(chatId, replyToMessageId, innerHTML);\n        this.setChatDraftMessage(draftMessage);\n    }\n\n    selectionChangeListener = () => {\n        // console.log('[ed] selectionchange', document.activeElement);\n        if (document.activeElement === this.newMessageRef.current) {\n            this.saveSelection();\n        }\n    };\n\n    componentDidMount() {\n        document.addEventListener('selectionchange', this.selectionChangeListener, true);\n\n        AnimationStore.on('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.on('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.on('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.on('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.on('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.on('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.on('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        this.loadDraft();\n    }\n\n    componentWillUnmount() {\n        this.saveDraft();\n\n        AnimationStore.off('clientUpdateAnimationSend', this.onClientUpdateAnimationSend);\n        AppStore.off('clientUpdateInputShake', this.onClientUpdateInputShake);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        ChatStore.off('updateChatDraftMessage', this.onUpdateChatDraftMessage);\n        FileStore.off('clientUpdateSendFiles', this.onClientUpdateSendFiles);\n        MessageStore.off('clientUpdateEditMessage', this.onClientUpdateEditMessage);\n        MessageStore.off('clientUpdateReply', this.onClientUpdateReply);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        StickerStore.off('clientUpdateStickerSend', this.onClientUpdateStickerSend);\n\n        document.removeEventListener('selectionchange', this.selectionChangeListener, true);\n\n        this.handleCancelRecord();\n    }\n\n    onClientUpdateInputShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (shook) {\n            this.setState({ shook: false }, () => {\n                setTimeout(() => {\n                    this.setState({ shook: true });\n                }, 0);\n            });\n        } else {\n            this.setState({ shook: true });\n        }\n    };\n\n    onClientUpdateSendFiles = update => {\n        const { files } = update;\n        if (!files) return;\n\n        this.handleSendFiles(Array.from(files));\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId, editMessageId } = this.state;\n        const { chat_id, message_ids, is_permanent } = update;\n\n        if (!editMessageId) return;\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n        if (message_ids.indexOf(editMessageId) === -1) return;\n\n        this.handleCancel();\n    };\n\n    onClientUpdateEditMessage = update => {\n        const { chatId, messageId } = update;\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n        if (this.state.chatId !== chatId) return;\n\n        if (!messageId) {\n            this.restoreDraftAndSelection();\n        } else {\n            this.saveDraftAndSelection();\n        }\n\n        const openEditMedia = messageId !== 0 && isEditedMedia(chatId, messageId);\n        this.setState(\n            {\n                editMessageId: messageId,\n                openEditMedia\n            },\n            () => {\n                if (!this.state.openEditMedia) {\n                    this.setEditMessage();\n                    this.handleInput();\n                    setTimeout(() => {\n                        this.focusInput();\n                    }, 0);\n                }\n            }\n        );\n    };\n\n    restoreDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { beforeEditText } = this;\n\n        if (beforeEditText) {\n            element.innerHTML = beforeEditText.innerHTML;\n\n            if (!beforeEditText.range) {\n                this.focusInput();\n                return;\n            }\n\n            const selection = document.getSelection();\n            selection.removeAllRanges();\n            selection.addRange(beforeEditText.range);\n\n            element.focus();\n        } else {\n            element.innerHTML = null;\n            this.focusInput();\n        }\n\n        this.handleInput();\n    }\n\n    saveDraftAndSelection() {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        this.beforeEditText = {\n            innerHTML: element.innerHTML,\n            range: this.range\n        };\n    }\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) return;\n\n        this.saveDraft();\n    };\n\n    onUpdateChatDraftMessage = update => {\n        const { chat_id } = update;\n        const { chatId, recordingTime } = this.state;\n\n        if (recordingTime) return;\n        if (chatId !== chat_id) return;\n\n        this.loadDraft();\n    };\n\n    onClientUpdateAnimationSend = update => {\n        const { animation: item } = update;\n        if (!item) return;\n\n        const { animation, thumbnail, width, height, duration } = item;\n        if (!animation) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageAnimation',\n            animation: {\n                '@type': 'inputFileId',\n                id: animation.id\n            },\n            width,\n            height,\n            duration\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n    };\n\n    onClientUpdateStickerSend = update => {\n        const { sticker: item } = update;\n        if (!item) return;\n\n        const { sticker, thumbnail, width, height } = item;\n        if (!sticker) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        element.innerText = null;\n\n        this.restoreSelection();\n\n        const content = {\n            '@type': 'inputMessageSticker',\n            sticker: {\n                '@type': 'inputFileId',\n                id: sticker.id\n            },\n            width,\n            height\n        };\n\n        if (thumbnail) {\n            const { width: thumbnailWidth, height: thumbnailHeight, file } = thumbnail;\n\n            content.thumbnail = {\n                '@type': 'inputThumbnail',\n                thumbnail: {\n                    '@type': 'inputFileId',\n                    id: file.id\n                },\n                width: thumbnailWidth,\n                height: thumbnailHeight\n            };\n        }\n\n        this.sendMessage(content, false, result => {});\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateLocalStickersHint',\n            hint: null\n        });\n    };\n\n    onClientUpdateReply = update => {\n        const { chatId: currentChatId, recordingTime } = this.state;\n        const { chatId, messageId } = update;\n\n        if (currentChatId !== chatId) {\n            return;\n        }\n\n        this.setState({ replyToMessageId: messageId });\n\n        if (messageId && !recordingTime) {\n            this.setInputFocus();\n        }\n    };\n\n    onClientUpdateChatId = update => {\n        const { chatId } = this.state;\n        if (chatId === update.nextChatId) return;\n\n        this.saveDraft();\n        this.beforeEditText = null;\n        this.setState(\n            {\n                chatId: update.nextChatId,\n                replyToMessageId: getChatDraftReplyToMessageId(update.nextChatId),\n                editMessageId: 0,\n                openEditUrl: false\n            },\n            () => {\n                this.loadDraft();\n            }\n        );\n\n        this.handleCancelRecord();\n    };\n\n    setDraft = () => {\n        const { chatId } = this.state;\n\n        const element = this.newMessageRef.current;\n\n        const formattedText = getChatDraft(chatId);\n        if (formattedText) {\n            this.setFormattedText(formattedText);\n            this.setState({\n                replyToMessageId: getChatDraftReplyToMessageId(chatId)\n            });\n        } else {\n            element.innerText = null;\n        }\n    };\n\n    setEditMessage() {\n        const { chatId, editMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, editMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { text, caption } = content;\n        if (!text && !caption) return;\n\n        const element = this.newMessageRef.current;\n\n        if (text) {\n            this.setFormattedText(text);\n        } else if (caption) {\n            this.setFormattedText(caption);\n        } else {\n            element.innerText = null;\n        }\n    }\n\n    setFormattedText(formattedText) {\n        const { t } = this.props;\n        const element = this.newMessageRef.current;\n\n        if (!formattedText) {\n            element.innerText = null;\n            return;\n        }\n\n        const { text, entities } = formattedText;\n        try {\n            const nodes = getNodes(text, entities, t);\n            element.innerHTML = null;\n            nodes.forEach(x => {\n                element.appendChild(x);\n            });\n        } catch (e) {\n            element.innerText = text;\n        }\n    }\n\n    setInputFocus = () => {\n        const { recordingTime } = this.state;\n        if (recordingTime) return;\n\n        setTimeout(() => {\n            const element = this.newMessageRef.current;\n\n            focusInput(element);\n        }, 100);\n    };\n\n    setChatDraftMessage = chatDraftMessage => {\n        if (!chatDraftMessage) return;\n\n        const { chatId, draftMessage } = chatDraftMessage;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'setChatDraftMessage',\n            chat_id: chatId,\n            draft_message: draftMessage\n        });\n    };\n\n    getDraftMessage = (chatId, replyToMessageId, innerHTML) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { draft_message } = chat;\n        const { text, entities } = getEntities(innerHTML);\n        const draftMessage =\n            (text && text.length > 0) || entities.length > 0\n                ? {\n                      '@type': 'draftMessage',\n                      reply_to_message_id: replyToMessageId,\n                      input_message_text: {\n                          '@type': 'inputMessageText',\n                          text: {\n                              '@type': 'formattedText',\n                              text,\n                              entities\n                          },\n                          disable_web_page_preview: false,\n                          clear_draft: false\n                      }\n                  }\n                : null;\n\n        if (draftEquals(draft_message, draftMessage)) {\n            return null;\n        }\n\n        return { chatId, draftMessage };\n    };\n\n    handleSubmit = (startRecord = true) => {\n        const { chatId, editMessageId, replyToMessageId, recordingReady, recordingTime } = this.state;\n\n        if (recordingTime) {\n            if ((new Date() - recordingTime) < VOICENOTE_MIN_RECORD_DURATION) {\n                return;\n            }\n\n            this.handleStopRecord();\n            return;\n        } else if (recordingReady) {\n            if (startRecord) this.handleRecord();\n            return;\n        }\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        let { innerHTML } = element;\n\n        element.innerText = null;\n        this.handleInput();\n\n        if (!innerHTML) return;\n        if (!innerHTML.trim()) return;\n\n        const { text, entities } = getEntities(innerHTML);\n\n        const formattedText = {\n            '@type': 'formattedText',\n            text,\n            entities\n        };\n        const inputContent = {\n            '@type': 'inputMessageText',\n            text: formattedText,\n            disable_web_page_preview: false,\n            clear_draft: true\n        };\n\n        if (editMessageId) {\n            const editedMessage = MessageStore.get(chatId, editMessageId);\n            if (!editedMessage) return;\n\n            const { content } = editedMessage;\n            if (!content) return;\n\n            const { text, caption } = content;\n            if (text) {\n                this.editMessageText(inputContent, result => {});\n            } else if (caption) {\n                this.editMessageCaption(formattedText);\n            }\n            editMessage(chatId, 0);\n        } else {\n            this.sendMessage(inputContent, false, result => {});\n        }\n    };\n\n    handleAttachPoll = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateNewPoll'\n        });\n    };\n\n    handleAttachPhoto = () => {\n        if (!this.attachPhotoRef) return;\n\n        this.attachPhotoRef.current.click();\n    };\n\n    async getNewItem(file, sendAsFile) {\n        if (!file) return null;\n\n        const caption = this.newMessageRef.current.innerHTML;\n        if (caption) {\n            this.newMessageRef.current.innerHTML = null;\n            this.handleInput();\n        }\n\n        const media = sendAsFile\n            ? await getMediaPhotoFromFile(file)\n            : await getMediaDocumentFromFile(file);\n\n        return {\n            file,\n            media,\n            caption\n        }\n    };\n\n    handleAttachPhotoComplete = async () => {\n        const { files } = this.attachPhotoRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, true);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(async file => {\n                const [width, height] = await readImageSize(file);\n\n                const content = {\n                    '@type': 'inputMessagePhoto',\n                    photo: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file },\n                    width,\n                    height\n                };\n\n                this.handleSendPhoto(content, file);\n            });\n        }\n\n        this.attachPhotoRef.current.value = '';\n    };\n\n    handleAttachDocument = () => {\n        if (!this.attachDocumentRef) return;\n\n        this.attachDocumentRef.current.click();\n    };\n\n    handleAttachDocumentComplete = async () => {\n        const { files } = this.attachDocumentRef.current;\n        if (files.length === 0) return;\n\n        if (files.length === 1) {\n            const [ newFile, ...rest ] = Array.from(files);\n            if (!newFile) return;\n\n            const newItem = await this.getNewItem(newFile, false);\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            Array.from(files).forEach(file => {\n                const content = {\n                    '@type': 'inputMessageDocument',\n                    document: { '@type': 'inputFileBlob', name: file.name, size: file.size, data: file }\n                };\n\n                this.handleSendDocument(content, file);\n            });\n        }\n\n        this.attachDocumentRef.current.value = '';\n    };\n\n    setTyping() {\n        const { chatId, editMessageId } = this.state;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const element = this.newMessageRef.current;\n        if (!element) return;\n\n        const { innerHTML } = element;\n        if (innerHTML === '<br>' || innerHTML === '<div><br></div>') {\n            element.innerHTML = null;\n        }\n        const { innerText } = element;\n\n        if (!innerText) return;\n        if (isMeChat(chatId)) return;\n        if (editMessageId) return;\n\n        const typingManager = chat.OutputTypingManager || (chat.OutputTypingManager = new OutputTypingManager(chat.id));\n        typingManager.setTyping({ '@type': 'chatActionTyping' });\n    }\n\n    setHints() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText || innerText.length > 11 || editMessageId) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const t0 = performance.now();\n        const regex = emojiRegex();\n        let match = regex.exec(innerText);\n        const t1 = performance.now();\n        // console.log('Matched ' + (t1 - t0) + 'ms', match);\n        if (!match || innerText !== match[0]) {\n            const { hint } = StickerStore;\n            if (hint) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateLocalStickersHint',\n                    hint: null\n                });\n            }\n\n            return;\n        }\n\n        const timestamp = Date.now();\n        TdLibController.send({\n            '@type': 'getStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateLocalStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n\n        TdLibController.send({\n            '@type': 'searchStickers',\n            emoji: match[0],\n            limit: 100\n        }).then(stickers => {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateRemoteStickersHint',\n                hint: {\n                    timestamp,\n                    emoji: match[0],\n                    stickers\n                }\n            });\n        });\n    }\n\n    handleClear = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n    };\n\n    handleBold = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('bold', false, null);\n    };\n\n    handleItalic = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('italic', false, null);\n    };\n\n    handleMono = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        let text = '';\n        const { selection } = this;\n        if (selection && !selection.isCollapsed) {\n            text = selection.toString();\n        }\n\n        if (!text) return;\n        text = `<code>${text}</code>`;\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('insertHTML', false, text);\n    };\n\n    handleUnderline = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('underline', false, null);\n    };\n\n    handleStrikeThrough = () => {\n        document.execCommand('removeFormat', false, null);\n        document.execCommand('unlink', false, null);\n\n        document.execCommand('strikeThrough', false, null);\n    };\n\n    handleUrl = () => {\n        this.openEditUrlDialog();\n    };\n\n    handleCancel = () => {\n        const { chatId, editMessageId, replyToMessageId } = this.state;\n        if (editMessageId) {\n            editMessage(chatId, 0);\n            return true;\n        } else if (replyToMessageId) {\n            replyMessage(chatId, 0);\n            return true;\n        }\n\n        return false;\n    };\n\n    handleKeyDown = event => {\n        const { altKey, ctrlKey, key, keyCode, charCode, metaKey, shiftKey, repeat, nativeEvent } = event;\n        const { editMessageId, replyToMessageId } = this.state;\n\n        // console.log('[input] handleKeyDown', key, keyCode, charCode, altKey, ctrlKey, metaKey, shiftKey, repeat, event, nativeEvent, nativeEvent.isComposing);\n        //\n        // setTimeout(() => {\n        //     const { innerText } = this.newMessageRef.current;\n        //     console.log('[input] text', innerText.length, [...innerText].map(x => ({ alpha: x, code: x.charCodeAt(0) })));\n        // }, 1000);\n\n        // fix CJK input\n        const { isComposing } = nativeEvent;\n        if (isComposing) {\n            return;\n        }\n\n        switch (nativeEvent.code) {\n            // ctrl+alt+0 fix\n            case 'Digit0': {\n                if (altKey && ctrlKey && !metaKey && !shiftKey) {\n                    if (editMessageId) return;\n                    if (replyToMessageId) return;\n\n                    event.preventDefault();\n                }\n                break;\n            }\n            case 'Enter':\n            case 'NumpadEnter': {\n                // enter+cmd, enter+ctrl, enter+shift\n                if (!altKey && (ctrlKey || metaKey || shiftKey) && !repeat) {\n                    document.execCommand('insertLineBreak');\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // enter\n                else if (!altKey && !ctrlKey && !metaKey && !shiftKey && !repeat) {\n                    this.handleSubmit(false);\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // esc\n            case 'Escape': {\n                if (!altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    if (!repeat && this.handleCancel()) {\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // arrow up\n            case 'ArrowUp': {\n                if (!repeat && !altKey && !ctrlKey && !metaKey && !shiftKey) {\n                    const element = this.newMessageRef.current;\n                    if (element && !element.innerText) {\n                        const { editMessageId } = this.state;\n                        if (editMessageId) return;\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateTryEditMessage'\n                        });\n\n                        event.preventDefault();\n                        event.stopPropagation();\n                    }\n                }\n                break;\n            }\n            // cmd + b\n            case 'KeyB': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleBold();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // cmd + i\n            case 'KeyI': {\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleItalic();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            case 'KeyK': {\n                // cmd + k\n                if (!altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleUrl();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                // alt + cmd + k\n                else if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleMono();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n            // alt + cmd + n\n            case 'KeyN': {\n                if (altKey && (ctrlKey || metaKey) && !shiftKey && !repeat) {\n                    this.handleClear();\n\n                    event.preventDefault();\n                    event.stopPropagation();\n                }\n                break;\n            }\n        }\n    };\n\n    handleSendPhoto = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => {\n            const cachedMessage = MessageStore.get(result.chat_id, result.id);\n            if (cachedMessage != null) {\n                this.handleSendingMessage(cachedMessage, file);\n            }\n\n            FileStore.uploadFile(result.content.photo.sizes[0].photo.id, result);\n        });\n    };\n\n    handleSendPoll = poll => {\n        this.sendMessage(poll, true, () => {});\n    };\n\n    handleSendDocument = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.document.document.id, result));\n    };\n\n    handleSendAudio = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.audio.audio.id, result));\n    };\n\n    handleSendVoiceNote = (content, file) => {\n        if (!content) return;\n\n        this.sendMessage(content, true, result => FileStore.uploadFile(result.content.voice_note.voice.id, result));\n    };\n\n    async handleSendFiles(files) {\n        if (!files) return;\n        if (!files.length) return;\n\n        if (files.length === 1) {\n            const newItem = await this.getNewItem(files[0], files[0].type.startsWith('image'));\n            if (!newItem) return;\n\n            this.setState({\n                openEditMedia: true,\n                newItem\n            });\n        } else {\n            this.setState({ files });\n        }\n    }\n\n    handlePaste = async event => {\n        const { items } = event.clipboardData || event.originalEvent.clipboardData;\n        if (!items) return;\n\n        const files = [];\n        Array.from(items).forEach(item => {\n            if (item.kind.indexOf('file') === 0) {\n                const file = item.getAsFile();\n                if (file) {\n                    files.push(file);\n                }\n            }\n        });\n\n        if (files.length > 0) {\n            event.preventDefault();\n\n            this.handleSendFiles(files);\n            return;\n        }\n\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertText', false, plainText);\n            return;\n        }\n    };\n\n    handlePasteConfirm = () => {\n        const { files } = this.state;\n        if (!files) return;\n        if (!files.length) return;\n\n        files.forEach(file => {\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.handleSendDocument(content, file);\n        });\n\n        this.handlePasteCancel();\n    };\n\n    handlePasteCancel = () => {\n        this.setState({ files: null });\n    };\n\n    handleUpdateDraftConfirm = () => {\n        const { newDraft } = this.state;\n        if (!newDraft) return;\n\n        this.loadDraft();\n        this.handleUpdateDraftCancel();\n    };\n\n    handleUpdateDraftCancel = () => {\n        this.setState({ newDraft: null });\n    };\n\n    handleSendingMessage = (message, blob) => {\n        if (!message) return;\n\n        const { sending_state, content, chat_id, id } = message;\n        if (!sending_state) return;\n        if (sending_state['@type'] !== 'messageSendingStatePending') return;\n        if (content['@type'] !== 'messagePhoto') return;\n\n        const { photo } = content;\n        if (!photo) return;\n\n        const size = getSize(photo.sizes, PHOTO_SIZE);\n        if (!size) return;\n\n        const { photo: file } = size;\n        if (!file) return;\n\n        FileStore.setBlob(file.id, blob);\n        FileStore.updatePhotoBlob(chat_id, id, file.id);\n    };\n\n    editMessageMedia(content) {\n        const { chatId, editMessageId } = this.state;\n        // console.log('[em] editMessageMedia start', chatId, editMessageId, content);\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        TdLibController.send({\n            '@type': 'editMessageMedia',\n            chat_id: chatId,\n            message_id: editMessageId,\n            input_message_content: content\n        });\n    }\n\n    editMessageCaption(caption) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!caption) return;\n\n        TdLibController.send({\n            '@type': 'editMessageCaption',\n            chat_id: chatId,\n            message_id: editMessageId,\n            caption\n        });\n    }\n\n    async editMessageText(content, callback) {\n        const { chatId, editMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!editMessageId) return;\n        if (!content) return;\n\n        try {\n            const result = await TdLibController.send({\n                '@type': 'editMessageText',\n                chat_id: chatId,\n                message_id: editMessageId,\n                input_message_content: content\n            });\n\n            callback(result);\n        } finally {\n        }\n    }\n\n    sendMessage = async (content, clearDraft, callback) => {\n        const { chatId, replyToMessageId } = this.state;\n\n        if (!chatId) return;\n        if (!content) return;\n\n        try {\n            await AppStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${chatId}`);\n\n            const result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: chatId,\n                reply_to_message_id: replyToMessageId,\n                input_message_content: content\n            });\n\n            this.setState({ replyToMessageId: 0 }, () => {\n                if (clearDraft) {\n                    this.saveDraft();\n                }\n            });\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: chatId,\n                message_ids: [result.id]\n            });\n\n            if (replyToMessageId) {\n                replyMessage(chatId, 0);\n            }\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    handleEmojiSelect = emoji => {\n        if (!emoji) return;\n\n        this.restoreSelection();\n        document.execCommand('insertText', false, emoji.native);\n        this.handleInput();\n    };\n\n    handleInput = async event => {\n        this.setTyping();\n        this.setHints();\n        this.setRecordingReadyState();\n    };\n\n    setRecordingReadyState() {\n        const { editMessageId } = this.state;\n        const innerText = this.newMessageRef.current.innerText;\n        if (!innerText && !editMessageId) {\n            this.setState({\n                recordingReady: true\n            });\n        } else {\n            this.setState({\n                recordingReady: false\n            });\n        }\n    }\n\n    openEditUrlDialog = () => {\n        let defaultText = '';\n        let defaultUrl = '';\n\n        const { selection, range } = this;\n        if (range) {\n            let { startContainer, endContainer } = range;\n            if (startContainer === endContainer) {\n                const { parentElement } = startContainer;\n                if (parentElement && parentElement.nodeName === 'A') {\n                    defaultText = parentElement.innerText;\n                    defaultUrl = parentElement.href;\n                }\n            }\n        }\n\n        if (!defaultText && selection && !selection.isCollapsed) {\n            defaultText = selection.toString();\n        }\n\n        this.setState({\n            openEditUrl: true,\n            defaultUrl,\n            defaultText\n        });\n    };\n\n    closeEditUrlDialog = () => {\n        this.setState(\n            {\n                openEditUrl: false\n            },\n            () => {\n                this.restoreSelection();\n            }\n        );\n    };\n\n    saveSelection() {\n        this.selection = document.getSelection();\n        if (!this.selection) return;\n        if (!this.selection.rangeCount) return;\n\n        this.range = this.selection.getRangeAt(0);\n    }\n\n    restoreSelection() {\n        const { range } = this;\n\n        if (!range) {\n            this.focusInput();\n            return;\n        }\n\n        const selection = document.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        this.newMessageRef.current.focus();\n    }\n\n    focusInput = () => {\n        const element = this.newMessageRef.current;\n        if (!element) return;\n        if (!element.childNodes.length) {\n            element.focus();\n            return;\n        }\n\n        const lastTextNode = findLastTextNode(element);\n        if (!lastTextNode) {\n            return;\n        }\n\n        const range = document.createRange();\n        range.setStart(lastTextNode, lastTextNode.length);\n        range.collapse(true);\n\n        const selection = window.getSelection();\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        element.focus();\n    };\n\n    handleCancelEditUrl = () => {\n        this.closeEditUrlDialog();\n    };\n\n    handleDoneEditUrl = (text, url) => {\n        this.closeEditUrlDialog();\n        setTimeout(() => {\n            // edit current link node\n            const { range } = this;\n            if (range) {\n                const { startContainer, endContainer } = range;\n                if (startContainer && startContainer === endContainer) {\n                    const { parentNode } = startContainer;\n                    if (parentNode && parentNode.nodeName === 'A') {\n                        parentNode.href = url;\n                        parentNode.title = url;\n                        parentNode.innerText = text;\n\n                        // move cursor to end of editing node\n                        const { lastChild } = parentNode;\n                        if (lastChild) {\n                            const range = document.createRange();\n                            range.setStart(lastChild, lastChild.textContent.length);\n                            range.setEnd(lastChild, lastChild.textContent.length);\n\n                            const selection = document.getSelection();\n                            selection.removeAllRanges();\n                            selection.addRange(range);\n                        }\n                        return;\n                    }\n                }\n            }\n\n            // replace selected text with new link node\n            const link = `<a href=${url} title=${url} rel='noopener noreferrer' target='_blank'>${text}</a>`;\n            document.execCommand('removeFormat', false, null);\n            document.execCommand('insertHTML', false, link);\n        }, 0);\n    };\n\n    handleCancelEditMedia = () => {\n        this.closeEditMediaDialog();\n    };\n\n    handleEditMedia = (caption, content) => {\n        if (content) {\n            this.editMessageMedia(content);\n            return;\n        }\n\n        this.editMessageCaption(caption);\n    };\n\n    handleSendMedia = (content, file) => {\n        this.closeEditMediaDialog(false);\n\n        switch (content['@type']) {\n            case 'inputMessageAudio': {\n                this.handleSendAudio(content, file);\n                break;\n            }\n            case 'inputMessagePhoto': {\n                this.handleSendPhoto(content, file);\n                break;\n            }\n            case 'inputMessageDocument': {\n                this.handleSendDocument(content, file);\n                break;\n            }\n        }\n    };\n\n    closeEditMediaDialog(cancel = true) {\n        const { newItem } = this.state;\n\n        this.setState(\n            {\n                openEditMedia: false,\n                newItem: null\n            },\n            () => {\n                if (cancel && newItem && newItem.caption) {\n                    this.newMessageRef.current.innerHTML = newItem.caption;\n                    this.focusInput();\n                    this.handleInput();\n                } else {\n                    this.restoreSelection();\n                }\n            }\n        );\n    }\n\n    handleHeaderClick = () => {\n        setTimeout(() => this.restoreSelection(), 0);\n    };\n\n    handleStopRecord = (cancelled = false) => {\n        if (!this.recorder) return;\n\n        this.recorder.cancelled = cancelled;\n        this.recorder.stop();\n        this.recorder.stream.getAudioTracks().forEach(track => track.stop());\n    }\n\n    handleCancelRecord = () => {\n        this.handleStopRecord(true);\n    }\n\n    handleRecord = async () => {\n        if (this.recorder) return;\n\n        let stream = null;\n        try{\n            stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            if (this.recorder) return;\n        } catch { }\n\n        if (!stream) {\n            this.setState({\n                recordPermissionDenied: true\n            });\n            return;\n        }\n\n        const constraints = {\n            channelCount: 1,\n            sampleRate: 48000,\n        };\n\n        const track = stream.getAudioTracks()[0];\n        track.applyConstraints(constraints)\n\n        const options = { mimeType: 'audio/ogg; codecs=opus', audioBitsPerSecond: 64000 };\n        const workerOptions = {\n            encoderWorkerFactory: function () {\n                return new Worker(process.env.PUBLIC_URL + '/opus-media-recorder/encoderWorker.umd.js')\n            },\n            OggOpusEncoderWasmPath: process.env.PUBLIC_URL + '/opus-media-recorder/OggOpusEncoder.wasm'\n        };\n\n        const recorder = new MediaRecorder(stream, options, workerOptions);\n\n        const chunks = [];\n\n        recorder.ondataavailable = e => {\n            chunks.push(e.data);\n        };\n        recorder.onstart = () => {\n\n        };\n        recorder.onstop = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStop' });\n            this.setState({ recordingTime: null });\n\n            const { cancelled } = this.recorder;\n            this.recorder = null;\n\n            this.loadDraft();\n            if (cancelled) {\n                return;\n            }\n\n            // console.log('stop');\n            const blob = new Blob(chunks, { 'type' : 'audio/ogg; codecs=opus' });\n            const audioURL = window.URL.createObjectURL(blob);\n\n            const audio = new Audio(audioURL);\n            audio.oncanplay = () => {\n                const content = {\n                    '@type': 'inputMessageVoiceNote',\n                    voice_note: { '@type': 'inputFileBlob', name: '', size: blob.size, data: blob },\n                    duration: Math.trunc(audio.duration),\n                    waveform: '',\n                    caption: null\n                };\n\n                this.handleSendVoiceNote(content, blob);\n            };\n        };\n        recorder.onerror = () => {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateRecordError' });\n            this.setState({ recordingTime: null });\n\n            this.loadDraft();\n            // console.log('error', e);\n        };\n\n        this.recorder = recorder;\n        this.recorder.start(50);\n        this.startTime = new Date();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateRecordStart' });\n        this.setState({ recordingTime: new Date() });\n    }\n\n    handleClosePermission = () => {\n        this.setState({\n            recordPermissionDenied: false\n        })\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            chatId,\n            editMessageId,\n            newItem,\n            replyToMessageId,\n            files,\n            newDraft,\n            defaultText,\n            defaultUrl,\n            openEditUrl,\n            openEditMedia,\n            recordingReady,\n            recordingTime,\n            recordPermissionDenied,\n            shook\n        } = this.state;\n\n        const isMediaEditing = editMessageId > 0 && !isTextMessage(chatId, editMessageId);\n        let icon = (<SpeedDialIcon open={!recordingTime && recordingReady} openIcon={<MicrophoneIcon />} icon={<SendIcon />} />);\n        if (editMessageId) {\n            icon = <DoneIcon/>;\n        }\n\n        return (\n            <div className='inputbox-background'>\n                <div className={classNames('inputbox', { 'inputbox-recording': recordingTime }, { 'shook': shook })}>\n                    <div className={classNames('inputbox-bubble')}>\n                        <InputBoxHeader\n                            chatId={chatId}\n                            messageId={replyToMessageId}\n                            editMessageId={openEditMedia ? 0 : editMessageId}\n                            onClick={this.handleHeaderClick}\n                        />\n                        <div className='inputbox-wrapper'>\n                            <div className='inputbox-left-column'>\n                                <React.Suspense\n                                    fallback={\n                                        <IconButton className='inputbox-icon-button' aria-label='Emoticon'>\n                                            <InsertEmoticonIcon />\n                                        </IconButton>\n                                    }>\n                                    <EmojiPickerButton onSelect={this.handleEmojiSelect} />\n                                </React.Suspense>\n                            </div>\n                            <div className='inputbox-middle-column'>\n                                <div\n                                    id='inputbox-message'\n                                    className='scrollbars-hidden'\n                                    ref={this.newMessageRef}\n                                    placeholder={isMediaEditing ? t('Caption') : t('Message')}\n                                    contentEditable\n                                    suppressContentEditableWarning\n                                    onKeyDown={this.handleKeyDown}\n                                    // onKeyDownCapture={this.handleKeyDownCapture}\n                                    onPaste={this.handlePaste}\n                                    onInput={this.handleInput}\n                                />\n                            </div>\n                            <div className='inputbox-right-column'>\n                                <RecordTimer/>\n                                <input\n                                    ref={this.attachDocumentRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    onChange={this.handleAttachDocumentComplete}\n                                />\n                                <input\n                                    ref={this.attachPhotoRef}\n                                    className='inputbox-attach-button'\n                                    type='file'\n                                    multiple='multiple'\n                                    accept='image/*'\n                                    onChange={this.handleAttachPhotoComplete}\n                                />\n                                {!Boolean(editMessageId) && !recordingTime && (\n                                    <AttachButton\n                                        chatId={chatId}\n                                        onAttachPhoto={this.handleAttachPhoto}\n                                        onAttachDocument={this.handleAttachDocument}\n                                        onAttachPoll={this.handleAttachPoll}\n                                    />\n                                )}\n\n                                {/*<IconButton>*/}\n                                {/*<KeyboardVoiceIcon />*/}\n                                {/*</IconButton>*/}\n                            </div>\n                        </div>\n                    </div>\n                    { recordingTime && (\n                        <div className='inputbox-cancel-record-button-background'>\n                            <IconButton\n                                className='inputbox-cancel-record-button'\n                                aria-label='Delete'\n                                size='small'\n                                color='secondary'\n                                onClick={this.handleCancelRecord}>\n                                <DeleteIcon />\n                            </IconButton>\n                        </div>\n                    )}\n                    <div className='inputbox-send-button-background'>\n                        <IconButton\n                            className={classNames('inputbox-send-button', {'inputbox-send-accent-button': recordingTime || !recordingReady})}\n                            aria-label='Send'\n                            size='small'\n                            onClick={this.handleSubmit}>\n                            {icon}\n                        </IconButton>\n                    </div>\n                </div>\n                {!isPrivateChat(chatId) && <CreatePollDialog onSend={this.handleSendPoll} />}\n                <PasteFilesDialog files={files} onConfirm={this.handlePasteConfirm} onCancel={this.handlePasteCancel} />\n                {/*<UpdateDraftDialog draft={newDraft} onConfirm={this.handleUpdateDraftConfirm} onCancel={this.handleUpdateDraftCancel}/>*/}\n                <EditUrlDialog\n                    open={openEditUrl}\n                    defaultText={defaultText}\n                    defaultUrl={defaultUrl}\n                    onDone={this.handleDoneEditUrl}\n                    onCancel={this.handleCancelEditUrl}\n                />\n                <EditMediaDialog\n                    open={openEditMedia}\n                    chatId={chatId}\n                    messageId={editMessageId}\n                    newItem={newItem}\n                    onEdit={this.handleEditMedia}\n                    onSend={this.handleSendMedia}\n                    onCancel={this.handleCancelEditMedia}\n                />\n                <Dialog\n                    transitionDuration={0}\n                    open={recordPermissionDenied}\n                    onClose={this.handleClosePermission}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('RecordDeniedTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('RecordDeniedDescription')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClosePermission} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(InputBox);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Button from '@material-ui/core/Button/Button';\nimport './FooterCommand.css';\n\nclass FooterCommand extends React.Component {\n    render() {\n        const { command, onCommand } = this.props;\n\n        return (\n            <div className='footer-command-wrapper'>\n                <div className='footer-command-actions'>\n                    <Button color='primary' className='footer-command-button' onClick={onCommand}>\n                        {command}\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FooterCommand;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport FooterCommand from './FooterCommand';\nimport Notifications from './Notifications';\n\nclass NotificationsCommand extends Notifications {\n    render() {\n        const { t } = this.props;\n        const { isMuted } = this.state;\n        const command = isMuted ? t('ChatsUnmute') : t('ChatsMute');\n\n        return <FooterCommand command={command} onCommand={this.handleSetChatNotifications} />;\n    }\n}\n\nexport default withTranslation()(NotificationsCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport InputBox from './InputBox';\nimport FooterCommand from './FooterCommand';\nimport NotificationsCommand from './NotificationsCommand';\nimport { hasBasicGroupId, hasSupergroupId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Footer.css';\n\nclass Footer extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        const { t, chatId } = this.props;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n\n        if (hasBasicGroupId(chatId, update.basic_group.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n\n        if (hasSupergroupId(chatId, update.supergroup.id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleJoin = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'joinChat',\n            chat_id: chatId\n        });\n    };\n\n    handleDeleteAndExit = () => {\n        const { chatId } = this.props;\n        if (!chatId) return;\n\n        TdLibController.send({\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: true\n        });\n\n        // TdLibController\n        //     .send({\n        //         '@type': 'leaveChat',\n        //         chat_id: this.props.chatId\n        //     });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { type } = chat;\n        if (!type) return null;\n\n        switch (type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const basicGroup = BasicGroupStore.get(type.basic_group_id);\n                if (!basicGroup) return null;\n\n                const { status } = basicGroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return null;\n                    }\n                    case 'chatMemberStatusMember': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return <FooterCommand command={t('JoinGroup')} onCommand={this.handleJoin} />;\n                        }\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                return <InputBox />;\n            }\n            case 'chatTypeSecret': {\n                return <InputBox />;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(type.supergroup_id);\n                if (!supergroup) return null;\n\n                const { is_channel, status } = supergroup;\n                if (!status) return null;\n\n                const { is_member, permissions } = status;\n\n                switch (status['@type']) {\n                    case 'chatMemberStatusAdministrator': {\n                        return <InputBox />;\n                    }\n                    case 'chatMemberStatusBanned': {\n                        return <FooterCommand command={t('DeleteChat')} onCommand={this.handleDeleteAndExit} />;\n                    }\n                    case 'chatMemberStatusCreator': {\n                        return is_member ? <InputBox /> : <FooterCommand command={is_channel ? t('ChannelJoin') : t('JoinGroup')} onCommand={this.handleJoin} />;\n                    }\n                    case 'chatMemberStatusLeft': {\n                        return (\n                            <FooterCommand\n                                command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                onCommand={this.handleJoin}\n                            />\n                        );\n                    }\n                    case 'chatMemberStatusMember': {\n                        if (is_channel) {\n                            return <NotificationsCommand chatId={chatId} />;\n                        } else {\n                            return <InputBox />;\n                        }\n                    }\n                    case 'chatMemberStatusRestricted': {\n                        if (is_member) {\n                            return permissions && permissions.can_send_messages ? <InputBox /> : null;\n                        } else {\n                            return (\n                                <FooterCommand\n                                    command={is_channel ? t('ChannelJoin') : t('JoinGroup')}\n                                    onCommand={this.handleJoin}\n                                />\n                            );\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n}\n\nexport default withTranslation()(Footer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n\n                const { onTimeout } = this.props;\n                if (onTimeout) {\n                    onTimeout();\n                }\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired,\n    onTimeout: PropTypes.func\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MoreVertIcon from '../../Assets/Icons/More';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, canUnpinMessage, getChatShortTitle, getViewInfoTitle, isCreator, isPrivateChat, isSupergroup } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\nimport LogOutIcon from '../../Assets/Icons/LogOut';\nimport UserIcon from '../../Assets/Icons/User';\nimport GroupIcon from '../../Assets/Icons/Group';\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId, false, t)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId, t)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedLeaveChatDialog = withTranslation()(LeaveChatDialog);\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, t, open } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                open={open}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId, false, t)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nconst EnhancedClearHistoryDialog = withTranslation()(ClearHistoryDialog);\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        const { t } = this.props;\n\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = t('HistoryClearedUndo');\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = AppStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        let request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        if (isSupergroup(chatId) && isCreator(chatId)) {\n            request = {\n                '@type': 'setChatMemberStatus',\n                chat_id: chatId,\n                user_id: UserStore.getMyId(),\n                status: {\n                    '@type': 'chatMemberStatusCreator',\n                    is_member: false\n                }\n            };\n        }\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        const { t } = this.props;\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        TdLibController.clientUpdate({ '@type': clientUpdateType, chatId, inProgress: true });\n        const snackKey = enqueueSnackbar(message, {\n            persist: true,\n            key,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='progress'\n                    color='inherit'\n                    className='progress-button'>\n                    <NotificationTimer\n                        timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS}\n                        onTimeout={() => {\n                            action();\n                            closeSnackbar(snackKey);\n                        }}/>\n                </IconButton>,\n                <Button\n                    key='undo'\n                    color='primary'\n                    size='small'\n                    onClick={() => {\n                        cancel();\n                        closeSnackbar(snackKey);\n                    }}>\n                    {t('Undo')}\n                </Button>\n            ]\n        });\n    };\n\n    getLeaveChatTitle = (chatId, t) => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('DeleteChat');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? t('LeaveChannel') : t('LeaveMegaMenu');\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('DeleteChatUser');\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const { t } = this.props;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return t('ChatDeletedUndo');\n        if (!chat.type) return t('ChatDeletedUndo');\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return t('ChatDeletedUndo');\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return t('ChatDeletedUndo');\n            }\n        }\n\n        return t('ChatDeletedUndo');\n    };\n\n    handleUnpin = () => {\n        this.handleMenuClose();\n\n        const chatId = AppStore.getChatId();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateUnpin',\n            chatId\n        });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = AppStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId, t);\n        const unpinMessage = canUnpinMessage(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className='main-menu-button'\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}>\n                    <MenuItem onClick={this.handleChatInfo}>\n                        <ListItemIcon>\n                            {isPrivateChat(chatId) ? <UserIcon /> : <GroupIcon />}\n                        </ListItemIcon>\n                        <ListItemText primary={getViewInfoTitle(chatId, t)} />\n                    </MenuItem>\n                    {clearHistory && (\n                        <MenuItem onClick={this.handleClearHistory}>\n                            <ListItemIcon>\n                                <DeleteIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('ClearHistory')} />\n                        </MenuItem>\n                    )}\n                    {deleteChat && leaveChatTitle && (\n                        <MenuItem onClick={this.handleLeave}>\n                            <ListItemIcon>\n                                <LogOutIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={leaveChatTitle} />\n                        </MenuItem>\n                    )}\n                    {unpinMessage && (\n                        <MenuItem onClick={this.handleUnpin}>\n                            <ListItemIcon>\n                                <UnpinIcon />\n                            </ListItemIcon>\n                            <ListItemText primary={t('UnpinMessageAlertTitle')} />\n                        </MenuItem>\n                    )}\n                </Menu>\n                <EnhancedLeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <EnhancedClearHistoryDialog\n                    chatId={chatId}\n                    open={openClearHistory}\n                    onClose={this.handleClearHistoryContinue}\n                />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSnackbar,\n    withTranslation()\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { getChatSubtitle, isAccentChatSubtitle } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './HeaderChatSubtitle.css';\n\nclass HeaderChatSubtitle extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.off('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.off('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.off('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.off('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.off('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.off('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.off('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.off('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateChatTitle = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserChatAction = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeBasicGroup' && chat.type.basic_group_id === update.basic_group.id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        if (chat.type['@type'] === 'chatTypeSupergroup' && chat.type.supergroup_id === update.supergroup.id) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { chatId } = this.props;\n\n        const subtitle = getChatSubtitle(chatId, true);\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n\n        return (\n            <div className={classNames('header-chat-subtitle', { 'header-chat-subtitle-accent': isAccentSubtitle })}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nHeaderChatSubtitle.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChatSubtitle;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport HeaderChatSubtitle from './HeaderChatSubtitle';\nimport './HeaderChat.css';\n\nclass HeaderChat extends React.Component {\n    render() {\n        const { className, chatId, onClick } = this.props;\n\n        return (\n            <div className={classNames('header-chat', className)} onClick={onClick}>\n                <ChatTile chatId={chatId} size={44} />\n                <div className='header-chat-content'>\n                    <DialogTitle chatId={chatId} />\n                    <HeaderChatSubtitle chatId={chatId} />\n                </div>\n            </div>\n        );\n    }\n}\n\nHeaderChat.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default HeaderChat;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport { clearSelection, deleteMessages, forwardMessages } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './HeaderCommand.css';\n\nclass HeaderCommand extends React.Component {\n    handleCancel = () => {\n        clearSelection();\n    };\n\n    handleDelete = () => {\n        let id = 0;\n        let messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        deleteMessages(id, messageIds);\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        forwardMessages(id, messageIds);\n    };\n\n    render() {\n        const { t, count } = this.props;\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        return (\n            <div className='header-command'>\n                {canBeForwarded && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleForward}>\n                        {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                    </Button>\n                )}\n                {canBeDeleted && (\n                    <Button color='primary' className='header-command-button' onClick={this.handleDelete}>\n                        {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                    </Button>\n                )}\n                <div className='header-command-space' />\n                <Button color='primary' className='header-command-button' onClick={this.handleCancel}>\n                    {t('Cancel')}\n                </Button>\n            </div>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nexport default withTranslation()(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyMinithumbnail, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.on('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n        ChatStore.off('clientUpdateUnpin', this.onClientUpdateUnpin);\n        ChatStore.off('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n    }\n\n    onClientUpdateUnpin = update => {\n        const { chatId } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.handleDelete();\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { messageId } = this.state;\n\n        if (messageId) {\n            this.loadContent();\n        }\n    };\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id: messageId } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const { code, message } = error;\n                if (message !== 'Chat not found') {\n                    const deletedMessage = {\n                        '@type': 'deletedMessage',\n                        chat_id: chatId,\n                        id: messageId,\n                        content: null\n                    };\n\n                    MessageStore.set(deletedMessage);\n                    this.forceUpdate();\n                }\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n        const minithumbnail = getReplyMinithumbnail(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div className='pinned-message' onMouseDown={this.handleClick}>\n                    <div className='border reply-border' />\n                    {photoSize && (\n                        <ReplyTile\n                            chatId={chatId}\n                            messageId={messageId}\n                            photoSize={photoSize}\n                            minithumbnail={minithumbnail}\n                        />\n                    )}\n                    <div className='pinned-message-content'>\n                        <div className='pinned-message-title'>{t('PinnedMessage')}</div>\n                        <div className='pinned-message-subtitle'>{content}</div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        manager={modalManager}\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('Confirm')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(PinnedMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '../../Assets/Icons/Search';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderChat from '../Tile/HeaderChat';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport PinnedMessage from './PinnedMessage';\nimport { changeChatDetailsVisibility } from '../../Actions/Chat';\nimport {\n    getChatShortTitle,\n    getChatSubtitle,\n    getChatTitle,\n    isAccentChatSubtitle, isChannelChat,\n    isPrivateChat, isSupergroup\n} from '../../Utils/Chat';\nimport { clearSelection, openChat, searchChat } from '../../Actions/Client';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Header.css';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: AppStore.getAuthorizationState(),\n            connectionState: AppStore.getConnectionState(),\n            openDeleteDialog: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.on('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDeleteMessages', this.onClientUpdateDeleteMessages);\n        AppStore.off('updateAuthorizationState', this.onUpdateAuthorizationState);\n        AppStore.off('updateConnectionState', this.onUpdateConnectionState);\n\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n    }\n\n    onClientUpdateDeleteMessages = update => {\n        const { chatId, messageIds } = update;\n\n        let canBeDeletedForAllUsers = true;\n        for (let messageId of messageIds) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            chatId,\n            messageIds,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke, chatId, messageIds } = this.state;\n\n        clearSelection();\n        this.handleCloseDelete();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    openChatDetails = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        const { isSmallWidth } = AppStore;\n\n        if (isSmallWidth) {\n            openChat(chatId, null, true);\n        } else {\n            changeChatDetailsVisibility(true);\n        }\n    };\n\n    handleSearchChat = () => {\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { t } = this.props;\n        const {\n            authorizationState,\n            connectionState,\n            selectionCount,\n            openDeleteDialog,\n            canBeDeletedForAllUsers,\n            revoke,\n            messageIds\n        } = this.state;\n\n        const count = messageIds ? messageIds.length : 0;\n\n        let control = null;\n        if (selectionCount) {\n            control = <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = AppStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        control = control || (\n            <div className='header-details'>\n                {showProgressAnimation ? (\n                    <div\n                        className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                        onClick={this.openChatDetails}>\n                        <span className='header-status-content'>{title}</span>\n                        <HeaderProgress />\n                        <span\n                            className={classNames('header-status-title', { 'header-status-accent': isAccentSubtitle })}>\n                            {subtitle}\n                        </span>\n                        <span className='header-status-tail' />\n                    </div>\n                ) : (\n                    <HeaderChat\n                        className={classNames('grow', 'cursor-pointer')}\n                        chatId={chatId}\n                        onClick={this.openChatDetails}\n                    />\n                )}\n                <PinnedMessage chatId={chatId} />\n                {chat && (\n                    <>\n                        <IconButton\n                            className='header-right-second-button'\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n\n        return (\n            <>\n                {control}\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Do you want to delete this message?'\n                                : `Do you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        { isSupergroup(chatId) ? (\n                            <DialogContentText>\n                                { !isChannelChat(chatId) && (count === 1\n                                    ? 'This will delete it for everyone in this chat'\n                                    : 'This will delete them for everyone in this chat')\n                                }\n                            </DialogContentText>\n                        ) : (\n                            <>\n                                {\n                                    canBeDeletedForAllUsers && (\n                                    <FormControlLabel\n                                    control={\n                                        <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                    }\n                                    label={\n                                        isPrivateChat(chatId)\n                                            ? `Delete for ${getChatShortTitle(chatId, false, t)}`\n                                            : 'Delete for all'\n                                    }\n                                    />\n                                )}\n                            </>\n                        )}\n\n\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            {t('Ok')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/core/Slider';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className='header-player-button' color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div className='volume-button-panel'>\n                        <Slider\n                            min={0}\n                            max={1}\n                            step={0.01}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            orientation='vertical'\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default VolumeButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default RepeatButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default ShuffleButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { audioPlaybackRate, playbackRate } = PlayerStore;\n\n        this.state = {\n            audioPlaybackRate,\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        this.setState({ audioPlaybackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n        const nextRate = rate === PLAYER_PLAYBACKRATE_NORMAL\n            ? PLAYER_PLAYBACKRATE_FAST\n            : PLAYER_PLAYBACKRATE_NORMAL;\n\n        if (audio) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaAudioPlaybackRate',\n                audioPlaybackRate: nextRate\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaybackRate',\n                playbackRate: nextRate\n            });\n        }\n    };\n\n    render() {\n        const { audio } = this.props;\n        const { audioPlaybackRate, playbackRate } = this.state;\n\n        const rate = audio ? audioPlaybackRate : playbackRate;\n\n        return (\n            <IconButton\n                className='header-player-button'\n                color={rate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nPlaybackRateButton.defaultProps = {\n    audio: false\n}\n\nPlaybackRateButton.propTypes = {\n    audio: PropTypes.bool\n}\n\nexport default PlaybackRateButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport './Time.css';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { duration } = this.props;\n\n        const currentTime = 0;\n        const reverse = false;\n\n        this.state = {\n            reverse,\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(currentTime, duration, reverse),\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime, duration } = update;\n        const { reverse } = this.state;\n\n        this.setState({\n            currentTime,\n            duration,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, reverse)\n        });\n    };\n\n    handleReverse = event => {\n        event.stopPropagation();\n        event.preventDefault();\n\n        const { currentTime, duration, reverse } = this.state;\n\n        this.setState({\n            reverse: !reverse,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0), duration, !reverse)\n        });\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return (\n            <div className='header-player-time' onClick={this.handleReverse}>\n                {currentTimeString}\n            </div>\n        );\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as ReactDOM from 'react-dom';\nimport MediaAudio from '../Message/Media/Audio';\nimport MediaVoiceNote from '../Message/Media/VoiceNote';\nimport { openMedia } from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openInstantViewMedia } from '../../Utils/InstantView';\nimport { SCROLL_PRECISION } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, block, playlist } = PlayerStore;\n        this.state = {\n            message,\n            block,\n            playlist,\n\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { playlist, message, block } = this.state;\n        if (!message && !block) return;\n        if (!playlist) return;\n\n        const index = [...playlist.items]\n            .reverse()\n            .findIndex(x => playlistItemEquals(x, message || block));\n        if (index === -1) return;\n\n        const item = this.itemRefMap.get(index);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.off('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n\n        switch (source['@type']) {\n            case 'message': {\n\n                this.setState({\n                    message: source,\n                    block: null\n                })\n                break;\n            }\n            case 'instantViewSource': {\n\n                this.setState({\n                    message: null,\n                    block: source.block\n                });\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { message, block } = this.state;\n        const { source } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { message, block } = this.state;\n        const { source, playlist } = update;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({\n                playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    getPageBlock(block, instantView) {\n        if (!block) return null;\n\n        let element = null;\n        switch (block['@type']) {\n            case 'pageBlockAudio': {\n                element = (\n                    <MediaAudio\n                        block={block}\n                        audio={block.audio}\n                        openMedia={() => openInstantViewMedia(block.audio, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n            case 'pageBlockVoiceNote': {\n                element = (\n                    <MediaVoiceNote\n                        block={block}\n                        voiceNote={block.voice_note}\n                        openMedia={() => openInstantViewMedia(block.voice_note, block.caption, block, instantView, true)} />\n                );\n                break;\n            }\n        }\n\n        return element;\n    }\n\n    render() {\n        const { open, playlist } = this.state;\n\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { items } = playlist;\n        if (!items) return null;\n        if (items.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        let iv = null;\n        if (items[0]['@type'] === 'instantViewSource') {\n            iv = playlist.source.instantView;\n        }\n\n        const getMediaFunc = items[0]['@type'] === 'message'\n            ? x => getMedia(x, () => openMedia(x.chat_id, x.id))\n            : x => this.getPageBlock(x, iv)\n\n        return (\n            <div className='playlist'>\n                <div className='playlist-wrapper'>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {[...items]\n                            .reverse()\n                            .map((x, index) => (\n                                <div key={x.id || index} ref={el => this.itemRefMap.set(index, el)} className='playlist-item'>\n                                    {getMediaFunc(x)}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaylist.propTypes = {\n\n};\n\nexport default Playlist;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport { loadInstantViewContent } from '../Utils/File';\nimport { setInstantViewContent } from './Client';\nimport TdLibController from '../Controllers/TdLibController';\n\nexport function openMediaInstantView(instantView, block) {\n    const url = urlCache.get(instantView);\n    if (!url) return;\n\n    console.log('[IV] open', instantView);\n    loadInstantViewContent(instantView);\n    setInstantViewContent({ instantView, block, url });\n}\n\nlet timestamp = null;\n\nconst ivCache = new Map();\nconst urlCache = new Map();\n\nexport async function openInstantView(url) {\n    try {\n        let result = null;\n        if (ivCache.has(url)) {\n            result = ivCache.get(url);\n        } else {\n            const now = (timestamp = new Date());\n            result = await TdLibController.send({\n                '@type': 'getWebPageInstantView',\n                url,\n                force_full: true\n            });\n            ivCache.set(url, result);\n            urlCache.set(result, url);\n            if (timestamp !== now) return;\n        }\n\n        console.log('[IV] open', result);\n        loadInstantViewContent(result);\n        setInstantViewContent({ instantView: result, url });\n    } catch {\n        const newWindow = window.open();\n        newWindow.opener = null;\n        newWindow.location = url;\n    }\n}\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport PlayArrowIcon from '../../Assets/Icons/PlayArrow';\nimport PauseIcon from '../../Assets/Icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { supportsStreaming } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDate, getDateHint, getMessageAudio, hasAudio, hasVoice, useAudioPlaybackRate } from '../../Utils/Message';\nimport { getCurrentTime, getMediaTitle, getMediaMimeType, getMediaSrc, isCurrentSource, playlistItemEquals } from '../../Utils/Player';\nimport { openMediaInstantView } from '../../Actions/InstantView';\nimport { clamp } from '../../Utils/Common';\nimport { PLAYER_PLAYBACKRATE_NORMAL, PLAYER_SEEK_STEP_BIG } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, block, instantView, playlist } = PlayerStore;\n        const { currentTime, duration } = getCurrentTime(message);\n\n        this.state = {\n            currentTime,\n            duration,\n            message,\n            block,\n            instantView,\n            playlist,\n            playing: false,\n            src: getMediaSrc(message),\n            mimeType: getMediaMimeType(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { message, block, playlist, src, playing } = this.state;\n\n        if (nextState.block !== block) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.addMediaSessionHandlers();\n\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.on('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.on('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.on('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.on('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    componentWillUnmount() {\n        this.removeMediaSessionHandlers();\n\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        FileStore.off('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        MessageStore.off('clientUpdateRecordStart', this.onClientUpdateRecordStart);\n        MessageStore.off('clientUpdateRecordStop', this.onClientUpdateRecordStop);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.off('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.off('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.off('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.off('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.off('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.off('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n        PlayerStore.off('clientUpdateMediaAudioPlaybackRate', this.onClientUpdateMediaAudioPlaybackRate);\n        PlayerStore.off('clientUpdateMediaSeek', this.onClientUpdateMediaSeek);\n    }\n\n    addMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try {\n            mediaSession.setActionHandler('nexttrack', this.handleNext);\n            mediaSession.setActionHandler('previoustrack', this.handlePrev);\n            mediaSession.setActionHandler('seekforward', this.handleSeekForward);\n            mediaSession.setActionHandler('seekbackward', this.handleSeekBackward);\n            mediaSession.setActionHandler('seekto', this.handleSeekTo);\n        } catch {\n\n        }\n    }\n\n    handleSeekForward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime + PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekBackward = () => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(video.currentTime - PLAYER_SEEK_STEP_BIG);\n    };\n\n    handleSeekTo = event => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        this.handleSeek(event.seekTime);\n    };\n\n    handleSeek = currentTime => {\n        const video = this.videoRef.current;\n        if (!video) return;\n\n        currentTime = clamp(currentTime, 0, video.duration || 0);\n\n        video.currentTime = currentTime;\n    };\n\n    removeMediaSessionHandlers() {\n        const { mediaSession } = navigator;\n        if (!mediaSession) return;\n\n        try{\n            mediaSession.setActionHandler('nexttrack', null);\n            mediaSession.setActionHandler('previoustrack', null);\n            mediaSession.setActionHandler('seekforward', null);\n            mediaSession.setActionHandler('seekbackward', null);\n            mediaSession.setActionHandler('seekto', null);\n        }catch {\n\n        }\n    }\n\n    fadeOutVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.pause();\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    fadeInVolume(duration) {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const totalIterations = 20;\n        let count = 0;\n        const currentVolume = player.volume;\n        player.volume = 0;\n        player.play();\n        this.volumeInterval = setInterval(() => {\n            if (count >= totalIterations) {\n                player.volume = currentVolume;\n                clearInterval(this.volumeInterval);\n            } else {\n                player.volume = currentVolume / totalIterations * (count + 1);\n                count++;\n            }\n        }, duration / totalIterations);\n    }\n\n    onClientUpdateRecordStart = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (!player.paused) {\n            this.fadeOutVolume(250);\n            this.pausedForRecord = true;\n        }\n    };\n\n    onClientUpdateRecordStop = update => {\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        if (player.paused && this.pausedForRecord) {\n            this.fadeInVolume(250);\n            this.pausedForRecord = false;\n        }\n    };\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        const audio = hasAudio(message || block);\n        if (audio) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaAudioPlaybackRate = update => {\n        const { audioPlaybackRate } = update;\n\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!hasAudio(message || block)) return;\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = audioPlaybackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaSeek = update => {\n        const { source, value, duration } = update;\n        const { message, block } = this.state;\n\n        if (!isCurrentSource(message? message.chat_id : 0, message? message.id : 0, block, source)) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n        if (!player.duration) {\n            this.currentValue = { value, duration };\n            return;\n        }\n\n        player.currentTime = value * player.duration;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(AppStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.fadeOutVolume(250);\n    };\n\n    startPlayingFile = source => {\n        if (!source) return;\n\n        const { playlist } = PlayerStore;\n        const { src: prevSrc } = this.state;\n\n        const src = getMediaSrc(source);\n        const mimeType = getMediaMimeType(source);\n        const { currentTime, duration } = getCurrentTime(source);\n        const playing = Boolean(src);\n\n        const srcSource = source['@type'] === 'instantViewSource'\n            ? { message: null, block: source.block, instantView: source.instantView }\n            : { message: source, block: null, instantView: null };\n\n        this.setState(\n            {\n                currentTime,\n                duration,\n                playlist,\n                playing,\n                src,\n                ...srcSource,\n                mimeType\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                if (prevSrc !== src) {\n                    player.load();\n                    if (this.currentValue) {\n                        player.currentTime = this.currentValue.value * this.currentValue.duration;\n                        this.currentValue = null;\n                    } else {\n                        player.currentTime = currentTime;\n                    }\n                }\n\n                if (this.playingMediaViewer) {\n                    player.pause();\n\n                    TdLibController.clientUpdate({\n                        '@type': 'clientUpdateMediaPause',\n                        source\n                    });\n                } else if (player.paused) {\n                    player.play();\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, fileId } = update;\n        const { message, block, instantView } = this.state;\n\n        if (message) {\n            const { chat_id, id, content } = message;\n            if (!content) return;\n            if (chatId !== chat_id || messageId !== id) return;\n\n            let startPlaying = false;\n            switch (content['@type']) {\n                case 'messageText': {\n                    const { web_page } = content;\n                    if (web_page) {\n                        const { audio, voice_note, video_note } = web_page;\n\n                        if (audio) {\n                            if (supportsStreaming()) return;\n\n                            const { audio: file } = audio;\n                            if (file) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (voice_note) {\n                            const { voice } = voice_note;\n                            if (voice) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n\n                        if (video_note) {\n                            const { video } = video_note;\n                            if (video) {\n                                startPlaying = true;\n                                break;\n                            }\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageAudio': {\n                    const { audio } = content;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVoiceNote': {\n                    const { voice_note } = content;\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n                case 'messageVideoNote': {\n                    const { video_note } = content;\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            startPlaying = true;\n                            break;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile(message);\n            }\n        } else if (block) {\n            let startPlaying = false;\n            switch (block['@type']) {\n                case 'pageBlockAudio': {\n                    const { audio } = block;\n                    if (audio) {\n                        if (supportsStreaming()) return;\n\n                        const { audio: file } = audio;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVoiceNote': {\n                    const { voice_note } = block;\n                    if (voice_note) {\n                        const { voice: file } = voice_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n                case 'pageBlockVideoNote': {\n                    const { video_note } = block;\n                    if (video_note) {\n                        const { video: file } = video_note;\n                        if (file && file.id === fileId) {\n                            startPlaying = true;\n                        }\n                    }\n\n                    break;\n                }\n            }\n\n            if (startPlaying) {\n                this.startPlayingFile({ '@type': 'instantViewSource', block, instantView });\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist, source } = update;\n        const { message, block } = this.state;\n\n        const chatId = message ? message.chat_id : 0;\n        const messageId = message ? message.id : 0;\n\n        if (isCurrentSource(chatId, messageId, block, source)) {\n            this.setState({ playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            block: null,\n            instantView: null,\n            playlist: null,\n            playing: false,\n            src: null,\n            mimeType: null\n        }, () => {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { source } = update;\n        const { message, block, src } = this.state;\n\n        if (isCurrentSource(message ? message.chat_id : 0, message ? message.id : 0, block, source)) {\n            if (!src) return;\n\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            this.pausedForRecord = false;\n            if (player.paused) {\n                player.play();\n            } else {\n                player.pause();\n            }\n        } else {\n            this.startPlayingFile(source);\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            source\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            source,\n            moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    source,\n                    moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        const video = this.videoRef.current;\n        this.setCurrentTime({ currentTime: 0, duration: video.duration });\n\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleLoadedMetadata = () => {\n        let { message, block, instantView, currentTime } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { audioPlaybackRate, playbackRate, volume } = PlayerStore;\n\n        const audio = hasAudio(message || block);\n        const voiceNote = hasVoice(message || block);\n\n        let rate = PLAYER_PLAYBACKRATE_NORMAL;\n        if (voiceNote) {\n            rate = playbackRate;\n        } else if (audio && useAudioPlaybackRate(message || block)) {\n            rate = audioPlaybackRate;\n        }\n\n        player.playbackRate = rate;\n        player.volume = volume;\n        player.muted = false;\n        if (this.currentValue) {\n            player.currentTime = player.duration * this.currentValue.value;\n            this.currentValue = null;\n        } else {\n            player.currentTime = currentTime;\n        }\n\n        player.play();\n\n        const { buffered, duration, videoWidth, videoHeight } = player;\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaLoadedMetadata',\n            source,\n            buffered,\n            duration,\n            videoWidth,\n            videoHeight\n        });\n\n        if (audio) {\n            return;\n        }\n        if (voiceNote) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleProgress = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { buffered } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaProgress',\n            source,\n            buffered\n        });\n    }\n\n    handleTimeUpdate = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, buffered, duration } = player;\n\n        this.setState({ currentTime });\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            source,\n            duration,\n            currentTime,\n            buffered,\n            timestamp: Date.now()\n        });\n\n        this.setCurrentTime({ currentTime, duration });\n    };\n\n    handleCanPlay = () => {\n\n    };\n\n    handleVideoPlay = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({ playing: true });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { currentTime, duration } = player;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            source,\n            currentTime,\n            duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message, block, instantView } = this.state;\n        if (!message && !block) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const source = message || { '@type': 'instantViewSource', block, instantView };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            source\n        });\n    };\n\n    hasPrev = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index + 1 < playlist.items.length;\n    };\n\n    hasNext = (item, playlist) => {\n        if (!item) return false;\n        if (!playlist || !playlist.items.length) return false;\n\n        const index = playlist.items.findIndex(x => playlistItemEquals(x, item));\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message, block, instantView } = this.state;\n        if (message) {\n            openChat(message.chat_id, message.id);\n            return;\n        }\n\n        if (block && instantView) {\n            openMediaInstantView(instantView, block);\n            return;\n        }\n    };\n\n    setCurrentTime = currentTime => {\n        const { message, block } = this.state;\n        if (!message && !block) return;\n\n        if (!useAudioPlaybackRate(message || block)) return;\n\n        const audio = getMessageAudio(message.chat_id, message.id);\n        if (!audio) return;\n\n        const { audio: file } = audio;\n        if (!file) return;\n\n        const { remote } = file;\n        if (!remote) return;\n\n        const { unique_id } = remote;\n        if (!unique_id) return;\n\n        if (!currentTime) {\n            PlayerStore.clearCurrentTime(unique_id);\n        } else {\n            PlayerStore.setCurrentTime(unique_id, currentTime);\n        }\n    };\n\n    render() {\n        const { t } = this.props;\n        const { playing, message, block, duration, playlist, src, mimeType } = this.state;\n\n        const audio = hasAudio(message || block);\n        const useAudioRate = useAudioPlaybackRate(message || block);\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message || block, t);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = false; //!audio;\n        const showPlaybackRate = !audio || useAudioRate;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message || block, playlist);\n        const hasNext = this.hasNext(message || block, playlist);\n\n        const source = src ? <source src={src} type={mimeType}/> : null;\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    disablePictureInPicture={true}\n                    onLoadedMetadata={this.handleLoadedMetadata}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onEnded={this.handleVideoEnded}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onProgress={this.handleProgress}\n                >\n                    {source}\n                </video>\n                {(message || block) && (\n                    <div className='header-player'>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className='header-player-button'\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className='header-player-button'\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                        </div>\n                        <Time duration={duration}/>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton audio={audio} />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className='header-player-button' onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nexport default withTranslation()(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport { getChatUserId } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ActionBar.css';\n\nclass ActionBar extends React.Component {\n    componentDidMount() {\n        ChatStore.on('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    componentWillUnmount() {\n        ChatStore.off('updateChatActionBar', this.onUpdateChatActionBar);\n    }\n\n    onUpdateChatActionBar = update => {\n        const { chatId } = this.props;\n        const { chat_id } = update;\n\n        if (chat_id !== chatId) return;\n\n        this.forceUpdate();\n    };\n\n    handleClose = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'removeChatActionBar',\n            chat_id: chatId\n        });\n    };\n\n    handleReportSpam = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonSpam'\n            },\n            message_ids: []\n        });\n    };\n\n    handleReportUnrelatedLocation = () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        TdLibController.send({\n            '@type': 'reportChat',\n            chat_id: chatId,\n            reason: {\n                '@type': 'chatReportReasonUnrelatedLocation'\n            },\n            message_ids: []\n        });\n    };\n\n    handleSharePhoneNumber = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'sharePhoneNumber',\n            user_id: userId\n        });\n    };\n\n    handleAddContact = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        const user = UserStore.get(userId);\n        if (!user) return;\n\n        const { user_id, phone_number, first_name, last_name } = user;\n\n        TdLibController.send({\n            '@type': 'addContact',\n            contact: {\n                '@type': 'contact',\n                phone_number,\n                first_name,\n                last_name,\n                vcard: '',\n                user_id\n            },\n            share_phone_number: false\n        });\n    };\n\n    handleBlockUser = () => {\n        const { chatId } = this.props;\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'blockUser',\n            user_id: userId\n        });\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        if (!chatId) return null;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n\n        const { action_bar } = chat;\n        if (!action_bar) return null;\n\n        let content = null;\n        switch (action_bar['@type']) {\n            case 'chatActionBarSharePhoneNumber': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleSharePhoneNumber}>\n                        {t('ShareMyPhone')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarAddContact': {\n                content = (\n                    <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                        {t('AddContactChat')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportAddBlock': {\n                content = (\n                    <>\n                        <Button color='primary' className='header-command-button' onClick={this.handleAddContact}>\n                            {t('AddContactChat')}\n                        </Button>\n                        <Button color='secondary' className='header-command-button' onClick={this.handleBlockUser}>\n                            {t('ReportSpamUser')}\n                        </Button>\n                    </>\n                );\n                break;\n            }\n            case 'chatActionBarUnrelatedLocation': {\n                content = (\n                    <Button\n                        color='secondary'\n                        className='header-command-button'\n                        onClick={this.handleReportUnrelatedLocation}>\n                        {t('ReportSpamLocation')}\n                    </Button>\n                );\n                break;\n            }\n            case 'chatActionBarReportSpam': {\n                content = (\n                    <Button color='secondary' className='header-command-button' onClick={this.handleReportSpam}>\n                        {t('ReportSpam')}\n                    </Button>\n                );\n                break;\n            }\n        }\n\n        return (\n            <div className='action-bar' onMouseDown={this.handleClick}>\n                <div className='action-bar-content'>{content}</div>\n                <div className='action-bar-close-button'>\n                    <IconButton onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nActionBar.propTypes = {\n    chatId: PropTypes.number\n};\n\nexport default withTranslation()(ActionBar);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport AppStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { dragParams } = AppStore;\n\n        this.state = { dragParams };\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        const { dragParams } = AppStore;\n\n        this.setState({ dragParams });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: false\n        });\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateSendFiles',\n            files\n        });\n    };\n\n    render() {\n        const { dragParams } = this.state;\n        if (!dragParams) return null;\n\n        return (\n            <div\n                className='files-drop-target'\n                onDragEnter={this.handleDragEnter}\n                onDragLeave={this.handleDragLeave}\n                onDrop={this.handleDrop}>\n                <div className='files-drop-target-wrapper'>\n                    <div className='files-drop-target-text'>\n                        <div className='files-drop-target-title'>Drop files here</div>\n                        <div className='files-drop-target-subtitle'>to send them</div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './StubMessage.css';\n\nclass StubMessage extends React.Component {\n\n    render() {\n\n        return (\n            <div className='stub-message'>\n                {this.props.children}\n            </div>\n        );\n    }\n\n}\n\nStubMessage.propTypes = {};\n\nexport default StubMessage;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.off('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { date, i18n } = this.props;\n\n        const showYear = new Date(date * 1000) < new Date().setMonth(new Date().getMonth() - 3);\n        const options = showYear\n            ? {\n                  day: 'numeric',\n                  month: 'long',\n                  year: 'numeric'\n              }\n            : {\n                  day: 'numeric',\n                  month: 'long'\n              };\n\n        return (\n            <div className='day-meta'>\n                <div className='day-meta-wrapper'>\n                    <div>{new Date(date * 1000).toLocaleDateString([i18n.language], options)}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className='forward-arrow' ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', 'forward')}>\n                <div>{t('ForwardedMessage')}</div>\n                <div className='forward-subtitle'>\n                    {t('From') + ' '}\n                    {/*<Tooltip*/}\n                    {/*    title={tooltip}*/}\n                    {/*    classes={{ popper: 'forward-arrow-popper', tooltip: 'forward-tooltip' }}*/}\n                    {/*    PopperProps={{*/}\n                    {/*        popperOptions: {*/}\n                    {/*            modifiers: {*/}\n                    {/*                arrow: {*/}\n                    {/*                    enabled: Boolean(arrowRef),*/}\n                    {/*                    element: arrowRef*/}\n                    {/*                }*/}\n                    {/*            }*/}\n                    {/*        }*/}\n                    {/*    }}*/}\n                    {/*    placement='top'>*/}\n                        <a onClick={this.openForward}>{title}</a>\n                    {/*</Tooltip>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport Status from './Status';\nimport { getDate, getDateHint, getViews } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Meta.css';\n\nclass Meta extends React.Component {\n\n    state = { };\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId } = props;\n        const { prevChatId, prevMessageId } = state;\n\n        if (prevChatId !== chatId || prevMessageId !== messageId) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) return null;\n\n            const { date, edit_date: editDate, views, is_outgoing: isOutgoing } = message;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                date,\n                editDate,\n                views,\n                isOutgoing\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.off('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id, edit_date: editDate } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            editDate\n        });\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id, views } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chat_id !== chatId) return;\n        if (message_id !== messageId) return;\n\n        this.setState({\n            views\n        });\n    };\n\n    render() {\n        const { className, chatId, messageId, onDateClick, t, style } = this.props;\n        const { date, editDate, views, isOutgoing } = this.state;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n        const viewsStr = getViews(views);\n\n        return (\n            <div className={classNames('meta', className)} style={style}>\n                <span>&ensp;</span>\n                {views > 0 && (\n                    <>\n                        <VisibilityIcon className='meta-views-icon' />\n                        <span className='meta-views' title={views}>\n                            &nbsp;\n                            {viewsStr}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n                {isOutgoing && <Status chatId={chatId} messageId={messageId} />}\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    onDateClick: PropTypes.func\n};\n\nexport default withTranslation()(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,5 C19.6568542,5 21,6.34314575 21,8 L21,20 C21,21.6568542 19.6568542,23 18,23 L9,23 C7.34314575,23 6,21.6568542 6,20 L6,8 C6,6.34314575 7.34314575,5 9,5 L18,5 Z M18,7 L9,7 C8.44771525,7 8,7.44771525 8,8 L8,20 C8,20.5522847 8.44771525,21 9,21 L18,21 C18.5522847,21 19,20.5522847 19,20 L19,8 C19,7.44771525 18.5522847,7 18,7 Z M15,1 C15.5522847,1 16,1.44771525 16,2 C16,2.55228475 15.5522847,3 15,3 L15,3 L5,3 C4.44771525,3 4,3.44771525 4,4 L4,4 L4,16 C4,16.5522847 3.55228475,17 3,17 C2.44771525,17 2,16.5522847 2,16 L2,16 L2,4 C2,2.34314575 3.34314575,1 5,1 L5,1 Z' />,\n    'Copy'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M18,3 C19.6568542,3 21,4.34314575 21,6 L21,18 C21,19.6568542 19.6568542,21 18,21 L6,21 C4.34314575,21 3,19.6568542 3,18 L3,6 C3,4.34314575 4.34314575,3 6,3 L18,3 Z M18,5 L6,5 C5.44771525,5 5,5.44771525 5,6 L5,18 C5,18.5522847 5.44771525,19 6,19 L18,19 C18.5522847,19 19,18.5522847 19,18 L19,6 C19,5.44771525 18.5522847,5 18,5 Z M15.7928932,8.29289322 C16.1834175,7.90236893 16.8165825,7.90236893 17.2071068,8.29289322 C17.5976311,8.68341751 17.5976311,9.31658249 17.2071068,9.70710678 L17.2071068,9.70710678 L11.2071068,15.7071068 C10.8165825,16.0976311 10.1834175,16.0976311 9.79289322,15.7071068 L9.79289322,15.7071068 L7.29289322,13.2071068 C6.90236893,12.8165825 6.90236893,12.1834175 7.29289322,11.7928932 C7.68341751,11.4023689 8.31658249,11.4023689 8.70710678,11.7928932 L8.70710678,11.7928932 L10.5,13.5857864 Z' />,\n    'FrameCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <g stroke='currentColor' strokeWidth='2' fill='none' fillRule='evenodd' strokeLinecap='round' transform='translate(4, 1)'>\n        <path d='M2,3 L14,3 C15.1045695,3 16,3.8954305 16,5 L16,17 C16,18.1045695 15.1045695,19 14,19 L2,19 C0.8954305,19 0,18.1045695 0,17 L0,10 L0,10'/>\n        <polyline strokeLinejoin='round' points='4 11.5 6.5 14 12.5 8'/>\n        <polyline strokeLinejoin='round' points='3 0 -2.87547763e-14 3 3 6'/>\n    </g>,\n    'RemoveCheck'\n);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport Popover from '@material-ui/core/Popover';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport CopyIcon from '../../Assets/Icons/Copy';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport FrameCheckIcon from '../../Assets/Icons/FrameCheck';\nimport EditIcon from '../../Assets/Icons/Edit';\nimport RemoveCheckIcon from '../../Assets/Icons/RemoveCheck';\nimport ShareIcon from '../../Assets/Icons/Share';\nimport StopIcon from '../../Assets/Icons/Stop';\nimport PinIcon from '../../Assets/Icons/Pin2';\nimport UnpinIcon from '../../Assets/Icons/Pin2';\nimport { isPublicSupergroup } from '../../Utils/Supergroup';\nimport { canMessageBeClosed, canMessageBeDeleted, canMessageBeEdited, canMessageBeForwarded, canMessageBeUnvoted, isMessagePinned } from '../../Utils/Message';\nimport { canPinMessages, canSendMessages } from '../../Utils/Chat';\nimport { cancelPollAnswer, stopPoll } from '../../Actions/Poll';\nimport { copy } from '../../Utils/Text';\nimport { clearSelection, deleteMessages, editMessage, forwardMessages, replyMessage, selectMessage } from '../../Actions/Client';\nimport { pinMessage, unpinMessage } from '../../Actions/Message';\nimport { saveBlob } from '../../Utils/File';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessageMenu.css';\n\nclass MessageMenu extends React.PureComponent {\n    state = {\n        confirmStopPoll: false\n    };\n\n    handleConfirmStopPoll = event => {\n        const { dialog } = this.state;\n        if (dialog) return;\n\n        this.setState({\n            confirmStopPoll: true,\n            contextMenu: false\n        });\n    };\n\n    handleCloseConfirm = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ confirmStopPoll: false });\n    };\n\n    handleStopPoll = event => {\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n        const { confirmStopPoll } = this.state;\n\n        if (confirmStopPoll) {\n            this.setState({ confirmStopPoll: false });\n        }\n\n        stopPoll(chatId, messageId);\n    };\n\n    handleUnvote = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        cancelPollAnswer(chatId, messageId);\n    };\n\n    handleCopyLink = event => {\n        const { onClose, copyLink, t } = this.props;\n\n        onClose(event);\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleCopyPublicMessageLink = async event => {\n        const { onClose, chatId, messageId, t } = this.props;\n\n        onClose(event);\n\n        const httpUrl = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageId,\n            for_album: false\n        });\n\n        if (!httpUrl) return;\n        const { link: copyLink } = httpUrl;\n\n        if (!copyLink) return;\n\n        copy(copyLink);\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => {\n                        closeSnackbar(snackKey);\n                    }}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleReply = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        replyMessage(chatId, messageId);\n    };\n\n    handlePin = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n\n        if (isMessagePinned(chatId, messageId)) {\n            unpinMessage(chatId);\n        } else {\n            pinMessage(chatId, messageId);\n        }\n    };\n\n    handleForward = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        forwardMessages(chatId, [messageId]);\n    };\n\n    handleEdit = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        clearSelection();\n        onClose(event);\n        editMessage(chatId, messageId);\n    };\n\n    handleSelect = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        selectMessage(chatId, messageId, true);\n    };\n\n    handleDelete = event => {\n        const { chatId, messageId, onClose } = this.props;\n\n        onClose(event);\n        deleteMessages(chatId, [messageId]);\n    };\n\n    handleDownload = event => {\n        const { chatId, messageId } = this.props;\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        const { sticker } = content;\n        if (!sticker) return;\n\n        const { sticker: file } = sticker;\n        if (!file) return;\n\n        const blob = FileStore.getBlob(file.id);\n        if (!blob) return;\n\n        saveBlob(blob, 'sticker.tgs');\n    };\n\n    render() {\n        const { t, chatId, messageId, anchorPosition, copyLink, open, onClose } = this.props;\n        const { confirmStopPoll } = this.state;\n        if (!confirmStopPoll && !open) return null;\n\n        const isPinned = isMessagePinned(chatId, messageId);\n        const canBeUnvoted = canMessageBeUnvoted(chatId, messageId);\n        const canBeClosed = canMessageBeClosed(chatId, messageId);\n        const canBeReplied = canSendMessages(chatId);\n        const canBePinned = canPinMessages(chatId);\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        const canBeDeleted = canMessageBeDeleted(chatId, messageId);\n        const canBeEdited = canMessageBeEdited(chatId, messageId) && !AppStore.recording;\n        const canBeSelected = !MessageStore.hasSelectedMessage(chatId, messageId);\n        const canCopyLink = Boolean(copyLink);\n        const canCopyPublicMessageLink = isPublicSupergroup(chatId);\n\n        return (\n            <>\n                <Popover\n                    open={open}\n                    onClose={onClose}\n                    anchorReference='anchorPosition'\n                    anchorPosition={anchorPosition}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'left'\n                    }}\n                    onMouseDown={e => e.stopPropagation()}>\n                    <MenuList onClick={e => e.stopPropagation()}>\n                        {/*<MenuItem onClick={this.handleDownload}>*/}\n                        {/*    <ListItemIcon>*/}\n                        {/*        <CopyIcon />*/}\n                        {/*    </ListItemIcon>*/}\n                        {/*    <ListItemText primary={t('Download')} />*/}\n                        {/*</MenuItem>*/}\n                        {canCopyPublicMessageLink && (\n                            <MenuItem onClick={this.handleCopyPublicMessageLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyMessageLink')} />\n                            </MenuItem>\n                        )}\n                        {canCopyLink && (\n                            <MenuItem onClick={this.handleCopyLink}>\n                                <ListItemIcon>\n                                    <CopyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('CopyLink')} />\n                            </MenuItem>\n                        )}\n                        {canBeReplied && (\n                            <MenuItem onClick={this.handleReply}>\n                                <ListItemIcon>\n                                    <ShareIcon style={{transform: 'scaleX(-1)'}}/>\n                                </ListItemIcon>\n                                <ListItemText primary={t('Reply')} />\n                            </MenuItem>\n                        )}\n                        {canBePinned && (\n                            <MenuItem onClick={this.handlePin}>\n                                {isPinned ? (\n                                    <>\n                                        <ListItemIcon>\n                                            <UnpinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('UnpinFromTop')} />\n                                    </>\n                                ) : (\n                                    <>\n                                        <ListItemIcon>\n                                            <PinIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary={t('PinToTop')} />\n                                    </>\n                                )}\n                            </MenuItem>\n                        )}\n                        {canBeSelected && (\n                            <MenuItem onClick={this.handleSelect}>\n                                <ListItemIcon>\n                                    <FrameCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Select')} />\n                            </MenuItem>\n                        )}\n                        {canBeForwarded && (\n                            <MenuItem onClick={this.handleForward}>\n                                <ListItemIcon>\n                                    <ShareIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Forward')} />\n                            </MenuItem>\n                        )}\n                        {canBeEdited && (\n                            <MenuItem onClick={this.handleEdit}>\n                                <ListItemIcon>\n                                    <EditIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Edit')} />\n                            </MenuItem>\n                        )}\n                        {canBeDeleted && (\n                            <MenuItem color='secondary' onClick={this.handleDelete}>\n                                <ListItemIcon>\n                                    <DeleteIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Delete')} />\n                            </MenuItem>\n                        )}\n                        {canBeUnvoted && (\n                            <MenuItem onClick={this.handleUnvote}>\n                                <ListItemIcon>\n                                    <RemoveCheckIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('Unvote')} />\n                            </MenuItem>\n                        )}\n                        {canBeClosed && (\n                            <MenuItem onClick={this.handleConfirmStopPoll}>\n                                <ListItemIcon>\n                                    <StopIcon />\n                                </ListItemIcon>\n                                <ListItemText primary={t('StopPoll')} />\n                            </MenuItem>\n                        )}\n                    </MenuList>\n                </Popover>\n                <Dialog\n                    transitionDuration={0}\n                    open={confirmStopPoll}\n                    onClose={this.handleCloseConfirm}\n                    aria-labelledby='form-dialog-title'>\n                    <DialogTitle id='form-dialog-title'>{t('StopPollAlertTitle')}</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>{t('StopPollAlertText')}</DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseConfirm} color='primary'>\n                            {t('Cancel')}\n                        </Button>\n                        <Button onClick={this.handleStopPoll} color='primary'>\n                            {t('Stop')}\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n\n}\n\nMessageMenu.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    anchorPosition: PropTypes.object,\n    open: PropTypes.bool.isRequired,\n    onClose: PropTypes.func.isRequired,\n    copyLink: PropTypes.string\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(MessageMenu);","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './EmptyTile.css';\n\nfunction EmptyTile(props) {\n    const { dialog, small, big, style } = props;\n\n    return (\n        <div\n            className={classNames(\n                'chat-tile',\n                { 'tile-dialog': dialog },\n                { 'tile-small': small },\n                { 'tile-big': big }\n            )}\n            style={style}/>\n    );\n}\n\nEmptyTile.propTypes = {};\n\nexport default EmptyTile;","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport './UnreadSeparator.css';\n\nfunction UnreadSeparator(props) {\n    const { t } = props;\n\n    return <div className='unread-separator'>{t('UnreadMessages')}</div>;\n}\n\nexport default withTranslation()(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport Animation from './Animation';\nimport Audio from './Audio';\nimport Document from './Document';\nimport Photo from './Photo';\nimport Sticker, { StickerSourceEnum } from './Sticker';\nimport Video from './Video';\nimport VideoNote from './VideoNote';\nimport VoiceNote from './VoiceNote';\nimport { getSize } from '../../../Utils/Common';\nimport { getSrc } from '../../../Utils/File';\nimport { openInstantView } from '../../../Actions/InstantView';\nimport { getFormattedText, getTwitterInstagramEntities } from '../../../Utils/Message';\nimport {\n    PHOTO_DISPLAY_EXTRA_SMALL_SIZE,\n    PHOTO_DISPLAY_SIZE,\n    PHOTO_DISPLAY_SMALL_SIZE,\n    PHOTO_SIZE\n} from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nclass WebPage extends React.Component {\n    getMedia = () => {\n        const { chatId, messageId, size, displaySize, displaySmallSize, displayExtraSmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return [\n                null,\n                <Sticker\n                    chatId={chatId}\n                    messageId={messageId}\n                    sticker={sticker}\n                    openMedia={openMedia}\n                    source={StickerSourceEnum.MESSAGE}\n                />\n            ];\n        }\n\n        if (voice_note) {\n            return [\n                null,\n                <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (video_note) {\n            return [\n                null,\n                <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n            ];\n        }\n\n        if (audio) {\n            return [null, <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />];\n        }\n\n        if (document) {\n            return [null, <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />];\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return [\n                    null,\n                    <Animation stretch={true} chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                ];\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return [null, <Video stretch={true} chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />];\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo' || type === 'telegram_megagroup' || type === 'telegram_channel') &&\n                (site_name || title || description && description.text.length > 0) &&\n                photoSize &&\n                (photoSize.width === photoSize.height || Math.max(photoSize.width, photoSize.height) < PHOTO_DISPLAY_SIZE );\n            const extraSmallPhoto = smallPhoto && (!description || description.text.length < 50);\n\n            const style =\n                smallPhoto || extraSmallPhoto\n                    ? {\n                          float: 'right',\n                          marginLeft: 6\n                      }\n                    : {};\n\n            return [\n                smallPhoto ? (\n                    <Photo\n                        displaySize={extraSmallPhoto ? displayExtraSmallSize : displaySmallSize}\n                        style={style}\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        openMedia={openMedia}\n                    />\n                ) : null,\n                !smallPhoto ? <Photo stretch={true} chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} /> : null\n            ];\n        }\n\n        return [null, null];\n    };\n\n    handleInstantViewClick = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { url } = web_page;\n\n        openInstantView(url);\n    };\n\n    getWebPage() {\n        const { chatId, messageId, t } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const { instant_view_version, site_name } = web_page;\n        let { description, title } = web_page;\n\n        if (description['@type'] === 'formattedText') {\n            description = getFormattedText(description);\n        } else if (typeof description === 'string' && site_name && (site_name.toLowerCase() === 'twitter' || site_name.toLowerCase() === 'instagram')) {\n            // const { text: t2, entities: e2 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'twitter' ? 1 : 2, title, []);\n            // title = getFormattedText({ '@type': 'formattedText', text: title, entities: e2 });\n\n            const { text: t1, entities: e1 } = getTwitterInstagramEntities(site_name.toLowerCase() === 'instagram' ? 1 : 2, description, []);\n            description = getFormattedText({ '@type': 'formattedText', text: description, entities: e1 });\n        }\n\n        const webPageContent = (\n            <>\n                {site_name && <div className='web-page-site-name'>{site_name}</div>}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n        const [webPageMediaTop, webPageMediaBottom] = this.getMedia();\n        const webPageInstantView = instant_view_version > 0 && (\n            <Button\n                variant='outlined'\n                color='primary'\n                classes={{\n                    outlinedPrimary: 'message-control',\n                    disabled: 'message-control-disabled'\n                }}\n                fullWidth\n                onClick={this.handleInstantViewClick}\n                className='web-page-button'>\n                <SvgIcon>\n                    <path d='M10.5159727,16.7438514 C10.1741929,18.1203636 10.687342,18.4055299 11.6053255,17.4005852 L15.4613785,12.9698209 C16.3535455,11.8808642 16.1300862,11.0059438 14.8452805,10.7872179 L12.9861121,10.4429102 L12.9861121,10.4429102 C12.8775019,10.4227962 12.8057616,10.3184447 12.8258756,10.2098345 C12.8265392,10.2062511 12.8273007,10.2026864 12.8281591,10.1991446 L13.5436135,7.24719783 C13.8863521,5.8619451 13.3150978,5.61107807 12.4582164,6.59275159 C11.2270125,7.98097123 10.2913754,9.02966176 9.65130514,9.73882318 C9.42814828,9.98606827 9.06894462,10.3719875 8.57369417,10.8965808 C7.48829706,12.1010165 8.05955136,12.9745105 9.31498713,13.1932365 L11.0917769,13.5117472 L11.0917769,13.5117472 C11.2005008,13.5312372 11.2728391,13.6351751 11.253349,13.743899 C11.2525988,13.7480841 11.2517153,13.7522442 11.2506999,13.756373 L10.5159727,16.7438514 Z' />\n                </SvgIcon>\n                {t('InstantView')}\n            </Button>\n        );\n\n        return (\n            <>\n                {webPageMediaTop}\n                {webPageContent}\n                {webPageMediaBottom}\n                {webPageInstantView}\n            </>\n        );\n    }\n\n    render() {\n        const { meta } = this.props;\n\n        return (\n            <>\n                <div className='web-page'>\n                    <div className='border' />\n                    <div className='web-page-wrapper'>{this.getWebPage()}</div>\n                </div>\n                {meta}\n            </>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    displayExtraSmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE,\n    displayExtraSmallSize: PHOTO_DISPLAY_EXTRA_SMALL_SIZE\n};\n\nexport default withTranslation()(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport CheckMarkIcon from '@material-ui/icons/Check';\nimport DayMeta from './DayMeta';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageAuthor from './MessageAuthor';\nimport MessageMenu from './MessageMenu';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport EmptyTile from '../Tile/EmptyTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport {\n    getEmojiMatches,\n    getText,\n    getWebPage,\n    openMedia,\n    showMessageForward,\n    isMetaBubble,\n    canMessageBeForwarded,\n    getMessageStyle\n} from '../../Utils/Message';\nimport { getMedia } from '../../Utils/Media';\nimport { canSendMessages, isChannelChat, isPrivateChat } from '../../Utils/Chat';\nimport {\n    openUser,\n    openChat,\n    selectMessage,\n    openReply,\n    replyMessage,\n    forwardMessages\n} from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport './Message.css';\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            emojiMatches: getEmojiMatches(chatId, messageId),\n            selected: false,\n            highlighted: false,\n            shook: false,\n\n            contextMenu: false,\n            copyLink: null,\n            left: 0,\n            top: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, showTail, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, shook, emojiMatches } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('Message.shouldComponentUpdate true chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('Message.shouldComponentUpdate true messageId');\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            // console.log('Message.shouldComponentUpdate true sendingState');\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            // console.log('Message.shouldComponentUpdate true showUnreadSeparator');\n            return true;\n        }\n\n        if (nextProps.showTail !== showTail) {\n            // console.log('Message.shouldComponentUpdate true showTail');\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            // console.log('Message.shouldComponentUpdate true showTitle');\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            // console.log('Message.shouldComponentUpdate true contextMenu');\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            // console.log('Message.shouldComponentUpdate true selected');\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            // console.log('Message.shouldComponentUpdate true highlighted');\n            return true;\n        }\n\n        if (nextState.shook !== shook) {\n            // console.log('Message.shouldComponentUpdate true shook');\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            // console.log('Message.shouldComponentUpdate true emojiMatches');\n            return true;\n        }\n\n        // console.log('Message.shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.off('clientUpdateMessageShake', this.onClientUpdateMessageShake);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageShake = update => {\n        const { chatId, messageId } = this.props;\n        const { shook } = this.state;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (shook) {\n                this.setState({ shook: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ shook: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ shook: true });\n            }\n        }\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            replyMessage(chatId, messageId);\n\n            return;\n        }\n\n        const canBeForwarded = canMessageBeForwarded(chatId, messageId);\n        if (canBeForwarded) {\n            forwardMessages(chatId, [messageId]);\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    handleOpenContextMenu = async event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { contextMenu } = this.state;\n\n        if (contextMenu) {\n            this.setState({ contextMenu: false });\n        } else {\n            if (MessageStore.selectedItems.size > 1) {\n                return;\n            }\n\n            const left = event.clientX;\n            const top = event.clientY;\n            const copyLink =\n                event.target && event.target.tagName === 'A' && event.target.href ? event.target.href : null;\n\n            this.setState({\n                contextMenu: true,\n                copyLink,\n                left,\n                top\n            });\n        }\n    };\n\n    handleCloseContextMenu = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        this.setState({ contextMenu: false });\n    };\n\n    render() {\n        let { showTail } = this.props;\n        const { t, chatId, messageId, showUnreadSeparator, showTitle, showDate } = this.props;\n        const {\n            emojiMatches,\n            selected,\n            highlighted,\n            shook,\n            copyLink,\n            contextMenu,\n            left,\n            top\n        } = this.state;\n\n        // console.log('Message.render', messageId);\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { content, is_outgoing, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const isOutgoing = is_outgoing && !isChannelChat(chatId);\n        const inlineMeta = (\n            <Meta\n                className='meta-hidden'\n                key={`${chatId}_${messageId}_meta`}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n            />\n        );\n        const meta = (\n            <Meta\n                className={classNames('meta-text', {\n                    'meta-bubble': isMetaBubble(chatId, messageId)\n                })}\n                chatId={chatId}\n                messageId={messageId}\n                date={date}\n                editDate={edit_date}\n                views={views}\n                onDateClick={this.handleDateClick}\n            />\n        );\n\n        const webPage = getWebPage(message);\n        const text = getText(message, !!webPage ? null : inlineMeta, t);\n        const hasCaption = text !== null && text.length > 0;\n        const showForward = showMessageForward(chatId, messageId);\n        const showReply = Boolean(reply_to_message_id);\n        const suppressTitle = isPrivateChat(chatId);\n        const hasTitle = (!suppressTitle && showTitle) || showForward || showReply;\n        const media = getMedia(message, this.openMedia, { hasTitle, hasCaption, inlineMeta, meta });\n        const isChannel = isChannelChat(chatId);\n        const isPrivate = isPrivateChat(chatId);\n\n        // if (showTail && isMediaContent() && !hasCaption) {\n        //     showTail = false;\n        // }\n\n        let tile = null;\n        if (showTail) {\n            if (isPrivate) {\n                tile = <EmptyTile small />\n            } else if (isChannel) {\n                tile = <EmptyTile small />\n            } else if (is_outgoing) {\n                tile = <EmptyTile small />\n            } else if (sender_user_id) {\n                tile = <UserTile small userId={sender_user_id} onSelect={this.handleSelectUser} />\n            } else {\n                tile = <ChatTile small chatId={chatId} onSelect={this.handleSelectChat} />\n            }\n        }\n\n        const style = getMessageStyle(chatId, messageId);\n        const withBubble = content['@type'] !== 'messageSticker' && content['@type'] !== 'messageVideoNote';\n\n        // console.log('[p] m.render id=' + message.id);\n\n        // return (\n        //     <StubMessage>\n        //         {text}\n        //         {media}\n        //         <WebPage\n        //             chatId={chatId}\n        //             messageId={messageId}\n        //             openMedia={this.openMedia}\n        //             meta={inlineMeta}\n        //         />\n        //     </StubMessage>\n        // );\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('message', {\n                        'message-short': !tile,\n                        'message-out': isOutgoing,\n                        'message-selected': selected,\n                        'message-highlighted': highlighted && !selected,\n                        'message-group-title': showTitle && !showTail,\n                        'message-group': !showTitle && !showTail,\n                        'message-group-tail': !showTitle && showTail,\n                        'message-bubble-hidden': !withBubble\n                    })}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}\n                    onClick={this.handleSelection}\n                    onAnimationEnd={this.handleAnimationEnd}\n                    onContextMenu={this.handleOpenContextMenu}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='message-body'>\n                        <div className='message-padding'>\n                            <CheckMarkIcon className='message-select-tick' />\n                        </div>\n                        <div className={classNames('message-wrapper', { 'shook': shook })}>\n                            {tile}\n                            <div\n                                className={classNames('message-content', {\n                                    'message-bubble': withBubble,\n                                    'message-bubble-out': withBubble && isOutgoing\n                                })}\n                                style={style}>\n                                {withBubble && ((showTitle && !suppressTitle) || showForward) && (\n                                    <div className='message-title'>\n                                        {showTitle && !showForward && (\n                                            <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                                        )}\n                                        {showForward && <Forward forwardInfo={forward_info} />}\n                                    </div>\n                                )}\n                                {showReply && (\n                                    <Reply\n                                        chatId={chatId}\n                                        messageId={reply_to_message_id}\n                                        onClick={this.handleReplyClick}\n                                    />\n                                )}\n                                {media}\n                                <div\n                                    className={classNames('message-text', {\n                                        'message-text-1emoji': emojiMatches === 1,\n                                        'message-text-2emoji': emojiMatches === 2,\n                                        'message-text-3emoji': emojiMatches === 3\n                                    })}>\n                                    {text}\n                                </div>\n                                {webPage && (\n                                    <WebPage\n                                        chatId={chatId}\n                                        messageId={messageId}\n                                        openMedia={this.openMedia}\n                                        meta={inlineMeta}\n                                    />\n                                )}\n                                {withBubble && meta}\n                            </div>\n                            <div className='message-tile-padding' />\n                        </div>\n                        <div className='message-padding' />\n                    </div>\n                </div>\n                <MessageMenu\n                    chatId={chatId}\n                    messageId={messageId}\n                    anchorPosition={{ top, left }}\n                    open={contextMenu}\n                    onClose={this.handleCloseContextMenu}\n                    copyLink={copyLink}\n                />\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withRestoreRef, withSaveRef, compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport classNames from 'classnames';\nimport DayMeta from './DayMeta';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '0 auto 5px'\n};\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        this.state = {\n            message: MessageStore.get(chatId, messageId),\n            highlighted: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.off('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { chatId, messageId, showUnreadSeparator, showDate } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content, date } = message;\n        if (!content) return null;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        return (\n            <div>\n                {showDate && <DayMeta date={date} />}\n                <div\n                    className={classNames('service-message', { 'message-highlighted': highlighted })}\n                    onAnimationEnd={this.handleAnimationEnd}>\n                    {showUnreadSeparator && <UnreadSeparator />}\n                    <div className='service-message-wrapper'>\n                        <div className='service-message-content'>\n                            <div>{text}</div>\n                        </div>\n                    </div>\n                    {photo && (\n                        <Photo\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            displaySize={64}\n                            style={chatPhotoStyle}\n                            openMedia={this.openMedia}\n                        />\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withRestoreRef()\n);\n\nexport default enhance(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\n// import { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport AppStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady, cacheLoaded } = AppStore;\n        this.state = {\n            chatId,\n            dialogsReady,\n            cacheLoaded\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n\n        if (nextState.dialogsReady !== this.state.dialogsReady) {\n            return true;\n        }\n\n        if (nextState.cacheLoaded !== this.state.cacheLoaded) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.on('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        AppStore.off('clientUpdateCacheLoaded', this.onClientUpdateCacheLoaded);\n    }\n\n    onClientUpdateCacheLoaded = update => {\n        const { cacheLoaded } = AppStore;\n\n        this.setState({ cacheLoaded });\n    };\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = AppStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t, force } = this.props;\n        const { chatId, dialogsReady, cacheLoaded } = this.state;\n        if (chatId) return null;\n        // if (!dialogsReady && !cacheLoaded) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    {/*<BubblesLogo className='placeholder-logo' />*/}\n                    <div className='placeholder-meta'>{t('SelectChatToStartMessaging')}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { onClick } = this.props;\n\n        return (\n            <div className='scroll-down-button'>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default ScrollDownButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.off('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ sticker, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateStickerPreview',\n                    sticker\n                });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker, timestamp: 0, showPreview: false });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    getSticker(stickerId) {\n        const { items } = this.state;\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? items[stickerIndex] : null;\n    }\n\n    render() {\n        const { hint, items, sticker, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={false}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.HINTS}\n                />\n            </div>\n        ));\n\n        return (\n            <div ref={this.hintsRef} className='stickers-hint scrollbars-hidden'>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default StickersHint;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport ActionBar from './ActionBar';\nimport FilesDropTarget from './FilesDropTarget';\nimport StubMessage from '../Message/StubMessage';\nimport Message from '../Message/Message';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView, historyEquals } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { canMessageBeEdited, filterDuplicateMessages, filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendMediaMessages, getChatFullInfo, getChatMedia, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { editMessage, highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S, SCROLL_PRECISION } from '../../Constants';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION',\n    NONE: 'NONE'\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n        this.scrollDownButtonRef = React.createRef();\n\n        this.defferedActions = [];\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                separatorMessageId: props.chatId !== state.prevChatId ? 0 : state.separatorMessageId,\n                scrollDownVisible:\n                    props.chatId === state.prevChatId && (state.scrollDownVisible || state.replyHistory.length > 0),\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const list = this.listRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n\n        const snapshot = {\n            scrollTop,\n            scrollHeight,\n            offsetHeight\n        };\n\n        this.snapshot = snapshot;\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n        const { scrollDownVisible } = this.state;\n\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] componentDidUpdate\n        //     scrollBehaviorNone=${this.scrollBehaviorNone}\n        //     scrollDownVisible=${scrollDownVisible}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.scrollHeight=${list.scrollHeight}\n        //     list.offsetHeight=${list.offsetHeight}`\n        // );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            if (!this.scrollBehaviorNone) {\n                this.handleScrollBehavior(ScrollBehaviorEnum.KEEP_SCROLL_POSITION, snapshot);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            // console.log('[ml] shouldComponentUpdate theme');\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            // console.log('[ml] shouldComponentUpdate chatId');\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            // console.log('[ml] shouldComponentUpdate messageId');\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            // console.log('[ml] shouldComponentUpdate scrollDownVisible');\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            // console.log('[ml] shouldComponentUpdate playerOpened');\n            return true;\n        }\n\n        if (!historyEquals(nextState.history, history)) {\n            // console.trace('[ml] shouldComponentUpdate history', nextState.history, history);\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            // console.log('[ml] shouldComponentUpdate dragging');\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            // console.log('[ml] shouldComponentUpdate clearHistory');\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            // console.log('[ml] shouldComponentUpdate selectionActive');\n            return true;\n        }\n\n        // console.log('[ml] shouldComponentUpdate false');\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.on('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateFocusWindow', this.onClientUpdateFocusWindow);\n        AppStore.off('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n        ChatStore.off('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n        ChatStore.off('updateChatLastMessage', this.onUpdateChatLastMessage);\n        MessageStore.off('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.off('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        MessageStore.off('clientUpdateTryEditMessage', this.onClientUpdateTryEditMessage);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.off('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        PlayerStore.off('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.off('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.off('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onKeyDown = event => {\n        // if (event.keyCode === 27) {\n        //     if (MessageStore.selectedItems.size > 0) {\n        //         console.log('[k] messagesList onKeyDown');\n        //         clearSelection();\n        //         event.stopPropagation();\n        //         event.preventDefault();\n        //     }\n        // }\n    };\n\n    onClientUpdateTryEditMessage = async update => {\n        if (this.completed) {\n            const { history } = this.state;\n\n            for (let i = history.length - 1; i >= 0; i--) {\n                const message = history[i];\n                if (canMessageBeEdited(message.chat_id, message.id)) {\n                    editMessage(message.chat_id, message.id);\n\n                    return;\n                }\n            }\n        }\n\n        const result = await TdLibController.send({\n            '@type': 'searchChatMessages',\n            chat_id: this.props.chatId,\n            query: '',\n            sender_user_id: UserStore.getMyId(),\n            from_message_id: 0,\n            offset: 0,\n            limit: 100,\n            filter: { '@type': 'searchMessagesFilterEmpty' }\n        });\n\n        for (let i = 0; i < result.messages.length; i++) {\n            const message = result.messages[i];\n            if (canMessageBeEdited(message.chat_id, message.id)) {\n                editMessage(message.chat_id, message.id);\n\n                return;\n            }\n        }\n    };\n\n    onClientUpdateDialogsReady = async update => {\n        const { list } = update;\n        if (!list) return;\n        if (list['@type'] !== 'chatListMain') return;\n\n        const { history } = this.state;\n        if (history && history.length > 0) return;\n\n        await FileStore.initDB(async () => {\n            const { chatId, messageId } = this.props;\n            if (chatId) {\n                const chat = ChatStore.get(chatId);\n                if (chat) {\n                    const { type } = chat;\n                    switch (type['@type']) {\n                        case 'chatTypePrivate':\n                        case 'chatTypeSecret': {\n                            await TdLibController.send({\n                                '@type': 'createPrivateChat',\n                                user_id: type.user_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeBasicGroup': {\n                            await TdLibController.send({\n                                '@type': 'createBasicGroupChat',\n                                basic_group_id: type.basic_group_id,\n                                force: false\n                            });\n                            break;\n                        }\n                        case 'chatTypeSupergroup': {\n                            await TdLibController.send({\n                                '@type': 'createSupergroupChat',\n                                supergroup_id: type.supergroup_id,\n                                force: false\n                            });\n                            break;\n                        }\n                    }\n                    this.handleSelectChat(chatId, 0, messageId, 0);\n                }\n            }\n        });\n    };\n\n    onClientUpdateFocusWindow = update => {\n        const { focused } = update;\n        if (focused) {\n            this.defferedActions.forEach(x => x());\n            this.defferedActions = [];\n        }\n    };\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        if (!this.completed) return;\n\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        // let handleSendSucceeded = false;\n        // const { content } = message;\n        // switch (content['@type']) {\n        //     case 'messagePoll': {\n        //         handleSendSucceeded = true;\n        //         break;\n        //     }\n        // }\n        //\n        // if (!handleSendSucceeded) return;\n\n        const scrollBehavior = message.is_outgoing\n            ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM\n            : ScrollBehaviorEnum.KEEP_SCROLL_POSITION;\n\n        this.replaceMessage(old_message_id, message, () => {\n            if (scrollBehavior !== ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n            }\n\n            this.updateItemsInView();\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        this.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        const { date } = message;\n        if (date === 0) return;\n\n        const list = this.listRef.current;\n\n        let scrollBehavior = message.is_outgoing ? ScrollBehaviorEnum.SCROLL_TO_BOTTOM : ScrollBehaviorEnum.NONE;\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const newState = message.is_outgoing ? { scrollDownVisible: false } : {};\n\n        const history = [message];\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(history), newState, () => {\n            this.scrollBehaviorNone = false;\n            this.handleScrollBehavior(scrollBehavior, this.snapshot);\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        this.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        const { chat_id, is_permanent, message_ids } = update;\n        if (chatId !== chat_id) return;\n\n        if (!is_permanent) return;\n\n        this.deleteHistory(message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper;\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        //console.log('MessagesList.newSessionId handleSelectChat');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.lastCompleted = false;\n        this.loadMigratedHistory = false;\n        this.defferedActions = [];\n\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            this.loading = true;\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            }).finally(() => {\n                this.loading = false;\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            let separatorMessageId = this.state.separatorMessageId;\n            if (chatId !== previousChatId) {\n                separatorMessageId = Number.MAX_VALUE;\n                if (chat && chat.unread_count > 1) {\n                    for (let i = result.messages.length - 1; i >= 0; i--) {\n                        const { id } = result.messages[i];\n                        if (\n                            !result.messages[i].is_outgoing &&\n                            id > chat.last_read_inbox_message_id &&\n                            id < separatorMessageId\n                        ) {\n                            separatorMessageId = id;\n                        } else {\n                            break;\n                        }\n                    }\n                }\n                separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            }\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, () => {\n                this.handleScrollBehavior(scrollBehavior, this.snapshot);\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            this.viewMessages(result.messages);\n\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            this.loadIncompleteHistory(result);\n\n            if (previousChatId !== chatId) {\n                getChatFullInfo(chatId);\n                getChatMedia(chatId);\n            }\n        } else {\n            this.loading = true;\n            this.replace(0, [], () => {\n                this.loading = false;\n            });\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        const viewAction = () => {\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: messages[0].chat_id,\n                message_ids: messages.map(x => x.id)\n            });\n        };\n\n        if (window.hasFocus) {\n            viewAction();\n        } else {\n            this.defferedActions.push(viewAction);\n        }\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        const fromMessageId = history && history.length > 0 ? history[0].id : 0;\n\n        // if (this.lastCompleted) return;\n\n        console.log('[p] getChatHistory', [fromMessageId]);\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n        console.log('[p] getChatHistory result', fromMessageId, result);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n                // this.lastCompleted = true;\n            }\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        const fromMessageId = history.length > 0 && history[0].chat_id === basicGroupChat.id ? history[0].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertNext(filterMessages(result.messages));\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        // console.log('[p] onLoadPrevious', [this.loading, this.completed]);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        const fromMessageId = history && history.length > 0 ? history[history.length - 1].id : 0;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterDuplicateMessages(result, this.state.history);\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.scrollBehaviorNone = true;\n        this.insertPrevious(filterMessages(result.messages), {}, () => {\n            this.scrollBehaviorNone = false;\n        });\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, callback) {\n        this.setState({ separatorMessageId, history }, callback);\n    }\n\n    replaceMessage(oldMessageId, message, callback) {\n        if (!message) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message])\n            },\n            callback\n        );\n    }\n\n    insertNext(history, callback) {\n        if (history.length === 0) {\n            callback && callback();\n            return;\n        }\n\n        this.setState({ history: history.concat(this.state.history) }, callback);\n    }\n\n    insertPrevious(history, newState, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        const map = new Map(message_ids.map(x => [x, x]));\n        this.setState({ history: history.filter(x => !map.has(x.id)) }, callback);\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] handleScroll\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        this.updateItemsInView();\n\n        if (list.scrollTop <= SCROLL_PRECISION) {\n            this.onLoadNext();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            this.onLoadPrevious();\n        }\n\n        if (list.scrollTop + list.offsetHeight >= list.scrollHeight - SCROLL_PRECISION) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    this.setState({\n                        scrollDownVisible: false,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    this.setState({\n                        scrollDownVisible: false\n                    });\n                }\n            }\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = (scrollBehavior, snapshot) => {\n        const { chatId, messageId } = this.props;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot || {\n            scrollTop: 0,\n            scrollHeight: 0,\n            offsetHeight: 0\n        };\n\n        // console.log(\n        //     `[ml] handleScrollBehavior\n        //     scrollBehavior=${scrollBehavior}\n        //     snapshot.scrollTop=${scrollTop}\n        //     snapshot.offsetHeight=${offsetHeight}\n        //     snapshot.scrollHeight=${scrollHeight}`\n        // );\n\n        switch (scrollBehavior) {\n            case ScrollBehaviorEnum.SCROLL_TO_BOTTOM: {\n                this.scrollToBottom();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_MESSAGE: {\n                this.scrollToMessage();\n                break;\n            }\n            case ScrollBehaviorEnum.SCROLL_TO_UNREAD: {\n                this.scrollToUnread();\n                break;\n            }\n            case ScrollBehaviorEnum.KEEP_SCROLL_POSITION: {\n                this.keepScrollPosition(snapshot);\n                break;\n            }\n            case ScrollBehaviorEnum.NONE: {\n                break;\n            }\n        }\n    };\n\n    keepScrollPosition = snapshot => {\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `[ml] keepScrollPosition before\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n\n        // console.log(\n        //     `[ml] keepScrollPosition after\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n    };\n\n    scrollToUnread = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        const chat = ChatStore.get(chatId);\n        const pinnedMessageMargin = 0; //chat && chat.pinned_message_id ? 55 : 0;\n\n        // console.log(\n        //     `MessagesList.scrollToUnread before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                if (itemComponent.props.showUnreadSeparator) {\n                    list.scrollTop = item.offsetTop - pinnedMessageMargin; // + unread messages margin-top\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToUnread after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToMessage before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`,\n        //     this.itemsMap\n        // );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            const itemComponent = this.itemsMap.get(i);\n            const node = ReactDOM.findDOMNode(itemComponent);\n            if (node) {\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = node.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        // console.log(\n        //     `MessagesList.scrollToMessage after\n        //     chatId=${chatId} messageId=${messageId} scrolled=${scrolled}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        // if (!scrolled) {\n        //     this.scrollToBottom();\n        // }\n    };\n\n    scrollToBottom = () => {\n        const { chatId, messageId } = this.props;\n        const list = this.listRef.current;\n\n        // console.log(\n        //     `MessagesList.scrollToBottom before\n        //     chatId=${chatId} messageId=${messageId}\n        //     list.scrollTop=${list.scrollTop}\n        //     list.offsetHeight=${list.offsetHeight}\n        //     list.scrollHeight=${list.scrollHeight}`\n        // );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n\n            // console.log(\n            //     `MessagesList.scrollToBottom after\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        } else {\n            // console.log(\n            //     `MessagesList.scrollToBottom after (no changes)\n            // chatId=${chatId} messageId=${messageId}\n            // list.scrollTop=${list.scrollTop}\n            // list.offsetHeight=${list.offsetHeight}\n            // list.scrollHeight=${list.scrollHeight}`\n            // );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        // console.log('MessagesList.newSessionId scrollToStart');\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        this.loading = true;\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        this.replace(this.state.separatorMessageId, result.messages, () => {\n            this.handleScrollBehavior(ScrollBehaviorEnum.SCROLL_TO_BOTTOM, this.snapshot);\n        });\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        this.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendMediaMessages(chatId)) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDragging',\n            dragging: true,\n            files: event.dataTransfer.files\n        });\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    showMessageTitle(message, prevMessage, isFirst) {\n        if (!message) return false;\n\n        const { chat_id, date, is_outgoing, sender_user_id, content } = message;\n\n        if (isFirst) {\n            return true;\n        }\n\n        if (isChannelChat(chat_id)) {\n            return true;\n        }\n\n        return (\n            prevMessage &&\n            (isServiceMessage(prevMessage) ||\n                prevMessage.content['@type'] === 'messageSticker' ||\n                prevMessage.content['@type'] === 'messageVideoNote' ||\n                sender_user_id !== prevMessage.sender_user_id ||\n                is_outgoing !== prevMessage.is_outgoing ||\n                date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S)\n        );\n    }\n\n    showMessageDate(message, prevMessage, isFirst) {\n        if (isFirst) {\n            return true;\n        }\n\n        const date = new Date(message.date * 1000);\n        const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n\n        if (\n            date.getFullYear() !== prevDate.getFullYear() ||\n            date.getMonth() !== prevDate.getMonth() ||\n            date.getDate() !== prevDate.getDate()\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    render() {\n        const { chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('[ml] render ', history);\n\n        // const isChannel = isChannelChat(chatId);\n\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                /// message id=5 prev\n                /// message id=6 current\n                /// message id=7 next\n                /// ...\n                /// message id=10\n\n                const prevMessage = i > 0 ? history[i - 1] : null;\n                const nextMessage = i < history.length - 1 ? history[i + 1] : null;\n\n                const showDate = this.showMessageDate(x, prevMessage, i === 0);\n\n                let m = null;\n                if (isServiceMessage(x)) {\n                    m = (\n                        <ServiceMessage\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                        />\n                    );\n                } else {\n                    const showTitle = this.showMessageTitle(x, prevMessage, i === 0);\n                    const nextShowTitle = this.showMessageTitle(nextMessage, x, false);\n\n                    const showTail = !nextMessage\n                        || isServiceMessage(nextMessage)\n                        || nextMessage.content['@type'] === 'messageSticker'\n                        || nextMessage.content['@type'] === 'messageVideoNote'\n                        || x.sender_user_id !== nextMessage.sender_user_id\n                        || x.is_outgoing !== nextMessage.is_outgoing\n                        || nextShowTitle;\n\n                    m = (\n                        // <StubMessage\n                        //     key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                        //     ref={el => this.itemsMap.set(i, el)}\n                        //     chatId={x.chat_id}\n                        //     messageId={x.id}\n                        //     sendingState={x.sending_state}\n                        //     showTitle={showTitle}\n                        //     showTail={showTail}\n                        //     showUnreadSeparator={separatorMessageId === x.id}\n                        //     showDate={showDate}\n                        // />\n\n                        <Message\n                            key={`chat_id=${x.chat_id} message_id=${x.id} show_date=${showDate}`}\n                            ref={el => this.itemsMap.set(i, el)}\n                            chatId={x.chat_id}\n                            messageId={x.id}\n                            sendingState={x.sending_state}\n                            showTitle={showTitle}\n                            showTail={showTail}\n                            showUnreadSeparator={separatorMessageId === x.id}\n                            showDate={showDate}\n                        />\n                    );\n                }\n\n                return m;\n\n\n              });\n        // console.log('[p] messagesList.render');\n\n        return (\n            <div\n                className={classNames('messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <ActionBar chatId={chatId} />\n                <Placeholder />\n                {scrollDownVisible && (\n                    <ScrollDownButton ref={this.scrollDownButtonRef} onClick={this.handleScrollDownClick} />\n                )}\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default MessagesList;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { copy } from '../../Utils/Text';\nimport { compose } from '../../Utils/HOC';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '../../Assets/Icons/More';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { forward } from '../../Actions/Client';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        this.handleScheduledAction(t('LinkCopied'));\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = message => {\n        const { enqueueSnackbar, closeSnackbar } = this.props;\n\n        const snackKey = enqueueSnackbar(message, {\n            autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n            preventDuplicate: true,\n            action: [\n                <IconButton\n                    key='close'\n                    aria-label='Close'\n                    color='inherit'\n                    className='notification-close-button'\n                    onClick={() => closeSnackbar(snackKey)}>\n                    <CloseIcon />\n                </IconButton>\n            ]\n        });\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        const inputMessageContent = {\n            '@type': 'inputMessageText',\n            text: {\n                '@type': 'formattedText',\n                text: link,\n                entities: null\n            },\n            disable_web_page_preview: false,\n            clear_draft: false\n        };\n\n        forward(inputMessageContent);\n    };\n\n    render() {\n        const { t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker, { StickerSourceEnum } from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0,\n            scroll: false,\n            scrollTop: false,\n            scrollBottom: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n\n        if (stickerSet !== nextState.stickerSet) {\n            return true;\n        }\n\n        if (sticker !== nextState.sticker) {\n            return true;\n        }\n\n        if (scroll !== nextState.scroll) {\n            return true;\n        }\n\n        if (scrollTop !== nextState.scrollTop) {\n            return true;\n        }\n\n        if (scrollBottom !== nextState.scrollBottom) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.off('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.off('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet }, () => {\n            setTimeout(() => {\n                this.handleScroll();\n            }, 0);\n        });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 5;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    // handleMouseOver = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     if (!this.mouseDown) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    // };\n\n    // handleMouseDown = event => {\n    //     const stickerId = Number(event.target.dataset.stickerId);\n    //     if (!stickerId) return;\n    //\n    //     this.setState({ stickerId });\n    //     this.loadPreviewContent(stickerId);\n    //\n    //     this.mouseDown = true;\n    //     document.addEventListener('mouseup', this.handleMouseUp);\n    //\n    //     event.preventDefault();\n    //     event.stopPropagation();\n    //     return false;\n    // };\n\n    getSticker(stickerId) {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return null;\n\n        const { stickers } = stickerSet;\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        return stickerIndex !== -1 ? stickers[stickerIndex] : null;\n    }\n\n    handleMouseUp = () => {\n        const sticker = null;\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    handleMouseEnter = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.currentTarget.dataset.stickerId);\n        const sticker = this.getSticker(stickerId);\n        if (!sticker) return;\n\n        this.setState({ sticker });\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerPreview',\n            sticker\n        });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleScroll = () => {\n        const content = this.contentRef.current;\n        if (!content) {\n            return;\n        }\n\n        const hasScroll = content.scrollHeight > content.offsetHeight;\n        const scrollTop = hasScroll && content.scrollTop === 0;\n        const scrollBottom = hasScroll && (content.scrollTop + content.offsetHeight) === content.scrollHeight;\n        const scroll = hasScroll && content.scrollTop > 0 && (content.scrollTop + content.offsetHeight) < content.scrollHeight;\n\n        this.setState({\n            scrollTop,\n            scrollBottom,\n            scroll\n        });\n    }\n\n    handleInViewport = (fileId, elementRect) => {\n        const { current } = this.contentRef;\n        if (!current) return false;\n\n        const contentRect = current.getBoundingClientRect();\n        const top = elementRect.top - contentRect.top;\n        const bottom = elementRect.bottom - contentRect.bottom;\n        // below bottom edge\n        if (top > contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n        // upper top edge\n        if (bottom < - contentRect.height) {\n            // console.log('[rlottie] handleInViewport', [fileId, false]);\n            return false;\n        }\n\n        // console.log('[rlottie] handleInViewport', [fileId, true]);\n        return true;\n    };\n\n    render() {\n        const { t } = this.props;\n        const { stickerSet, sticker, scroll, scrollTop, scrollBottom } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                onMouseEnter={this.handleMouseEnter}\n                onMouseDown={this.handleMouseDown}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    sticker={x}\n                    autoplay={true}\n                    blur={false}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    preview\n                    source={StickerSourceEnum.STICKER_SET}\n                    inViewportFunc={this.handleInViewport}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        return (\n            <Dialog\n                className={classNames(\n                    'sticker-set-dialog',\n                    { 'sticker-set-dialog-scroll': scroll },\n                    { 'sticker-set-dialog-scroll-top': scrollTop },\n                    { 'sticker-set-dialog-scroll-bottom': scrollBottom },\n                )}\n                open\n                manager={modalManager}\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: 'sticker-set-dialog-paper' }}>\n                <DialogTitle\n                    className={classNames('sticker-set-dialog-title', { 'sticker-set-dialog-disabled': Boolean(sticker) })}\n                    disableTypography>\n                    <IconButton\n                        aria-label='Close'\n                        onClick={this.handleClose}>\n                        <CloseIcon />\n                    </IconButton>\n                    <Typography variant='h6' id='sticker-set-dialog-title-text' className='sticker-set-dialog-title-typography' noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton />\n                </DialogTitle>\n                <DialogContent\n                    ref={this.contentRef}\n                    classes={{ root: classNames('sticker-set-dialog-content-root', 'scrollbars-hidden') }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onScroll={this.handleScroll}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames('sticker-set-dialog-actions', { 'sticker-set-dialog-disabled': Boolean(sticker) })}>\n                    <Button className='sticker-set-dialog-action-button' disableElevation variant='contained' color={is_installed ? 'secondary' : 'primary'} onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('AddStickers')}\n                    </Button>\n                </DialogActions>\n                {<StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nexport default withTranslation()(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport { getSrc } from '../../Utils/File';\nimport AppStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: AppStore.getChatId(),\n            messageId: AppStore.getMessageId(),\n            selectedCount: 0,\n            wallpaper: null,\n            wallpaperSrc: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, selectedCount, wallpaper } = this.state;\n        if (nextState.chatId !== chatId) {\n            return true;\n        }\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== selectedCount) {\n            return true;\n        }\n        if (nextState.wallpaper !== wallpaper) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.on('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    componentWillUnmount() {\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateChatId', this.onClientUpdateChatId);\n        ChatStore.off('clientUpdateChatBackground', this.onClientUpdateChatBackground);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.off('clientUpdateDocumentThumbnailBlob', this.onClientUpdateDocumentThumbnailBlob);\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { document: file } = document;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        if (this.thumbnailTime) {\n            if (this.thumbnailTime.wallpaper === wallpaper) {\n                const diff = new Date() - this.thumbnailTime.time;\n                if (diff < 250) {\n                    setTimeout(() => {\n                        this.forceUpdate();\n                    }, 250);\n                    return;\n                }\n            }\n        }\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateDocumentThumbnailBlob = update => {\n        const { wallpaper } = this.state;\n        if (!wallpaper) return;\n\n        const { document } = wallpaper;\n        if (!document) return;\n\n        const { thumbnail } = document;\n        if (!thumbnail) return;\n\n        const { file } = thumbnail;\n        if (!file) return;\n\n        const { fileId } = update;\n\n        if (file.id !== fileId) {\n            return;\n        }\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatBackground = update => {\n        const { wallpaper } = update;\n\n        this.thumbnailTime = {\n            wallpaper,\n            time: new Date()\n        };\n        this.setState({\n            wallpaper\n        });\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, wallpaper } = this.state;\n\n        let style = null;\n        let src = null;\n        if (wallpaper) {\n            const { document } = wallpaper;\n            if (document) {\n                const { thumbnail, document: file } = document;\n                if (file) {\n                    src = getSrc(file);\n                }\n\n                if (!src && thumbnail) {\n                    src = getSrc(thumbnail.file);\n                }\n            }\n\n            style = {\n                backgroundImage: src ? `url(${src})` : null\n            }\n        }\n\n        // console.log('[p] dialogDetails.render');\n\n        return (\n            <div className='dialog-details' style={style}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList ref={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n                {/*<Footer />*/}\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from '../../Utils/HOC';\nimport { withSaveRef } from '../../Utils/HOC';\nimport { withIV } from './IVContext';\nimport { getPageBlock } from '../../Utils/InstantView';\nimport './Article.css';\n\nconst articleRefs = new Map();\n\nclass Article extends React.PureComponent {\n    render() {\n        const { forwardedRef, iv } = this.props;\n        if (!iv) return null;\n\n        const { page_blocks, is_rtl } = iv;\n        if (!page_blocks) return;\n\n        articleRefs.clear();\n        const blocks = page_blocks.map((x, index) => getPageBlock(x, iv, index, ref => { articleRefs.set(x, ref) }));\n\n        return (\n            <article ref={forwardedRef} dir={is_rtl ? 'rtl' : 'ltr'}>\n                {blocks}\n            </article>\n        );\n    }\n}\n\nArticle.propTypes = {\n    chatId: PropTypes.number,\n    messageId: PropTypes.number\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withIV\n);\n\nexport { articleRefs };\n\nexport default enhance(Article);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport React from 'react';\nimport createSvgIcon from '@material-ui/core/esm/utils/createSvgIcon';\n\nexport default createSvgIcon(\n    <path d='M9.91421356,11.5 L16.2071068,5.20710678 C16.5976311,4.81658249 16.5976311,4.18341751 16.2071068,3.79289322 C15.8165825,3.40236893 15.1834175,3.40236893 14.7928932,3.79289322 L7.79289322,10.7928932 C7.40236893,11.1834175 7.40236893,11.8165825 7.79289322,12.2071068 L14.7928932,19.2071068 C15.1834175,19.5976311 15.8165825,19.5976311 16.2071068,19.2071068 C16.5976311,18.8165825 16.5976311,18.1834175 16.2071068,17.7928932 L9.91421356,11.5 Z' />,\n    'Left'\n);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            top: false,\n            bottom: false\n        };\n\n        this.scrollRef = React.createRef();\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        if (nextProps.text !== text) return true;\n        if (nextState.top !== top) return true;\n        if (nextState.bottom !== bottom) return true;\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.handleScroll();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { text } = this.props;\n\n        if (prevProps.text !== text) {\n            this.handleScroll();\n        }\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    handleScroll = () => {\n        const scroll = this.scrollRef.current;\n        if (!scroll) return;\n\n        const top = scroll.scrollTop === 0 && scroll.scrollHeight > scroll.offsetHeight;\n        const bottom = scroll.scrollTop + scroll.offsetHeight === scroll.scrollHeight && scroll.scrollHeight > scroll.offsetHeight;\n\n        this.setState({\n            top,\n            bottom\n        })\n    };\n\n    render() {\n        const { text } = this.props;\n        const { top, bottom } = this.state;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div\n                    ref={this.scrollRef}\n                    className={classNames(\n                        'scrollbars-hidden',\n                        'media-caption-wrapper', {\n                            'media-caption-wrapper-top': top,\n                            'media-caption-wrapper-bottom': bottom,\n                            'media-caption-wrapper-both': !top && !bottom\n                        })}\n                    onScroll={this.handleScroll}>\n                    <div className='media-caption-text'>{text}</div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Caption from '../InstantView/Blocks/Caption';\nimport SafeLink from '../Additional/SafeLink';\nimport Player from '../Player/Player';\nimport { getSrc, getViewerFile, getViewerMinithumbnail, getViewerThumbnail } from '../../Utils/File';\nimport { getThumb } from '../../Utils/Media';\nimport { isEmptyText } from '../../Utils/InstantView';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nclass InstantViewMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        this.state = {};\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { media, size, caption, url } = props;\n\n        if (media !== state.prevMedia) {\n            const thumbnail = getViewerThumbnail(media);\n            const minithumbnail = getViewerMinithumbnail(media);\n\n            let [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                const { video } = media;\n                if (video) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${video.mime_type}`;\n                }\n            }\n\n            return {\n                prevMedia: media,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                thumbnail,\n                minithumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateInstantViewViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = update;\n        const { media, size } = this.props;\n        const { file } = this.state;\n\n        if (file && file.id === fileId) {\n            const [width, height, file, mimeType, supportsStreaming] = getViewerFile(media, size);\n\n            this.setState({\n                width,\n                height,\n                file,\n                src: getSrc(file),\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { fileId } = update;\n        const { thumbnail } = this.state;\n\n        if (thumbnail && thumbnail.file.id === fileId) {\n            this.forceUpdate();\n        }\n    };\n\n    render() {\n        const { media, caption, url } = this.props;\n        if (!media) return null;\n\n        const {\n            width,\n            height,\n            file,\n            src,\n            mimeType,\n            thumbnail,\n            minithumbnail,\n            isPlaying,\n            supportsStreaming\n        } = this.state;\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        switch (media['@type']) {\n            case 'video': {\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <Player\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            fileId={file.id}\n                            width={videoWidth}\n                            height={videoHeight}\n                            poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </Player>\n                        {!isPlaying && !supportsStreaming && thumb}\n                    </div>\n                );\n                break;\n            }\n            case 'animation': {\n                // content = (\n                //     <Animation\n                //         type='preview'\n                //         stretch={true}\n                //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n                //         animation={media}\n                //         onClick={this.handleContentClick}\n                //         showProgress={false}\n                //         style={{ borderRadius: 0 }}\n                //     />\n                // );\n\n                content = (\n                    <div className='media-viewer-content-wrapper'>\n                        <video\n                            ref={this.videoRef}\n                            className='media-viewer-content-video-player'\n                            onClick={this.handleContentClick}\n                            loop\n                            autoPlay\n                            width={videoWidth}\n                            height={videoHeight}\n                            onPlay={() => {\n                                this.setState({ isPlaying: true });\n                            }}\n                        >\n                            {source}\n                        </video>\n                        {!isPlaying && thumb}\n                    </div>\n                );\n                break;\n            }\n            default: {\n                content = (\n                    <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                );\n            }\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {caption && (!isEmptyText(caption.text) || !isEmptyText(caption.credit) || url) && (\n                    <MediaCaption\n                        text={\n                            <>\n                                <Caption text={caption.text} credit={caption.credit} />\n                                <SafeLink url={url} />\n                            </>\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewerContent.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object,\n    url: PropTypes.string\n};\n\nexport default InstantViewMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children, className, style } = this.props;\n\n        const cx = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow },\n            className\n        );\n\n        return (\n            <div className={cx} style={style} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle, style } = this.props;\n\n        return (\n            <div className='media-viewer-footer-text' style={style}>\n                <div className='media-viewer-footer-text-wrapper'>\n                    <span>{title}</span>\n                    {Boolean(subtitle) && (\n                        <span>\n                            &nbsp;\n                            {subtitle}\n                        </span>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames('media-viewer-footer-button', {\n                    'media-viewer-footer-button-checked': checked,\n                    'media-viewer-footer-button-disabled': disabled\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerFooterButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '../../Assets/Icons/Download';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nclass MediaViewerDownloadButton extends React.Component {\n    state = {  };\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.fileId !== this.props.chatId) {\n            this.checkFileLoaded();\n        }\n    }\n\n    checkFileLoaded() {\n        // console.log('[down] checkLoaded');\n        const { fileId } = this.props;\n        const blob = FileStore.getBlob(fileId);\n        if (blob) {\n            // console.log('[down] checkLoaded blob');\n            return;\n        }\n\n        const file = FileStore.get(fileId);\n        if (!file) {\n            // console.log('[down] checkLoaded file');\n            return;\n        }\n\n        const { local } = file;\n        if (!local) return;\n        if (!local.is_downloading_completed) return;\n\n        // console.log('[down] checkLoaded getLocal');\n        const store = FileStore.getStore();\n        FileStore.getLocalFile(store, file, null, () => {\n            // console.log('[down] checkLoaded getLocal complete');\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        });\n    }\n\n    componentDidMount() {\n        this.checkFileLoaded();\n\n        FileStore.on('updateFile', this.onUpdateFile);\n\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('updateFile', this.onUpdateFile);\n\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onUpdateFile = update => {\n        const { fileId } = this.props;\n        const { file } = update;\n\n        if (file.id !== fileId) return;\n\n        if (file.local.is_downloading_completed) {\n            this.checkFileLoaded();\n        }\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title, children, disabled: propsDisabled } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled || propsDisabled} title={title} onClick={this.handleClick}>\n                {children || <SaveIcon />}\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string,\n    disabled: PropTypes.bool\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from '../../Utils/HOC';\nimport { withIV } from '../InstantView/IVContext';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport InstantViewMediaViewerContent from './InstantViewMediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { getBlockCaption, getBlockMedia, getBlockUrl, getValidBlocks, isValidMediaBlock } from '../../Utils/InstantView';\nimport { cancelPreloadIVMediaViewerContent, getViewerFile, preloadIVMediaViewerContent, saveMedia } from '../../Utils/File';\nimport { getInputMediaContent } from '../../Utils/Media';\nimport { forward, setInstantViewViewerContent } from '../../Actions/Client';\nimport { modalManager } from '../../Utils/Modal';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewMediaViewer.css';\n\nclass InstantViewMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            index: -1,\n            hasPreviousMedia: false,\n            hasNextMedia: false,\n            blocks: []\n        };\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const { index, blocks } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        if (!media) return;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n\n        const isVideo = media['@type'] === 'video';\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    loadContent() {\n        const { iv, media } = this.props;\n\n        const blocks = getValidBlocks(iv, isValidMediaBlock);\n        const index = blocks.findIndex(x => getBlockMedia(x) === media);\n\n        this.setState({\n            blocks,\n            index,\n            hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n            hasNextMedia: this.hasNextMedia(index, blocks)\n        });\n\n        preloadIVMediaViewerContent(index, blocks);\n    }\n\n    hasPreviousMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < blocks.length;\n    }\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index + 1;\n\n        if (!this.hasPreviousMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    hasNextMedia(index, blocks) {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    }\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { index, blocks } = this.state;\n        const nextIndex = index - 1;\n\n        if (!this.hasNextMedia(index, blocks)) return;\n\n        return this.loadMedia(nextIndex);\n    };\n\n    loadMedia = index => {\n        const { blocks } = this.state;\n\n        if (index < 0) return false;\n        if (index >= blocks.length) return false;\n\n        this.setState(\n            {\n                index,\n                hasPreviousMedia: this.hasPreviousMedia(index, blocks),\n                hasNextMedia: this.hasNextMedia(index, blocks)\n            }\n        );\n\n        preloadIVMediaViewerContent(index, blocks);\n        return true;\n    };\n\n    handleClose = () => {\n        setInstantViewViewerContent(null);\n\n        const { index, blocks } = this.state;\n        if (index !== -1) {\n            cancelPreloadIVMediaViewerContent(index, blocks);\n        }\n    };\n\n    handleForward = () => {\n        const { media } = this.props;\n\n        const inputMessageContent = getInputMediaContent(media, null);\n        if (!inputMessageContent) return;\n\n        forward(inputMessageContent);\n    };\n\n    handleSave = () => {\n        const { media } = this.props;\n\n        saveMedia(media, null);\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { size, t } = this.props;\n        const { index, blocks, hasNextMedia, hasPreviousMedia } = this.state;\n        if (!blocks) return null;\n        if (index === -1) return null;\n\n        const block = blocks[index];\n        const media = getBlockMedia(block);\n        const caption = getBlockCaption(block);\n        const url = getBlockUrl(block);\n\n        const [width, height, file] = getViewerFile(media, size);\n\n        let title = '';\n        if (media['@type'] === 'photo') {\n            title = t('AttachPhoto');\n        }\n        if (media['@type'] === 'video') {\n            title = t('AttachVideo');\n        } else if (media['@type'] === 'animation') {\n            title = t('AttachGif');\n        }\n        const maxCount = blocks.length;\n\n        return (\n            <div className={classNames('instant-view-media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${index + 1} of ${maxCount}` : null}\n                        style={{ marginLeft: 128 }}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerFooterButton title={t('Forward')} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='media-viewer-content-column'>\n                        <InstantViewMediaViewerContent media={media} size={size} caption={caption} url={url} />\n                    </div>\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nInstantViewMediaViewer.propTypes = {\n    media: PropTypes.object.isRequired,\n    size: PropTypes.number.isRequired,\n    caption: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withIV\n);\n\nexport default enhance(InstantViewMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport Article from './Article';\nimport { articleRefs } from './Article';\nimport InstantViewMediaViewer from '../Viewer/InstantViewMediaViewer';\nimport IVContext from './IVContext';\nimport MediaViewerButton from '../Viewer/MediaViewerButton';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport { itemsInView, throttle } from '../../Utils/Common';\nimport { getInnerBlocks } from '../../Utils/InstantView';\nimport { openInstantView } from '../../Actions/InstantView';\nimport { setInstantViewContent, setInstantViewViewerContent } from '../../Actions/Client';\nimport { scrollTop } from '../../Utils/DOM';\nimport { modalManager } from '../../Utils/Modal';\nimport { IV_PHOTO_SIZE } from '../../Constants';\nimport InstantViewStore from '../../Stores/InstantViewStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './InstantViewer.css';\n\nclass InstantViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.articleRef = React.createRef();\n        this.instantViewerRef = React.createRef();\n\n        this.state = {};\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.instantView !== state.prevInstantView) {\n            return {\n                prevInstantView: props.instantView,\n                hasPrev: InstantViewStore.hasPrev(),\n                hasScroll: false,\n                media: null,\n                caption: null,\n                url: null\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { instantView } = this.props;\n        const { hasScroll, hasPrev, media, caption, url } = this.state;\n\n        if (instantView !== nextProps.instantView) {\n            return true;\n        }\n\n        if (hasScroll !== nextState.hasScroll) {\n            return true;\n        }\n\n        if (hasPrev !== nextState.hasPrev) {\n            return true;\n        }\n\n        if (media !== nextState.media) {\n            return true;\n        }\n\n        if (caption !== nextState.caption) {\n            return true;\n        }\n\n        if (url !== nextState.url) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.mounted = true;\n        this.handleScroll();\n        this.scrollToBlock(this.props.block, 'smooth');\n\n        KeyboardManager.add(this.keyboardHandler);\n        InstantViewStore.on('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.on('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    componentWillUnmount() {\n        this.mounted = false;\n        KeyboardManager.remove(this.keyboardHandler);\n        InstantViewStore.off('clientUpdateInstantViewUrl', this.onClientUpdateInstantViewUrl);\n        InstantViewStore.off('clientUpdateInstantViewViewerContent', this.onClientUpdateInstantViewViewerContent);\n    }\n\n    onClientUpdateInstantViewViewerContent = update => {\n        const { content } = update;\n        if (!content) {\n            this.setState({ media: null, caption: null, url: null });\n            return;\n        }\n\n        const { media, caption, url, instantView } = content;\n\n        if (this.props.instantView !== instantView) return;\n\n        this.setState({ media, caption, url });\n    };\n\n    onClientUpdateInstantViewUrl = async update => {\n        const { url } = update;\n        const active = InstantViewStore.getCurrent();\n        const { instantView, url: oldUrl } = this.props;\n\n        if (active !== instantView) return;\n\n        if (instantView && url.startsWith(oldUrl)) {\n            const hash = new URL(url).hash;\n            if (url.indexOf('#') === url.length - 1) {\n                this.scrollTop('smooth');\n\n                return;\n            } else if (hash && this.scrollToHash(hash, 'smooth')) {\n\n                return;\n            }\n        }\n\n        openInstantView(url);\n    };\n\n    scrollToBlock(block, behavior) {\n        if (!block) return false;\n\n        if (!articleRefs) return false;\n\n        const ref = articleRefs.get(block);\n        if (!ref) return false;\n\n        const element = ReactDOM.findDOMNode(ref);\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollToElement(element, behavior) {\n        if (!element) return false;\n\n        const details = [];\n        let finished = false;\n        let currentElement = element;\n        do {\n            currentElement = currentElement.parentNode;\n            if (currentElement) {\n                if (currentElement.nodeName === 'DETAILS') {\n                    details.push(currentElement);\n                } else if (currentElement.nodeName === 'ARTICLE') {\n                    finished = true;\n                }\n            } else {\n                finished = true;\n            }\n        } while (!finished);\n\n        details.forEach(x => (x.open = true));\n\n        element.scrollIntoView({\n            block: 'center',\n            behavior\n        });\n\n        return true;\n    }\n\n    scrollToHash(hash, behavior) {\n        if (!hash) return false;\n\n        const element = document.getElementById(hash.substr(1));\n\n        return this.scrollToElement(element, behavior);\n    }\n\n    scrollTop(behavior) {\n        const element = this.instantViewerRef.current;\n\n        switch (behavior) {\n            case 'smooth': {\n                scrollTop(element);\n                break;\n            }\n            default: {\n                element.scrollTo({\n                    top: 0,\n                    behavior\n                });\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { instantView, block, url } = this.props;\n\n        const hash = new URL(url).hash;\n        if (prevProps.instantView !== instantView) {\n            if (prevProps.url !== url) {\n                if (url.indexOf('#') === url.length - 1) {\n                    this.scrollTop('auto');\n                } else if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('auto');\n                }\n            } else {\n                if (hash) {\n                    this.scrollToHash(hash, 'auto');\n                } else {\n                    this.scrollTop('smooth');\n                }\n            }\n\n            this.handleScroll();\n        }\n    }\n\n    onKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                event.stopPropagation();\n                event.preventDefault();\n\n                const { media } = this.state;\n\n                if (media) {\n                    setInstantViewViewerContent(null);\n                    return;\n                }\n\n                this.handleClose();\n                break;\n            }\n        }\n    };\n\n    handleClose() {\n        setInstantViewContent(null);\n    }\n\n    handleBack = () => {\n        const { hasPrev, hasScroll } = this.state;\n        if (hasScroll) {\n            this.scrollTop('smooth');\n            return;\n        }\n\n        if (hasPrev) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdatePrevInstantView'\n            });\n            return;\n        }\n\n        this.handleClose();\n    };\n\n    handleScroll = () => {\n        const element = this.instantViewerRef.current;\n        this.setState({\n            hasScroll: element.scrollTop > 50\n        });\n\n        this.updateItemsInView();\n    };\n\n    updateItemsInView() {\n        if (!this.mounted) return;\n\n        const { instantView } = this.props;\n        if (!instantView) return;\n\n        const { page_blocks } = instantView;\n\n        const blocks = new Map();\n        const items = itemsInView(this.instantViewerRef, this.articleRef);\n\n        for (let i = 0; i < items.length; i++) {\n            const block = page_blocks[items[i]];\n            blocks.set(block, block);\n\n            const innerBlocks = getInnerBlocks(block);\n            innerBlocks.forEach(x => blocks.set(x, x));\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateBlocksInView',\n            blocks\n        });\n    }\n\n    render() {\n        const { instantView } = this.props;\n        const { hasPrev, hasScroll, media, caption, url } = this.state;\n        if (!instantView) return null;\n\n        return (\n            <IVContext.Provider value={instantView}>\n                <div ref={this.instantViewerRef} className='instant-viewer' onScroll={this.handleScroll}>\n                    <div className='instant-viewer-left-column' onClick={this.handleBack}>\n                        <MediaViewerButton\n                            className='instant-viewer-left-button'\n                            style={{ alignItems: 'flex-start' }}\n                            onClick={this.handleBack}>\n                            <NavigateBeforeIcon\n                                style={{\n                                    transition: 'transform 0.25s ease-out',\n                                    transform: hasScroll ? 'rotate(90deg)' : 'rotate(0deg)'\n                                }}\n                            />\n                        </MediaViewerButton>\n                    </div>\n                    <div className='instant-viewer-content-column'>\n                        <div>\n                            <Article ref={this.articleRef} />\n                        </div>\n                    </div>\n                    <div className='instant-viewer-right-column'>\n                        <MediaViewerButton className='instant-viewer-right-button' onClick={this.handleClose}>\n                            <CloseIcon />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {media && <InstantViewMediaViewer media={media} size={IV_PHOTO_SIZE} caption={caption} url={url} />}\n            </IVContext.Provider>\n        );\n    }\n}\n\nInstantViewer.propTypes = {\n    instantView: PropTypes.object.isRequired\n};\n\nexport default withTranslation()(InstantViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaInfo.css';\n\nclass MediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    {tileControl}\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-info-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport Player from '../Player/Player';\nimport { getMediaFile, getMediaMinithumbnail, getMediaThumbnail, getSrc } from '../../Utils/File';\nimport { getText, isAnimationMessage, isEmbedMessage, isVideoMessage } from '../../Utils/Message';\nimport { getThumb } from '../../Utils/Media';\nimport { MEDIA_VIEWER_VIDEO_MAX_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {};\n\n        this.videoRef = React.createRef();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size, t } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            const minithumbnail = getMediaMinithumbnail(chatId, messageId);\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            const { content } = message;\n            const { web_page: webPage } = content;\n\n            return {\n                prevChatId: chatId,\n                prevMessageId: messageId,\n\n                speed: 1,\n                isPlaying: false,\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text,\n                thumbnail,\n                minithumbnail,\n                webPage\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.off('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.off('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n        if (!videoInfo) return;\n\n        const { file } = this.state;\n        if (file.id !== videoInfo.fileId) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaViewerContent',\n            content: null\n        });\n    };\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { src } = this.state;\n\n        if (prevState.src !== src) {\n            const player = this.videoRef.current;\n            if (!player) return;\n\n            player.load();\n        }\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            let [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n\n            file = FileStore.get(file.id) || file;\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const thumbnail = getMediaThumbnail(chatId, messageId);\n            this.setState({\n                thumbnail\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size, t } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message, null, t);\n\n            const [width, height, file, mimeType, supportsStreaming] = getMediaFile(chatId, messageId, size);\n            let src = getSrc(file);\n            let source = null;\n            if (!src && supportsStreaming) {\n                if (isVideoMessage(chatId, messageId)) {\n                    src = `/streaming/file?id=${file.id}&size=${file.size}&mime_type=${mimeType}`;\n                }\n            }\n\n            this.setState({\n                width,\n                height,\n                file,\n                src,\n                source,\n                supportsStreaming,\n                mimeType,\n                text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    handleClick = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n\n        const { source } = this.state;\n        if (!source) return;\n\n        source.loadNextBuffer();\n    };\n\n\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            width,\n            height,\n            file,\n            src,\n            supportsStreaming,\n            mimeType,\n            text,\n            minithumbnail,\n            thumbnail,\n            webPage,\n            isPlaying\n        } = this.state;\n\n        if (!file) return null;\n\n        const miniSrc = minithumbnail ? 'data:image/jpeg;base64, ' + minithumbnail.data : null;\n        const thumbnailSrc = getSrc(thumbnail ? thumbnail.file : null);\n\n        const isEmbed = isEmbedMessage(chatId, messageId);\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n\n        let videoWidth = width;\n        let videoHeight = height;\n        const scale = MEDIA_VIEWER_VIDEO_MAX_SIZE / Math.max(videoWidth, videoHeight);\n        const w = videoWidth > videoHeight ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoWidth * scale);\n        const h = videoHeight > videoWidth ? MEDIA_VIEWER_VIDEO_MAX_SIZE : Math.floor(videoHeight * scale);\n        videoWidth = w;\n        videoHeight = h;\n\n        let content = null;\n        const source = src ? <source src={src} type={mimeType}/> : null;\n        const thumb = getThumb(thumbnail, minithumbnail, videoWidth, videoHeight);\n\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <Player\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        fileId={file.id}\n                        width={videoWidth}\n                        height={videoHeight}\n                        poster={supportsStreaming ? (thumbnailSrc || miniSrc) : null}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </Player>\n                    {!isPlaying && !supportsStreaming && thumb}\n                </div>\n            );\n        } else if (isAnimation) {\n            // const message = MessageStore.get(chatId, messageId);\n            //\n            // content = (\n            //     <Animation\n            //         type='preview'\n            //         stretch={true}\n            //         displaySize={ANIMATION_PREVIEW_DISPLAY_SIZE}\n            //         animation={message.content.animation || message.content.web_page.animation}\n            //         onClick={this.handleContentClick}\n            //         showProgress={false}\n            //         style={{ borderRadius: 0 }}\n            //         />\n            // );\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    >\n                        {source}\n                    </video>\n                    {!isPlaying && thumb}\n                </div>\n            );\n        } else if (webPage && webPage.embed_url) {\n            let { embed_url: url } = webPage;\n\n            switch (webPage.site_name) {\n                case 'Coub': {\n                    break;\n                }\n                case 'SoundCloud': {\n                    break;\n                }\n                case 'Spotify': {\n                    break;\n                }\n                case 'Twitch': {\n                    url += `&parent=${window.location.hostname}`;\n                    break;\n                }\n                case 'YouTube': {\n                    url += '?iv_load_policy=3&controls=2&playsinline=1&rel=0&modestbranding=0&autoplay=1&enablejsapi=0&widgetid=1&showinfo=0';\n                    break;\n                }\n                case 'Vimeo': {\n                    url += '?playsinline=true&autoplay=true&dnt=true&title=false';\n                    break;\n                }\n                case 'КиноПоиск': {\n                    break;\n                }\n                case 'Яндекс.Музыка': {\n                    break;\n                }\n            }\n\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <iframe src={url} width={videoWidth} height={videoHeight} frameBorder={0} allowFullScreen={true} scrolling='no' style={{ background: 'black' }}/>\n                </div>\n            );\n        } else {\n            content = (\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n            );\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                {content}\n                {!supportsStreaming && <FileProgress file={file} zIndex={2} />}\n                {text && text.length > 0 && !isVideo && !isEmbed && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewerContent);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport MediaInfo from '../Tile/MediaInfo';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { forwardMessages, setMediaViewerContent } from '../../Actions/Client';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveMedia\n} from '../../Utils/File';\nimport {\n    canMessageBeDeleted,\n    filterDuplicateMessages,\n    isAnimationMessage,\n    isEmbedMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { modalManager } from '../../Utils/Modal';\nimport { PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.keyboardHandler = new KeyboardHandler(this.onKeyDown);\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        KeyboardManager.add(this.keyboardHandler);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n        MessageStore.off('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.off('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.off('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        const fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;\n\n        const { key } = event;\n        switch (key) {\n            case 'Escape': {\n\n                this.handleClose();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowLeft': {\n                if (!fullscreenElement) {\n                    this.handlePrevious();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n            case 'ArrowRight': {\n                if (!fullscreenElement) {\n                    this.handleNext();\n                    event.stopPropagation();\n                    event.preventDefault();\n                    return;\n                }\n                break;\n            }\n        }\n\n        const isVideo = isVideoMessage(chatId, currentMessageId);\n        if (isVideo) {\n            TdLibController.clientUpdate({ '@type': 'clientUpdateMediaShortcut', event });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterDuplicateMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        let media = null;\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                media = animation;\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                media = document;\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                media = photo;\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    media = animation;\n                    break;\n                }\n\n                if (document) {\n                    media = document;\n                    break;\n                }\n\n                if (photo) {\n                    media = photo;\n                    break;\n                }\n\n                if (video) {\n                    media = video;\n                    break;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                media = video;\n                break;\n            }\n        }\n\n        saveMedia(media, message);\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        forwardMessages(chatId, [currentMessageId]);\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterDuplicateMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    handleWrapperMouseDown = event => {\n        this.mouseDownTarget = event.currentTarget;\n    }\n\n    handleWrapperClick = event => {\n        const { mouseDownTarget } = this;\n        this.mouseDownTarget = null;\n\n        if (event.currentTarget !== mouseDownTarget) return;\n\n        this.handleClose();\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users } = message;\n\n        const canBeDeleted = canMessageBeDeleted(chatId, currentMessageId);\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                manager={modalManager}\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('Confirm')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file, mimeType] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isEmbedMessage(chatId, currentMessageId)) {\n            title = '';\n        } else if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                <div className='media-viewer-footer'>\n                    <MediaInfo chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} disabled={isEmbedMessage(chatId, currentMessageId)} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onMouseDown={this.handleWrapperMouseDown} onClick={this.handleWrapperClick}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                {deleteConfirmation}\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.off('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.off('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onClose } = this.props;\n\n        onClose && onClose(event);\n    };\n\n    handlePhotoClick = event => {\n        if (event) event.stopPropagation();\n\n        const { onPrevious } = this.props;\n\n        onPrevious && onPrevious(event);\n    };\n\n    render() {\n        const { file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        return (\n            <div className='media-viewer-content' onClick={this.handleContentClick} >\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handlePhotoClick}/>\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired,\n\n    onClose: PropTypes.func,\n    onPrevious: PropTypes.func\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaInfo.css';\n\nclass ProfileMediaInfo extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-info'>\n                <div className='media-info-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-info-content'>\n                        <div className='media-info-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-info-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaInfo.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaInfo;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport KeyboardManager, { KeyboardHandler } from '../Additional/KeyboardManager';\nimport CloseIcon from '../../Assets/Icons/Close';\nimport NavigateBeforeIcon from '../../Assets/Icons/Left';\nimport ReplyIcon from '../../Assets/Icons/Share';\nimport DeleteIcon from '../../Assets/Icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaInfo from '../Tile/ProfileMediaInfo';\nimport { forward, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat, isMeChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport { modalManager } from '../../Utils/Modal';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n        this.keyboardHandler = new KeyboardHandler(this.handleKeyDown);\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory(photo);\n\n        KeyboardManager.add(this.keyboardHandler);\n    }\n\n    componentWillUnmount() {\n        KeyboardManager.remove(this.keyboardHandler);\n    }\n\n    handleKeyDown = event => {\n        if (modalManager.modals.length > 0) {\n            return;\n        }\n\n        if (event.isComposing) {\n            return;\n        }\n\n        switch (event.key) {\n            case 'Escape': {\n                this.handleClose();\n                event.preventDefault();\n                event.stopPropagation();\n                return;\n            }\n            case 'ArrowLeft': {\n                this.handleNext();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n            case 'ArrowRight': {\n                this.handlePrevious();\n                event.stopPropagation();\n                event.preventDefault();\n                return;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        let inputFile = null;\n        let inputMessagePhoto = null;\n        const inHistory = this.history && index >= 0 && index < this.history.length;\n        if (inHistory) {\n            const photo = getProfilePhoto(this.history[index]);\n            if (!photo) return;\n\n            let { big: file } = photo;\n            if (!file) return;\n\n            inputFile = {\n                '@type': 'inputFileId',\n                id: file.id\n            };\n        } else {\n            const chatPhoto = getPhotoFromChat(chatId);\n            if (!chatPhoto) return;\n\n            const { big: file } = chatPhoto;\n            if (!file) return;\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) return;\n\n            inputFile = {\n                '@type': 'inputFileBlob',\n                data: blob,\n                name: ''\n            };\n        }\n\n        if (!inputFile) return;\n\n        const inputMessageContent = {\n            '@type': 'inputMessagePhoto',\n            photo: inputFile,\n            thumbnail: null,\n            added_sticker_file_ids: [],\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            caption: {\n                '@type': 'formattedText',\n                text: '',\n                entities: null\n            },\n            ttl: 0\n        };\n\n        forward(inputMessageContent);\n    };\n\n    handleDelete = async () => {\n        const { chatId } = this.props;\n        const {\n            currentIndex,\n            totalCount,\n            hasNextMedia,\n            hasPreviousMedia\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo = index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n\n        const { id } = photo;\n        if (!id) return;\n\n        await TdLibController.send({\n            '@type': 'deleteProfilePhoto',\n            profile_photo_id: id\n        });\n\n        this.history.splice(index, 1);\n        if (!this.history.length) {\n            this.handleClose();\n            return;\n        }\n\n        this.setState({\n            totalCount: totalCount - 1\n        });\n\n        if (hasNextMedia) {\n            const nextIndex = currentIndex - 1;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === 0) {\n                    this.loadNext();\n                }\n            });\n        }\n\n        if (hasPreviousMedia) {\n            const nextIndex = currentIndex;\n\n            return this.loadMedia(nextIndex, { totalCount: totalCount - 1 }, () => {\n                if (nextIndex === this.history.length - 1) {\n                    this.loadPrevious();\n                }\n            });\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, { }, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, obj, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                ...obj,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            totalCount,\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const inHistory = index >= 0 && index < this.history.length;\n        const profilePhoto = inHistory ? getProfilePhoto(this.history[index]) : null;\n        const profilePhotoBig = profilePhoto ? profilePhoto.big : null;\n        const profilePhotoBlob = profilePhotoBig ? profilePhotoBig.blob || FileStore.getBlob(profilePhotoBig.id) : null;\n        const photo = profilePhotoBlob ? profilePhoto : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n        const isMe = isMeChat(chatId);\n\n        return (\n            <div className={classNames('media-viewer', 'media-viewer-default')}>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaInfo chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    <MediaViewerDownloadButton title={t('Forward')} fileId={file.id} onClick={this.handleForward}>\n                        <ReplyIcon />\n                    </MediaViewerDownloadButton>\n                    {isMe && (\n                        <MediaViewerFooterButton title={t('Delete')} onClick={this.handleDelete}>\n                            <DeleteIcon />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Close')} onClick={this.handleClose}>\n                        <CloseIcon />\n                    </MediaViewerFooterButton>\n                </div>\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClose={this.handleClose} onPrevious={this.handlePrevious}/>\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon style={{ transform: 'rotate(180deg)' }} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from '../Utils/HOC';\nimport withLanguage from '../Language';\nimport withSnackbarNotifications from '../Notifications';\nimport PipPlayer from './Player/PipPlayer';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport InstantViewer from './InstantView/InstantViewer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport AppStore from '../Stores/ApplicationStore';\nimport ChatStore from '../Stores/ChatStore';\nimport InstantViewStore from '../Stores/InstantViewStore';\nimport UserStore from '../Stores/UserStore';\nimport PlayerStore from '../Stores/PlayerStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, isSmallWidth } = AppStore;\n\n        this.state = {\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            isSmallWidth,\n            forwardInfo: null,\n            instantViewContent: null,\n            videoInfo: null\n        };\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.on('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.on('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.on('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.on('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    componentWillUnmount() {\n        UserStore.off('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.off('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        AppStore.off('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        AppStore.off('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        AppStore.off('clientUpdatePageWidth', this.onClientUpdatePageWidth);\n        AppStore.off('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        AppStore.off('clientUpdateForward', this.onClientUpdateForward);\n        InstantViewStore.off('clientUpdateInstantViewContent', this.onClientUpdateInstantViewContent);\n        PlayerStore.off('clientUpdatePictureInPicture', this.onClientUpdatePictureInPicture);\n    }\n\n    onClientUpdatePictureInPicture = update => {\n        const { videoInfo } = update;\n\n        this.setState({\n            videoInfo\n        });\n    };\n\n    onClientUpdatePageWidth = update => {\n        const { isSmallWidth } = update;\n\n        this.setState({ isSmallWidth });\n    };\n\n    onClientUpdateInstantViewContent = update => {\n        const { content } = update;\n\n        this.setState({\n            instantViewContent: content\n        });\n    };\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        const { isChatDetailsVisible } = AppStore;\n\n        this.setState({ isChatDetailsVisible });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        const { mediaViewerContent } = AppStore;\n\n        this.setState({ mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        const { profileMediaViewerContent } = AppStore;\n\n        this.setState({ profileMediaViewerContent });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = AppStore.getChatId();\n        const currentDialogChatId = AppStore.dialogChatId;\n        const currentMessageId = AppStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const {\n            instantViewContent,\n            isChatDetailsVisible,\n            mediaViewerContent,\n            profileMediaViewerContent,\n            forwardInfo,\n            videoInfo,\n            isSmallWidth\n        } = this.state;\n\n        return (\n            <>\n                <div\n                    className={classNames('page', {\n                        'page-small': isSmallWidth,\n                        'page-third-column': isChatDetailsVisible\n                    })}>\n                    <Dialogs />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                {instantViewContent && <InstantViewer {...instantViewContent} />}\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n                {videoInfo && <PipPlayer {...videoInfo}/>}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}