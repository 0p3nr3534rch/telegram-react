{"version":3,"sources":["Components/ColumnMiddle/StickerPreview.js","Notifications.js","Components/Tile/ForwardTargetChat.js","Utils/Language.js","Components/Popup/ForwardDialog.js","Components/Tile/UserStatusControl.js","Components/Tile/UserControl.js","Components/Tile/DialogStatus.js","Components/Tile/ChatControl.js","Components/ColumnRight/ChatDetailsHeader.js","Components/ColumnRight/NotificationsListItem.js","Components/ColumnRight/MoreListItem.js","Components/ColumnRight/ChatDetails.js","Components/ColumnRight/GroupsInCommonHeader.js","Components/ColumnRight/GroupsInCommon.js","Components/ColumnRight/SharedMediaHeaderControl.js","Components/ColumnRight/SharedMedia.js","Components/ColumnRight/ChatInfo.js","Components/Tile/TopChat.js","Components/Tile/RecentlyFoundChat.js","Components/Tile/FoundPublicChat.js","Components/Tile/FoundMessage.js","Components/ColumnLeft/Search/SearchCaption.js","Components/ColumnLeft/Search/Search.js","Components/ColumnLeft/ThemePicker.js","Components/ColumnLeft/LanguagePicker.js","Components/ColumnLeft/MainMenuButton.js","Components/ColumnLeft/DialogsHeader.js","Components/ColumnLeft/UpdatePanel.js","Components/ColumnLeft/Dialogs.js","Components/Popup/ChatInfoDialog.js","Components/Additional/NotificationTimer.js","Components/ColumnMiddle/MainMenuButton.js","Components/ColumnMiddle/HeaderCommand.js","Components/ColumnMiddle/Header.js","Components/Player/VolumeButton.js","Components/Player/RepeatButton.js","Components/Player/ShuffleButton.js","Components/Player/PlaybackRateButton.js","Components/Player/Time.js","Components/Player/Playlist.js","Components/Player/HeaderPlayer.js","Components/Message/DayMeta.js","Components/ColumnMiddle/FilesDropTarget.js","Components/Message/Forward.js","Components/Message/Meta.js","Components/Message/MessageStatus.js","Components/Message/UnreadSeparator.js","Components/Message/Media/WebPage.js","Components/Message/Message.js","Components/ColumnMiddle/PinnedMessage.js","Assets/Bubbles.svg","Components/ColumnMiddle/Placeholder.js","Components/ColumnMiddle/ScrollDownButton.js","Components/Message/ServiceMessage.js","Components/ColumnMiddle/StickersHint.js","Components/ColumnMiddle/MessagesList.js","Components/Popup/ShareStickerSetButton.js","Components/Popup/StickerSetDialog.js","Components/ColumnMiddle/DialogDetails.js","Components/Tile/MediaViewerControl.js","Components/Viewer/MediaCaption.js","Components/Viewer/MediaViewerContent.js","Components/Viewer/MediaViewerButton.js","Components/Viewer/MediaViewerFooterText.js","Components/Viewer/MediaViewerFooterButton.js","Components/Viewer/MediaViewerDownloadButton.js","Components/Viewer/MediaViewer.js","Components/Viewer/ProfileMediaViewerContent.js","Components/Tile/ProfileMediaViewerControl.js","Components/Viewer/ProfileMediaViewer.js","Components/MainPage.js"],"names":["StickerPreview","state","emoji","prevPropsSticker","loadStickerEmojis","sticker","id","TdLibController","send","@type","then","result","_this","props","setState","emojis","join","prevProps","prevState","snapshot","this","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","_Message_Media_Sticker__WEBPACK_IMPORTED_MODULE_6__","displaySize","STICKER_PREVIEW_DISPLAY_SIZE","React","Component","withSnackbarNotifications","WrappedComponent","NotificationsWrapper","_React$Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","build","maxSnack","MAX_SNACK","displayName","concat","getDisplayName","ForwardTargetChat","_this$props","classes","chatId","selected","onSelect","shortTitle","getChatShortTitle","classNames","forward-target-chat-selected","onClick","ChatTile","border","markSelected","markUnselected","withStyles","theme","borderColor","palette","primary","main","boxShadow","background","paper","withTheme","cyrillicInput","isCyrillicPackId","packId","getCyrillicInput","input","length","currentPackId","OptionStore","get","suggestedPackId","Map","output","i","has","latinInput","getLatinInput","ForwardDialog","call","loadContent","asyncToGenerator","regenerator_default","mark","_callee","promises","getChatsPromise","savedMessagesPromise","_ref2","_ref3","chats","savedMessages","store","wrap","_context","prev","next","getPublicMessageLink","offset_order","offset_chat_id","limit","push","user_id","UserStore","getMyId","force","Promise","all","map","x","catch","e","sent","slicedToArray","chatIds","chat_ids","FileStore","getStore","loadChatsContent","stop","_callee2","messageIds","_context2","abrupt","isSupergroup","getChatUsername","chat_id","message_id","for_album","publicMessageLink","handleClose","clientUpdate","info","handleCopyLink","t","link","message","copy","handleScheduledAction","action","_this$props2","enqueueSnackbar","ApplicationStore","addScheduledAction","NOTIFICATION_AUTO_HIDE_DURATION_MS","autoHideDuration","IconButton_default","aria-label","color","close","removeScheduledAction","Close_default","getForwardPhotoSize","MessageStore","can_be_forwarded","content","photo","sizes","handleSend","_this$props3","photoSize","text","getInnerText","messageRef","current","targetChats","forEach","targetChatId","reply_to_message_id","disable_notifications","from_background","reply_markup","input_message_content","entities","disable_web_page_preview","clear_draft","size","width","height","thumbnail","added_sticker_file_ids","caption","ttl","from_chat_id","message_ids","as_album","handleChangeSelection","delete","set","console","log","forceUpdate","div","innerText","innerHTML","handleSearchKeyDown","event","keyCode","preventDefault","handleSearchKeyUp","_this$state","searchRef","trim","latinText","cyrillicText","searchResults","filter","canSendMessages","hasSearchText","searchText","handleSearchPaste","plainText","clipboardData","getData","document","execCommand","handleMessageKeyUp","handleMessagePaste","getChatTitle","toLocaleLowerCase","indexOf","toLowerCase","setSearchFocus","setTimeout","focus","createRef","_this2","_this$props4","_this$state2","Components_Tile_ForwardTargetChat","foundChats","Dialog_default","open","onClose","aria-labelledby","aria-describedby","dialog","DialogTitle_default","ref","contentEditable","suppressContentEditableWarning","placeholder","onKeyDown","onKeyUp","onPaste","searchList","DialogActions_default","Button_default","autoFocus","enhance","compose","objectSpread","padding","spacing","unit","dialogContent","display","position","borderStyle","withTranslation","withSnackbar","UserStatusControl","onUpdateUserStatus","update","userId","user","status","getUserStatus","isAccent","isUserOnline","prevUserId","nextProps","nextState","on","removeListener","userStatusSubtitle","defineProperty","accent-color","userStatusAccentSubtitle","secondary","dark","UserControl","handleClick","fullName","getUserFullName","UserTile","Components_Tile_UserStatusControl","DialogStatus","chat","ChatStore","type","updateSubtitle","fullInfo","BasicGroupStore","getFullInfo","basic_group_id","members","find","subtitle","getChatSubtitleWithoutTyping","isAccentChatSubtitleWithoutTyping","onUpdateUserFullInfo","onUpdateBasicGroupFullInfo","onUpdateSupergroupFullInfo","supergroup_id","onUpdateBasicGroup","basic_group","onUpdateSupergroup","supergroup","prevChatId","SupergroupStore","statusAccentSubtitle","statusSubtitle","ChatControl","onTileSelect","showStatus","showSavedMessages","Tile_DialogTitle","Components_Tile_DialogStatus","defaultProps","ChatDetailsHeader","backButton","isPrivateChat","isChannelChat","leftIconButton","ArrowBack_default","rightIconButton","margin","NotificationsListItem","isMuted","ListItem_default","button","listItem","handleSetChatNotifications","ListItemIcon_default","Notifications_default","NotificationsActive_default","ListItemText_default","Typography_default","variant","noWrap","ListItemSecondaryAction_default","Switch_default","onChange","checked","NotificationsControl","MoreListItem","handleMoreClick","openMore","handleSendMessage","currentChatId","getChatId","setChatId","handleBlock","isUserBlocked","isGroup","isGroupChat","isBlocked","isMember","isChatMember","isChannel","Fragment","MoreHoriz_default","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","List_default","component","disablePadding","inset","ChatDetails","handleSelectChat","getGroupsInCommon","loadChatContents","getGroupChatMembers","loadUsersContent","getChatFullInfo","isMeChat","getChatUserId","hasGroupsInCommon","handleUsernameHint","username","telegramUrlOption","usernameLink","handlePhoneHint","phoneNumber","getChatPhoneNumber","formatPhoneNumber","handleHeaderClick","chatDetailsListRef","scrollTop","handleOpenViewer","popup","setProfileMediaViewerContent","handleOpenChat","_this$props5","openChat","handleOpenUser","openUser","getContentHeight","clientHeight","list","scrollHeight","offsetHeight","_this$props6","_this$props7","onOpenSharedMedia","onOpenGroupsInCommon","Components_ColumnRight_ChatDetailsHeader","bio","getChatBio","isMe","users","member","items","sort","y","getUserStatusOrder","Components_Tile_UserControl","Components_Tile_ChatControl","AlternateEmail_default","Call_default","ErrorOutline_default","style","whiteSpace","wordWrap","Divider_default","ColumnRight_NotificationsListItem","ColumnRight_MoreListItem","toUpperCase","disabled","Photo_default","withSaveRef","closeIconButton","nested","withRestoreRef","GroupsInCommonHeader","backIconButton","GroupsInCommon","handleSelect","_this3","minHeight","Components_ColumnRight_GroupsInCommonHeader","SharedMediaHeaderControl","SharedMedia","handleChange","Components_ColumnRight_SharedMediaHeaderControl","Tabs_default","indicatorColor","textColor","scrollable","scrollButtons","fullWidth","Tab_default","label","minWidth","ChatInfo","onClientUpdateChatId","nextChatId","userChatId","openSharedMedia","openGroupsInCommon","handelOpenSharedMedia","handleCloseSharedMedia","handleOpenGroupsInCommon","handleCloseGroupsInCommon","handleCloseChatDetails","changeChatDetailsVisibility","handleSelectUser","_ref","_x","detailsRef","dialogChatId","Components_ColumnRight_SharedMedia","Components_ColumnRight_GroupsInCommon","Components_ColumnRight_ChatDetails","right-column","TopChat","showOnline","PureComponent","userStatusRoot","right","bottom","zIndex","RecentlyFoundChat","FoundPublicChat","previousChatId","_classNames","selectedChatId","membersCount","getGroupChatMembersCount","subscribersString","root","foundPublicChatActive","verifiedIcon","foundPublicChatSubtitle","backgroundColor","& $verifiedIcon","FoundMessage","nextMessageId","getMessageId","messageId","previousMessageId","chatSearch","selectedMessageId","sender_user_id","date","getMessageDate","senderName","getMessageSenderName","senderFullName","getMessageSenderFullName","getContent","tile","foundMessageActive","accent-background","foundMessageSubtitle","searchCaption","grey","searchCaptionCommand","command","Boolean","Search","onClientUpdateSearchText","trimmedText","concatSearchResults","results","arr","j","b","orderCompare","order","sessionId","localPromise","latinLocalPromise","cyrillicLocalPromise","local","savedMessagesStrings","globalPromises","globalPromise","latinTrimmedText","globalLatinPromise","globalResults","global","messages","Date","query","some","el","includes","splice","top","recentlyFound","startsWith","substr","USERNAME_LENGTH_MIN","from_message_id","offset","offset_date","offset_message_id","setItems","toConsumableArray","keys","topPromise","recentlyFoundPromise","_ref4","category","error","handleRecentlyFound","_callee3","_context3","handleClearRecentlyFound","stopPropagation","handleSelectMessage","addToRecent","keepOpen","onSelectMessage","handleScroll","listRef","onLoadPrevious","getOffset","concatMessages","total_count","_callee4","_context4","loading","filterMessages","handleTopChatsScroll","prevPropsChatId","prevPropsText","topChats","Components_Tile_TopChat","recentlyFoundChats","Components_Tile_RecentlyFoundChat","localChats","globalChats","Components_Tile_FoundPublicChat","globalMessages","Components_Tile_FoundMessage","messagesCaption","search","onScroll","Search_SearchCaption","closeSearchIconButton","onMouseDown","default","ThemePicker","target","emit","getColor","handleAccentChange","getColorString","red","orange","amber","green","blue","indigo","deepPurple","transitionDuration","DialogContent_default","FormControl_default","formControl","FormLabel_default","focused","RadioGroup_default","name","group","FormControlLabel_default","control","Radio_default","redRoot","orangeRoot","amberRoot","greenRoot","blueRoot","indigoRoot","deepPurpleRoot","&$checked","LanguagePicker","language","i18n","languages","LocalizationStore","language_packs","native_name","menuAnchorOrigin","vertical","horizontal","MainMenuButton","onUpdateAuthorizationState","authorizationState","authorization_state","handleMenuOpen","isAuthorizationReady","anchorEl","currentTarget","handleMenuClose","handleLogOut","onLogOut","handleCheckUpdates","fetch","WASM_FILE_NAME","WASM_FILE_HASH","handleAppearance","themePicker","handleLanguage","languagePicker","setRef","assertThisInitialized","getAuthorizationState","mainMenuControl","core_Menu_default","getContentAnchorEl","disableAutoFocusItem","disableRestoreFocus","anchorOrigin","MenuItem_default","aria-owns","aria-haspopup","menuIconButton","Menu_default","ColumnLeft_ThemePicker","innerRef","ColumnLeft_LanguagePicker","searchIconButton","DialogsHeader","handleDone","logOut","handleSearch","onSearch","openSearch","handleKeyDown","handleKeyUp","searchInput","handlePaste","handleInput","debounce","confirmLogoutDialog","index_es","dialogText","ColumnLeft_MainMenuButton","headerIconButton","SpeedDialIcon_default","icon","icons_Search_default","openIcon","UpdatePanel","onClientUpdateNewContentAvailable","newContentAvailable","handleUpdate","handled","window","location","reload","borderRadius","maxHeight","Dialogs","onClientUpdateThemeChange","onClientUpdateChatDetailsVisibility","isChatDetailsVisible","onClientUpdateSearchChat","searchChatId","dialogsList","scrollToTop","visible","onSelectChat","handleSearchTextChange","dialogs-third-column","ColumnLeft_DialogsHeader","onSearchTextChange","DialogsList","ColumnLeft_Search_Search","ColumnLeft_UpdatePanel","ChatInfoDialog","handleClientUpdateDialogChatId","nextContext","dialogRoot","container","containerRoot","paperRoot","Components_ColumnRight_ChatInfo","chatInfoRoot","alignItems","modal","NotificationTimer","handleTimer","now","seconds","expire","timerId","clearInterval","startTime","setMilliseconds","getMilliseconds","setInterval","Typography_Typography","toFixed","CircularProgress_default","menuTransformOrigin","LeaveChatDialog","getDeleteDialogText","title","is_channel","other","objectWithoutProperties","assign","DialogContentText_default","ClearHistoryDialog","handleButtonClick","handleChatInfo","openChatDetails","handleClearHistory","openClearHistory","handleClearHistoryContinue","request","remove_from_chat_list","handleLeave","openDelete","handleLeaveContinue","getLeaveChatNotification","clientUpdateType","inProgress","finish","_this2$props","Components_Additional_NotificationTimer","getLeaveChatTitle","clearHistory","canClearHistory","deleteChat","canDeleteChat","leaveChatTitle","MoreVert_default","transformOrigin","MainMenuButton_LeaveChatDialog","MainMenuButton_ClearHistoryDialog","HeaderCommand","handleCancel","handleDelete","canBeDeletedForAllUsers","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","selectedItems","values","Symbol","iterator","done","can_be_deleted_for_all_users","err","return","openDeleteDialog","revoke","handleDeleteContinue","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","handleRevokeChange","handleCloseDelete","handleForward","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_ref6","handleReply","_MessageStore$selecte","count","canBeDeleted","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_ref9","can_be_deleted_only_for_self","canBeForwarded","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","_ref10","canBeReplied","buttonLeft","buttonRight","Checkbox_default","Header","onUpdateChatOnlineMemberCount","onClientUpdateMessageSelected","selectionCount","onUpdateConnectionState","connectionState","onUpdateChatTitle","onUpdateUserChatAction","handleSearchChat","searchChat","localize","str","replace","getConnectionState","Components_ColumnMiddle_HeaderCommand","isAccentSubtitle","isAccentChatSubtitle","getChatSubtitle","showProgressAnimation","HeaderProgress","headerStatusTitle","headerStatusAccentTitle","messageSearchIconButton","Components_ColumnMiddle_MainMenuButton","moreIconButton","VolumeButton","PlayerStore","volume","prevValue","dragging","buttonOver","popupOver","onClientUpdateMediaVolume","prevVolume","handlePopoverOpen","handlePopoverClose","handleMouseEnter","openPopover","handleMouseLeave","handlePopupMouseLeave","handleVoiceClick","nextValue","PLAYER_VOLUME_NORMAL","_this$state3","handleDragStart","handleDragEnd","_this$state4","getVolumeIcon","VolumeOff_default","fontSize","VolumeMute_default","VolumeDown_default","VolumeUp_default","_this$state5","onMouseEnter","onMouseLeave","iconButton","visibility","marginTop","borderWidth","Slider_default","slider","thumb","min","max","onDragStart","onDragEnd","opacity","RepeatButton","onClientUpdateMediaRepeat","repeat","handleRepeat","nextRepeat","RepeatEnum","NONE","REPEAT","REPEAT_ONE","getIcon","Repeat_default","RepeatOne_default","ShuffleButton","onClientUpdateMediaShuffle","shuffle","handleShuffle","Shuffle_default","PlaybackRateButton","onClientUpdateMediaPlaybackRate","playbackRate","handlePlaybackRate","nextPlaybackRate","PLAYER_PLAYBACKRATE_NORMAL","PLAYER_PLAYBACKRATE_FAST","Time","onClientUpdateMediaTime","currentTime","currentTimeString","getDurationString","Math","floor","getTimeString","duration","timeString","Playlist","scrollToActive","item","itemRefMap","node","ReactDOM","offsetTop","onClientUpdateMediaTitleMouseOver","over","playlistMouseOver","tryOpen","tryClose","onClientUpdateMediaActive","onClientUpdateMediaPlaylistLoading","_assertThisInitialize2","playlist","onClientUpdateMediaPlaylist","_assertThisInitialize3","clearTimeout","openTimeout","titleMouseOver","clear","slice","reverse","getMedia","openMedia","HeaderPlayer","player","videoRef","onClientUpdateMediaViewerContent","playingMediaViewer","mediaViewerContent","onClientUpdateMediaViewerEnded","onClientUpdateMediaViewerPause","onClientUpdateMediaViewerPlay","pause","startPlayingFile","file","src","getMediaSrc","onClientUpdateMediaBlob","web_page","audio","voice_note","video_note","voice","video","onClientUpdateMediaClose","playing","paused","play","handlePrev","handlePlay","handleNext","getSrc","handleEnded","moveNext","handleVideoEnded","handleTimeUpdate","timestamp","handleCanPlay","hasAudio","muted","stream","captureStream","mozCaptureStream","handleVideoPlay","handleVideoPause","hasPrev","index","findIndex","hasNext","handleTitleMouseEnter","handleTitleMouseLeave","handleTitleClick","PLAYER_STARTTIME","getMediaTitle","dateHintStr","getDateHint","dateStr","getDate","showDate","showPlaybackRate","showRepeat","showShuffle","autoPlay","controls","onCanPlay","onPlay","onPause","onTimeUpdate","onEnded","SkipPrevious_default","Pause_default","PlayArrow_default","SkipNext_default","Components_Player_Playlist","Player_Time","Components_Player_VolumeButton","Player_PlaybackRateButton","Player_RepeatButton","Player_ShuffleButton","DayMeta","onClientUpdateLanguage","dayMeta","toLocaleDateString","day","month","FilesDropTarget","onClientUpdateDragging","getDragging","handleDragEnter","handleDrop","setDragging","handleAttachDocumentComplete","dataTransfer","files","handleDragLeave","data","onSendInternal","uploadFile","callback","invokeScheduledAction","t0","alert","JSON","stringify","_x2","onDragEnter","onDragLeave","onDrop","Forward","arrowRef","handleArrowRef","openForward","forwardInfo","origin","getForwardTitle","tooltip","isForwardOriginHidden","arrow","forwardColor","Tooltip_default","popper","arrowPopper","PopperProps","popperOptions","modifiers","enabled","element","placement","&[x-placement*=\"bottom\"] $arrow","left","&::before","&[x-placement*=\"top\"] $arrow","marginBottom","&[x-placement*=\"right\"] $arrow","marginLeft","&[x-placement*=\"left\"] $arrow","marginRight","Meta","editDate","onDateClick","views","meta","& a","MessageStatus","handleUpdateMessageSend","bind","handleUpdateChatReadOutbox","sendingState","unread","payload","old_message_id","newMessageId","sending_state","last_read_outbox_message_id","stateClassName","unreadSeparator","WebPage","displaySmallSize","site_name","description","url","animation","accentColorMain","Sticker","VoiceNote","voiceNote","VideoNote","videoNote","Audio","Document","Animation","Video","getSize","smallPhoto","float","Media_Photo","accentBackgroundLight","PHOTO_SIZE","PHOTO_DISPLAY_SIZE","PHOTO_DISPLAY_SMALL_SIZE","accentStyles","Message","onClientUpdateClearSelection","onClientUpdateMessageHighlighted","highlighted","onUpdateMessageEdited","onUpdateMessageViews","onUpdateMessageContent","emojiMatches","getEmojiMatches","handleSelection","mouseDown","getSelection","toString","selectMessage","handleDateClick","_this$props8","handleAnimationEnd","handleMouseDown","handleMouseOver","handleMouseOut","mouseOut","handleReplyClick","_this$props9","openReply","_this$props10","_this$props11","showUnreadSeparator","showTitle","contextMenu","_this$props12","edit_date","forward_info","getText","webPage","getWebPage","media","getUnread","messageClassName","message-selected","messageSelected","messageHighlighted","Components_Message_Meta","onMouseOver","onMouseOut","onAnimationEnd","Message_UnreadSeparator","Components_Message_MessageStatus","MessageAuthor","Components_Message_Forward","Reply","message-text-1emoji","message-text-2emoji","message-text-3emoji","Message_Media_WebPage","messageAuthorColor","@keyframes highlighted","from","to","PinnedMessage","onClientUpdateSetChatClientData","clientData","onUpdateChatPinnedMessage","pinned_message_id","loadMessageContents","deletedMessage","canPinMessages","confirm","getClientData","unpinned_message_id","handleUnpin","getReplyPhotoSize","isDeletedMessage","pinnedMessage","ReplyTile","pinnedMessageContentSubtitle","_extends","source","prototype","hasOwnProperty","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Bubbles_ref2","fill","d","Bubbles_SvgBubbles","svgRef","viewBox","enableBackground","xmlSpace","ForwardRef","forwardRef","Placeholder","__webpack_require__","p","onClientUpdateDialogsReady","dialogsReady","ScrollDownButton","scrollDownButton","disableRipple","ArrowDownward_default","divider","chatPhotoStyle","ServiceMessage","getServiceMessageContent","serviceMessageContent","StickersHint","onClientUpdateRemoteStickersHint","hint","currentHint","StickerStore","getItems","stickers","loadStickersContent","onClientUpdateLocalStickersHint","previewStickerId","showPreview","cancelSend","loadPreviewContent","stickerId","loadStickerContent","stickersPerRow","hintsRef","clientWidth","STICKER_HINT_DISPLAY_SIZE","getNeighborStickers","indexes","row","column","prevRow","nextRow","prevColumn","nextColumn","ceil","Number","dataset","mouseDownStickerId","addEventListener","handleMouseUp","removeEventListener","dict","foundStickers","data-sticker-id","preview","STICKER_SMALL_DISPLAY_SIZE","blur","stickerIndex","ScrollBehaviorEnum","freeze","SCROLL_TO_BOTTOM","SCROLL_TO_UNREAD","SCROLL_TO_MESSAGE","KEEP_SCROLL_POSITION","MessagesList","onClientUpdateOpenReply","replyHistory","lastItem","prevOffsetHeight","prevScrollTop","playerOpened","abs","onClientUpdateMediaEnding","udpate","onClientUpdateMediaEnd","onClientUpdateSelection","selectionActive","scrollBehavior","onClientUpdateClearHistory","history","onUpdateChatLastMessage","onUpdateMessageSendSucceeded","handleSendSucceeded","is_outgoing","replaceMessage","viewMessages","onUpdateNewMessage","completed","newState","scrollDownVisible","insertAfter","onUpdateDeleteMessages","is_permanent","deleteHistory","updateItemsInView","itemsInView","itemsRef","messageWrapper","_message$props","children","loadIncompleteHistory","MAX_ITERATIONS","incomplete","MESSAGE_SLICE_LIMIT","onLoadNext","fromMessageId","loadMigratedHistory","onLoadMigratedHistory","finally","insertBefore","supergroupId","basicGroupChat","getSupergroupId","upgraded_from_basic_group_id","last_message","suppressHandleScroll","suppressHandleScrollOnSelectChat","prevHistory","handleScrollBehavior","scrollToBottom","scrollToMessage","scrolled","itemComponent","itemsMap","scrollToStart","_callee5","_context5","handleListDragEnter","canSendFiles","handleScrollDownClick","lastReply","pop","prevMessageId","separatorMessageId","throttle","previousChat","unread_count","last_read_inbox_message_id","MAX_VALUE","highlightMessage","loadDraftContent","_this$getMessagePhoto","getMessagePhoto","_this$getMessagePhoto2","getPhotoSize","blob","cancelGetRemoteFile","_this$getMessageStick","getMessageSticker","_this$getMessageStick2","oldMessageId","prevMessage","prevDate","getFullYear","getMonth","m","isServiceMessage","Components_Message_ServiceMessage","MESSAGE_SPLIT_MAX_TIME_S","Components_Message_Message","Components_Message_DayMeta","messages-list-selection-active","Components_ColumnMiddle_Placeholder","Components_ColumnMiddle_ScrollDownButton","Components_ColumnMiddle_PinnedMessage","Components_ColumnMiddle_FilesDropTarget","Components_ColumnMiddle_StickersHint","ShareStickerSetButton","handleMenuClick","handleOpen","getStickersLink","stickerSet","handleShare","Link_default","Share_default","StickerSetDialog","handleUpdateInstalledStickerSets","handleClientUpdateStickerSet","loadStickerSetContent","is_installed","set_id","dialogTitleRoot","disablePointerEvents","disableTypography","typographyRoot","Popup_ShareStickerSetButton","shareButtonRoot","contentRoot","flexWrap","flexDirection","flexGrow","flexShrink","pointerEvents","DialogDetails","onUpdateChatDetailsVisibility","messagesList","selectedCount","dialog-details-third-column","Components_Player_HeaderPlayer","Components_ColumnMiddle_Header","Components_ColumnMiddle_MessagesList","Footer","Components_Popup_StickerSetDialog","Components_Popup_ChatInfoDialog","MediaViewerControl","getSenderUserId","dateHint","tileControl","MediaCaption","Lottie","lazy","MediaViewerContent","onClientUpdateDocumentBlob","updateAnimationData","_getMediaFile","_getMediaFile2","animationData","isLottieMessage","getMediaFile","getAnimationData","resolve","getBlob","fileReader","FileReader","onload","parse","onerror","onabort","readAsText","_getMediaFile3","_getMediaFile4","onClientUpdateMediaThumbnailBlob","_getMediaPreviewFile","getMediaPreviewFile","_getMediaPreviewFile2","thumbnailWidth","thumbnailHeight","_getMediaFile5","_getMediaFile6","handleContentClick","changeSpeed","speed","lottieRef","_getMediaFile7","_getMediaFile8","_getMediaPreviewFile3","_getMediaPreviewFile4","isPlaying","getBlobUrl","thumbnailBlob","thumbnailSrc","isBlurred","isBlurredThumbnail","isVideo","isVideoMessage","isAnimation","isAnimationMessage","isLottie","videoWidth","videoHeight","scale","onVolumeChange","media-blurred","alt","loop","defaultOptions","autoplay","rendererSettings","preserveAspectRatio","options","isStopped","isPaused","Suspense","fallback","FileProgress","Components_Viewer_MediaCaption","_getMediaFile9","_getMediaFile10","_getMediaPreviewFile5","_getMediaPreviewFile6","MediaViewerButton","grow","MediaViewerFooterText","MediaViewerFooterButton","iconStyle","MediaViewerDownloadButton","fileId","saveDisabled","prevPropsFileId","Components_Viewer_MediaViewerFooterButton","GetApp_default","forwardIconStyle","transform","navigationIconStyle","MediaViewer","deleteConfirmationOpened","handlePrevious","new_content","old_content","currentMessageId","totalCount","loadMediaViewerContent","isMediaContent","firstSliceLoaded","between","inserted","hasNextMedia","hasPreviousMedia","oldHistory","filterMap","moveToNextMedia","reduce","accumulator","currentId","deletedCount","setMediaViewerContent","getFilter","loadHistory","_filter","maxCount","_loop","MEDIA_SLICE_LIMIT","preloadMediaViewerContent","delegateYield","cancelPreloadMediaViewerContent","saveAnimation","file_name","saveOrDownload","updateAnimationBlob","saveDocument","updateDocumentBlob","saveVideo","updateVideoBlob","savePhoto","PHOTO_BIG_SIZE","updatePhotoBlob","handleSave","handleDialogOpen","nextIndex","loadMedia","loadPrevious","loadNext","nextId","handleDialogClose","deleteForAll","handleChangeDeleteForAll","handleInvertColors","nextBackground","handleChangeSpeed","contentRef","nextSpeed","hasPrevousMedia","_this$state6","deleteConfirmationContent","deleteConfirmation","Components_Viewer_MediaViewerButton","NavigateBefore_default","Components_Viewer_MediaViewerContent","NavigateNext_default","Components_Tile_MediaViewerControl","Components_Viewer_MediaViewerFooterText","SlowMotionVideo_default","InvertColors_default","Viewer_MediaViewerDownloadButton","Reply_default","Delete_default","ProfileMediaViewerContent","onClientUpdateChatBlob","big","onClientUpdateUserBlob","prevPhoto","PROFILE_PHOTO_BIG_SIZE","ProfileMediaViewerControl","deleteIconStyle","ProfileMediaViewer","photos","currentIndex","preloadProfileMediaViewerContent","getProfilePhoto","getPhotoFromChat","updateChatPhotoBlob","getReadWriteStore","deleteLocalFile","prevFileId","currentFileId","loadProfileMediaViewerContent","inHistory","userProfilePhoto","Viewer_ProfileMediaViewerContent","Tile_ProfileMediaViewerControl","getProfilePhotoDateHint","MainPage","onClientUpdateOpenChat","onClientUpdateOpenUser","onClientUpdateProfileMediaViewerContent","profileMediaViewerContent","onClientUpdateForward","currentDialogChatId","dialogDetailsRef","page","page-third-column","Components_ColumnLeft_Dialogs","Components_ColumnMiddle_DialogDetails","Components_Footer","Components_Viewer_MediaViewer","Components_Viewer_ProfileMediaViewer","Components_Popup_ForwardDialog","withLanguage"],"mappings":"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","file":"static/js/3.ee67a19c.chunk.js","sourcesContent":["/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Sticker from '../Message/Media/Sticker';\nimport { STICKER_PREVIEW_DISPLAY_SIZE } from '../../Constants';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerPreview.css';\n\nclass StickerPreview extends React.Component {\n    state = {\n        emoji: null,\n        prevPropsSticker: null\n    };\n\n    static getDerivedStateFromProps(props, state) {\n        const { sticker } = props;\n        const { prevPropsSticker } = state;\n\n        if (sticker && prevPropsSticker) {\n            return {\n                prevPropsSticker: sticker,\n                emoji: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { sticker } = this.props;\n\n        if (sticker && sticker !== prevProps.sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    componentDidMount() {\n        const { sticker } = this.props;\n\n        if (sticker) {\n            this.loadStickerEmojis(sticker);\n        }\n    }\n\n    loadStickerEmojis = sticker => {\n        const { sticker: file } = sticker;\n        const { id } = file;\n\n        TdLibController.send({\n            '@type': 'getStickerEmojis',\n            sticker: { '@type': 'inputFileId', id }\n        }).then(result => {\n            if (this.props.sticker === sticker) {\n                this.setState({\n                    emoji: result.emojis.join(' ')\n                });\n            }\n        });\n    };\n\n    render() {\n        const { sticker } = this.props;\n        const { emoji } = this.state;\n\n        if (!sticker) return null;\n\n        return (\n            <div className='sticker-preview'>\n                <div className='sticker-preview-emoji'>{emoji}</div>\n                <Sticker sticker={sticker} displaySize={STICKER_PREVIEW_DISPLAY_SIZE} />\n            </div>\n        );\n    }\n}\n\nStickerPreview.propTypes = {\n    sticker: PropTypes.object\n};\n\nexport default StickerPreview;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { SnackbarProvider } from 'notistack';\nimport { getDisplayName } from './Utils/HOC';\nimport { MAX_SNACK } from './Constants';\n\nfunction withSnackbarNotifications(WrappedComponent) {\n    class NotificationsWrapper extends React.Component {\n        render() {\n            return (\n                <SnackbarProvider maxSnack={MAX_SNACK}>\n                    <WrappedComponent {...this.props} />\n                </SnackbarProvider>\n            );\n        }\n    }\n    NotificationsWrapper.displayName = `WithSnackbarNotifications(${getDisplayName(WrappedComponent)})`;\n\n    return NotificationsWrapper;\n}\n\nexport default withSnackbarNotifications;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './ForwardTargetChat.css';\n\nconst styles = theme => ({\n    border: {\n        borderColor: theme.palette.primary.main\n    },\n    markSelected: {\n        boxShadow: 'inset 0 0 0 10px ' + theme.palette.primary.main,\n        border: '2px solid ' + theme.palette.background.paper\n    },\n    markUnselected: {\n        boxShadow: 'inset 0 0 0 0 ' + theme.palette.primary.main,\n        border: '2px solid transparent'\n    }\n});\n\nclass ForwardTargetChat extends React.Component {\n    render() {\n        const { classes, chatId, selected, onSelect } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, true);\n\n        return (\n            <div\n                className={classNames('forward-target-chat', { 'forward-target-chat-selected': selected })}\n                onClick={onSelect}>\n                <div className='forward-target-chat-tile'>\n                    <div className='forward-target-chat-tile-wrapper'>\n                        <ChatTile chatId={chatId} />\n                    </div>\n                    {selected && <div className={classNames('forward-target-chat-selection', classes.border)} />}\n                    <div\n                        className={classNames(\n                            'forward-target-chat-mark',\n                            selected ? classes.markSelected : classes.markUnselected\n                        )}\n                    />\n                    <div className='forward-target-chat-mark-icon' />\n                </div>\n                <div className='forward-target-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nForwardTargetChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    selected: PropTypes.bool,\n    onSelect: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles, { withTheme: true })(ForwardTargetChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport OptionStore from '../Stores/OptionStore';\n\nlet cyrillicInput = null;\n\nfunction getCyrillicInputMap() {\n    return new Map([\n        ['q', 'й'],\n        ['w', 'ц'],\n        ['e', 'у'],\n        ['r', 'к'],\n        ['t', 'е'],\n        ['y', 'н'],\n        ['u', 'г'],\n        ['i', 'ш'],\n        ['o', 'щ'],\n        ['p', 'з'],\n        ['[', 'х'],\n        [']', 'ъ'],\n        ['a', 'ф'],\n        ['s', 'ы'],\n        ['d', 'в'],\n        ['f', 'а'],\n        ['g', 'п'],\n        ['h', 'р'],\n        ['j', 'о'],\n        ['k', 'л'],\n        ['l', 'д'],\n        [';', 'ж'],\n        [\"'\", 'э'],\n        ['\\\\', 'ё'],\n        ['z', 'я'],\n        ['x', 'ч'],\n        ['c', 'с'],\n        ['v', 'м'],\n        ['b', 'и'],\n        ['n', 'т'],\n        ['m', 'ь'],\n        [',', 'б'],\n        ['.', 'ю']\n    ]);\n}\n\nfunction isCyrillicPackId(packId) {\n    if (!packId) return false;\n\n    const { value } = packId;\n    if (!value) return false;\n\n    return value.value === 'ru';\n}\n\nfunction getCyrillicInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    const currentPackId = OptionStore.get('language_pack_id');\n    const suggestedPackId = OptionStore.get('suggested_language_pack_id');\n    const hasCyrillicPackId = isCyrillicPackId(currentPackId) || isCyrillicPackId(suggestedPackId);\n    if (!hasCyrillicPackId) return null;\n\n    cyrillicInput = cyrillicInput || getCyrillicInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (cyrillicInput.has(input[i])) {\n            output += cyrillicInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nlet latinInput = null;\n\nfunction getLatinInputMap() {\n    return new Map([\n        ['й', 'q'],\n        ['ц', 'w'],\n        ['у', 'e'],\n        ['к', 'r'],\n        ['е', 't'],\n        ['н', 'y'],\n        ['г', 'u'],\n        ['ш', 'i'],\n        ['щ', 'o'],\n        ['з', 'p'],\n        ['х', '['],\n        ['ъ', ']'],\n        ['ф', 'a'],\n        ['ы', 's'],\n        ['в', 'd'],\n        ['а', 'f'],\n        ['п', 'g'],\n        ['р', 'h'],\n        ['о', 'j'],\n        ['л', 'k'],\n        ['д', 'l'],\n        ['ж', ';'],\n        ['э', \"'\"],\n        ['ё', '\\\\'],\n        ['я', 'z'],\n        ['ч', 'x'],\n        ['с', 'c'],\n        ['м', 'v'],\n        ['и', 'b'],\n        ['т', 'n'],\n        ['ь', 'm'],\n        ['б', ','],\n        ['ю', '.']\n    ]);\n}\n\nfunction getLatinInput(input) {\n    if (!input) return null;\n    if (!input.length) return null;\n\n    latinInput = latinInput || getLatinInputMap();\n\n    let output = '';\n    for (let i = 0; i < input.length; i++) {\n        if (latinInput.has(input[i])) {\n            output += latinInput.get(input[i]);\n        } else {\n            return null;\n        }\n    }\n\n    return output === '' ? null : output;\n}\n\nexport { getCyrillicInput, getLatinInput };\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport ForwardTargetChat from '../Tile/ForwardTargetChat';\nimport { canSendMessages, getChatTitle, getChatUsername, isSupergroup } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { getCyrillicInput, getLatinInput } from '../../Utils/Language';\nimport { borderStyle } from '../Theme';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport UserStore from '../../Stores/UserStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ForwardDialog.css';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    dialog: {\n        color: theme.palette.text.primary\n    },\n    dialogContent: {\n        padding: 0,\n        display: 'flex',\n        position: 'relative'\n    },\n    searchList: {\n        background: theme.palette.background.paper\n    },\n    ...borderStyle(theme)\n});\n\nclass ForwardDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: [],\n            savedMessages: null\n        };\n\n        this.searchRef = React.createRef();\n        this.messageRef = React.createRef();\n\n        this.targetChats = new Map();\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        this.setSearchFocus();\n    }\n\n    loadContent = async () => {\n        this.getPublicMessageLink();\n\n        const promises = [];\n        const getChatsPromise = TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 100\n        });\n        promises.push(getChatsPromise);\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        });\n        promises.push(savedMessagesPromise);\n\n        const [chats, savedMessages] = await Promise.all(promises.map(x => x.catch(e => null)));\n\n        this.setState({\n            chatIds: chats.chat_ids,\n            savedMessages: savedMessages\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, chats.chat_ids);\n    };\n\n    getPublicMessageLink = async () => {\n        const { chatId, messageIds } = this.props;\n        if (!chatId) return;\n        if (!messageIds) return;\n        if (messageIds.length > 1) return;\n        if (!isSupergroup(chatId)) return;\n        if (!getChatUsername(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getPublicMessageLink',\n            chat_id: chatId,\n            message_id: messageIds[0],\n            for_album: false\n        });\n\n        this.setState({\n            publicMessageLink: result\n        });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: null\n        });\n    };\n\n    handleCopyLink = () => {\n        const { t } = this.props;\n        const { publicMessageLink } = this.state;\n\n        if (!publicMessageLink) return;\n        if (!publicMessageLink.link) return;\n\n        const key = `copy_link_${publicMessageLink.link}`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        copy(publicMessageLink.link);\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    getForwardPhotoSize = (chatId, messageIds) => {\n        if (messageIds.length !== 1) return null;\n\n        const message = MessageStore.get(chatId, messageIds[0]);\n        if (!message) return null;\n\n        const { can_be_forwarded, content } = message;\n        if (!can_be_forwarded && content['@type'] === 'messageChatChangePhoto') {\n            const { photo } = content;\n            if (!photo) return null;\n\n            const { sizes } = photo;\n            if (sizes && sizes.length) {\n                return sizes[sizes.length - 1];\n            }\n        }\n\n        return null;\n    };\n\n    handleSend = () => {\n        this.handleClose();\n\n        const { chatId, messageIds, photoSize, link } = this.props;\n        if (!chatId && !messageIds && !messageIds && !photoSize && !link) return;\n\n        const text = this.getInnerText(this.messageRef.current);\n\n        this.targetChats.forEach(targetChatId => {\n            if (link) {\n                if (text) {\n                    TdLibController.send({\n                        '@type': 'sendMessage',\n                        chat_id: targetChatId,\n                        reply_to_message_id: 0,\n                        disable_notifications: false,\n                        from_background: false,\n                        reply_markup: null,\n                        input_message_content: {\n                            '@type': 'inputMessageText',\n                            text: {\n                                '@type': 'formattedText',\n                                text: text,\n                                entities: null\n                            },\n                            disable_web_page_preview: true,\n                            clear_draft: false\n                        }\n                    });\n                }\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: link,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n\n                return;\n            }\n\n            const size = photoSize || this.getForwardPhotoSize(chatId, messageIds);\n            if (size) {\n                const { width, height, photo } = size;\n\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessagePhoto',\n                        photo: {\n                            '@type': 'inputFileId',\n                            id: photo.id\n                        },\n                        thumbnail: null,\n                        added_sticker_file_ids: [],\n                        width: width,\n                        height: height,\n                        caption: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        ttl: 0\n                    }\n                });\n\n                return;\n            }\n\n            if (text) {\n                TdLibController.send({\n                    '@type': 'sendMessage',\n                    chat_id: targetChatId,\n                    reply_to_message_id: 0,\n                    disable_notifications: false,\n                    from_background: false,\n                    reply_markup: null,\n                    input_message_content: {\n                        '@type': 'inputMessageText',\n                        text: {\n                            '@type': 'formattedText',\n                            text: text,\n                            entities: null\n                        },\n                        disable_web_page_preview: true,\n                        clear_draft: false\n                    }\n                });\n            }\n\n            TdLibController.send({\n                '@type': 'forwardMessages',\n                chat_id: targetChatId,\n                from_chat_id: chatId,\n                message_ids: messageIds,\n                disable_notifications: false,\n                from_background: false,\n                as_album: false\n            });\n        });\n    };\n\n    handleChangeSelection = chatId => {\n        if (this.targetChats.has(chatId)) {\n            this.targetChats.delete(chatId);\n        } else {\n            this.targetChats.set(chatId, chatId);\n        }\n\n        console.log(this.targetChats);\n\n        this.forceUpdate();\n    };\n\n    getInnerText = div => {\n        const innerText = div.innerText;\n        const innerHTML = div.innerHTML;\n\n        if (innerText && innerText === '\\n' && innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            div.innerHTML = '';\n        }\n\n        return innerText;\n    };\n\n    handleSearchKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleSearchKeyUp = () => {\n        const { chatIds, savedMessages } = this.state;\n\n        const innerHTML = this.searchRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchRef.current.innerHTML = '';\n        }\n\n        const innerText = this.getInnerText(this.searchRef.current).trim();\n        if (!innerText) {\n            this.setState({ searchText: null, searchResults: [] });\n            return;\n        }\n\n        const latinText = getLatinInput(innerText);\n        const cyrillicText = getCyrillicInput(innerText);\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const searchResults = chatsSource.filter(\n            x =>\n                this.hasSearchText(x, innerText) ||\n                (latinText && this.hasSearchText(x, latinText)) ||\n                (cyrillicText && this.hasSearchText(x, cyrillicText))\n        );\n\n        this.setState({ searchText: innerText, searchResults: searchResults });\n    };\n\n    handleSearchPaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    handleMessageKeyUp = () => {\n        const innerHTML = this.messageRef.current.innerHTML;\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.messageRef.current.innerHTML = '';\n        }\n    };\n\n    handleMessagePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    hasSearchText = (chatId, searchText) => {\n        const { t } = this.props;\n        const { savedMessages } = this.state;\n\n        if (savedMessages && chatId === savedMessages.id) {\n            const title = getChatTitle(chatId, true, t) || '';\n            if (title.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n                return true;\n            }\n        }\n\n        const title1 = getChatTitle(chatId, false, t) || '';\n        if (title1.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        const username = getChatUsername(chatId) || '';\n        if (username.toLocaleLowerCase().indexOf(searchText.toLowerCase()) !== -1) {\n            return true;\n        }\n\n        return false;\n    };\n\n    setSearchFocus = () => {\n        setTimeout(() => {\n            if (this.searchRef.current) {\n                const element = this.searchRef.current;\n\n                element.focus();\n            }\n        }, 100);\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { chatIds, searchText, searchResults, savedMessages, publicMessageLink } = this.state;\n\n        const chatsSource = savedMessages\n            ? [savedMessages.id].concat(chatIds.filter(x => x !== savedMessages.id)).filter(x => canSendMessages(x))\n            : chatIds;\n\n        const chats = chatsSource.map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        const foundChats = (searchResults || []).map(x => (\n            <ForwardTargetChat\n                key={x}\n                chatId={x}\n                selected={this.targetChats.has(x)}\n                onSelect={() => this.handleChangeSelection(x)}\n            />\n        ));\n\n        return (\n            <Dialog\n                open\n                onClose={this.handleClose}\n                aria-labelledby='forward-dialog-title'\n                aria-describedby='forward-dialog-description'\n                className={classes.dialog}>\n                <DialogTitle id='forward-dialog-title'>{t('ShareSendTo')}</DialogTitle>\n                <div\n                    ref={this.searchRef}\n                    id='forward-dialog-search'\n                    contentEditable\n                    suppressContentEditableWarning\n                    placeholder={t('Search')}\n                    onKeyDown={this.handleSearchKeyDown}\n                    onKeyUp={this.handleSearchKeyUp}\n                    onPaste={this.handleSearchPaste}\n                />\n                <div className={classNames(classes.borderColor, 'forward-dialog-content')}>\n                    <div className='forward-dialog-list'>{chats}</div>\n                    {searchText && (\n                        <div className={classNames(classes.searchList, 'forward-dialog-search-list')}>{foundChats}</div>\n                    )}\n                </div>\n                {this.targetChats.size > 0 && (\n                    <div\n                        ref={this.messageRef}\n                        id='forward-dialog-message'\n                        contentEditable\n                        suppressContentEditableWarning\n                        placeholder={t('ShareComment')}\n                        onKeyUp={this.handleMessageKeyUp}\n                        onPaste={this.handleMessagePaste}\n                    />\n                )}\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    {this.targetChats.size > 0 && (\n                        <Button onClick={this.handleSend} color='primary' autoFocus>\n                            {t('Send')}\n                        </Button>\n                    )}\n                    {!this.targetChats.size && publicMessageLink && (\n                        <Button onClick={this.handleCopyLink} color='primary'>\n                            {t('CopyLink')}\n                        </Button>\n                    )}\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nForwardDialog.propTypes = {\n    chatId: PropTypes.number,\n    messageIds: PropTypes.array,\n    photoSize: PropTypes.object\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ForwardDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getUserStatus, isUserOnline } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserStatusControl.css';\n\nconst styles = theme => ({\n    userStatusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    userStatusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass UserStatusControl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        this.state = {\n            prevUserId: userId,\n            status: getUserStatus(user),\n            isAccent: isUserOnline(user)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.userId !== state.prevUserId) {\n            const { userId } = props;\n            const user = UserStore.get(userId);\n\n            return {\n                prevUserId: userId,\n                status: getUserStatus(user),\n                isAccent: isUserOnline(user)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { userId, theme } = this.props;\n        const { status, isAccent } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.userId !== userId) {\n            return true;\n        }\n\n        if (nextState.status !== status) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n    }\n\n    onUpdateUserStatus = update => {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        if (userId === update.user_id) {\n            this.setState({ status: getUserStatus(user), isAccent: isUserOnline(user) });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { status, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames('dialog-content', classes.userStatusSubtitle, {\n                    'accent-color': isAccent,\n                    [classes.userStatusAccentSubtitle]: isAccent\n                })}>\n                {status}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(UserStatusControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport UserTile from './UserTile';\nimport UserStatusControl from './UserStatusControl';\nimport { getUserFullName } from '../../Utils/User';\nimport UserStore from '../../Stores/UserStore';\nimport './UserControl.css';\n\nclass UserControl extends React.Component {\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.userId !== this.props.userId;\n    }\n\n    handleClick = () => {\n        const { userId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(userId);\n    };\n\n    render() {\n        const { userId } = this.props;\n        const user = UserStore.get(userId);\n\n        const fullName = getUserFullName(user);\n\n        return (\n            <div className='user' onClick={this.handleClick}>\n                <div className='user-wrapper'>\n                    <UserTile userId={userId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <div className='dialog-title'>{fullName}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <UserStatusControl userId={userId} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserControl.propTypes = {\n    userId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default UserControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { getChatSubtitleWithoutTyping, isAccentChatSubtitleWithoutTyping } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport './DialogStatus.css';\n\nconst styles = theme => ({\n    statusSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    statusAccentSubtitle: {\n        color: theme.palette.primary.dark + '!important'\n    }\n});\n\nclass DialogStatus extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            subtitle: getChatSubtitleWithoutTyping(chatId),\n            isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            const { chatId } = props;\n\n            return {\n                prevChatId: chatId,\n                subtitle: getChatSubtitleWithoutTyping(chatId),\n                isAccent: isAccentChatSubtitleWithoutTyping(chatId)\n            };\n        }\n\n        return null;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.subtitle !== subtitle) {\n            return true;\n        }\n\n        if (nextState.isAccent !== isAccent) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateUserStatus = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        let updateSubtitle = false;\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        updateSubtitle = true;\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    updateSubtitle = true;\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n\n        if (updateSubtitle) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    updateSubtitle = chat => {\n        this.setState({\n            subtitle: getChatSubtitleWithoutTyping(chat.id),\n            isAccent: isAccentChatSubtitleWithoutTyping(chat.id)\n        });\n    };\n\n    onUpdateUserFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.updateSubtitle(chat);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { subtitle, isAccent } = this.state;\n\n        return (\n            <div\n                className={classNames(\n                    'dialog-status',\n                    isAccent ? classes.statusAccentSubtitle : classes.statusSubtitle\n                )}>\n                {subtitle}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(DialogStatus);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport DialogStatus from './DialogStatus';\nimport ChatStore from '../../Stores/ChatStore';\nimport './ChatControl.css';\n\nclass ChatControl extends React.Component {\n    constructor(props) {\n        super(props);\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId } = this.props;\n            this.state = {\n                chat: ChatStore.get(chatId)\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        return nextProps.chatId !== this.props.chatId;\n    }\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onTileSelect, showStatus, showSavedMessages } = this.props;\n\n        return (\n            <div className='chat' onClick={this.handleClick}>\n                <div className='chat-wrapper'>\n                    <ChatTile chatId={chatId} onSelect={onTileSelect} showSavedMessages={showSavedMessages} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} showSavedMessages={showSavedMessages} />\n                        </div>\n                        {showStatus && !showSavedMessages && (\n                            <div className='tile-second-row'>\n                                <DialogStatus chatId={chatId} />\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nChatControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    showSavedMessages: PropTypes.bool,\n    showStatus: PropTypes.bool,\n    onSelect: PropTypes.func,\n    onTileSelect: PropTypes.func\n};\n\nChatControl.defaultProps = {\n    showSavedMessages: true,\n    showStatus: true\n};\n\nexport default ChatControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './ChatDetailsHeader.css';\nimport { isChannelChat, isPrivateChat } from '../../Utils/Chat';\n\nconst styles = {\n    leftIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    rightIconButton: {\n        margin: '8px 12px 8px -2px'\n    }\n};\n\nclass ChatDetailsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, chatId, t, backButton, onClick, onClose } = this.props;\n\n        let info = t('ChatInfo');\n        if (isPrivateChat(chatId)) {\n            info = t('Info');\n        } else if (isChannelChat(chatId)) {\n            info = t('ChannelInfo');\n        }\n\n        return (\n            <div className='header-master'>\n                {backButton && (\n                    <IconButton className={classes.leftIconButton} onClick={onClose}>\n                        <ArrowBackIcon />\n                    </IconButton>\n                )}\n                <div className='header-status grow cursor-pointer' onClick={onClick}>\n                    <span className='header-status-content'>{info}</span>\n                </div>\n                {!backButton && (\n                    <IconButton className={classes.rightIconButton} onClick={onClose}>\n                        <CloseIcon />\n                    </IconButton>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(ChatDetailsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport NotificationsActiveIcon from '@material-ui/icons/NotificationsActive';\nimport Switch from '@material-ui/core/Switch';\nimport Typography from '@material-ui/core/Typography';\nimport NotificationsControl from '../ColumnMiddle/NotificationsControl';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass NotificationsListItem extends NotificationsControl {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { isMuted } = this.state;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={this.handleSetChatNotifications}>\n                <ListItemIcon>{!isMuted ? <NotificationsActiveIcon /> : <NotificationsIcon />}</ListItemIcon>\n                <ListItemText\n                    primary={\n                        <Typography variant='inherit' noWrap>\n                            {t('Notifications')}\n                        </Typography>\n                    }\n                />\n                <ListItemSecondaryAction>\n                    <Switch color='primary' onChange={this.handleSetChatNotifications} checked={!isMuted} />\n                </ListItemSecondaryAction>\n            </ListItem>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(NotificationsListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Collapse from '@material-ui/core/Collapse';\nimport Typography from '@material-ui/core/Typography';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { isUserBlocked } from '../../Utils/User';\nimport { isChannelChat, isChatMember, isGroupChat } from '../../Utils/Chat';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    listItem: {\n        padding: '11px 22px'\n    }\n};\n\nclass MoreListItem extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId } = this.props;\n        this.state = {\n            prevChatId: chatId,\n            openMore: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                openMore: false\n            };\n        }\n\n        return null;\n    }\n\n    handleMoreClick = () => {\n        this.setState({ openMore: !this.state.openMore });\n    };\n\n    handleSendMessage = () => {\n        const currentChatId = ApplicationStore.getChatId();\n        const { chatId } = this.props;\n        if (currentChatId === chatId) {\n            //this.dialogDetails.current.scrollToBottom();\n        } else {\n            TdLibController.setChatId(chatId);\n        }\n    };\n\n    handleBlock = () => {\n        const { chatId } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.type) return;\n\n        const { user_id } = chat.type;\n        if (!user_id) return;\n\n        TdLibController.send({\n            '@type': isUserBlocked(user_id) ? 'unblockUser' : 'blockUser',\n            user_id: user_id\n        });\n    };\n\n    render() {\n        const { t, chatId, classes } = this.props;\n        const { openMore } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const isGroup = isGroupChat(chatId);\n        let isBlocked = false;\n        if (!isGroup && chat.type) {\n            isBlocked = isUserBlocked(chat.type.user_id);\n        }\n        const isMember = isChatMember(chatId);\n        const isChannel = isChannelChat(chatId);\n\n        return (\n            <>\n                <ListItem button className={classes.listItem} onClick={this.handleMoreClick}>\n                    <ListItemIcon>\n                        <MoreHorizIcon />\n                    </ListItemIcon>\n                    <ListItemText\n                        primary={\n                            <Typography variant='inherit' noWrap>\n                                {t('More')}\n                            </Typography>\n                        }\n                    />\n                    {openMore ? <ExpandLess /> : <ExpandMore />}\n                </ListItem>\n                <Collapse in={openMore} timeout='auto' unmountOnExit>\n                    <List component='div' disablePadding>\n                        {!isGroup && (\n                            <>\n                                <ListItem button className={classes.listItem} onClick={this.handleSendMessage}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {t('SendMessage')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                                <ListItem button className={classes.listItem} onClick={this.handleBlock}>\n                                    <ListItemText\n                                        inset\n                                        primary={\n                                            <Typography color='secondary' variant='inherit' noWrap>\n                                                {isBlocked ? t('Unblock') : t('BlockContact')}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            </>\n                        )}\n                        {isGroup && isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {isChannel ? t('LeaveChannel') : t('DeleteChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                        {isGroup && !isMember && (\n                            <ListItem button className={classes.listItem}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='secondary' variant='inherit' noWrap>\n                                            {t('ReportChat')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                </Collapse>\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MoreListItem);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { withTranslation } from 'react-i18next';\nimport PhotoIcon from '@material-ui/icons/Photo';\nimport AlternateEmailIcon from '@material-ui/icons/AlternateEmail';\nimport CallIcon from '@material-ui/icons/Call';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport List from '@material-ui/core/List';\nimport Typography from '@material-ui/core/Typography';\nimport UserControl from '../Tile/UserControl';\nimport ChatControl from '../Tile/ChatControl';\nimport ChatDetailsHeader from './ChatDetailsHeader';\nimport NotificationsListItem from './NotificationsListItem';\nimport MoreListItem from './MoreListItem';\nimport {\n    getChatUsername,\n    getChatPhoneNumber,\n    getChatBio,\n    isGroupChat,\n    getGroupChatMembers,\n    getChatFullInfo,\n    isPrivateChat,\n    getChatUserId,\n    isMeChat\n} from '../../Utils/Chat';\nimport { getUserStatusOrder } from '../../Utils/User';\nimport { loadUsersContent, loadChatsContent } from '../../Utils/File';\nimport { formatPhoneNumber } from '../../Utils/Common';\nimport { openChat, openUser, setProfileMediaViewerContent } from '../../Actions/Client';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport OptionStore from '../../Stores/OptionStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatDetails.css';\n\nconst styles = theme => ({\n    closeIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    nested: {\n        // paddingLeft: theme.spacing.unit * 4,\n    },\n    close: {\n        padding: theme.spacing.unit / 2\n    },\n    listItem: {\n        padding: '11px 22px'\n    }\n});\n\nclass ChatDetails extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.chatDetailsListRef = React.createRef();\n\n        const { chatId } = this.props;\n\n        this.members = new Map();\n        this.state = {\n            prevChatId: chatId,\n            hasGroupsInCommon: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId) {\n            return {\n                prevChatId: props.chatId,\n                hasGroupsInCommon: false\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = list;\n        const snapshot = {\n            scrollTop: scrollTop,\n            scrollHeight: scrollHeight,\n            offsetHeight: offsetHeight\n        };\n\n        console.log(\n            `[ChatDetails] getSnapshotBeforeUpdate chatId=${chatId} scrollTop=${scrollTop} scrollHeight=${scrollHeight} offsetHeight=${offsetHeight}`\n        );\n\n        return snapshot;\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.hasGroupsInCommon !== hasGroupsInCommon) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId } = this.props;\n        if (prevProps.chatId !== chatId) {\n            this.handleSelectChat();\n        }\n\n        const list = this.chatDetailsListRef.current;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n        if (prevProps.chatId === chatId) {\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n        } else {\n            list.scrollTop = 0;\n        }\n    }\n\n    componentDidMount() {\n        this.handleSelectChat();\n\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n    }\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.handleSelectChat();\n\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(this.props.chatId);\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate(); // update bio\n        }\n    };\n\n    onUpdateUserStatus = update => {\n        if (this.members.has(update.user_id)) {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectChat = () => {\n        this.getFullInfo();\n\n        this.getGroupsInCommon();\n\n        this.loadChatContents();\n    };\n\n    loadChatContents = () => {\n        const { chatId } = this.props;\n\n        const store = FileStore.getStore();\n\n        loadChatsContent(store, [chatId]);\n        const members = getGroupChatMembers(chatId).map(x => x.user_id);\n        loadUsersContent(store, members);\n    };\n\n    getFullInfo = () => {\n        const { chatId } = this.props;\n\n        getChatFullInfo(chatId);\n    };\n\n    getGroupsInCommon = async () => {\n        const { chatId } = this.props;\n\n        const isGroup = isGroupChat(chatId);\n        if (isGroup) return;\n\n        const isMe = isMeChat(chatId);\n        if (isMe) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: getChatUserId(chatId),\n            offset_chat_id: 0,\n            limit: 1\n        });\n\n        this.setState({ hasGroupsInCommon: result.chat_ids.length > 0 });\n    };\n\n    handleUsernameHint = () => {\n        const { t, chatId } = this.props;\n        const username = getChatUsername(chatId);\n        if (!username) return;\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n        const usernameLink = telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/';\n\n        copy(usernameLink + username);\n\n        const key = `${chatId}_copy_username`;\n        const message = t('TextCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handlePhoneHint = () => {\n        const { t, chatId } = this.props;\n        const phoneNumber = getChatPhoneNumber(chatId);\n        if (!phoneNumber) return;\n\n        copy(formatPhoneNumber(phoneNumber));\n\n        const key = `${chatId}_copy_phone`;\n        const message = t('PhoneCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    handleHeaderClick = () => {\n        this.chatDetailsListRef.current.scrollTop = 0;\n    };\n\n    handleOpenViewer = () => {\n        const { chatId, popup } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n        if (!chat.photo) return;\n\n        setProfileMediaViewerContent({ chatId: chatId });\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenChat = () => {\n        const { chatId, popup } = this.props;\n\n        openChat(chatId, null, false);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    handleOpenUser = userId => {\n        openUser(userId, true);\n    };\n\n    getContentHeight = () => {\n        if (!this.chatDetailsListRef) return 0;\n\n        return this.chatDetailsListRef.current.clientHeight;\n    };\n\n    render() {\n        const {\n            t,\n            className,\n            chatId,\n            classes,\n            onOpenSharedMedia,\n            onOpenGroupsInCommon,\n            popup,\n            backButton,\n            onClose\n        } = this.props;\n        const { hasGroupsInCommon } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) {\n            return (\n                <div className='chat-details'>\n                    <ChatDetailsHeader onClose={onClose} />\n                    <div ref={this.chatDetailsListRef} className='chat-details-list' />\n                </div>\n            );\n        }\n\n        const username = getChatUsername(chatId);\n        const phoneNumber = getChatPhoneNumber(chatId);\n        const bio = getChatBio(chatId);\n        const isGroup = isGroupChat(chatId);\n        const isMe = isMeChat(chatId);\n\n        const members = getGroupChatMembers(chatId);\n        const users = [];\n        this.members = new Map();\n        members.forEach(member => {\n            const user = UserStore.get(member.user_id);\n            if (user) {\n                this.members.set(user.id, user.id);\n                users.push(user);\n            }\n        });\n\n        const sortedUsers = users.sort((x, y) => {\n            return getUserStatusOrder(y) - getUserStatusOrder(x);\n        });\n        const items = sortedUsers.map(user => (\n            <ListItem button className={classes.listItem} key={user.id}>\n                <UserControl userId={user.id} onSelect={this.handleOpenUser} />\n            </ListItem>\n        ));\n\n        const { photo } = chat;\n\n        const content = (\n            <>\n                <ChatDetailsHeader\n                    chatId={chatId}\n                    backButton={backButton}\n                    onClose={onClose}\n                    onClick={this.handleHeaderClick}\n                />\n                <div ref={this.chatDetailsListRef} className='chat-details-list'>\n                    <div className='chat-details-info'>\n                        <ChatControl\n                            chatId={chatId}\n                            showStatus={popup}\n                            showSavedMessages={!popup}\n                            onTileSelect={photo ? this.handleOpenViewer : null}\n                        />\n                    </div>\n                    {(username || phoneNumber || bio) && (\n                        <List>\n                            {username && (\n                                <ListItem button className={classes.listItem} onClick={this.handleUsernameHint}>\n                                    <ListItemIcon>\n                                        <AlternateEmailIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={\n                                            <Typography variant='inherit' noWrap>\n                                                {username}\n                                            </Typography>\n                                        }\n                                    />\n                                </ListItem>\n                            )}\n                            {phoneNumber && (\n                                <>\n                                    <ListItem button className={classes.listItem} onClick={this.handlePhoneHint}>\n                                        <ListItemIcon>\n                                            <CallIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            primary={\n                                                <Typography variant='inherit' noWrap>\n                                                    {formatPhoneNumber(phoneNumber)}\n                                                </Typography>\n                                            }\n                                        />\n                                    </ListItem>\n                                </>\n                            )}\n                            {bio && (\n                                <ListItem className={classes.listItem}>\n                                    <ListItemIcon>\n                                        <ErrorOutlineIcon className='chat-details-info-icon' />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        primary={bio}\n                                        style={{ whiteSpace: 'pre-wrap', wordWrap: 'break-word' }}\n                                    />\n                                </ListItem>\n                            )}\n                        </List>\n                    )}\n                    <Divider />\n                    <List>\n                        {!isMe && <NotificationsListItem chatId={chatId} />}\n                        {isGroup && <MoreListItem chatId={chatId} />}\n                        {popup && !isGroup && (\n                            <ListItem button className={classes.listItem} onClick={this.handleOpenChat}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography color='primary' variant='inherit' noWrap>\n                                            {t('SendMessage').toUpperCase()}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {!isMe && <Divider />}\n                    <List>\n                        <ListItem button disabled className={classes.listItem} onClick={onOpenSharedMedia}>\n                            <ListItemIcon>\n                                <PhotoIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                primary={\n                                    <Typography variant='inherit' noWrap>\n                                        {t('SharedMedia')}\n                                    </Typography>\n                                }\n                            />\n                        </ListItem>\n                        {hasGroupsInCommon && (\n                            <ListItem button className={classes.listItem} onClick={onOpenGroupsInCommon}>\n                                <ListItemText\n                                    inset\n                                    primary={\n                                        <Typography variant='inherit' noWrap>\n                                            {t('GroupsInCommon')}\n                                        </Typography>\n                                    }\n                                />\n                            </ListItem>\n                        )}\n                    </List>\n                    {items.length > 0 && (\n                        <>\n                            <Divider />\n                            <List>{items}</List>\n                        </>\n                    )}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className={classNames('chat-details', className)}>{content}</div>;\n    }\n}\n\nChatDetails.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    popup: PropTypes.bool,\n    onClose: PropTypes.func,\n    onOpenSharedMedia: PropTypes.func,\n    onOpenGroupsInCommon: PropTypes.func\n};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withSnackbar,\n    withRestoreRef()\n);\n\nexport default enhance(ChatDetails);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './GroupsInCommonHeader.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass GroupsInCommonHeader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, onClose } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={onClose}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Groups in common</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nGroupsInCommonHeader.propTypes = {\n    onClose: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(GroupsInCommonHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatControl from '../Tile/ChatControl';\nimport GroupsInCommonHeader from './GroupsInCommonHeader';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { loadChatsContent } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport FileStore from '../../Stores/FileStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './GroupsInCommon.css';\n\nclass GroupsInCommon extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatIds: []\n        };\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n\n        const userId = getChatUserId(chatId);\n        if (!userId) return;\n\n        TdLibController.send({\n            '@type': 'getGroupsInCommon',\n            user_id: userId,\n            offset_chat_id: 0,\n            limit: 100\n        }).then(result => {\n            const store = FileStore.getStore();\n            loadChatsContent(store, result.chat_ids);\n\n            this.setState({ chatIds: result.chat_ids });\n        });\n    }\n\n    handleSelect = chatId => {\n        const { popup } = this.props;\n\n        openChat(chatId);\n\n        if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        }\n    };\n\n    render() {\n        const { minHeight, onClose, popup } = this.props;\n        const { chatIds } = this.state;\n\n        const chats = chatIds.map(x => (\n            <ListItem button key={x}>\n                <ChatControl chatId={x} onSelect={this.handleSelect} />\n            </ListItem>\n        ));\n\n        const content = (\n            <>\n                <GroupsInCommonHeader onClose={onClose} />\n                <div className='groups-in-common-list' style={{ minHeight }}>\n                    {chats}\n                </div>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='groups-in-common'>{content}</div>;\n    }\n}\n\nGroupsInCommon.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nGroupsInCommon.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default GroupsInCommon;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport './SharedMediaHeaderControl.css';\n\nconst styles = {\n    backIconButton: {\n        margin: '8px -2px 8px 12px'\n    }\n};\n\nclass SharedMediaHeaderControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { classes, close } = this.props;\n\n        return (\n            <div className='header-master'>\n                <IconButton className={classes.backIconButton} onClick={close}>\n                    <ArrowBackIcon />\n                </IconButton>\n                <div className='header-status grow cursor-pointer'>\n                    <span className='header-status-content'>Shared Media</span>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(SharedMediaHeaderControl);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport SharedMediaHeaderControl from './SharedMediaHeaderControl';\nimport './SharedMedia.css';\nimport PropTypes from 'prop-types';\nimport GroupsInCommon from './GroupsInCommon';\n\nclass SharedMedia extends React.Component {\n    state = {\n        value: 0\n    };\n\n    handleChange = (event, value) => {\n        this.setState({ value });\n    };\n\n    render() {\n        const { onClose, popup } = this.props;\n        const { value } = this.state;\n\n        const content = (\n            <>\n                <SharedMediaHeaderControl close={onClose} />\n                <Tabs\n                    value={value}\n                    onChange={this.handleChange}\n                    indicatorColor='primary'\n                    textColor='primary'\n                    scrollable\n                    scrollButtons='off'\n                    fullWidth>\n                    <Tab label='Media' style={{ minWidth: '40px' }} />\n                    <Tab label='Docs' style={{ minWidth: '40px' }} />\n                    <Tab label='Links' style={{ minWidth: '40px' }} />\n                    <Tab label='Audio' style={{ minWidth: '40px' }} />\n                </Tabs>\n            </>\n        );\n\n        return popup ? <>{content}</> : <div className='shared-media'>{content}</div>;\n    }\n}\n\nSharedMedia.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClose: PropTypes.func.isRequired,\n    popup: PropTypes.bool,\n    minHeight: PropTypes.number\n};\n\nSharedMedia.defaultProps = {\n    popup: false,\n    minHeight: 0\n};\n\nexport default SharedMedia;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatDetails from './ChatDetails';\nimport GroupsInCommon from './GroupsInCommon';\nimport SharedMedia from './SharedMedia';\nimport { borderStyle } from '../Theme';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfo.css';\n\n// const styles = (theme) => ({\n//     borderColor: {\n//         borderColor: theme.palette.divider\n//     }\n// });\n\nclass ChatInfo extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.detailsRef = React.createRef();\n\n        const { popup } = props;\n\n        this.state = {\n            chatId: popup ? ApplicationStore.dialogChatId : ApplicationStore.chatId\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { popup } = this.props;\n        if (popup) return;\n\n        this.setState({\n            chatId: update.nextChatId,\n            userChatId: null,\n            openSharedMedia: false,\n            openGroupsInCommon: false\n        });\n    };\n\n    handelOpenSharedMedia = () => {\n        this.setState({ openSharedMedia: true });\n    };\n\n    handleCloseSharedMedia = () => {\n        this.setState({ openSharedMedia: false });\n    };\n\n    handleOpenGroupsInCommon = height => {\n        console.log('ChatInfo.handleOpenGroupsInCommon', height);\n        this.setState({ openGroupsInCommon: true });\n    };\n\n    handleCloseGroupsInCommon = () => {\n        this.setState({ openGroupsInCommon: false });\n    };\n\n    handleCloseChatDetails = () => {\n        const { popup } = this.props;\n        const { userChatId } = this.state;\n        if (userChatId) {\n            this.setState({ userChatId: null });\n        } else if (popup) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateDialogChatId',\n                chatId: 0\n            });\n        } else {\n            ApplicationStore.changeChatDetailsVisibility(false);\n        }\n    };\n\n    handleSelectUser = async user => {\n        if (!user) return;\n\n        let chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: user.id,\n            force: true\n        });\n\n        chat = ChatStore.get(chat.id) || chat;\n        if (!chat) return;\n\n        this.setState({ userChatId: chat.id });\n    };\n\n    render() {\n        const { classes, className, popup } = this.props;\n        const { chatId, userChatId, openSharedMedia, openGroupsInCommon } = this.state;\n        const currentChatId = chatId || userChatId;\n        const minHeight = this.detailsRef && this.detailsRef.current ? this.detailsRef.current.getContentHeight() : 0;\n\n        let content = null;\n        if (openSharedMedia) {\n            content = (\n                <SharedMedia\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseSharedMedia}\n                />\n            );\n        } else if (openGroupsInCommon) {\n            content = (\n                <GroupsInCommon\n                    chatId={currentChatId}\n                    popup={popup}\n                    minHeight={minHeight}\n                    onClose={this.handleCloseGroupsInCommon}\n                />\n            );\n        } else {\n            content = (\n                <ChatDetails\n                    ref={this.detailsRef}\n                    chatId={currentChatId}\n                    popup={popup}\n                    backButton={userChatId === chatId}\n                    onOpenSharedMedia={this.handelOpenSharedMedia}\n                    onOpenGroupsInCommon={this.handleOpenGroupsInCommon}\n                    onClose={this.handleCloseChatDetails}\n                />\n            );\n        }\n\n        return popup ? (\n            <>{content}</>\n        ) : (\n            <div className={classNames(classes.borderColor, { 'right-column': !popup }, className)}>{content}</div>\n        );\n    }\n}\n\nChatInfo.propTypes = {\n    className: PropTypes.string,\n    classes: PropTypes.object,\n    popup: PropTypes.bool\n};\n\nChatInfo.defaultProps = {\n    className: null,\n    classes: null,\n    popup: false\n};\n\nexport default withStyles(borderStyle)(ChatInfo);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport { getChatShortTitle } from '../../Utils/Chat';\nimport './TopChat.css';\n\nconst styles = {\n    userStatusRoot: {\n        position: 'absolute',\n        right: 1,\n        bottom: 1,\n        zIndex: 1\n    }\n};\n\nclass TopChat extends React.PureComponent {\n    render() {\n        const { classes, chatId, onSelect, showSavedMessages } = this.props;\n\n        const shortTitle = getChatShortTitle(chatId, showSavedMessages);\n\n        return (\n            <div className='top-chat'>\n                <ChatTile chatId={chatId} onSelect={onSelect} showSavedMessages={showSavedMessages} showOnline />\n                <div className='top-chat-title'>{shortTitle}</div>\n            </div>\n        );\n    }\n}\n\nTopChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func,\n    showSavedMessages: PropTypes.bool\n};\n\nTopChat.defaultProps = {\n    showSavedMessages: true\n};\n\nexport default withStyles(styles)(TopChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport './RecentlyFoundChat.css';\n\nconst styles = {\n    listItem: {\n        padding: 0\n    }\n};\n\nclass RecentlyFoundChat extends React.PureComponent {\n    render() {\n        const { chatId, onClick, classes } = this.props;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div className='recently-found-chat'>\n                    <div className='chat-wrapper'>\n                        <ChatTile chatId={chatId} />\n                        <div className='dialog-inner-wrapper'>\n                            <div className='tile-first-row'>\n                                <DialogTitle chatId={chatId} />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nRecentlyFoundChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onSelect: PropTypes.func\n};\n\nexport default withStyles(styles)(RecentlyFoundChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ListItem from '@material-ui/core/ListItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport classNames from 'classnames';\nimport ChatTile from './ChatTile';\nimport DialogTitle from './DialogTitle';\nimport { getChatUsername, getGroupChatMembersCount } from '../../Utils/Chat';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundPublicChat.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundPublicChatActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    },\n    foundPublicChatSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass FoundPublicChat extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            previousChatId: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId, previousChatId } = update;\n\n        this.setState({\n            nextChatId: nextChatId,\n            previousChatId: previousChatId\n        });\n    };\n\n    handleClick = () => {\n        const { chatId, onSelect } = this.props;\n        if (!onSelect) return;\n\n        onSelect(chatId);\n    };\n\n    render() {\n        const { chatId, onClick, classes } = this.props;\n        const selectedChatId = this.state.nextChatId;\n\n        const username = getChatUsername(chatId);\n        const membersCount = getGroupChatMembersCount(chatId);\n        let subscribersString = '';\n        if (membersCount > 0) {\n            subscribersString = membersCount === 1 ? ', 1 subscriber' : `, ${membersCount} subscribers`;\n        }\n\n        return (\n            <ListItem button classes={{ root: classes.listItem }} onClick={onClick}>\n                <div\n                    className={classNames('found-public-chat', {\n                        [classes.foundPublicChatActive]: chatId === selectedChatId,\n                        'accent-background': chatId === selectedChatId\n                    })}\n                    onClick={this.handleClick}>\n                    <ChatTile chatId={chatId} />\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundPublicChatSubtitle)}>\n                                @{username}\n                                {subscribersString}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundPublicChat.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(FoundPublicChat);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ListItem from '@material-ui/core/ListItem';\nimport ChatTile from './ChatTile';\nimport UserTile from './UserTile';\nimport DialogTitle from './DialogTitle';\nimport { getMessageDate, getMessageSenderFullName, getMessageSenderName } from '../../Utils/Chat';\nimport { getContent } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './FoundMessage.css';\n\nconst styles = theme => ({\n    listItem: {\n        padding: 0\n    },\n    foundMessageSubtitle: {\n        color: theme.palette.text.secondary\n    },\n    verifiedIcon: {\n        color: theme.palette.primary.main\n    },\n    foundMessageActive: {\n        color: '#fff',\n        backgroundColor: theme.palette.primary.main,\n        '& $verifiedIcon': {\n            color: '#fff'\n        }\n    }\n});\n\nclass FoundMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            nextChatId: ApplicationStore.getChatId(),\n            nextMessageId: ApplicationStore.getMessageId()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n\n        if (nextState.nextChatId === chatId && nextState.nextMessageId === messageId) {\n            return true;\n        }\n\n        if (nextState.previousChatId === chatId && nextState.previousMessageId === messageId) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            ...update\n        });\n    };\n\n    render() {\n        const { chatId, messageId, chatSearch, onClick, classes, t } = this.props;\n        const selectedChatId = this.state.nextChatId;\n        const selectedMessageId = this.state.nextMessageId;\n        const message = MessageStore.get(chatId, messageId);\n\n        const { sender_user_id } = message;\n\n        const date = getMessageDate(message);\n        const senderName = getMessageSenderName(message);\n        const senderFullName = getMessageSenderFullName(message);\n        const content = getContent(message, t) || '\\u00A0';\n        const selected = chatId === selectedChatId && messageId === selectedMessageId;\n\n        const tile = sender_user_id && chatSearch ? <UserTile userId={sender_user_id} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <ListItem button className={classes.listItem} onClick={onClick}>\n                <div\n                    className={classNames(\n                        'found-message',\n                        { [classes.foundMessageActive]: selected },\n                        { 'accent-background': selected }\n                    )}>\n                    {tile}\n                    <div className='dialog-inner-wrapper'>\n                        <div className='tile-first-row'>\n                            {chatSearch && senderFullName ? (\n                                <div className='dialog-title'>{senderFullName}</div>\n                            ) : (\n                                <DialogTitle chatId={chatId} classes={{ verifiedIcon: classes.verifiedIcon }} />\n                            )}\n                            <div className={classNames('dialog-meta', classes.foundMessageSubtitle)}>{date}</div>\n                        </div>\n                        <div className='tile-second-row'>\n                            <div className={classNames('dialog-content', classes.foundMessageSubtitle)}>\n                                {\n                                    <>\n                                        {!chatSearch && senderName && (\n                                            <span className='dialog-content-accent'>{senderName}: </span>\n                                        )}\n                                        {content}\n                                    </>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </ListItem>\n        );\n    }\n}\n\nFoundMessage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    chatSearch: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(FoundMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './SearchCaption.css';\n\nconst styles = theme => ({\n    searchCaption: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] + '!important' : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    },\n    searchCaptionCommand: {\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary + '!important' : '#8096a8'\n    }\n});\n\nfunction SearchCaption(props) {\n    const { caption, command, onClick, classes } = props;\n\n    return (\n        <div className={classNames('search-caption', classes.searchCaption)}>\n            <div className='search-caption-title'>{caption}</div>\n            {Boolean(command) && (\n                <a className={classes.searchCaptionCommand} onClick={onClick}>\n                    {command}\n                </a>\n            )}\n        </div>\n    );\n}\n\nSearchCaption.propTypes = {\n    caption: PropTypes.string.isRequired,\n    command: PropTypes.string,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles, { withTheme: true })(SearchCaption);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport ChatControl from '../../Tile/ChatControl';\nimport TopChat from '../../Tile/TopChat';\nimport RecentlyFoundChat from '../../Tile/RecentlyFoundChat';\nimport FoundPublicChat from '../../Tile/FoundPublicChat';\nimport FoundMessage from '../../Tile/FoundMessage';\nimport SearchCaption from './SearchCaption';\nimport { loadChatsContent, loadUsersContent } from '../../../Utils/File';\nimport { filterMessages } from '../../../Utils/Message';\nimport { getCyrillicInput, getLatinInput } from '../../../Utils/Language';\nimport { orderCompare } from '../../../Utils/Common';\nimport { USERNAME_LENGTH_MIN } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport FileStore from '../../../Stores/FileStore';\nimport ChatStore from '../../../Stores/ChatStore';\nimport UserStore from '../../../Stores/UserStore';\nimport ApplicationStore from '../../../Stores/ApplicationStore';\nimport TdLibController from '../../../Controllers/TdLibController';\nimport './Search.css';\n\nconst styles = theme => ({\n    closeSearchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    listItem: {\n        padding: '0px'\n    },\n    search: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    }\n});\n\nclass Search extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n\n        const { chatId, text } = this.props;\n\n        this.state = {\n            prevPropsChatId: chatId,\n            prevPropsText: text,\n\n            top: null,\n            recentlyFound: null,\n            local: null,\n            global: null,\n            messages: null\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevPropsChatId || props.text !== state.prevPropsText) {\n            return {\n                prevPropsChatId: props.chatId,\n                prevPropsText: props.text,\n\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ApplicationStore.on('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateSearchText', this.onClientUpdateSearchText);\n    }\n\n    onClientUpdateSearchText = update => {\n        const { text } = update;\n\n        const trimmedText = text.trim();\n\n        if (!trimmedText) {\n            this.loadContent();\n        } else {\n            this.searchText(trimmedText);\n        }\n    };\n\n    concatSearchResults = results => {\n        const arr = [];\n        const map = new Map();\n\n        for (let i = 0; i < results.length; i++) {\n            let result = results[i] && results[i].chat_ids;\n            if (result) {\n                for (let j = 0; j < result.length; j++) {\n                    if (!map.has(result[j])) {\n                        map.set(result[j], result[j]);\n                        arr.push(result[j]);\n                    }\n                }\n            }\n        }\n\n        arr.sort((a, b) => {\n            return orderCompare(ChatStore.get(b).order, ChatStore.get(a).order);\n        });\n\n        return arr;\n    };\n\n    searchText = async text => {\n        this.sessionId = new Date();\n        this.text = text;\n        const sessionId = this.sessionId;\n        let store = null;\n\n        const { chatId } = this.props;\n        const { savedMessages } = this.state;\n\n        if (!chatId) {\n            const promises = [];\n            const localPromise = TdLibController.send({\n                '@type': 'searchChats',\n                query: text,\n                limit: 100\n            });\n            promises.push(localPromise);\n\n            const latinText = getLatinInput(text);\n            if (latinText && latinText !== text) {\n                const latinLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: latinText,\n                    limit: 100\n                });\n                promises.push(latinLocalPromise);\n            }\n\n            const cyrillicText = getCyrillicInput(text);\n            if (cyrillicText && cyrillicText !== text) {\n                const cyrillicLocalPromise = TdLibController.send({\n                    '@type': 'searchChats',\n                    query: cyrillicText,\n                    limit: 100\n                });\n                promises.push(cyrillicLocalPromise);\n            }\n\n            const results = await Promise.all(promises.map(x => x.catch(e => null)));\n            const local = this.concatSearchResults(results);\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            if (savedMessages) {\n                const { t } = this.props;\n\n                const searchText = text.toUpperCase();\n                const savedMessagesStrings = ['SAVED MESSAGES', t('SavedMessages').toUpperCase()];\n\n                if (\n                    savedMessagesStrings.some(el => el.includes(searchText)) ||\n                    (latinText && savedMessagesStrings.some(el => el.includes(latinText.toUpperCase())))\n                ) {\n                    local.splice(0, 0, savedMessages.id);\n                }\n            }\n\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: local\n            });\n\n            store = FileStore.getStore();\n            loadChatsContent(store, local);\n\n            let trimmedText = text.trim();\n            trimmedText = trimmedText.startsWith('@') ? trimmedText.substr(1) : trimmedText;\n            if (trimmedText.length >= USERNAME_LENGTH_MIN) {\n                const globalPromises = [];\n\n                const globalPromise = TdLibController.send({\n                    '@type': 'searchPublicChats',\n                    query: trimmedText\n                });\n                globalPromises.push(globalPromise);\n\n                if (latinText) {\n                    let latinTrimmedText = latinText.trim();\n                    latinTrimmedText = latinTrimmedText.startsWith('@') ? latinTrimmedText.substr(1) : latinTrimmedText;\n                    if (latinTrimmedText.length >= USERNAME_LENGTH_MIN && latinTrimmedText !== trimmedText) {\n                        const globalLatinPromise = TdLibController.send({\n                            '@type': 'searchPublicChats',\n                            query: latinTrimmedText\n                        });\n                        globalPromises.push(globalLatinPromise);\n                    }\n                }\n\n                const globalResults = await Promise.all(globalPromises.map(x => x.catch(e => null)));\n                const global = this.concatSearchResults(globalResults);\n\n                if (sessionId !== this.sessionId) {\n                    return;\n                }\n\n                this.setState({\n                    global\n                });\n\n                store = FileStore.getStore();\n                loadChatsContent(store, global);\n            } else {\n                this.setState({\n                    global: null\n                });\n            }\n        }\n\n        let messages = [];\n        if (chatId) {\n            messages = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: text,\n                sender_user_id: 0,\n                from_message_id: 0,\n                offset: 0,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            messages = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: text,\n                offset_date: 0,\n                offset_chat_id: 0,\n                offset_message_id: 0,\n                limit: 50\n            });\n        }\n\n        MessageStore.setItems(messages.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < messages.messages.length; i++) {\n            chats.set(messages.messages[i].chat_id, messages.messages[i].chat_id);\n            if (messages.messages[i].sender_user_id) {\n                users.set(messages.messages[i].sender_user_id, messages.messages[i].sender_user_id);\n            }\n        }\n\n        store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    loadContent = async () => {\n        const { chatId } = this.props;\n        if (chatId) {\n            this.setState({\n                top: null,\n                recentlyFound: null,\n                local: null,\n                global: null,\n                messages: null\n            });\n\n            return;\n        }\n\n        const topPromise = TdLibController.send({\n            '@type': 'getTopChats',\n            category: { '@type': 'topChatCategoryUsers' },\n            limit: 30\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const recentlyFoundPromise = TdLibController.send({\n            '@type': 'searchChats',\n            query: '',\n            limit: 100\n        }).catch(() => {\n            return { '@type': 'chats', chat_ids: [] };\n        });\n\n        const savedMessagesPromise = TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: UserStore.getMyId(),\n            force: true\n        }).catch(error => {});\n\n        const [top, recentlyFound, savedMessages] = await Promise.all([\n            topPromise,\n            recentlyFoundPromise,\n            savedMessagesPromise\n        ]);\n\n        this.setState({\n            top: top,\n            recentlyFound: recentlyFound,\n            savedMessages: savedMessages,\n            local: null,\n            global: null,\n            messages: null\n        });\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, top.chat_ids);\n        loadChatsContent(store, recentlyFound.chat_ids);\n    };\n\n    handleRecentlyFound = async () => {\n        const chats = await TdLibController.send({\n            '@type': 'getChats',\n            offset_order: '9223372036854775807',\n            offset_chat_id: 0,\n            limit: 20\n        });\n\n        for (let i = chats.chat_ids.length - 1; i >= 0; i--) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chats.chat_ids[i]\n            });\n        }\n    };\n\n    handleClearRecentlyFound = event => {\n        event.stopPropagation();\n\n        TdLibController.send({\n            '@type': 'clearRecentlyFoundChats'\n        });\n\n        this.setState({ recentlyFound: null });\n    };\n\n    handleSelectMessage = (chatId, messageId, addToRecent, keepOpen) => {\n        const { onSelectMessage } = this.props;\n\n        if (addToRecent) {\n            TdLibController.send({\n                '@type': 'addRecentlyFoundChat',\n                chat_id: chatId\n            });\n        }\n\n        onSelectMessage(chatId, messageId, keepOpen);\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n\n        if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            this.onLoadPrevious();\n        }\n    };\n\n    getOffset = messages => {\n        const length = messages ? messages.messages.length : 0;\n\n        const offsetDate = length > 0 ? messages.messages[length - 1].date : 0;\n        const offsetChatId = length > 0 ? messages.messages[length - 1].chat_id : 0;\n        const offsetMessageId = length > 0 ? messages.messages[length - 1].id : 0;\n\n        return {\n            offset_date: offsetDate,\n            offset_chat_id: offsetChatId,\n            offset_message_id: offsetMessageId\n        };\n    };\n\n    concatMessages = (messages, result) => {\n        if (!result) return messages;\n        if (!result.messages.length) return messages;\n\n        if (!messages) return result;\n        if (!messages.messages.length) return result;\n\n        return {\n            total_count: result.total_count,\n            messages: messages.messages.concat(result.messages)\n        };\n    };\n\n    onLoadPrevious = async () => {\n        if (this.loading) return;\n\n        const { chatId } = this.props;\n\n        const sessionId = this.sessionId;\n\n        const { messages } = this.state;\n\n        const offset = this.getOffset(messages);\n\n        this.loading = true;\n        let result = [];\n        if (chatId) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: this.text,\n                sender_user_id: 0,\n                from_message_id: offset.offset_message_id,\n                limit: 50,\n                filter: null\n            });\n        } else {\n            result = await TdLibController.send({\n                '@type': 'searchMessages',\n                query: this.text,\n                ...offset,\n                limit: 50\n            });\n        }\n        this.loading = false;\n\n        filterMessages(result, messages ? messages.messages : []);\n\n        MessageStore.setItems(result.messages);\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        this.setState({\n            messages: this.concatMessages(messages, result)\n        });\n\n        const chats = new Map();\n        const users = new Map();\n        for (let i = 0; i < result.messages.length; i++) {\n            chats.set(result.messages[i].chat_id, result.messages[i].chat_id);\n            if (result.messages[i].sender_user_id) {\n                users.set(result.messages[i].sender_user_id, result.messages[i].sender_user_id);\n            }\n        }\n\n        const store = FileStore.getStore();\n        loadChatsContent(store, [...chats.keys()]);\n        loadUsersContent(store, [...users.keys()]);\n    };\n\n    handleTopChatsScroll = event => {\n        event.stopPropagation();\n    };\n\n    handleClose = () => {\n        const { onClose } = this.props;\n\n        onClose();\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { top, recentlyFound, local, global, messages } = this.state;\n\n        const chat = ChatStore.get(chatId);\n\n        const topChats =\n            top && top.chat_ids\n                ? top.chat_ids.map(x => (\n                      <TopChat key={x} chatId={x} onSelect={() => this.handleSelectMessage(x, null, false, false)} />\n                  ))\n                : [];\n\n        const recentlyFoundChats =\n            recentlyFound && recentlyFound.chat_ids\n                ? recentlyFound.chat_ids.map(x => (\n                      <RecentlyFoundChat\n                          key={x}\n                          chatId={x}\n                          onClick={() => this.handleSelectMessage(x, null, true, false)}\n                      />\n                  ))\n                : [];\n\n        const localChats = local\n            ? local.map(x => (\n                  <RecentlyFoundChat\n                      key={x}\n                      chatId={x}\n                      onClick={() => this.handleSelectMessage(x, null, true, false)}\n                  />\n              ))\n            : [];\n\n        const globalChats = global\n            ? global.map(x => (\n                  <FoundPublicChat key={x} chatId={x} onClick={() => this.handleSelectMessage(x, null, true, true)} />\n              ))\n            : [];\n\n        const globalMessages =\n            messages && messages.messages\n                ? messages.messages.map(x => (\n                      <FoundMessage\n                          key={`${x.chat_id}_${x.id}`}\n                          chatId={x.chat_id}\n                          messageId={x.id}\n                          chatSearch={Boolean(chatId)}\n                          onClick={() => this.handleSelectMessage(x.chat_id, x.id, false, true)}\n                      />\n                  ))\n                : [];\n\n        let messagesCaption = 'No messages found';\n        if (messages && messages.total_count) {\n            messagesCaption = messages.total_count === 1 ? 'Found 1 message' : `Found ${messages.total_count} messages`;\n        }\n\n        return (\n            <div ref={this.listRef} className={classNames(classes.search, 'search')} onScroll={this.handleScroll}>\n                {chat && (\n                    <div className='search-chat'>\n                        <SearchCaption caption='Search messages in' />\n                        <div className='search-chat-wrapper'>\n                            <div className='search-chat-control'>\n                                <ChatControl chatId={chatId} showStatus={false} />\n                            </div>\n                            <IconButton\n                                className={classes.closeSearchIconButton}\n                                aria-label='Search'\n                                onMouseDown={this.handleClose}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                )}\n                {topChats.length > 0 && (\n                    <div className='search-top-chats'>\n                        <SearchCaption caption='People' />\n                        <div className='search-top-chats-list' onScroll={this.handleTopChatsScroll}>\n                            <div className='search-top-chats-placeholder' />\n                            {topChats}\n                            <div className='search-top-chats-placeholder' />\n                        </div>\n                    </div>\n                )}\n                {recentlyFoundChats.length > 0 && (\n                    <div className='search-recently-found-chats'>\n                        <SearchCaption caption='Recent' command='Clear' onClick={this.handleClearRecentlyFound} />\n                        {recentlyFoundChats}\n                    </div>\n                )}\n                {localChats.length > 0 && (\n                    <div className='search-local-chats'>\n                        <SearchCaption caption='Chats and contacts' />\n                        {localChats}\n                    </div>\n                )}\n                {globalChats.length > 0 && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption='Global search' />\n                        {globalChats}\n                    </div>\n                )}\n                {messages && (\n                    <div className='search-global-chats'>\n                        <SearchCaption caption={messagesCaption} />\n                        {globalMessages}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nSearch.propTypes = {\n    chatId: PropTypes.number,\n    text: PropTypes.string,\n    onSelectMessage: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Search);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport red from '@material-ui/core/colors/red';\nimport orange from '@material-ui/core/colors/orange';\nimport amber from '@material-ui/core/colors/amber';\nimport green from '@material-ui/core/colors/green';\nimport blue from '@material-ui/core/colors/blue';\nimport indigo from '@material-ui/core/colors/indigo';\nimport deepPurple from '@material-ui/core/colors/deepPurple';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    },\n    redRoot: {\n        color: red[600],\n        '&$checked': {\n            color: red[500]\n        }\n    },\n    orangeRoot: {\n        color: orange[600],\n        '&$checked': {\n            color: orange[500]\n        }\n    },\n    amberRoot: {\n        color: amber[600],\n        '&$checked': {\n            color: amber[500]\n        }\n    },\n    greenRoot: {\n        color: green[600],\n        '&$checked': {\n            color: green[500]\n        }\n    },\n    blueRoot: {\n        color: blue[600],\n        '&$checked': {\n            color: blue[500]\n        }\n    },\n    indigoRoot: {\n        color: indigo[600],\n        '&$checked': {\n            color: indigo[500]\n        }\n    },\n    deepPurpleRoot: {\n        color: deepPurple[600],\n        '&$checked': {\n            color: deepPurple[500]\n        }\n    },\n    checked: {}\n});\n\nclass ThemePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            open: false,\n            type: this.props.theme.palette.type,\n            color: this.getColorString(this.props.theme.palette.primary.main)\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ type: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: event.target.value,\n            primary: this.getColor(this.state.color)\n        });\n    };\n\n    handleAccentChange = event => {\n        this.setState({ color: event.target.value });\n\n        ApplicationStore.emit('clientUpdateThemeChanging', {\n            type: this.state.type,\n            primary: this.getColor(event.target.value)\n        });\n    };\n\n    getColorString = value => {\n        switch (value) {\n            case red['500']:\n                return 'red';\n            case orange['500']:\n                return 'orange';\n            case amber['500']:\n                return 'amber';\n            case green['500']:\n                return 'green';\n            case blue['500']:\n                return 'blue';\n            case indigo['500']:\n                return 'indigo';\n            case deepPurple['500']:\n                return 'deepPurple';\n        }\n\n        return null;\n    };\n\n    getColor = value => {\n        switch (value) {\n            case 'red':\n                return red;\n            case 'orange':\n                return orange;\n            case 'amber':\n                return amber;\n            case 'green':\n                return green;\n            case 'blue':\n                return blue;\n            case 'indigo':\n                return indigo;\n            case 'deepPurple':\n                return deepPurple;\n        }\n\n        return null;\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { type, color } = this.state;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={this.state.open}\n                onClose={this.handleClose}\n                aria-labelledby='alert-dialog-title'\n                aria-describedby='alert-dialog-description'>\n                <DialogTitle id='alert-dialog-title'>Appearance</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Theme\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='theme'\n                            name='theme1'\n                            className={classes.group}\n                            value={type}\n                            onChange={this.handleChange}>\n                            <FormControlLabel value='light' control={<Radio color='primary' />} label='Light' />\n                            <FormControlLabel value='dark' control={<Radio color='primary' />} label='Dark' />\n                        </RadioGroup>\n                    </FormControl>\n                    <FormControl component='fieldset' className={classes.formControl}>\n                        <FormLabel focused component='legend'>\n                            Accent\n                        </FormLabel>\n                        <RadioGroup\n                            aria-label='accent'\n                            name='accent1'\n                            className={classes.group}\n                            value={color}\n                            onChange={this.handleAccentChange}>\n                            <FormControlLabel\n                                value='red'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.redRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Red'\n                            />\n                            <FormControlLabel\n                                value='orange'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.orangeRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Orange'\n                            />\n                            <FormControlLabel\n                                value='amber'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.amberRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Amber'\n                            />\n                            <FormControlLabel\n                                value='green'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.greenRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Green'\n                            />\n                            <FormControlLabel\n                                value='blue'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.blueRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Blue'\n                            />\n                            <FormControlLabel\n                                value='indigo'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.indigoRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Indigo'\n                            />\n                            <FormControlLabel\n                                value='deepPurple'\n                                control={\n                                    <Radio\n                                        classes={{\n                                            root: classes.deepPurpleRoot,\n                                            checked: classes.checked\n                                        }}\n                                    />\n                                }\n                                label='Deep Purple'\n                            />\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nThemePicker.propTypes = {};\n\nexport default withStyles(styles, { withTheme: true })(ThemePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport { withRestoreRef, withSaveRef } from '../../Utils/HOC';\nimport TdLibController from '../../Controllers/TdLibController';\nimport LocalizationStore from '../../Stores/LocalizationStore';\n\nconst styles = theme => ({\n    formControl: {\n        margin: theme.spacing.unit * 3\n    },\n    group: {\n        margin: `${theme.spacing.unit}px 0`\n    }\n});\n\nclass LanguagePicker extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { i18n } = props;\n        const language = i18n ? i18n.language : null;\n\n        this.state = {\n            open: false,\n            language: language || 'en'\n        };\n    }\n\n    handleChange = event => {\n        this.setState({ language: event.target.value });\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateLanguageChange', language: event.target.value });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    open = () => {\n        this.setState({ open: true });\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { open, language } = this.state;\n        const info = LocalizationStore.info || { language_packs: [] };\n\n        const languages = info.language_packs.map(x => (\n            <FormControlLabel\n                key={x.id}\n                value={x.id}\n                control={<Radio color='primary' />}\n                label={`${x.name}\\xa0(${x.native_name})`}\n            />\n        ));\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                open={open}\n                onClose={this.handleClose}\n                aria-labelledby='language-dialog-title'\n                aria-describedby='language-dialog-description'>\n                <DialogTitle id='language-dialog-title'>{t('Language')}</DialogTitle>\n                <DialogContent>\n                    <FormControl component='fieldset'>\n                        <RadioGroup\n                            aria-label='language'\n                            name='language1'\n                            value={language}\n                            onChange={this.handleChange}>\n                            {languages}\n                        </RadioGroup>\n                    </FormControl>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\n\nLanguagePicker.propTypes = {};\n\nconst enhance = compose(\n    withSaveRef(),\n    withTranslation(),\n    withStyles(styles, { withTheme: true }),\n    withRestoreRef()\n);\n\nexport default enhance(LanguagePicker);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport ThemePicker from './ThemePicker';\nimport LanguagePicker from './LanguagePicker';\nimport { update } from '../../registerServiceWorker';\nimport { isAuthorizationReady } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport { WASM_FILE_HASH, WASM_FILE_NAME } from '../../Constants';\n\nconst styles = {\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n};\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'left'\n};\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            anchorEl: null\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleMenuOpen = event => {\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleLogOut = () => {\n        this.handleMenuClose();\n\n        this.props.onLogOut();\n    };\n\n    handleCheckUpdates = async () => {\n        this.handleMenuClose();\n\n        const result = await fetch(`${WASM_FILE_NAME}?_sw-precache=${WASM_FILE_HASH}`);\n        console.log('wasm result', result);\n        //await update();\n    };\n\n    handleAppearance = event => {\n        this.handleMenuClose();\n\n        this.themePicker.open();\n    };\n\n    handleLanguage = event => {\n        this.handleMenuClose();\n\n        this.languagePicker.open();\n    };\n\n    setRef = ref => {\n        console.log(this);\n        this.languagePicker = ref;\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { anchorEl, authorizationState } = this.state;\n\n        const mainMenuControl = isAuthorizationReady(authorizationState) ? (\n            <>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}>\n                    <MenuItem onClick={this.handleCheckUpdates}>{t('UpdateTelegram')}</MenuItem>\n                    <MenuItem onClick={this.handleAppearance}>{t('Appearance')}</MenuItem>\n                    <MenuItem onClick={this.handleLanguage}>{t('Language')}</MenuItem>\n                    <MenuItem onClick={this.handleLogOut}>{t('LogOut')}</MenuItem>\n                </Menu>\n            </>\n        ) : null;\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleMenuOpen}>\n                    <MenuIcon />\n                </IconButton>\n                {mainMenuControl}\n                <ThemePicker innerRef={ref => (this.themePicker = ref)} />\n                <LanguagePicker ref={ref => (this.languagePicker = ref)} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport {\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    Button,\n    IconButton\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SpeedDialIcon from '@material-ui/lab/SpeedDialIcon';\nimport MainMenuButton from './MainMenuButton';\nimport { debounce, isAuthorizationReady, throttle } from '../../Utils/Common';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport '../ColumnMiddle/Header.css';\n\nconst styles = {\n    headerIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    dialogText: {\n        whiteSpace: 'pre-wrap'\n    }\n};\n\nclass DialogsHeader extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.searchInput = React.createRef();\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            open: false\n        };\n\n        this.handleInput = debounce(this.handleInput, 250);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (this.props.openSearch && this.props.openSearch !== prevProps.openSearch) {\n            setTimeout(() => {\n                if (this.searchInput.current) {\n                    this.searchInput.current.focus();\n                }\n            }, 250);\n        }\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n    }\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    handleLogOut = () => {\n        this.setState({ open: true });\n    };\n\n    handleDone = () => {\n        this.handleClose();\n        TdLibController.logOut();\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleSearch = () => {\n        const { onSearch, openSearch } = this.props;\n        const { authorizationState } = this.state;\n        if (!isAuthorizationReady(authorizationState)) return;\n\n        onSearch(!openSearch);\n    };\n\n    handleKeyDown = event => {\n        if (event.keyCode === 13) {\n            event.preventDefault();\n        }\n    };\n\n    handleKeyUp = () => {\n        const innerText = this.searchInput.current.innerText;\n        const innerHTML = this.searchInput.current.innerHTML;\n\n        if (innerHTML && (innerHTML === '<br>' || innerHTML === '<div><br></div>')) {\n            this.searchInput.current.innerHTML = '';\n        }\n\n        ApplicationStore.emit('clientUpdateSearchText', { text: innerText });\n    };\n\n    handlePaste = event => {\n        const plainText = event.clipboardData.getData('text/plain');\n        if (plainText) {\n            event.preventDefault();\n            document.execCommand('insertHTML', false, plainText);\n        }\n    };\n\n    render() {\n        const { classes, onClick, openSearch, t } = this.props;\n        const { open } = this.state;\n\n        const confirmLogoutDialog = open ? (\n            <Dialog transitionDuration={0} open={open} onClose={this.handleClose} aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText className={classes.dialogText}>{t('AreYouSureLogout')}</DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        return (\n            <div className='header-master'>\n                {!openSearch ? (\n                    <>\n                        <MainMenuButton onLogOut={this.handleLogOut} />\n                        {confirmLogoutDialog}\n                        <div className='header-status grow cursor-pointer' onClick={onClick}>\n                            <span className='header-status-content'>{t('AppName')}</span>\n                        </div>\n                    </>\n                ) : (\n                    <>\n                        <div className='header-search-input grow'>\n                            <div\n                                id='header-search-inputbox'\n                                ref={this.searchInput}\n                                placeholder={t('Search')}\n                                key={Date()}\n                                contentEditable\n                                suppressContentEditableWarning\n                                onKeyDown={this.handleKeyDown}\n                                onKeyUp={this.handleKeyUp}\n                                onPaste={this.handlePaste}\n                            />\n                        </div>\n                    </>\n                )}\n                <IconButton\n                    className={classes.headerIconButton}\n                    aria-label={t('Search')}\n                    onMouseDown={this.handleSearch}>\n                    <SpeedDialIcon open={openSearch} icon={<SearchIcon />} openIcon={<CloseIcon />} />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nDialogsHeader.propTypes = {\n    openSearch: PropTypes.bool.isRequired,\n    onClick: PropTypes.func.isRequired,\n    onSearch: PropTypes.func.isRequired,\n    onSearchTextChange: PropTypes.func.isRequired\n};\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles)\n);\n\nexport default enhance(DialogsHeader);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Button from '@material-ui/core/Button';\nimport ApplicationStore from '../../Stores/ApplicationStore';\n\nconst styles = {\n    root: {\n        margin: 0,\n        padding: '24px',\n        width: '100%',\n        borderRadius: 0,\n        color: 'white',\n        maxHeight: '65px'\n    }\n};\n\nclass UpdatePanel extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            newContentAvailable: false\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateNewContentAvailable', this.onClientUpdateNewContentAvailable);\n    }\n\n    onClientUpdateNewContentAvailable = () => {\n        this.setState({ newContentAvailable: true });\n    };\n\n    handleUpdate = () => {\n        if (this.handled) return;\n\n        this.handled = true;\n        setTimeout(() => {\n            window.location.reload();\n        }, 250);\n    };\n\n    render() {\n        const { newContentAvailable } = this.state;\n        const { classes } = this.props;\n\n        const content = newContentAvailable ? (\n            <Button variant='contained' color='primary' className={classes.root} onClick={this.handleUpdate}>\n                Update\n            </Button>\n        ) : null;\n\n        return <>{content}</>;\n    }\n}\n\nexport default withStyles(styles)(UpdatePanel);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Search from './Search/Search';\nimport DialogsHeader from './DialogsHeader';\nimport DialogsList from './DialogsList';\nimport UpdatePanel from './UpdatePanel';\nimport { borderStyle } from '../Theme';\nimport { openChat } from '../../Actions/Client';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Dialogs.css';\n\nconst styles = theme => ({\n    ...borderStyle(theme)\n});\n\nclass Dialogs extends Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogsList = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.isChatDetailsVisible !== this.state.isChatDetailsVisible) {\n            return true;\n        }\n\n        if (nextState.openSearch !== this.state.openSearch) {\n            return true;\n        }\n\n        if (nextState.searchChatId !== this.state.searchChatId) {\n            return true;\n        }\n\n        if (nextState.searchText !== this.state.searchText) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.on('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateSearchChat', this.onClientUpdateSearchChat);\n        ApplicationStore.removeListener('clientUpdateThemeChange', this.onClientUpdateThemeChange);\n    }\n\n    onClientUpdateThemeChange = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateSearchChat = update => {\n        this.setState({\n            openSearch: true,\n            searchChatId: update.chatId,\n            searchText: null\n        });\n    };\n\n    handleHeaderClick = () => {\n        this.dialogsList.current.scrollToTop();\n    };\n\n    handleSearch = visible => {\n        this.setState({\n            openSearch: visible,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSelectMessage = (chatId, messageId, openSearch) => {\n        const { onSelectChat } = this.props;\n\n        openChat(chatId, messageId);\n\n        onSelectChat(chatId, messageId);\n\n        const searchChatId = openSearch ? this.state.searchChatId : 0;\n        const searchText = openSearch ? this.state.searchText : null;\n\n        this.setState({\n            openSearch: openSearch,\n            searchChatId: searchChatId,\n            searchText: searchText\n        });\n    };\n\n    handleClose = () => {\n        this.setState({\n            openSearch: false,\n            searchChatId: 0,\n            searchText: null\n        });\n    };\n\n    handleSearchTextChange = text => {\n        this.setState({\n            searchText: text\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, openSearch, searchChatId, searchText } = this.state;\n\n        return (\n            <div\n                className={classNames(classes.borderColor, 'dialogs', {\n                    'dialogs-third-column': isChatDetailsVisible\n                })}>\n                <DialogsHeader\n                    openSearch={openSearch}\n                    onClick={this.handleHeaderClick}\n                    onSearch={this.handleSearch}\n                    onSearchTextChange={this.handleSearchTextChange}\n                />\n                <div className='dialogs-content'>\n                    <DialogsList ref={this.dialogsList} />\n                    {openSearch && (\n                        <Search\n                            chatId={searchChatId}\n                            text={searchText}\n                            onSelectMessage={this.handleSelectMessage}\n                            onClose={this.handleClose}\n                        />\n                    )}\n                </div>\n                <UpdatePanel />\n            </div>\n        );\n    }\n}\n\nDialogs.propTypes = {\n    onSelectChat: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(Dialogs);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Dialog from '@material-ui/core/Dialog';\nimport ChatInfo from '../ColumnRight/ChatInfo';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ChatInfoDialog.css';\n\nconst styles = theme => ({\n    chatInfoRoot: {\n        width: 336\n    },\n    containerRoot: {\n        alignItems: 'start'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary,\n        zIndex: theme.zIndex.modal\n    },\n    paperRoot: {\n        width: 336\n    }\n});\n\nclass ChatInfoDialog extends React.Component {\n    state = {\n        chatId: ApplicationStore.dialogChatId\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId } = this.state;\n\n        return nextState.chatId !== chatId;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDialogChatId', this.handleClientUpdateDialogChatId);\n    }\n\n    handleClientUpdateDialogChatId = update => {\n        const { chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateDialogChatId',\n            chatId: 0\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { chatId } = this.state;\n        if (!chatId) return null;\n\n        return (\n            <Dialog\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                classes={{ root: classes.dialogRoot, container: classes.containerRoot, paper: classes.paperRoot }}>\n                <ChatInfo className={classes.chatInfoRoot} chatId={chatId} popup />\n            </Dialog>\n        );\n    }\n}\n\nChatInfoDialog.propTypes = {};\n\nexport default withStyles(styles)(ChatInfoDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/es/Typography/Typography';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport './NotificationTimer.css';\n\nclass NotificationTimer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            seconds: this.props.timeout / 1000,\n            value: 0\n        };\n    }\n\n    componentDidMount() {\n        this.startTime = new Date();\n        this.expire = this.startTime;\n        this.expire.setMilliseconds(this.expire.getMilliseconds() + this.props.timeout);\n        this.timerId = setInterval(this.handleTimer, 100);\n    }\n\n    handleTimer = () => {\n        const now = new Date();\n        const seconds = this.expire - now;\n        const value = 100 - (seconds / this.props.timeout) * 100;\n        // console.log(`NotificationTimer ms=${seconds} value=${value}`);\n        this.setState({\n            seconds: seconds > 0 ? seconds : 0,\n            value: value > 100 ? 100 : value\n        });\n\n        if (now >= this.expire) {\n            if (this.timerId) {\n                clearInterval(this.timerId);\n                this.timerId = null;\n            }\n        }\n    };\n\n    componentWillUnmount() {\n        if (this.timerId) {\n            clearInterval(this.timerId);\n            this.timerId = null;\n        }\n    }\n\n    render() {\n        const { value, seconds } = this.state;\n\n        return (\n            <div className='notification-timer'>\n                <div className='notification-timer-text'>\n                    <Typography color='inherit'>{(seconds / 1000).toFixed()}</Typography>\n                </div>\n                <div className='notification-timer-progress'>\n                    <CircularProgress size={32} value={100 - value} variant='static' />\n                </div>\n            </div>\n        );\n    }\n}\n\nNotificationTimer.propTypes = {\n    timeout: PropTypes.number.isRequired\n};\n\nexport default NotificationTimer;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withSnackbar } from 'notistack';\nimport { compose } from 'recompose';\nimport ChatTile from '../Tile/ChatTile';\nimport NotificationTimer from '../Additional/NotificationTimer';\nimport { canClearHistory, canDeleteChat, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MainMenuButton.css';\n\nconst styles = theme => ({\n    menuIconButton: {\n        margin: '8px 12px 8px 0'\n    }\n});\n\nconst menuAnchorOrigin = {\n    vertical: 'bottom',\n    horizontal: 'right'\n};\n\nconst menuTransformOrigin = {\n    vertical: 'top',\n    horizontal: 'right'\n};\n\nclass LeaveChatDialog extends React.Component {\n    getDeleteDialogText = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return `Are you sure you want to leave group ${chat.title}?`;\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel\n                        ? `Are you sure you want to leave channel ${chat.title}?`\n                        : `Are you sure you want to leave group ${chat.title}?`;\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return `Are you sure you want to delete chat with ${getChatShortTitle(chatId)}?`;\n            }\n        }\n\n        return null;\n    };\n\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            {this.getDeleteDialogText(chatId)}\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass ClearHistoryDialog extends React.Component {\n    render() {\n        const { onClose, chatId, ...other } = this.props;\n\n        return (\n            <Dialog\n                transitionDuration={0}\n                onClose={() => onClose(false)}\n                aria-labelledby='delete-dialog-title'\n                {...other}>\n                <DialogTitle id='delete-dialog-title'>{getChatShortTitle(chatId)}</DialogTitle>\n                <DialogContent>\n                    <div className='delete-dialog-content'>\n                        <ChatTile chatId={chatId} />\n                        <DialogContentText id='delete-dialog-description'>\n                            Are you sure you want clear history?\n                        </DialogContentText>\n                    </div>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={() => onClose(false)} color='primary'>\n                        Cancel\n                    </Button>\n                    <Button onClick={() => onClose(true)} color='primary' autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }\n}\n\nclass MainMenuButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            anchorEl: null,\n            openDelete: false,\n            openClearHistory: false\n        };\n    }\n\n    handleButtonClick = event => {\n        this.setState({ anchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleChatInfo = () => {\n        this.handleMenuClose();\n        setTimeout(() => this.props.openChatDetails(), 150);\n    };\n\n    handleClearHistory = () => {\n        this.handleMenuClose();\n\n        this.setState({ openClearHistory: true });\n    };\n\n    handleClearHistoryContinue = result => {\n        this.setState({ openClearHistory: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = 'Messages deleted';\n        const request = {\n            '@type': 'deleteChatHistory',\n            chat_id: chatId,\n            remove_from_chat_list: false\n        };\n\n        this.handleScheduledAction(chatId, 'clientUpdateClearHistory', message, request);\n    };\n\n    handleLeave = () => {\n        this.handleMenuClose();\n\n        this.setState({ openDelete: true });\n    };\n\n    handleLeaveContinue = result => {\n        this.setState({ openDelete: false });\n\n        if (!result) return;\n\n        const chatId = ApplicationStore.getChatId();\n        const message = this.getLeaveChatNotification(chatId);\n        const request = isPrivateChat(chatId)\n            ? { '@type': 'deleteChatHistory', chat_id: chatId, remove_from_chat_list: true }\n            : { '@type': 'leaveChat', chat_id: chatId };\n\n        this.handleScheduledAction(chatId, 'clientUpdateLeaveChat', message, request);\n    };\n\n    handleScheduledAction = (chatId, clientUpdateType, message, request) => {\n        if (!clientUpdateType) return;\n\n        const key = `${clientUpdateType} chatId=${chatId}`;\n        const action = async () => {\n            try {\n                await TdLibController.send(request);\n            } finally {\n                TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n            }\n        };\n        const cancel = () => {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: false });\n        };\n\n        const { enqueueSnackbar, classes } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS, action, cancel)) {\n            TdLibController.clientUpdate({ '@type': clientUpdateType, chatId: chatId, inProgress: true });\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS - 2 * TRANSITION_DELAY,\n                action: [\n                    <IconButton key='progress' color='inherit' className='progress-button'>\n                        <NotificationTimer timeout={NOTIFICATION_AUTO_HIDE_DURATION_MS} />\n                    </IconButton>,\n                    <Button\n                        key='undo'\n                        color='primary'\n                        size='small'\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        UNDO\n                    </Button>\n                ]\n            });\n        }\n    };\n\n    getLeaveChatTitle = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return null;\n        if (!chat.type) return null;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Delete and exit';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Leave channel' : 'Leave group';\n                }\n\n                return null;\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Delete conversation';\n            }\n        }\n\n        return null;\n    };\n\n    getLeaveChatNotification = chatId => {\n        const chat = ChatStore.get(chatId);\n        if (!chat) return 'Chat deleted';\n        if (!chat.type) return 'Chat deleted';\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                return 'Chat deleted';\n            }\n            case 'chatTypeSupergroup': {\n                const supergroup = SupergroupStore.get(chat.type.supergroup_id);\n                if (supergroup) {\n                    return supergroup.is_channel ? 'Left channel' : 'Left group';\n                }\n\n                return 'Chat deleted';\n            }\n            case 'chatTypePrivate':\n            case 'chatTypeSecret': {\n                return 'Chat deleted';\n            }\n        }\n\n        return 'Chat deleted';\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, openDelete, openClearHistory } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n        const clearHistory = canClearHistory(chatId);\n        const deleteChat = canDeleteChat(chatId);\n        const leaveChatTitle = this.getLeaveChatTitle(chatId);\n\n        return (\n            <>\n                <IconButton\n                    aria-owns={anchorEl ? 'simple-menu' : null}\n                    aria-haspopup='true'\n                    className={classes.menuIconButton}\n                    aria-label='Menu'\n                    onClick={this.handleButtonClick}>\n                    <MoreVertIcon />\n                </IconButton>\n                <Menu\n                    id='main-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleMenuClose}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={menuAnchorOrigin}\n                    transformOrigin={menuTransformOrigin}>\n                    <MenuItem onClick={this.handleChatInfo}>Chat info</MenuItem>\n                    {clearHistory && <MenuItem onClick={this.handleClearHistory}>Clear history</MenuItem>}\n                    {deleteChat && leaveChatTitle && <MenuItem onClick={this.handleLeave}>{leaveChatTitle}</MenuItem>}\n                </Menu>\n                <LeaveChatDialog chatId={chatId} open={openDelete} onClose={this.handleLeaveContinue} />\n                <ClearHistoryDialog chatId={chatId} open={openClearHistory} onClose={this.handleClearHistoryContinue} />\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles),\n    withSnackbar\n);\n\nexport default enhance(MainMenuButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox/';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { borderStyle } from '../Theme';\nimport { canSendMessages, getChatShortTitle, isPrivateChat } from '../../Utils/Chat';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderCommand.css';\n\nconst styles = theme => ({\n    buttonLeft: {\n        margin: '14px 0 14px 14px',\n        minWidth: '100px'\n    },\n    buttonRight: {\n        margin: '14px 14px 14px 0',\n        minWidth: '100px'\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderCommand extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            openDeleteDialog: false\n        };\n    }\n\n    handleCancel = () => {\n        TdLibController.clientUpdate({ '@type': 'clientUpdateClearSelection' });\n    };\n\n    handleDelete = () => {\n        let canBeDeletedForAllUsers = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n            if (!message.can_be_deleted_for_all_users) {\n                canBeDeletedForAllUsers = false;\n                break;\n            }\n        }\n\n        this.setState({\n            openDeleteDialog: true,\n            canBeDeletedForAllUsers: canBeDeletedForAllUsers,\n            revoke: canBeDeletedForAllUsers\n        });\n    };\n\n    handleDeleteContinue = () => {\n        const { revoke } = this.state;\n\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: id,\n            message_ids: messageIds,\n            revoke: revoke\n        });\n    };\n\n    handleRevokeChange = () => {\n        this.setState({ revoke: !this.state.revoke });\n    };\n\n    handleCloseDelete = () => {\n        this.setState({ openDeleteDialog: false });\n    };\n\n    handleForward = () => {\n        let id;\n        const messageIds = [];\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            id = chatId;\n            messageIds.push(messageId);\n        }\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: id,\n                messageIds: messageIds\n            }\n        });\n    };\n\n    handleReply = () => {\n        if (MessageStore.selectedItems.size !== 1) return;\n\n        const { chatId, messageId } = MessageStore.selectedItems.values().next().value;\n\n        this.handleCancel();\n\n        TdLibController.clientUpdate({ '@type': 'clientUpdateReply', chatId: chatId, messageId: messageId });\n    };\n\n    render() {\n        const { classes, t, count } = this.props;\n        const { openDeleteDialog, canBeDeletedForAllUsers, revoke } = this.state;\n\n        const chatId = ApplicationStore.getChatId();\n\n        let canBeDeleted = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeDeleted = false;\n                break;\n            }\n            if (!message.can_be_deleted_only_for_self && !message.can_be_deleted_for_all_users) {\n                canBeDeleted = false;\n                break;\n            }\n        }\n\n        let canBeForwarded = true;\n        for (let { chatId, messageId } of MessageStore.selectedItems.values()) {\n            const message = MessageStore.get(chatId, messageId);\n            if (!message) {\n                canBeForwarded = false;\n                break;\n            }\n            if (!message.can_be_forwarded) {\n                canBeForwarded = false;\n                break;\n            }\n        }\n\n        const canBeReplied = count === 1 && canSendMessages(chatId);\n\n        return (\n            <>\n                <div className={classNames(classes.borderColor, 'header-command')}>\n                    {canBeForwarded && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleForward}>\n                            {count <= 1 ? t('Forward') : `${t('Forward')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeDeleted && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleDelete}>\n                            {count <= 1 ? t('Delete') : `${t('Delete')} ${count}`}\n                        </Button>\n                    )}\n                    {canBeReplied && (\n                        <Button color='primary' className={classes.buttonLeft} onClick={this.handleReply}>\n                            {t('Reply')}\n                        </Button>\n                    )}\n                    <div className='header-command-space' />\n                    <Button color='primary' className={classes.buttonRight} onClick={this.handleCancel}>\n                        {t('Cancel')}\n                    </Button>\n                </div>\n                <Dialog\n                    transitionDuration={0}\n                    open={openDeleteDialog}\n                    onClose={this.handleCloseDelete}\n                    aria-labelledby='delete-dialog-title'>\n                    <DialogTitle id='delete-dialog-title'>Confirm</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            {count === 1\n                                ? 'Are you sure you want to delete 1 message?'\n                                : `Are you sure you want to delete ${count} messages?`}\n                        </DialogContentText>\n                        {canBeDeletedForAllUsers && (\n                            <FormControlLabel\n                                control={\n                                    <Checkbox checked={revoke} onChange={this.handleRevokeChange} color='primary' />\n                                }\n                                label={\n                                    isPrivateChat(chatId) ? `Delete for ${getChatShortTitle(chatId)}` : 'Delete for all'\n                                }\n                            />\n                        )}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleCloseDelete} color='primary'>\n                            Cancel\n                        </Button>\n                        <Button onClick={this.handleDeleteContinue} color='primary'>\n                            Ok\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </>\n        );\n    }\n}\n\nHeaderCommand.propTypes = {\n    count: PropTypes.number\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(HeaderCommand);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { compose } from 'recompose';\nimport MainMenuButton from './MainMenuButton';\nimport HeaderCommand from './HeaderCommand';\nimport HeaderProgress from './HeaderProgress';\nimport { getChatSubtitle, getChatTitle, isAccentChatSubtitle, isMeChat } from '../../Utils/Chat';\nimport { borderStyle } from '../Theme';\nimport ChatStore from '../../Stores/ChatStore';\nimport UserStore from '../../Stores/UserStore';\nimport BasicGroupStore from '../../Stores/BasicGroupStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Header.css';\n\nconst styles = theme => ({\n    button: {\n        margin: '14px'\n    },\n    menuIconButton: {\n        margin: '8px -2px 8px 12px'\n    },\n    searchIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    messageSearchIconButton: {\n        margin: '8px 0 8px 12px'\n    },\n    moreIconButton: {\n        margin: '8px 12px 8px 0'\n    },\n    headerStatusTitle: {\n        color: theme.palette.text.secondary\n    },\n    headerStatusAccentTitle: {\n        color: theme.palette.primary.dark + '!important'\n    },\n    ...borderStyle(theme)\n});\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            authorizationState: ApplicationStore.getAuthorizationState(),\n            connectionState: ApplicationStore.getConnectionState()\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState !== this.state) {\n            return true;\n        }\n\n        if (nextProps.theme !== this.props.theme) {\n            return true;\n        }\n\n        if (nextProps.t !== this.props.t) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.on('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.on('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.on('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.on('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.on('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.on('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.on('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.on('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.on('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.on('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('updateConnectionState', this.onUpdateConnectionState);\n        ApplicationStore.removeListener('updateAuthorizationState', this.onUpdateAuthorizationState);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateMessageSelected);\n\n        ChatStore.removeListener('updateChatOnlineMemberCount', this.onUpdateChatOnlineMemberCount);\n        ChatStore.removeListener('updateChatTitle', this.onUpdateChatTitle);\n        UserStore.removeListener('updateUserStatus', this.onUpdateUserStatus);\n        ChatStore.removeListener('updateUserChatAction', this.onUpdateUserChatAction);\n        UserStore.removeListener('updateUserFullInfo', this.onUpdateUserFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroupFullInfo', this.onUpdateBasicGroupFullInfo);\n        SupergroupStore.removeListener('updateSupergroupFullInfo', this.onUpdateSupergroupFullInfo);\n        BasicGroupStore.removeListener('updateBasicGroup', this.onUpdateBasicGroup);\n        SupergroupStore.removeListener('updateSupergroup', this.onUpdateSupergroup);\n    }\n\n    onUpdateChatOnlineMemberCount = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onClientUpdateMessageSelected = update => {\n        this.setState({ selectionCount: MessageStore.selectedItems.size });\n    };\n\n    onClientUpdateChatId = update => {\n        this.forceUpdate();\n    };\n\n    onUpdateConnectionState = update => {\n        this.setState({ connectionState: update.state });\n    };\n\n    onUpdateAuthorizationState = update => {\n        this.setState({ authorizationState: update.authorization_state });\n    };\n\n    onUpdateChatTitle = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (chat.id !== update.chat_id) return;\n\n        this.forceUpdate();\n    };\n\n    onUpdateUserStatus = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n        if (!chat.type) return;\n\n        switch (chat.type['@type']) {\n            case 'chatTypeBasicGroup': {\n                const fullInfo = BasicGroupStore.getFullInfo(chat.type.basic_group_id);\n                if (fullInfo && fullInfo.members) {\n                    const member = fullInfo.members.find(x => x.user_id === update.user_id);\n                    if (member) {\n                        this.forceUpdate();\n                    }\n                }\n                break;\n            }\n            case 'chatTypePrivate': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSecret': {\n                if (chat.type.user_id === update.user_id) {\n                    this.forceUpdate();\n                }\n                break;\n            }\n            case 'chatTypeSupergroup': {\n                break;\n            }\n        }\n    };\n\n    onUpdateUserChatAction = update => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (currentChatId === update.chat_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroup = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup.id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateBasicGroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeBasicGroup' &&\n            chat.type.basic_group_id === update.basic_group_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateSupergroupFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            chat.type['@type'] === 'chatTypeSupergroup' &&\n            chat.type.supergroup_id === update.supergroup_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateUserFullInfo = update => {\n        const chat = ChatStore.get(ApplicationStore.getChatId());\n        if (!chat) return;\n\n        if (\n            chat.type &&\n            (chat.type['@type'] === 'chatTypePrivate' || chat.type['@type'] === 'chatTypeSecret') &&\n            chat.type.user_id === update.user_id\n        ) {\n            this.forceUpdate();\n        }\n    };\n\n    openChatDetails = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.changeChatDetailsVisibility(true);\n    };\n\n    handleSearchChat = () => {\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        ApplicationStore.searchChat(chatId);\n    };\n\n    localize = str => {\n        const { t } = this.props;\n\n        return t(str)\n            .replace('...', '')\n            .replace('…', '');\n    };\n\n    render() {\n        const { classes, t } = this.props;\n        const { authorizationState, connectionState, selectionCount } = this.state;\n\n        if (selectionCount) {\n            return <HeaderCommand count={selectionCount} />;\n        }\n\n        const chatId = ApplicationStore.getChatId();\n        const chat = ChatStore.get(chatId);\n\n        const isAccentSubtitle = isAccentChatSubtitle(chatId);\n        let title = getChatTitle(chatId, true, t);\n        let subtitle = getChatSubtitle(chatId, true);\n        let showProgressAnimation = false;\n\n        if (connectionState) {\n            switch (connectionState['@type']) {\n                case 'connectionStateConnecting':\n                    title = this.localize('Connecting');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateConnectingToProxy':\n                    title = this.localize('Connecting to proxy');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateReady':\n                    break;\n                case 'connectionStateUpdating':\n                    title = this.localize('Updating');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'connectionStateWaitingForNetwork':\n                    title = this.localize('Waiting for network');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else if (authorizationState) {\n            switch (authorizationState['@type']) {\n                case 'authorizationStateClosed':\n                    break;\n                case ' authorizationStateClosing':\n                    break;\n                case 'authorizationStateLoggingOut':\n                    title = this.localize('Logging out');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateReady':\n                    break;\n                case 'authorizationStateWaitCode':\n                    break;\n                case 'authorizationStateWaitEncryptionKey':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n                case 'authorizationStateWaitPassword':\n                    break;\n                case 'authorizationStateWaitPhoneNumber':\n                    break;\n                case 'authorizationStateWaitTdlibParameters':\n                    title = this.localize('Loading');\n                    subtitle = '';\n                    showProgressAnimation = true;\n                    break;\n            }\n        } else {\n            title = this.localize('Loading');\n            subtitle = '';\n            showProgressAnimation = true;\n        }\n\n        return (\n            <div className={classNames(classes.borderColor, 'header-details')}>\n                <div\n                    className={classNames('header-status', 'grow', chat ? 'cursor-pointer' : 'cursor-default')}\n                    onClick={this.openChatDetails}>\n                    <span className='header-status-content'>{title}</span>\n                    {showProgressAnimation && <HeaderProgress />}\n                    <span\n                        className={classNames('header-status-title', classes.headerStatusTitle, {\n                            [classes.headerStatusAccentTitle]: isAccentSubtitle\n                        })}>\n                        {subtitle}\n                    </span>\n                    <span className='header-status-tail' />\n                </div>\n                {chat && (\n                    <>\n                        <IconButton\n                            className={classes.messageSearchIconButton}\n                            aria-label='Search'\n                            onClick={this.handleSearchChat}>\n                            <SearchIcon />\n                        </IconButton>\n                        <MainMenuButton openChatDetails={this.openChatDetails} />\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(Header);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport VolumeMuteIcon from '@material-ui/icons/VolumeMute';\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\nimport VolumeUpIcon from '@material-ui/icons/VolumeUp';\nimport VolumeOffIcon from '@material-ui/icons/VolumeOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Slider from '@material-ui/lab/Slider';\nimport { borderStyle } from '../Theme';\nimport { PLAYER_VOLUME_NORMAL } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './VolumeButton.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    root: {\n        display: 'flex',\n        height: 100,\n        width: 28,\n        padding: '13px 0',\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    slider: {\n        padding: '0 13px'\n    },\n    thumb: {\n        opacity: 0\n    },\n    ...borderStyle(theme)\n});\n\nclass VolumeButton extends React.Component {\n    state = {\n        anchorEl: null,\n        value: PlayerStore.volume,\n        prevValue: PlayerStore.volume,\n        dragging: false,\n        buttonOver: false,\n        popupOver: false\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n    }\n\n    onClientUpdateMediaVolume = update => {\n        const { volume, prevVolume } = update;\n\n        if (prevVolume === undefined) {\n            this.setState({ value: volume });\n        } else {\n            this.setState({ value: volume, prevValue: prevVolume });\n        }\n    };\n\n    handlePopoverOpen = anchorEl => {\n        this.setState({ anchorEl: anchorEl });\n    };\n\n    handlePopoverClose = () => {\n        const { dragging, buttonOver, popupOver } = this.state;\n\n        if (dragging) return;\n        if (buttonOver) return;\n        if (popupOver) return;\n\n        this.setState({ anchorEl: null });\n    };\n\n    handleMouseEnter = (event, openPopover) => {\n        this.setState({ buttonOver: true });\n\n        if (openPopover) {\n            this.handlePopoverOpen(event.currentTarget);\n        }\n    };\n\n    handleMouseLeave = () => {\n        this.setState({ buttonOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handlePopupMouseLeave = () => {\n        this.setState({ popupOver: false }, () => {\n            this.handlePopoverClose();\n        });\n    };\n\n    handleVoiceClick = () => {\n        const { value, prevValue } = this.state;\n        const nextValue = value > 0 ? 0 : prevValue || PLAYER_VOLUME_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaVolume',\n            volume: nextValue\n        });\n    };\n\n    handleChange = (event, value) => {\n        const { dragging, prevValue } = this.state;\n\n        if (dragging) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                volume: value\n            });\n        } else {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaVolume',\n                prevVolume: value > 0 ? value : prevValue,\n                volume: value\n            });\n        }\n    };\n\n    handleDragStart = () => {\n        const { value } = this.state;\n\n        this.setState({\n            dragging: true,\n            prevValue: value\n        });\n    };\n\n    handleDragEnd = () => {\n        const { value, prevValue } = this.state;\n\n        this.setState(\n            {\n                dragging: false,\n                prevValue: value > 0 ? value : prevValue\n            },\n            () => {\n                this.handlePopoverClose();\n            }\n        );\n    };\n\n    getVolumeIcon = value => {\n        if (value === 0) {\n            return <VolumeOffIcon fontSize='small' />;\n        }\n\n        if (value < 0.25) {\n            return <VolumeMuteIcon fontSize='small' />;\n        }\n\n        if (value < 0.5) {\n            return <VolumeDownIcon fontSize='small' />;\n        }\n\n        return <VolumeUpIcon fontSize='small' />;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl, value } = this.state;\n        const open = Boolean(anchorEl);\n\n        return (\n            <div\n                onMouseEnter={e => this.handleMouseEnter(e, true)}\n                onMouseLeave={this.handleMouseLeave}\n                style={{\n                    position: 'relative',\n                    background: 'transparent'\n                }}>\n                <IconButton className={classes.iconButton} color='primary' onClick={this.handleVoiceClick}>\n                    {this.getVolumeIcon(value)}\n                </IconButton>\n                <div\n                    style={{\n                        position: 'absolute',\n                        background: 'transparent',\n                        visibility: open ? 'visible' : 'hidden',\n                        zIndex: 1\n                    }}\n                    onMouseEnter={e => this.handleMouseEnter(e, false)}\n                    onMouseLeave={this.handlePopupMouseLeave}>\n                    <div\n                        className={classNames(classes.borderColor, classes.root)}\n                        style={{\n                            marginTop: 8,\n                            borderWidth: 1,\n                            borderStyle: 'solid'\n                        }}>\n                        <Slider\n                            classes={{ container: classes.slider, thumb: classes.thumb }}\n                            min={0}\n                            max={1}\n                            value={value}\n                            onChange={this.handleChange}\n                            onDragStart={this.handleDragStart}\n                            onDragEnd={this.handleDragEnd}\n                            vertical\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(VolumeButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport RepeatOneIcon from '@material-ui/icons/RepeatOne';\nimport PlayerStore, { RepeatEnum } from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass RepeatButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { repeat } = PlayerStore;\n\n        this.state = {\n            repeat\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaRepeat', this.onClientUpdateMediaRepeat);\n    }\n\n    onClientUpdateMediaRepeat = update => {\n        const { repeat } = update;\n\n        this.setState({ repeat });\n    };\n\n    handleRepeat = () => {\n        const { repeat } = this.state;\n\n        let nextRepeat = repeat;\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                nextRepeat = RepeatEnum.REPEAT;\n                break;\n            }\n            case RepeatEnum.REPEAT: {\n                nextRepeat = RepeatEnum.REPEAT_ONE;\n                break;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                nextRepeat = RepeatEnum.NONE;\n                break;\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaRepeat',\n            repeat: nextRepeat\n        });\n    };\n\n    getIcon = repeat => {\n        switch (repeat) {\n            case RepeatEnum.NONE: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT: {\n                return <RepeatIcon fontSize='small' />;\n            }\n            case RepeatEnum.REPEAT_ONE: {\n                return <RepeatOneIcon fontSize='small' />;\n            }\n            default: {\n                return <RepeatIcon fontSize='small' />;\n            }\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { repeat } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={repeat === RepeatEnum.NONE ? 'default' : 'primary'}\n                onClick={this.handleRepeat}>\n                {this.getIcon(repeat)}\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(RepeatButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\n\nclass ShuffleButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { shuffle } = PlayerStore;\n\n        this.state = {\n            shuffle\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaShuffle', this.onClientUpdateMediaShuffle);\n    }\n\n    onClientUpdateMediaShuffle = update => {\n        const { shuffle } = update;\n\n        this.setState({ shuffle });\n    };\n\n    handleShuffle = () => {\n        const { shuffle } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaShuffle',\n            shuffle: !shuffle\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { shuffle } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={!shuffle ? 'default' : 'primary'}\n                onClick={this.handleShuffle}>\n                <ShuffleIcon fontSize='small' />\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(ShuffleButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport IconButton from '@material-ui/core/IconButton';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL } from '../../Constants';\n\nconst styles = {\n    iconButton: {\n        padding: 4\n    }\n};\nclass PlaybackRateButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { playbackRate } = PlayerStore;\n\n        this.state = {\n            playbackRate\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        this.setState({ playbackRate });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playbackRate } = this.state;\n\n        return (\n            <IconButton\n                className={classes.iconButton}\n                color={playbackRate > PLAYER_PLAYBACKRATE_NORMAL ? 'primary' : 'default'}\n                onClick={this.handlePlaybackRate}>\n                <div className='header-player-playback-icon'>2X</div>\n            </IconButton>\n        );\n    }\n}\n\nexport default withStyles(styles)(PlaybackRateButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { getDurationString } from '../../Utils/Common';\nimport PlayerStore from '../../Stores/PlayerStore';\n\nclass Time extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentTime: 0,\n            duration: 0,\n            timeString: this.getTimeString(0, 0)\n        };\n    }\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaTime', this.onClientUpdateMediaTime);\n    }\n\n    onClientUpdateMediaTime = update => {\n        const { currentTime } = update;\n\n        this.setState({\n            currentTime: currentTime,\n            currentTimeString: getDurationString(Math.floor(currentTime || 0))\n        });\n    };\n\n    getTimeString = (currentTime, duration) => {\n        const type = 0;\n\n        const durationString = getDurationString(Math.floor(duration || 0));\n        const currentTimeString = getDurationString(Math.floor(currentTime || 0));\n\n        //return type === 0 ? `${currentTimeString}/${durationString}` : `${durationString}`;\n\n        return currentTimeString;\n    };\n\n    render() {\n        const { currentTimeString } = this.state;\n\n        return <>{currentTimeString}</>;\n    }\n}\n\nexport default Time;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport { getMedia, openMedia } from '../../Utils/Message';\nimport { borderStyle } from '../Theme';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Playlist.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass Playlist extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.listRef = React.createRef();\n        this.itemRefMap = new Map();\n\n        const { message, playlist } = PlayerStore;\n\n        this.chatId = message ? message.chat_id : 0;\n        this.messageId = message ? message.id : 0;\n\n        this.state = {\n            open: false,\n            titleMouseOver: false,\n            playlistMouseOver: false,\n            playlist: playlist\n        };\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { open } = this.state;\n\n        if (!prevState.open && open) {\n            this.scrollToActive();\n        }\n    }\n\n    scrollToActive = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        const { messageId } = this;\n        if (!messageId) return;\n\n        const item = this.itemRefMap.get(messageId);\n        if (!item) return;\n\n        const node = ReactDOM.findDOMNode(item);\n        if (!node) return;\n\n        list.scrollTop = node.offsetTop - 15;\n    };\n\n    componentDidMount() {\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.on('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    componentWillUnmount() {\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaPlaylistLoading', this.onClientUpdateMediaPlaylistLoading);\n        PlayerStore.removeListener('clientUpdateMediaTitleMouseOver', this.onClientUpdateMediaTitleMouseOver);\n    }\n\n    onClientUpdateMediaTitleMouseOver = update => {\n        const { over } = update;\n\n        if (over) {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryOpen();\n                }\n            );\n        } else {\n            this.setState(\n                {\n                    playlistMouseOver: over\n                },\n                () => {\n                    this.tryClose();\n                }\n            );\n        }\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n\n        this.chatId = chatId;\n        this.messageId = messageId;\n    };\n\n    onClientUpdateMediaPlaylistLoading = update => {\n        const { chatId, messageId } = this;\n\n        if (update.chatId === chatId && update.messageId === messageId) {\n            this.setState({\n                playlist: null\n            });\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { chatId, messageId } = this;\n        const { playlist } = update;\n\n        if (chatId === playlist.chatId && messageId === playlist.messageId) {\n            this.setState({\n                playlist: playlist\n            });\n        }\n    };\n\n    tryOpen = () => {\n        clearTimeout(this.openTimeout);\n\n        this.openTimeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    tryClose = () => {\n        clearTimeout(this.timeout);\n\n        this.timeout = setTimeout(() => {\n            const { titleMouseOver, playlistMouseOver } = this.state;\n            this.setState({\n                open: titleMouseOver || playlistMouseOver\n            });\n        }, 250);\n    };\n\n    handleMouseEnter = () => {\n        this.setState({\n            playlistMouseOver: true,\n            open: true\n        });\n    };\n\n    handleMouseLeave = () => {\n        this.setState(\n            {\n                playlistMouseOver: false\n            },\n            () => {\n                this.tryClose();\n            }\n        );\n    };\n\n    handleScroll = () => {\n        const list = this.listRef.current;\n        if (!list) return;\n\n        if (list.scrollTop === 0) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistNext'\n            });\n        } else if (list.scrollHeight === list.scrollTop + list.offsetHeight) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateMediaPlaylistPrev'\n            });\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const { open, playlist } = this.state;\n        if (!open) return null;\n        if (!playlist) return null;\n\n        const { messages } = playlist;\n        if (!messages) return null;\n        if (messages.length <= 1) return null;\n\n        this.itemRefMap.clear();\n\n        return (\n            <div className='playlist'>\n                <div className={classNames('playlist-wrapper', classes.root, classes.borderColor)}>\n                    <div\n                        ref={this.listRef}\n                        className='playlist-items'\n                        onMouseEnter={this.handleMouseEnter}\n                        onMouseLeave={this.handleMouseLeave}\n                        onScroll={this.handleScroll}>\n                        {playlist.messages\n                            .slice(0)\n                            .reverse()\n                            .map(x => (\n                                <div key={x.id} ref={el => this.itemRefMap.set(x.id, el)} className='playlist-item'>\n                                    {getMedia(x, () => openMedia(x.chat_id, x.id))}\n                                </div>\n                            ))}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(Playlist);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport VolumeButton from '../Player/VolumeButton';\nimport RepeatButton from '../Player/RepeatButton';\nimport ShuffleButton from '../Player/ShuffleButton';\nimport PlaybackRateButton from './PlaybackRateButton';\nimport Time from '../Player/Time';\nimport Playlist from '../Player/Playlist';\nimport { borderStyle } from '../Theme';\nimport { getSrc } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport { getDurationString } from '../../Utils/Common';\nimport { getDate, getDateHint, getMediaTitle, hasAudio } from '../../Utils/Message';\nimport { PLAYER_PLAYBACKRATE_FAST, PLAYER_PLAYBACKRATE_NORMAL, PLAYER_STARTTIME } from '../../Constants';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './HeaderPlayer.css';\n\nconst styles = theme => ({\n    iconButton: {\n        padding: 4\n    },\n    ...borderStyle(theme)\n});\n\nclass HeaderPlayer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n\n        const { message, playlist } = PlayerStore;\n\n        this.startTime = PLAYER_STARTTIME;\n\n        this.state = {\n            currentTime: 0,\n            currentTimeString: getDurationString(0),\n            message: message,\n            playlist: playlist,\n            playing: false,\n            src: this.getMediaSrc(message)\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { theme } = this.props;\n        const { message, playlist, src, playing } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.message !== message) {\n            return true;\n        }\n\n        if (nextState.playlist !== playlist) {\n            return true;\n        }\n\n        if (nextState.src !== src) {\n            return true;\n        }\n\n        if (nextState.playing !== playing) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.on('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.on('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.on('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.on('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.on('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.on('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateVoiceNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoNoteBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAudioBlob', this.onClientUpdateMediaBlob);\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaClose', this.onClientUpdateMediaClose);\n        PlayerStore.removeListener('clientUpdateMediaPlaylist', this.onClientUpdateMediaPlaylist);\n        PlayerStore.removeListener('clientUpdateMediaViewerPlay', this.onClientUpdateMediaViewerPlay);\n        PlayerStore.removeListener('clientUpdateMediaViewerPause', this.onClientUpdateMediaViewerPause);\n        PlayerStore.removeListener('clientUpdateMediaViewerEnded', this.onClientUpdateMediaViewerEnded);\n        PlayerStore.removeListener('clientUpdateMediaVolume', this.onClientUpdateMediaVolume);\n        PlayerStore.removeListener('clientUpdateMediaPlaybackRate', this.onClientUpdateMediaPlaybackRate);\n\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n    }\n\n    onClientUpdateMediaPlaybackRate = update => {\n        const { playbackRate } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.playbackRate = playbackRate;\n    };\n\n    onClientUpdateMediaVolume = update => {\n        const { volume } = update;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.volume = volume;\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.playingMediaViewer = Boolean(ApplicationStore.mediaViewerContent);\n    };\n\n    onClientUpdateMediaViewerEnded = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPause = update => {\n        this.playingMediaViewer = false;\n    };\n\n    onClientUpdateMediaViewerPlay = update => {\n        this.playingMediaViewer = true;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        player.pause();\n    };\n\n    startPlayingFile = (file, message) => {\n        const { chat_id, id } = message;\n\n        this.setState(\n            {\n                src: this.getMediaSrc(message)\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (this.playingMediaViewer) {\n                        player.pause();\n\n                        TdLibController.clientUpdate({\n                            '@type': 'clientUpdateMediaPause',\n                            chatId: chat_id,\n                            messageId: id\n                        });\n                    }\n                }\n            }\n        );\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId } = update;\n        const { message } = this.state;\n\n        if (!message) return;\n\n        const { chat_id, id, content } = message;\n        if (!content) return;\n        if (chatId !== chat_id || messageId !== id) return;\n\n        switch (content['@type']) {\n            case 'messageText': {\n                const { web_page } = content;\n                if (web_page) {\n                    const { audio, voice_note, video_note } = web_page;\n\n                    if (audio) {\n                        const file = audio.audio;\n                        if (file) {\n                            this.startPlayingFile(file, message);\n                        }\n                    }\n\n                    if (voice_note) {\n                        const { voice } = voice_note;\n                        if (voice) {\n                            this.startPlayingFile(voice, message);\n                        }\n                    }\n\n                    if (video_note) {\n                        const { video } = video_note;\n                        if (video) {\n                            this.startPlayingFile(video, message);\n                        }\n                    }\n                }\n\n                break;\n            }\n            case 'messageAudio': {\n                const { audio } = content;\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        this.startPlayingFile(file, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVoiceNote': {\n                const { voice_note } = content;\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        this.startPlayingFile(voice, message);\n                    }\n                }\n\n                break;\n            }\n            case 'messageVideoNote': {\n                const { video_note } = content;\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        this.startPlayingFile(video, message);\n                    }\n                }\n\n                break;\n            }\n        }\n    };\n\n    onClientUpdateMediaPlaylist = update => {\n        const { playlist } = update;\n        const { chatId, messageId } = playlist;\n        const { message } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            this.setState({ playlist: playlist });\n        }\n    };\n\n    onClientUpdateMediaClose = update => {\n        this.setState({\n            message: null,\n            playlist: null,\n            playing: false,\n            src: null\n        });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const { chatId, messageId } = update;\n        const { message, src } = this.state;\n\n        if (message && message.chat_id === chatId && message.id === messageId) {\n            if (src) {\n                const player = this.videoRef.current;\n                if (player) {\n                    if (player.paused) {\n                        player.play();\n                    } else {\n                        player.pause();\n                    }\n                }\n            }\n        } else {\n            const src = this.getMediaSrc(PlayerStore.message);\n            const playing = Boolean(src);\n            const playlist = PlayerStore.playlist;\n            this.setState(\n                {\n                    message: PlayerStore.message,\n                    playlist: PlayerStore.playlist,\n                    playing: playing,\n                    src: src\n                },\n                () => {\n                    const player = this.videoRef.current;\n                    if (player) {\n                        player.currentTime = this.startTime;\n                        if (this.playingMediaViewer) {\n                            player.pause();\n\n                            //this.handleVideoPause();\n                        } else if (player.paused) {\n                            player.play();\n                        }\n                    }\n                }\n            );\n        }\n    };\n\n    handlePrev = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPrev'\n        });\n    };\n\n    handlePlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaActive',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handleNext = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaNext'\n        });\n    };\n\n    getMediaSrc = message => {\n        if (message) {\n            const { content } = message;\n            if (content) {\n                const { audio, voice_note, video_note, web_page } = content;\n\n                if (audio) {\n                    const file = audio.audio;\n                    if (file) {\n                        return getSrc(file);\n                    }\n                }\n\n                if (voice_note) {\n                    const { voice } = voice_note;\n                    if (voice) {\n                        return getSrc(voice);\n                    }\n                }\n\n                if (video_note) {\n                    const { video } = video_note;\n                    if (video) {\n                        return getSrc(video);\n                    }\n                }\n\n                if (web_page) {\n                    if (web_page.audio) {\n                        const file = web_page.audio.audio;\n                        if (file) {\n                            return getSrc(file);\n                        }\n                    }\n\n                    if (web_page.voice_note) {\n                        const { voice } = web_page.voice_note;\n                        if (voice) {\n                            return getSrc(voice);\n                        }\n                    }\n\n                    if (web_page.video_note) {\n                        const { video } = web_page.video_note;\n                        if (video) {\n                            return getSrc(video);\n                        }\n                    }\n                }\n            }\n        }\n\n        return '';\n    };\n\n    handleEnded = (moveNext = true) => {\n        const { message } = this.state;\n        if (!message) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaEnding',\n            chatId: message.chat_id,\n            messageId: message.id,\n            moveNext: moveNext\n        });\n\n        this.setState(\n            {\n                //playing: false,\n                //message: null,\n                //src: null\n            },\n            () => {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateMediaEnd',\n                    chatId: message.chat_id,\n                    messageId: message.id,\n                    moveNext: moveNext\n                });\n            }\n        );\n    };\n\n    handleVideoEnded = () => {\n        this.handleEnded(true);\n    };\n\n    handleClose = () => {\n        const player = this.videoRef.current;\n        if (player) {\n            player.pause();\n        }\n\n        this.handleEnded(false);\n    };\n\n    handleTimeUpdate = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        this.setState({\n            currentTime: player.currentTime,\n            currentTimeString: getDurationString(Math.floor(player.currentTime || 0))\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTime',\n            chatId: message.chat_id,\n            messageId: message.id,\n            duration: player.duration,\n            currentTime: player.currentTime,\n            timestamp: Date.now()\n        });\n    };\n\n    handleCanPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        const { playbackRate, volume } = PlayerStore;\n\n        const { chat_id, id } = message;\n        const audio = hasAudio(chat_id, id);\n\n        player.playbackRate = audio ? PLAYER_PLAYBACKRATE_NORMAL : playbackRate;\n        player.volume = volume;\n        player.muted = false;\n\n        if (audio) {\n            return;\n        }\n\n        let stream = null;\n        if ('captureStream' in player) {\n            stream = player.captureStream();\n        } else if ('mozCaptureStream' in player) {\n            stream = player.mozCaptureStream();\n        }\n\n        if (!stream) {\n            return;\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaCaptureStream',\n            chatId: message.chat_id,\n            messageId: message.id,\n            stream: stream\n        });\n    };\n\n    handleVideoPlay = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: true\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlay',\n            chatId: message.chat_id,\n            messageId: message.id,\n            currentTime: player.currentTime,\n            duration: player.duration,\n            timestamp: Date.now()\n        });\n    };\n\n    handleVideoPause = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        this.setState({\n            playing: false\n        });\n\n        const player = this.videoRef.current;\n        if (!player) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPause',\n            chatId: message.chat_id,\n            messageId: message.id\n        });\n    };\n\n    handlePlaybackRate = () => {\n        const { playbackRate } = this.state;\n\n        const nextPlaybackRate =\n            playbackRate === PLAYER_PLAYBACKRATE_NORMAL ? PLAYER_PLAYBACKRATE_FAST : PLAYER_PLAYBACKRATE_NORMAL;\n\n        this.setState(\n            {\n                playbackRate: nextPlaybackRate\n            },\n            () => {\n                const player = this.videoRef.current;\n                if (!player) return;\n\n                player.playbackRate = nextPlaybackRate;\n            }\n        );\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaPlaybackRate',\n            playbackRate: nextPlaybackRate\n        });\n    };\n\n    hasPrev = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index + 1 < playlist.messages.length;\n    };\n\n    hasNext = (message, playlist) => {\n        if (!message) return false;\n        if (!playlist || !playlist.messages.length) return false;\n\n        const { chat_id, id } = message;\n\n        const index = playlist.messages.findIndex(x => x.chat_id === chat_id && x.id === id);\n        if (index === -1) return false;\n\n        return index - 1 >= 0;\n    };\n\n    handleTitleMouseEnter = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: true\n        });\n    };\n\n    handleTitleMouseLeave = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMediaTitleMouseOver',\n            over: false\n        });\n    };\n\n    handleTitleClick = () => {\n        const { message } = this.state;\n        if (!message) return;\n\n        openChat(message.chat_id, message.id);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { playing, message, playlist, src } = this.state;\n\n        let audio = false;\n        if (message) {\n            const { chat_id, id } = message;\n            audio = hasAudio(chat_id, id);\n        }\n\n        const date = message ? message.date : null;\n\n        const title = getMediaTitle(message);\n        const dateHintStr = getDateHint(date);\n        const dateStr = getDate(date);\n        const showDate = !audio;\n        const showPlaybackRate = !audio;\n        const showRepeat = audio;\n        const showShuffle = audio;\n        const hasPrev = this.hasPrev(message, playlist);\n        const hasNext = this.hasNext(message, playlist);\n\n        return (\n            <>\n                <video\n                    className='header-player-video'\n                    ref={this.videoRef}\n                    src={src}\n                    autoPlay={true}\n                    controls={false}\n                    width={44}\n                    height={44}\n                    onCanPlay={this.handleCanPlay}\n                    onPlay={this.handleVideoPlay}\n                    onPause={this.handleVideoPause}\n                    onTimeUpdate={this.handleTimeUpdate}\n                    onEnded={this.handleVideoEnded}\n                />\n                {message && (\n                    <div className={classNames(classes.borderColor, 'header-player')}>\n                        <IconButton\n                            disabled={!hasPrev}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handlePrev}>\n                            <SkipPreviousIcon fontSize='small' />\n                        </IconButton>\n                        <IconButton\n                            className={classes.iconButton}\n                            color='primary'\n                            disabled={!src}\n                            onClick={this.handlePlay}>\n                            {playing ? <PauseIcon /> : <PlayArrowIcon />}\n                        </IconButton>\n                        <IconButton\n                            disabled={!hasNext}\n                            className={classes.iconButton}\n                            color='primary'\n                            onClick={this.handleNext}>\n                            <SkipNextIcon fontSize='small' />\n                        </IconButton>\n                        <Playlist />\n                        <div\n                            className='header-player-content'\n                            onMouseEnter={this.handleTitleMouseEnter}\n                            onMouseLeave={this.handleTitleMouseLeave}\n                            onClick={this.handleTitleClick}>\n                            <div className='header-player-title'>\n                                {title}\n                                {showDate && (\n                                    <span title={dateHintStr}>\n                                        &nbsp;\n                                        {dateStr}\n                                    </span>\n                                )}\n                            </div>\n                            &nbsp;\n                            <Time />\n                        </div>\n                        <VolumeButton />\n                        {showPlaybackRate && <PlaybackRateButton />}\n                        {showRepeat && <RepeatButton />}\n                        {showShuffle && <ShuffleButton />}\n                        <IconButton className={classes.iconButton} onClick={this.handleClose}>\n                            <CloseIcon fontSize='small' />\n                        </IconButton>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nconst enhance = compose(\n    withTranslation(),\n    withStyles(styles, { withTheme: true })\n);\n\nexport default enhance(HeaderPlayer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport LocalizationStore from '../../Stores/LocalizationStore';\nimport './DayMeta.css';\n\nconst styles = theme => ({\n    dayMeta: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass DayMeta extends React.Component {\n    componentDidMount() {\n        LocalizationStore.on('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    componentWillUnmount() {\n        LocalizationStore.removeListener('clientUpdateLanguageChange', this.onClientUpdateLanguage);\n    }\n\n    onClientUpdateLanguage = () => {\n        this.forceUpdate();\n    };\n\n    render() {\n        const { classes, date, i18n } = this.props;\n\n        return (\n            <div className={classNames('day-meta', classes.dayMeta)}>\n                {new Date(date * 1000).toLocaleDateString([i18n.language], { day: 'numeric', month: 'long' })}\n            </div>\n        );\n    }\n}\n\nDayMeta.propTypes = {\n    date: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(DayMeta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './FilesDropTarget.css';\n\nclass FilesDropTarget extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            dragging: ApplicationStore.getDragging()\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateDragging', this.onClientUpdateDragging);\n    }\n\n    onClientUpdateDragging = update => {\n        this.setState({ dragging: ApplicationStore.getDragging() });\n    };\n\n    handleDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n    };\n\n    handleDrop = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n\n        this.handleAttachDocumentComplete(event.dataTransfer.files);\n    };\n\n    handleDragLeave = event => {\n        event.preventDefault();\n        event.stopPropagation();\n        ApplicationStore.setDragging(false);\n    };\n\n    handleAttachDocumentComplete = files => {\n        if (files.length === 0) return;\n\n        for (let i = 0; i < files.length; i++) {\n            let file = files[i];\n            const content = {\n                '@type': 'inputMessageDocument',\n                document: { '@type': 'inputFileBlob', name: file.name, data: file }\n            };\n\n            this.onSendInternal(content, result => FileStore.uploadFile(result.content.document.document.id, result));\n        }\n    };\n\n    onSendInternal = async (content, callback) => {\n        const currentChatId = ApplicationStore.getChatId();\n\n        if (!currentChatId) return;\n        if (!content) return;\n\n        try {\n            ApplicationStore.invokeScheduledAction(`clientUpdateClearHistory chatId=${currentChatId}`);\n\n            let result = await TdLibController.send({\n                '@type': 'sendMessage',\n                chat_id: currentChatId,\n                reply_to_message_id: 0,\n                input_message_content: content\n            });\n\n            //MessageStore.set(result);\n\n            TdLibController.send({\n                '@type': 'viewMessages',\n                chat_id: currentChatId,\n                message_ids: [result.id]\n            });\n\n            callback(result);\n        } catch (error) {\n            alert('sendMessage error ' + JSON.stringify(error));\n        }\n    };\n\n    render() {\n        const { dragging } = this.state;\n\n        return (\n            <>\n                {dragging && (\n                    <div\n                        className='files-drop-target'\n                        onDragEnter={this.handleDragEnter}\n                        onDragLeave={this.handleDragLeave}\n                        onDrop={this.handleDrop}>\n                        <div className='files-drop-target-wrapper'>\n                            <div className='files-drop-target-text'>\n                                <div className='files-drop-target-title'>Drop files here</div>\n                                <div className='files-drop-target-subtitle'>to send them without compression</div>\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </>\n        );\n    }\n}\n\nFilesDropTarget.propTypes = {};\n\nexport default FilesDropTarget;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { getForwardTitle, isForwardOriginHidden } from '../../Utils/Message';\nimport { openUser, openChat } from '../../Actions/Client';\nimport './Forward.css';\n\nfunction arrowGenerator(color) {\n    return {\n        '&[x-placement*=\"bottom\"] $arrow': {\n            top: 0,\n            left: 0,\n            marginTop: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '0 1em 1em 1em',\n                borderColor: `transparent transparent ${color} transparent`\n            }\n        },\n        '&[x-placement*=\"top\"] $arrow': {\n            bottom: 0,\n            left: 0,\n            marginBottom: '-0.95em',\n            width: '3em',\n            height: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 0 1em',\n                borderColor: `${color} transparent transparent transparent`\n            }\n        },\n        '&[x-placement*=\"right\"] $arrow': {\n            left: 0,\n            marginLeft: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 1em 1em 0',\n                borderColor: `transparent ${color} transparent transparent`\n            }\n        },\n        '&[x-placement*=\"left\"] $arrow': {\n            right: 0,\n            marginRight: '-0.95em',\n            height: '3em',\n            width: '1em',\n            '&::before': {\n                borderWidth: '1em 0 1em 1em',\n                borderColor: `transparent transparent transparent ${color}`\n            }\n        }\n    };\n}\n\nconst styles = theme => ({\n    forwardColor: {\n        color: theme.palette.primary.main\n    },\n    arrowPopper: arrowGenerator(theme.palette.grey[700]),\n    arrow: {\n        position: 'absolute',\n        fontSize: 6,\n        width: '3em',\n        height: '3em',\n        '&::before': {\n            content: '\"\"',\n            margin: 'auto',\n            display: 'block',\n            width: 0,\n            height: 0,\n            borderStyle: 'solid'\n        }\n    },\n    tooltip: {\n        margin: '6px 0 26px 0'\n    }\n});\n\nclass Forward extends React.Component {\n    state = {\n        arrowRef: null\n    };\n\n    handleArrowRef = node => {\n        this.setState({\n            arrowRef: node\n        });\n    };\n\n    openForward = event => {\n        event.stopPropagation();\n\n        const { forwardInfo } = this.props;\n        if (!forwardInfo) return null;\n\n        const { origin } = forwardInfo;\n\n        switch (origin['@type']) {\n            case 'messageForwardOriginUser': {\n                const { sender_user_id } = origin;\n\n                openUser(sender_user_id, true);\n                break;\n            }\n            case 'messageForwardOriginHiddenUser': {\n                break;\n            }\n            case 'messageForwardOriginChannel': {\n                const { chat_id, message_id } = origin;\n\n                openChat(chat_id, message_id);\n                break;\n            }\n        }\n    };\n\n    render() {\n        const { t, classes, forwardInfo } = this.props;\n        const { arrowRef } = this.state;\n\n        const title = getForwardTitle(forwardInfo, t);\n        const tooltip = isForwardOriginHidden(forwardInfo) ? (\n            <>\n                {t('HidAccount')}\n                <span className={classes.arrow} ref={this.handleArrowRef} />\n            </>\n        ) : (\n            ''\n        );\n\n        return (\n            <div className={classNames('message-author', classes.forwardColor, 'forward')}>\n                {`${t('ForwardedMessage')}\\n${t('From')} `}\n                <Tooltip\n                    title={tooltip}\n                    classes={{ popper: classes.arrowPopper, tooltip: classes.tooltip }}\n                    PopperProps={{\n                        popperOptions: {\n                            modifiers: {\n                                arrow: {\n                                    enabled: Boolean(arrowRef),\n                                    element: arrowRef\n                                }\n                            }\n                        }\n                    }}\n                    placement='top'>\n                    <a onClick={this.openForward}>{title}</a>\n                </Tooltip>\n            </div>\n        );\n    }\n}\n\nForward.propTypes = {\n    forwardInfo: PropTypes.object.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Forward);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport { getDate, getDateHint } from '../../Utils/Message';\nimport './Meta.css';\n\nconst styles = theme => ({\n    meta: {\n        color: theme.palette.text.secondary,\n        '& a': {\n            color: theme.palette.text.secondary\n        }\n    }\n});\n\nclass Meta extends React.Component {\n    render() {\n        const { classes, date, editDate, onDateClick, t, views } = this.props;\n\n        const dateStr = getDate(date);\n        const dateHintStr = getDateHint(date);\n\n        return (\n            <div className={classNames('meta', classes.meta)}>\n                <span>&nbsp;</span>\n                {views > 0 && (\n                    <>\n                        <i className='meta-views-icon' />\n                        <span className='meta-views'>\n                            &nbsp;\n                            {views}\n                            &nbsp; &nbsp;\n                        </span>\n                    </>\n                )}\n                {editDate > 0 && <span>{t('EditedMessage')}&nbsp;</span>}\n                <a onClick={onDateClick}>\n                    <span title={dateHintStr}>{dateStr}</span>\n                </a>\n            </div>\n        );\n    }\n}\n\nMeta.propTypes = {\n    views: PropTypes.number,\n    date: PropTypes.number.isRequired,\n    editDate: PropTypes.number,\n    onDateClick: PropTypes.func\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Meta);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport MessageStore from '../../Stores/MessageStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport './MessageStatus.css';\n\nclass MessageStatus extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleUpdateMessageSend = this.handleUpdateMessageSend.bind(this);\n        this.handleUpdateChatReadOutbox = this.handleUpdateChatReadOutbox.bind(this);\n\n        this.state = {\n            sendingState: props.sendingState,\n            unread: true\n        };\n    }\n\n    componentDidMount() {\n        MessageStore.on('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.on('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.on('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    handleUpdateMessageSend(payload) {\n        if (this.props.messageId === payload.old_message_id && payload.message) {\n            this.newMessageId = payload.message.id;\n            this.setState({ sendingState: payload.message.sending_state });\n        }\n    }\n\n    handleUpdateChatReadOutbox(payload) {\n        if (\n            this.props.chatId === payload.chat_id &&\n            ((this.props.newMessageId && this.props.newMessageId <= payload.last_read_outbox_message_id) ||\n                this.props.messageId <= payload.last_read_outbox_message_id)\n        ) {\n            this.setState({ sendingState: null, unread: false });\n        }\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateMessageSendFailed', this.handleUpdateMessageSend);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.handleUpdateMessageSend);\n\n        ChatStore.removeListener('updateChatReadOutbox', this.handleUpdateChatReadOutbox);\n    }\n\n    render() {\n        let stateClassName = 'messagestatus-succeded';\n        if (this.state.sendingState) {\n            stateClassName =\n                this.state.sendingState['@type'] === 'messageSendingStateFailed'\n                    ? 'messagestatus-failed'\n                    : 'messagestatus-pending';\n        }\n\n        return this.state.unread && <i className={classNames('messagestatus-icon', stateClassName)} />;\n    }\n}\n\nexport default MessageStatus;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './UnreadSeparator.css';\n\nconst styles = theme => ({\n    unreadSeparator: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[800] : '#f0f4f7',\n        color: theme.palette.type === 'dark' ? theme.palette.text.primary : '#8096a8'\n    }\n});\n\nfunction UnreadSeparator(props) {\n    const { classes } = props;\n\n    return <div className={classNames('unread-separator', classes.unreadSeparator)}>Unread messages</div>;\n}\n\nexport default withStyles(styles)(UnreadSeparator);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Animation from './Animation';\nimport Photo from './Photo';\nimport Video from './Video';\nimport Audio from './Audio';\nimport Document from './Document';\nimport VoiceNote from './VoiceNote';\nimport VideoNote from './VideoNote';\nimport Sticker from './Sticker';\nimport { getSize } from '../../../Utils/Common';\nimport { accentStyles } from '../../Theme';\nimport { getSrc } from '../../../Utils/File';\nimport { PHOTO_DISPLAY_SIZE, PHOTO_DISPLAY_SMALL_SIZE, PHOTO_SIZE } from '../../../Constants';\nimport MessageStore from '../../../Stores/MessageStore';\nimport './WebPage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme)\n});\n\nclass WebPage extends React.Component {\n    getContent = () => {\n        const { classes, chatId, messageId, size, displaySize, displaySmallSize, openMedia } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        const { web_page } = content;\n        if (!web_page) return null;\n\n        const {\n            site_name,\n            title,\n            description,\n            url,\n            photo,\n            animation,\n            video,\n            audio,\n            document,\n            voice_note,\n            video_note,\n            sticker,\n            type\n        } = web_page;\n\n        if (sticker) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Sticker chatId={chatId} messageId={messageId} sticker={sticker} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (voice_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VoiceNote chatId={chatId} messageId={messageId} voiceNote={voice_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (video_note) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <VideoNote chatId={chatId} messageId={messageId} videoNote={video_note} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (audio) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Audio chatId={chatId} messageId={messageId} audio={audio} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (document) {\n            return (\n                <>\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    <Document chatId={chatId} messageId={messageId} document={document} openMedia={openMedia} />\n                </>\n            );\n        }\n\n        if (animation) {\n            const animationSrc = getSrc(animation.animation);\n            if (animationSrc || animation.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Animation chatId={chatId} messageId={messageId} animation={animation} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (video) {\n            if (video.thumbnail) {\n                return (\n                    <>\n                        {site_name && (\n                            <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                        )}\n                        {title && <div className='web-page-title'>{title}</div>}\n                        {description && <div className='web-page-description'>{description}</div>}\n                        <Video chatId={chatId} messageId={messageId} video={video} openMedia={openMedia} />\n                    </>\n                );\n            }\n        }\n\n        if (photo) {\n            const photoSize = getSize(photo.sizes, size);\n            const smallPhoto =\n                (type === 'article' || type === 'photo') &&\n                (site_name || title || description) &&\n                photoSize &&\n                photoSize.width === photoSize.height;\n\n            const style = smallPhoto\n                ? {\n                      float: 'right',\n                      marginLeft: 6,\n                      marginBottom: 6\n                  }\n                : {};\n            return (\n                <>\n                    {smallPhoto && (\n                        <Photo\n                            displaySize={displaySmallSize}\n                            style={style}\n                            chatId={chatId}\n                            messageId={messageId}\n                            photo={photo}\n                            openMedia={openMedia}\n                        />\n                    )}\n                    {site_name && (\n                        <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                    )}\n                    {title && <div className='web-page-title'>{title}</div>}\n                    {description && <div className='web-page-description'>{description}</div>}\n                    {!smallPhoto && <Photo chatId={chatId} messageId={messageId} photo={photo} openMedia={openMedia} />}\n                </>\n            );\n        }\n\n        return (\n            <>\n                {site_name && (\n                    <div className={classNames('web-page-site-name', classes.accentColorMain)}>{site_name}</div>\n                )}\n                {title && <div className='web-page-title'>{title}</div>}\n                {description && <div className='web-page-description'>{description}</div>}\n            </>\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className='web-page'>\n                <div className={classNames('web-page-border', classes.accentBackgroundLight)} />\n                <div className='web-page-wrapper'>{this.getContent()}</div>\n            </div>\n        );\n    }\n}\n\nWebPage.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number,\n    displaySize: PropTypes.number,\n    displaySmallSize: PropTypes.number,\n    openMedia: PropTypes.func\n};\n\nWebPage.defaultProps = {\n    size: PHOTO_SIZE,\n    displaySize: PHOTO_DISPLAY_SIZE,\n    displaySmallSize: PHOTO_DISPLAY_SMALL_SIZE\n};\n\nexport default withStyles(styles)(WebPage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Reply from './Reply';\nimport Forward from './Forward';\nimport Meta from './Meta';\nimport MessageStatus from './MessageStatus';\nimport MessageAuthor from './MessageAuthor';\nimport UserTile from '../Tile/UserTile';\nimport ChatTile from '../Tile/ChatTile';\nimport UnreadSeparator from './UnreadSeparator';\nimport WebPage from './Media/WebPage';\nimport { getEmojiMatches, getText, getMedia, getUnread, getWebPage, openMedia } from '../../Utils/Message';\nimport { canSendMessages } from '../../Utils/Chat';\nimport { openUser, openChat, selectMessage, openReply } from '../../Actions/Client';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './Message.css';\n\nconst styles = theme => ({\n    message: {\n        backgroundColor: 'transparent'\n    },\n    messageAuthorColor: {\n        color: theme.palette.primary.main\n    },\n    messageSelected: {\n        backgroundColor: theme.palette.primary.main + '22'\n    },\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    }\n});\n\nclass Message extends Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, messageId } = this.props;\n        if (process.env.NODE_ENV !== 'production') {\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                emojiMatches: getEmojiMatches(chatId, messageId),\n                selected: false,\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { theme, chatId, messageId, sendingState, showUnreadSeparator, showTitle } = this.props;\n        const { contextMenu, selected, highlighted, emojiMatches } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.showTitle !== showTitle) {\n            return true;\n        }\n\n        if (nextState.contextMenu !== contextMenu) {\n            return true;\n        }\n\n        if (nextState.selected !== selected) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        if (nextState.emojiMatches !== emojiMatches) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.on('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateMessageSelected);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateClearSelection);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageEdited', this.onUpdateMessageEdited);\n        MessageStore.removeListener('updateMessageViews', this.onUpdateMessageViews);\n    }\n\n    onClientUpdateClearSelection = update => {\n        if (!this.state.selected) return;\n\n        this.setState({ selected: false });\n    };\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    onClientUpdateMessageSelected = update => {\n        const { chatId, messageId } = this.props;\n        const { selected } = update;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.setState({ selected, highlighted: false });\n        }\n    };\n\n    onUpdateMessageEdited = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageViews = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n\n        if (chatId === chat_id && messageId === message_id) {\n            this.forceUpdate();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id } = update;\n        const { chatId, messageId } = this.props;\n        const { emojiMatches } = this.state;\n\n        if (chatId !== chat_id) return;\n        if (messageId !== message_id) return;\n\n        const newEmojiMatches = getEmojiMatches(chatId, messageId);\n        if (newEmojiMatches !== emojiMatches) {\n            this.setState({ emojiMatches: getEmojiMatches(chatId, messageId) });\n        } else {\n            this.forceUpdate();\n        }\n    };\n\n    handleSelectUser = userId => {\n        openUser(userId, true);\n    };\n\n    handleSelectChat = chatId => {\n        openChat(chatId, null, true);\n    };\n\n    handleSelection = () => {\n        if (!this.mouseDown) return;\n\n        const selection = window.getSelection().toString();\n        if (selection) return;\n\n        const { chatId, messageId } = this.props;\n\n        const selected = !MessageStore.selectedItems.has(`chatId=${chatId}_messageId=${messageId}`);\n        selectMessage(chatId, messageId, selected);\n    };\n\n    handleDateClick = e => {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n\n        const canBeReplied = canSendMessages(chatId);\n        if (canBeReplied) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateReply',\n                chatId: chatId,\n                messageId: messageId\n            });\n            return;\n        }\n\n        const canBeForwarded = message && message.can_be_forwarded;\n        if (canBeForwarded) {\n            TdLibController.clientUpdate({\n                '@type': 'clientUpdateForward',\n                info: {\n                    chatId: chatId,\n                    messageIds: [messageId]\n                }\n            });\n        }\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    handleMouseDown = () => {\n        this.mouseDown = true;\n    };\n\n    handleMouseOver = () => {\n        this.mouseDown = false;\n    };\n\n    handleMouseOut = () => {\n        this.mouseOut = false;\n    };\n\n    handleReplyClick = () => {\n        const { chatId, messageId } = this.props;\n        openReply(chatId, messageId);\n    };\n\n    render() {\n        const { t, classes, chatId, messageId, showUnreadSeparator, showTitle } = this.props;\n        const { emojiMatches, selected, highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty message]</div>;\n\n        const { sending_state, views, date, edit_date, reply_to_message_id, forward_info, sender_user_id } = message;\n\n        const text = getText(message);\n        const webPage = getWebPage(message);\n        const media = getMedia(message, this.openMedia);\n        this.unread = getUnread(message);\n\n        let tile = null;\n        if (showTitle) {\n            tile = sender_user_id ? (\n                <UserTile userId={sender_user_id} onSelect={this.handleSelectUser} />\n            ) : (\n                <ChatTile chatId={chatId} onSelect={this.handleSelectChat} />\n            );\n        }\n\n        const messageClassName = classNames('message', classes.message, {\n            'message-selected': selected,\n            [classes.messageSelected]: selected,\n            [classes.messageHighlighted]: highlighted && !selected,\n            'message-short': !showTitle\n        });\n\n        const meta = <Meta date={date} editDate={edit_date} views={views} onDateClick={this.handleDateClick} />;\n\n        return (\n            <div\n                className={messageClassName}\n                onMouseOver={this.handleMouseOver}\n                onMouseOut={this.handleMouseOut}\n                onMouseDown={this.handleMouseDown}\n                onClick={this.handleSelection}\n                onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='message-wrapper'>\n                    <i className='message-select-tick' />\n                    {this.unread && (\n                        <MessageStatus chatId={chatId} messageId={messageId} sendingState={sending_state} />\n                    )}\n                    {tile}\n                    <div className='message-content'>\n                        <div className='message-title'>\n                            {showTitle && !forward_info && (\n                                <MessageAuthor chatId={chatId} openChat userId={sender_user_id} openUser />\n                            )}\n                            {forward_info && <Forward forwardInfo={forward_info} />}\n                            {showTitle && meta}\n                        </div>\n                        {Boolean(reply_to_message_id) && (\n                            <Reply chatId={chatId} messageId={reply_to_message_id} onClick={this.handleReplyClick} />\n                        )}\n                        {media}\n                        <div\n                            className={classNames('message-text', {\n                                'message-text-1emoji': emojiMatches === 1,\n                                'message-text-2emoji': emojiMatches === 2,\n                                'message-text-3emoji': emojiMatches === 3\n                            })}>\n                            {text}\n                        </div>\n                        {webPage && <WebPage chatId={chatId} messageId={messageId} openMedia={this.openMedia} />}\n                    </div>\n                    {!showTitle && meta}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(Message);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport ReplyTile from '../Tile/ReplyTile';\nimport { accentStyles, borderStyle } from '../Theme';\nimport { canPinMessages } from '../../Utils/Chat';\nimport { getContent, getReplyPhotoSize, isDeletedMessage } from '../../Utils/Message';\nimport { loadMessageContents } from '../../Utils/File';\nimport { openChat } from '../../Actions/Client';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './PinnedMessage.css';\n\nconst styles = theme => ({\n    ...accentStyles(theme),\n    ...borderStyle(theme),\n    iconButton: {\n        // padding: 4\n    },\n    pinnedMessage: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    },\n    pinnedMessageContentSubtitle: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass PinnedMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const chat = ChatStore.get(props.chatId);\n        this.state = {\n            prevPropsChatId: props.chatId,\n            clientData: ChatStore.getClientData(props.chatId),\n            messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n            confirm: false\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { prevPropsChatId } = state;\n        const { chatId } = props;\n\n        if (prevPropsChatId !== chatId) {\n            const chat = ChatStore.get(chatId);\n            return {\n                prevPropsChatId: chatId,\n                clientData: ChatStore.getClientData(chatId),\n                messageId: chat && chat.pinned_message_id ? chat.pinned_message_id : 0,\n                confirm: false\n            };\n        }\n\n        return null;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { messageId } = this.state;\n\n        if (messageId && prevState.messageId !== messageId) {\n            this.loadContent();\n        }\n    }\n\n    componentDidMount() {\n        this.loadContent();\n\n        ChatStore.on('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.on('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    componentWillUnmount() {\n        ChatStore.removeListener('updateChatPinnedMessage', this.onUpdateChatPinnedMessage);\n        ChatStore.removeListener('clientUpdateSetChatClientData', this.onClientUpdateSetChatClientData);\n    }\n\n    onClientUpdateSetChatClientData = update => {\n        const { chatId, clientData } = update;\n\n        if (this.props.chatId !== chatId) return;\n\n        this.setState({ clientData });\n    };\n\n    onUpdateChatPinnedMessage = update => {\n        const { chat_id, pinned_message_id } = update;\n        const { chatId } = this.props;\n\n        if (chatId !== chat_id) return;\n\n        this.setState({ messageId: pinned_message_id });\n    };\n\n    loadContent = () => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!chatId) return;\n        if (!messageId) return;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (message) return;\n\n        TdLibController.send({\n            '@type': 'getMessage',\n            chat_id: chatId,\n            message_id: messageId\n        })\n            .then(result => {\n                MessageStore.set(result);\n\n                const store = FileStore.getStore();\n                loadMessageContents(store, [result]);\n\n                this.forceUpdate();\n            })\n            .catch(error => {\n                const deletedMessage = {\n                    '@type': 'deletedMessage',\n                    chat_id: chatId,\n                    id: messageId,\n                    content: null\n                };\n                MessageStore.set(deletedMessage);\n                this.forceUpdate();\n            });\n    };\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { chatId, t, theme } = this.props;\n        const { clientData, confirm, messageId } = this.state;\n\n        if (nextProps.t !== t) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextState.clientData !== clientData) {\n            return true;\n        }\n\n        if (nextState.confirm !== confirm) {\n            return true;\n        }\n\n        if (nextState.messageId !== messageId) {\n            return true;\n        }\n\n        return false;\n    }\n\n    handleClick = event => {\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        if (!messageId) return;\n\n        openChat(chatId, messageId);\n    };\n\n    handleDelete = async event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        const { messageId } = this.state;\n\n        const canPin = canPinMessages(chatId);\n        if (canPin) {\n            this.setState({ confirm: true });\n        } else {\n            const data = ChatStore.getClientData(chatId);\n            await TdLibController.clientUpdate({\n                '@type': 'clientUpdateSetChatClientData',\n                chatId: chatId,\n                clientData: Object.assign({}, data, { unpinned_message_id: messageId })\n            });\n        }\n    };\n\n    handleUnpin = async () => {\n        const { chatId } = this.props;\n\n        this.handleClose();\n\n        TdLibController.send({\n            '@type': 'unpinChatMessage',\n            chat_id: chatId\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ confirm: false });\n    };\n\n    render() {\n        const { chatId, classes, t } = this.props;\n        const { messageId, confirm } = this.state;\n\n        if (!chatId) return null;\n\n        const { unpinned_message_id } = ChatStore.getClientData(chatId);\n        if (unpinned_message_id === messageId) return null;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        let content = !message ? t('Loading') : getContent(message, t);\n        const photoSize = getReplyPhotoSize(chatId, messageId);\n\n        if (isDeletedMessage(message)) {\n            content = t('DeletedMessage');\n        }\n\n        return (\n            <>\n                <div\n                    className={classNames('pinned-message', classes.pinnedMessage, classes.borderColor)}\n                    onClick={this.handleClick}>\n                    <div className='pinned-message-wrapper'>\n                        <div className={classNames('reply-border', classes.accentBackgroundLight)} />\n                        {photoSize && <ReplyTile chatId={chatId} messageId={messageId} photoSize={photoSize} />}\n                        <div className='pinned-message-content'>\n                            <div className={classNames('pinned-message-content-title', classes.accentColorMain)}>\n                                {t('PinnedMessage')}\n                            </div>\n                            <div\n                                className={classNames(\n                                    'pinned-message-content-subtitle',\n                                    classes.pinnedMessageContentSubtitle\n                                )}>\n                                {content}\n                            </div>\n                        </div>\n                        <div className='pinned-message-delete-button'>\n                            <IconButton className={classes.iconButton} onClick={this.handleDelete}>\n                                <CloseIcon />\n                            </IconButton>\n                        </div>\n                    </div>\n                </div>\n                {confirm && (\n                    <Dialog\n                        transitionDuration={0}\n                        open\n                        onClose={this.handleClose}\n                        aria-labelledby='unpin-message-confirmation'>\n                        <DialogTitle id='unpin-message-confirmation'>{t('AppName')}</DialogTitle>\n                        <DialogContent>\n                            <DialogContentText>{t('UnpinMessageAlert')}</DialogContentText>\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color='primary'>\n                                {t('Cancel')}\n                            </Button>\n                            <Button onClick={this.handleUnpin} color='primary'>\n                                {t('Ok')}\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                )}\n            </>\n        );\n    }\n}\n\nPinnedMessage.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation()\n);\n\nexport default enhance(PinnedMessage);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M419.967,162.004c-21.894-21.728-52.521-37.201-86.24-43.57c-4.069-0.766-7.993,1.908-8.762,5.978 c-0.769,4.07,1.907,7.993,5.978,8.762C395.154,145.302,440,189.928,440,241.696c0,42.636-30.352,80.956-79.21,100.006 c-2.494,0.973-4.281,3.201-4.688,5.847c-2.964,19.25,1.082,38.841,10.969,55.161c-21.588-5.766-39.074-22.333-45.875-44.782 c-1.028-3.394-4.302-5.61-7.827-5.297c-5.297,0.46-10.636,0.694-15.869,0.694c-46.659,0-90.456-18-117.157-48.151 c-2.745-3.101-7.485-3.389-10.587-0.643c-3.101,2.746-3.389,7.486-0.643,10.587c29.504,33.316,77.5,53.207,128.387,53.207 c3.738,0,7.524-0.11,11.313-0.328c5.437,14.023,14.79,26.508,26.772,35.604c14.075,10.685,30.851,16.332,48.512,16.332 c3.027,0,5.757-1.82,6.922-4.614s0.536-6.014-1.594-8.165c-13.83-13.961-20.775-33.575-19.005-53.169 c24.22-10.168,44.756-25.233,59.594-43.76C446.36,289.816,455,266.12,455,241.696C455,212.727,442.559,184.425,419.967,162.004z\"\n}), React.createElement(\"path\", {\n  fill: \"#aaaaaa\",\n  d: \"M315,161.696c0-34.155-16.61-66.156-46.771-90.109c-29.653-23.55-68.978-36.519-110.729-36.519 c-41.754,0-81.08,12.969-110.731,36.519C16.609,95.54,0,127.541,0,161.696c0,24.424,8.64,48.121,24.985,68.529 c14.838,18.526,35.375,33.592,59.594,43.76c1.77,19.594-5.175,39.208-19.005,53.169c-2.13,2.15-2.759,5.371-1.594,8.165 s3.896,4.614,6.922,4.614c17.662,0,34.437-5.647,48.512-16.332c11.982-9.095,21.335-21.581,26.772-35.604 c3.789,0.218,7.575,0.328,11.313,0.328c41.752,0,81.077-12.969,110.729-36.519C298.39,227.852,315,195.851,315,161.696z  M141.631,272.63c-3.536-0.309-6.799,1.902-7.827,5.297c-6.801,22.448-24.286,39.015-45.875,44.781 c9.887-16.319,13.933-35.911,10.969-55.161c-0.407-2.646-2.194-4.874-4.688-5.847C45.352,242.652,15,204.332,15,161.696 c0-61.552,63.925-111.628,142.5-111.628c78.575,0,142.5,50.076,142.5,111.628c0,61.552-63.925,111.628-142.5,111.628 C152.267,273.324,146.928,273.091,141.631,272.63z\"\n}));\n\nvar SvgBubbles = function SvgBubbles(_ref) {\n  var svgRef = _ref.svgRef,\n      props = _objectWithoutProperties(_ref, [\"svgRef\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"Capa_1\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 455 455\",\n    style: {\n      enableBackground: \"new 0 0 455 455\"\n    },\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgBubbles, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/Bubbles.5b7ac6f8.svg\";\nexport { ForwardRef as ReactComponent };","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { ReactComponent as BubblesLogo } from '../../Assets/Bubbles.svg';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './Placeholder.css';\n\nclass Placeholder extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, dialogsReady } = ApplicationStore;\n        this.state = {\n            chatId,\n            dialogsReady\n        };\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.on('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n        ApplicationStore.removeListener('clientUpdateDialogsReady', this.onClientUpdateDialogsReady);\n    }\n\n    onClientUpdateChatId = update => {\n        const { nextChatId: chatId } = update;\n\n        this.setState({ chatId });\n    };\n\n    onClientUpdateDialogsReady = update => {\n        const { dialogsReady } = ApplicationStore;\n\n        this.setState({ dialogsReady });\n    };\n\n    render() {\n        const { t } = this.props;\n        const { chatId, dialogsReady } = this.state;\n        if (chatId) return null;\n        if (!dialogsReady) return null;\n\n        return (\n            <div className='placeholder'>\n                <div className='placeholder-wrapper'>\n                    <BubblesLogo className='placeholder-logo' />\n                    {t('SelectChatToStartMessaging')}\n                </div>\n            </div>\n        );\n    }\n}\n\nPlaceholder.propTypes = {};\n\nexport default withTranslation()(Placeholder);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport ArrowDownwardIcon from '@material-ui/icons/ArrowDownward';\nimport IconButton from '@material-ui/core/IconButton';\nimport './ScrollDownButton.css';\n\nconst styles = theme => ({\n    scrollDownButton: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        borderColor: theme.palette.divider\n    }\n});\n\nclass ScrollDownButton extends React.Component {\n    render() {\n        const { classes, onClick } = this.props;\n\n        return (\n            <div className={classNames('scroll-down-button', classes.scrollDownButton)}>\n                <IconButton disableRipple={true} onMouseDown={onClick}>\n                    <ArrowDownwardIcon />\n                </IconButton>\n            </div>\n        );\n    }\n}\n\nScrollDownButton.propTypes = {\n    onClick: PropTypes.func.isRequired\n};\n\nexport default withStyles(styles)(ScrollDownButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport UnreadSeparator from './UnreadSeparator';\nimport Photo from './Media/Photo';\nimport { openMedia } from '../../Utils/Message';\nimport { getServiceMessageContent } from '../../Utils/ServiceMessage';\nimport MessageStore from '../../Stores/MessageStore';\nimport './ServiceMessage.css';\n\nconst chatPhotoStyle = {\n    width: 64,\n    height: 64,\n    borderRadius: '50%',\n    margin: '-8px auto 16px auto'\n};\n\nconst styles = theme => ({\n    '@keyframes highlighted': {\n        from: { backgroundColor: theme.palette.primary.main + '22' },\n        to: { backgroundColor: 'transparent' }\n    },\n    messageHighlighted: {\n        animation: 'highlighted 4s ease-out'\n    },\n    serviceMessageContent: {\n        color: theme.palette.text.secondary\n    }\n});\n\nclass ServiceMessage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        if (process.env.NODE_ENV !== 'production') {\n            const { chatId, messageId } = this.props;\n            this.state = {\n                message: MessageStore.get(chatId, messageId),\n                highlighted: false\n            };\n        } else {\n            this.state = {\n                highlighted: false\n            };\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, sendingState, showUnreadSeparator, theme } = this.props;\n        const { highlighted } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextProps.sendingState !== sendingState) {\n            return true;\n        }\n\n        if (nextProps.showUnreadSeparator !== showUnreadSeparator) {\n            return true;\n        }\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextState.highlighted !== highlighted) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        MessageStore.on('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('clientUpdateMessageHighlighted', this.onClientUpdateMessageHighlighted);\n    }\n\n    onClientUpdateMessageHighlighted = update => {\n        const { chatId, messageId } = this.props;\n        const { selected, highlighted } = this.state;\n\n        if (selected) return;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            if (highlighted) {\n                this.setState({ highlighted: false }, () => {\n                    setTimeout(() => {\n                        this.setState({ highlighted: true });\n                    }, 0);\n                });\n            } else {\n                this.setState({ highlighted: true });\n            }\n        } else if (highlighted) {\n            this.setState({ highlighted: false });\n        }\n    };\n\n    handleAnimationEnd = () => {\n        this.setState({ highlighted: false });\n    };\n\n    openMedia = event => {\n        if (event) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n\n        const { chatId, messageId } = this.props;\n\n        openMedia(chatId, messageId);\n    };\n\n    render() {\n        const { classes, chatId, messageId, showUnreadSeparator } = this.props;\n        const { highlighted } = this.state;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return <div>[empty service message]</div>;\n\n        const { content } = message;\n        if (!content) return <div>[empty service message]</div>;\n\n        const { photo } = content;\n\n        const text = getServiceMessageContent(message, true);\n\n        const messageClassName = classNames('service-message', { [classes.messageHighlighted]: highlighted });\n\n        return (\n            <div className={messageClassName} onAnimationEnd={this.handleAnimationEnd}>\n                {showUnreadSeparator && <UnreadSeparator />}\n                <div className='service-message-wrapper'>\n                    <div className={classNames('service-message-content', classes.serviceMessageContent)}>{text}</div>\n                </div>\n                {photo && (\n                    <Photo\n                        chatId={chatId}\n                        messageId={messageId}\n                        photo={photo}\n                        style={chatPhotoStyle}\n                        openMedia={this.openMedia}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(ServiceMessage);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from './StickerPreview';\nimport { borderStyle } from '../Theme';\nimport { loadStickerContent, loadStickersContent } from '../../Utils/File';\nimport { STICKER_HINT_DISPLAY_SIZE, STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickersHint.css';\n\nconst styles = theme => ({\n    root: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF'\n    },\n    ...borderStyle(theme)\n});\n\nclass StickersHint extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.hintsRef = React.createRef();\n\n        this.state = {\n            hint: null,\n            items: [],\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        };\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.on('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateLocalStickersHint', this.onClientUpdateLocalStickersHint);\n        StickerStore.removeListener('clientUpdateRemoteStickersHint', this.onClientUpdateRemoteStickersHint);\n    }\n\n    onClientUpdateRemoteStickersHint = update => {\n        const { hint } = update;\n        const { hint: currentHint } = this.state;\n\n        if (currentHint && hint.timestamp !== currentHint.timestamp) return;\n\n        this.setState({\n            hint: StickerStore.hint,\n            items: this.getItems(StickerStore.hint)\n        });\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    onClientUpdateLocalStickersHint = update => {\n        const { hint } = update;\n\n        this.setState({\n            hint,\n            items: this.getItems(hint),\n            previewStickerId: 0,\n            showPreview: false,\n            cancelSend: false\n        });\n\n        if (!hint) return;\n\n        const store = FileStore.getStore();\n        const { stickers } = hint;\n        loadStickersContent(store, stickers.stickers);\n    };\n\n    handleSend = sticker => {\n        const { cancelSend } = this.state;\n        if (cancelSend) return;\n        if (!sticker) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSend',\n            sticker\n        });\n    };\n\n    loadPreviewContent = stickerId => {\n        const { items } = this.state;\n\n        const sticker = items.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        let stickersPerRow = 8;\n        if (this.hintsRef && this.hintsRef.current) {\n            stickersPerRow = Math.floor(this.hintsRef.current.clientWidth / STICKER_HINT_DISPLAY_SIZE);\n        }\n\n        const preloadStickers = this.getNeighborStickers(stickerId, items, stickersPerRow);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = (stickerId, stickers, stickersPerRow) => {\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const row = Math.floor(index / stickersPerRow);\n        const column = index % stickersPerRow;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * prevRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * prevRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(stickersPerRow * row + prevColumn);\n        }\n        if (nextColumn < stickersPerRow) {\n            indexes.push(stickersPerRow * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / stickersPerRow)) {\n            if (prevColumn >= 0) {\n                indexes.push(stickersPerRow * nextRow + prevColumn);\n            }\n            indexes.push(stickersPerRow * nextRow + column);\n            if (nextColumn < stickersPerRow) {\n                indexes.push(stickersPerRow * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        if (this.mouseDownStickerId !== stickerId) {\n            this.mouseDownStickerId = null;\n        }\n        this.setState({ previewStickerId: stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.mouseDownStickerId = stickerId;\n        const now = Date.now();\n\n        this.setState({ previewStickerId: stickerId, timestamp: now, showPreview: false, cancelSend: false });\n        setTimeout(() => {\n            const { timestamp } = this.state;\n            if (timestamp === now) {\n                this.setState({ showPreview: true, cancelSend: true });\n            }\n        }, 500);\n\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ previewStickerId: 0, timestamp: 0, showPreview: false });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    getItems = hint => {\n        const items = [];\n        if (!hint) return items;\n\n        const dict = new Map();\n        const { stickers, foundStickers } = hint;\n        if (stickers) {\n            stickers.stickers.forEach(x => {\n                items.push(x);\n                dict.set(x.sticker.id, x.sticker.id);\n            });\n        }\n        if (foundStickers) {\n            foundStickers.stickers.forEach(x => {\n                if (!dict.has(x.sticker.id)) {\n                    items.push(x);\n                    dict.set(x.sticker.id, x.sticker.id);\n                }\n            });\n        }\n\n        return items;\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { hint, items, previewStickerId, showPreview } = this.state;\n        if (!hint) return null;\n        if (!items) return null;\n        if (!items.length) return null;\n\n        const controls = items.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: STICKER_HINT_DISPLAY_SIZE, height: STICKER_HINT_DISPLAY_SIZE }}\n                onClick={() => this.handleSend(x)}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n            </div>\n        ));\n\n        const stickerIndex = items.findIndex(x => x.sticker.id === previewStickerId);\n        const sticker = stickerIndex !== -1 ? items[stickerIndex] : null;\n\n        return (\n            <div\n                ref={this.hintsRef}\n                className={classNames('stickers-hint', classes.borderColor, classes.root)}\n                onMouseOver={this.handleMouseOver}\n                onMouseDown={this.handleMouseDown}>\n                {controls}\n                {Boolean(sticker) && showPreview && <StickerPreview sticker={sticker} />}\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles)(StickersHint);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport DayMeta from '../Message/DayMeta';\nimport FilesDropTarget from './FilesDropTarget';\nimport Message from '../Message/Message';\nimport PinnedMessage from './PinnedMessage';\nimport Placeholder from './Placeholder';\nimport ScrollDownButton from './ScrollDownButton';\nimport ServiceMessage from '../Message/ServiceMessage';\nimport StickersHint from './StickersHint';\nimport { throttle, getPhotoSize, itemsInView } from '../../Utils/Common';\nimport { loadChatsContent, loadDraftContent, loadMessageContents } from '../../Utils/File';\nimport { filterMessages } from '../../Utils/Message';\nimport { isServiceMessage } from '../../Utils/ServiceMessage';\nimport { canSendFiles, getChatFullInfo, getSupergroupId, isChannelChat } from '../../Utils/Chat';\nimport { highlightMessage, openChat } from '../../Actions/Client';\nimport { MESSAGE_SLICE_LIMIT, MESSAGE_SPLIT_MAX_TIME_S } from '../../Constants';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport SupergroupStore from '../../Stores/SupergroupStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MessagesList.css';\n\nconst ScrollBehaviorEnum = Object.freeze({\n    NONE: 'NONE',\n    SCROLL_TO_BOTTOM: 'SCROLL_TO_BOTTOM',\n    SCROLL_TO_UNREAD: 'SCROLL_TO_UNREAD',\n    SCROLL_TO_MESSAGE: 'SCROLL_TO_MESSAGE',\n    KEEP_SCROLL_POSITION: 'KEEP_SCROLL_POSITION'\n});\n\nconst styles = theme => ({\n    background: {\n        background: theme.palette.type === 'dark' ? theme.palette.grey[900] : 'transparent'\n    }\n});\n\nclass MessagesList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`MessagesList.ctor chat_id=${props.chatId} message_id=${props.messageId}`);\n\n        this.sessionId = Date.now();\n        this.state = {\n            prevChatId: 0,\n            prevMessageId: null,\n            playerOpened: false,\n            history: [],\n            clearHistory: false,\n            selectionActive: false,\n            scrollBehavior: ScrollBehaviorEnum.NONE,\n            separatorMessageId: 0,\n            scrollDownVisible: false,\n            replyHistory: []\n        };\n\n        this.listRef = React.createRef();\n        this.itemsRef = React.createRef();\n\n        this.itemsMap = new Map();\n\n        this.updateItemsInView = throttle(this.updateItemsInView, 500);\n        //debounce(this.updateItemsInView, 250);\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        if (props.chatId !== state.prevChatId || props.messageId !== state.prevMessageId) {\n            return {\n                prevChatId: props.chatId,\n                prevMessageId: props.messageId,\n                clearHistory: false,\n                selectionActive: false,\n                scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                separatorMessageId: 0,\n                scrollDownVisible: props.chatId === state.prevChatId,\n                replyHistory: props.chatId !== state.prevChatId ? [] : state.replyHistory\n            };\n        }\n\n        return null;\n    }\n\n    getSnapshotBeforeUpdate(prevProps, prevState) {\n        const { chatId } = this.props;\n\n        const list = this.listRef.current;\n        const snapshot = {\n            scrollTop: list.scrollTop,\n            scrollHeight: list.scrollHeight,\n            offsetHeight: list.offsetHeight\n        };\n\n        console.log(\n            `SCROLL GETSNAPSHOTBEFOREUPDATE \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        return snapshot;\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        const list = this.listRef.current;\n        console.log(\n            `MessagesList.componentDidUpdate chat_id=${chatId} message_id=${messageId} \\\\\n            prev_chat_id=${prevProps.chatId} prev_message_id=${prevProps.messageId} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight}`\n        );\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.handleSelectChat(chatId, prevProps.chatId, messageId, prevProps.messageId);\n        } else {\n            this.handleScrollBehavior(snapshot);\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId, theme } = this.props;\n        const { playerOpened, history, dragging, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        if (nextProps.theme !== theme) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.scrollDownVisible !== scrollDownVisible) {\n            return true;\n        }\n\n        if (nextState.playerOpened !== playerOpened) {\n            return true;\n        }\n\n        if (nextState.history !== history) {\n            return true;\n        }\n\n        if (nextState.dragging !== dragging) {\n            return true;\n        }\n\n        if (nextState.clearHistory !== clearHistory) {\n            return true;\n        }\n\n        if (nextState.selectionActive !== selectionActive) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        this.handleSelectChat(chatId, 0);\n\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.on('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.on('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.on('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.on('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.on('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.on('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.on('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.on('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    componentWillUnmount() {\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n        MessageStore.removeListener('updateMessageSendSucceeded', this.onUpdateMessageSendSucceeded);\n        MessageStore.removeListener('clientUpdateMessageSelected', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateClearSelection', this.onClientUpdateSelection);\n        MessageStore.removeListener('clientUpdateOpenReply', this.onClientUpdateOpenReply);\n        ChatStore.removeListener('updateChatLastMessage', this.onUpdateChatLastMessage);\n        ChatStore.removeListener('clientUpdateClearHistory', this.onClientUpdateClearHistory);\n\n        PlayerStore.removeListener('clientUpdateMediaActive', this.onClientUpdateMediaActive);\n        PlayerStore.removeListener('clientUpdateMediaEnding', this.onClientUpdateMediaEnding);\n        PlayerStore.removeListener('clientUpdateMediaEnd', this.onClientUpdateMediaEnd);\n    }\n\n    onClientUpdateOpenReply = update => {\n        const { chatId, messageId } = update;\n        const { replyHistory } = this.state;\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        const lastItem = replyHistory.length > 0 ? replyHistory[replyHistory.length - 1] : null;\n        if (lastItem && lastItem.chatId === chatId && lastItem.messageId === messageId) {\n            return;\n        }\n\n        replyHistory.push({ chatId, messageId });\n    };\n\n    onClientUpdateMediaActive = update => {\n        const list = this.listRef.current;\n\n        const prevOffsetHeight = list.offsetHeight;\n        const prevScrollTop = list.scrollTop;\n        this.setState({ playerOpened: true }, () => {\n            if (list.scrollTop === prevScrollTop) {\n                list.scrollTop += Math.abs(prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateMediaEnding = udpate => {\n        const list = this.listRef.current;\n\n        this.prevOffsetHeight = list.offsetHeight;\n        this.prevScrollTop = list.scrollTop;\n    };\n\n    onClientUpdateMediaEnd = udpate => {\n        const list = this.listRef.current;\n\n        //const prevOffsetHeight = list.offsetHeight;\n        //const prevScrollTop = list.scrollTop;\n\n        this.setState({ playerOpened: false }, () => {\n            if (list.scrollTop === this.prevScrollTop) {\n                list.scrollTop -= Math.abs(this.prevOffsetHeight - list.offsetHeight);\n            }\n        });\n    };\n\n    onClientUpdateSelection = update => {\n        this.setState({\n            selectionActive: MessageStore.selectedItems.size > 0,\n            scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n        });\n    };\n\n    onClientUpdateClearHistory = update => {\n        const { chatId } = this.props;\n\n        if (chatId === update.chatId) {\n            this.setState({ clearHistory: update.inProgress });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId } = this.props;\n        const { history } = this.state;\n        const { chat_id, message_id } = update;\n\n        if (chatId !== chat_id) return;\n\n        if (history.findIndex(x => x.id === message_id) !== -1) {\n            const message = MessageStore.get(chat_id, message_id);\n            if (!message) return;\n\n            const store = FileStore.getStore();\n            loadMessageContents(store, [message]);\n        }\n    };\n\n    onUpdateChatLastMessage = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n    };\n\n    onUpdateMessageSendSucceeded = update => {\n        const { message, old_message_id } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let handleSendSucceeded = false;\n        const { content } = message;\n        switch (content['@type']) {\n            case 'messagePoll': {\n                handleSendSucceeded = true;\n                break;\n            }\n        }\n\n        if (!handleSendSucceeded) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        console.log('SCROLL MessagesList.onUpdateMessageSendSucceeded scrollBehavior=' + scrollBehavior);\n        this.replaceMessage(old_message_id, message, scrollBehavior);\n        const store = FileStore.getStore();\n        loadMessageContents(store, [message]);\n        MessagesList.viewMessages([message]);\n    };\n\n    onUpdateNewMessage = update => {\n        if (!this.completed) return;\n\n        const { message } = update;\n        const { chatId } = this.props;\n        if (chatId !== message.chat_id) return;\n\n        let scrollBehavior = ScrollBehaviorEnum.NONE;\n        const list = this.listRef.current;\n        // at the end of list\n        if (list.scrollTop === list.scrollHeight - list.offsetHeight) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n        // sent message\n        else if (message.is_outgoing) {\n            scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n        }\n\n        const history = [message];\n\n        console.log('SCROLL MessagesList.onUpdateNewMessage scrollBehavior=' + scrollBehavior);\n        const newState = {\n            scrollBehavior,\n            scrollDownVisible: false\n        };\n        this.insertAfter(this.filterMessages(history), newState);\n        const store = FileStore.getStore();\n        loadMessageContents(store, history);\n        MessagesList.viewMessages(history);\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chatId } = this.props;\n        if (chatId !== update.chat_id) return;\n\n        if (!update.is_permanent) return;\n\n        this.deleteHistory(update.message_ids);\n    };\n\n    updateItemsInView = () => {\n        if (!this.messages) return;\n\n        const messages = new Map();\n        const items = itemsInView(this.listRef, this.itemsRef);\n        for (let i = 0; i < items.length; i++) {\n            const messageWrapper = this.messages[items[i]];\n            if (messageWrapper) {\n                const message = messageWrapper.props.children[1];\n                const { chatId, messageId } = message.props;\n                const key = `${chatId}_${messageId}`;\n                messages.set(key, key);\n            }\n        }\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateMessagesInView',\n            messages: messages\n        });\n        return;\n\n        if (!messages.length) return;\n\n        /*let ids = messages.map(x => x.id);\n        console.log('[perf] load_messages_contents ids=[' + ids + ']');\n\n                let messagesMap = new Map(messages.map((i) => [i.id, i]));\n\n                if (this.previousMessages){\n                    let cancelMessages = [];\n                    for (let i = 0; i < this.previousMessages.length; i++){\n                        if (!messagesMap.has(this.previousMessages[i].id)){\n                            cancelMessages.push(this.previousMessages[i]);\n                        }\n                    }\n                    if (cancelMessages.length > 0) {\n                        this.cancelLoadMessageContents(cancelMessages);\n                    }\n                }\n                this.previousMessages = messages;*/\n\n        const store = FileStore.getStore();\n        loadMessageContents(store, messages);\n    };\n\n    async handleSelectChat(chatId, previousChatId, messageId, previousMessageId) {\n        const chat = ChatStore.get(chatId);\n        const previousChat = ChatStore.get(previousChatId);\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n        this.loadMigratedHistory = false;\n\n        this.suppressHandleScrollOnSelectChat = true;\n        if (chat) {\n            TdLibController.send({\n                '@type': 'openChat',\n                chat_id: chat.id\n            });\n\n            const unread = !messageId && chat.unread_count > 0;\n            const fromMessageId =\n                unread && chat.unread_count > 1 ? chat.last_read_inbox_message_id : messageId ? messageId : 0;\n            const offset = (unread && chat.unread_count > 1) || messageId ? -1 - MESSAGE_SLICE_LIMIT : 0;\n            const limit =\n                (unread && chat.unread_count > 1) || messageId ? 2 * MESSAGE_SLICE_LIMIT : MESSAGE_SLICE_LIMIT;\n\n            const sessionId = this.sessionId;\n            const result = await TdLibController.send({\n                '@type': 'getChatHistory',\n                chat_id: chat.id,\n                from_message_id: fromMessageId,\n                offset: offset,\n                limit: limit\n            });\n\n            if (sessionId !== this.sessionId) {\n                return;\n            }\n\n            //TODO: replace result with one-way data flow\n\n            if (chat.last_message) {\n                this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n            } else {\n                this.completed = true;\n            }\n\n            MessageStore.setItems(result.messages);\n            result.messages.reverse();\n\n            // calculate separator\n            let separatorMessageId = Number.MAX_VALUE;\n            if (chat && chat.unread_count > 1) {\n                for (let i = result.messages.length - 1; i >= 0; i--) {\n                    const { id } = result.messages[i];\n                    if (\n                        !result.messages[i].is_outgoing &&\n                        id > chat.last_read_inbox_message_id &&\n                        id < separatorMessageId\n                    ) {\n                        separatorMessageId = id;\n                    } else {\n                        break;\n                    }\n                }\n            }\n            separatorMessageId = separatorMessageId === Number.MAX_VALUE ? 0 : separatorMessageId;\n            console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n            let scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_BOTTOM;\n            if (messageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_MESSAGE;\n            } else if (unread && separatorMessageId) {\n                scrollBehavior = ScrollBehaviorEnum.SCROLL_TO_UNREAD;\n            }\n\n            this.replace(separatorMessageId, result.messages, scrollBehavior, () => {\n                this.suppressHandleScrollOnSelectChat = false;\n                if (messageId) {\n                    highlightMessage(chatId, messageId);\n                }\n            });\n\n            // load files\n            const store = FileStore.getStore();\n            loadMessageContents(store, result.messages);\n            loadChatsContent(store, [chatId]);\n            loadDraftContent(store, chatId);\n\n            MessagesList.viewMessages(result.messages);\n\n            this.loadIncompleteHistory(result);\n\n            // load full info\n            getChatFullInfo(chat.id);\n        } else {\n            this.replace(\n                0,\n                [],\n                ScrollBehaviorEnum.SCROLL_TO_BOTTOM,\n                () => (this.suppressHandleScrollOnSelectChat = false)\n            );\n        }\n\n        if (previousChat && previousChatId !== chatId) {\n            TdLibController.send({\n                '@type': 'closeChat',\n                chat_id: previousChatId\n            });\n        }\n    }\n\n    static viewMessages(messages) {\n        if (!messages) return;\n        if (messages.length === 0) return;\n        if (!messages[0].chat_id) return;\n\n        TdLibController.send({\n            '@type': 'viewMessages',\n            chat_id: messages[0].chat_id,\n            message_ids: messages.map(x => x.id)\n        });\n    }\n\n    cancelLoadMessageContents(messages) {\n        //return;\n        for (let i = messages.length - 1; i >= 0; i--) {\n            let message = messages[i];\n            if (message && message.content) {\n                switch (message.content['@type']) {\n                    case 'messagePhoto': {\n                        let [id, pid] = this.getMessagePhoto(message);\n                        if (pid) {\n                            let obj = getPhotoSize(message.content.photo.sizes);\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    case 'messageSticker': {\n                        let [id, pid] = this.getMessageSticker(message);\n                        if (pid) {\n                            let obj = message.content.sticker.sticker;\n                            if (!obj.blob) {\n                                FileStore.cancelGetRemoteFile(id, message);\n                            }\n                        }\n                        break;\n                    }\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    loadIncompleteHistory = async result => {\n        const MAX_ITERATIONS = 5;\n        let incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n\n        for (let i = 0; i < MAX_ITERATIONS && incomplete; i++) {\n            result = await this.onLoadNext();\n            incomplete = result && result.messages.length > 0 && result.messages.length < MESSAGE_SLICE_LIMIT;\n        }\n    };\n\n    onLoadNext = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        if (this.loadMigratedHistory) {\n            this.onLoadMigratedHistory();\n            return;\n        }\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages), () => {\n            if (!result.messages.length) {\n                this.onLoadMigratedHistory();\n            }\n        });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    filterMessages = messages => {\n        return messages.filter(x => x.content['@type'] !== 'messageChatUpgradeTo');\n    };\n\n    onLoadMigratedHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!chatId) return;\n        if (this.loading) return;\n\n        const supergroupId = getSupergroupId(chatId);\n        if (!supergroupId) return;\n\n        const fullInfo = SupergroupStore.getFullInfo(supergroupId);\n        if (!fullInfo) return;\n        if (!fullInfo.upgraded_from_basic_group_id) return;\n\n        this.loadMigratedHistory = true;\n\n        const basicGroupChat = await TdLibController.send({\n            '@type': 'createBasicGroupChat',\n            basic_group_id: fullInfo.upgraded_from_basic_group_id\n        });\n\n        if (!basicGroupChat) return;\n\n        let fromMessageId = 0;\n        if (\n            this.state.history &&\n            this.state.history.length > 0 &&\n            this.state.history[0].chat_id === basicGroupChat.id\n        ) {\n            fromMessageId = this.state.history[0].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: basicGroupChat.id,\n            from_message_id: fromMessageId,\n            offset: 0,\n            limit: MESSAGE_SLICE_LIMIT\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        this.insertBefore(this.filterMessages(result.messages));\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n    };\n\n    onLoadPrevious = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n\n        if (!chat) return;\n        if (this.loading) return;\n        if (this.completed) return;\n\n        let fromMessageId = 0;\n        if (this.state.history && this.state.history.length > 0) {\n            fromMessageId = this.state.history[this.state.history.length - 1].id;\n        }\n\n        this.loading = true;\n\n        const sessionId = this.sessionId;\n        let result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chatId,\n            from_message_id: fromMessageId,\n            offset: -MESSAGE_SLICE_LIMIT - 1,\n            limit: MESSAGE_SLICE_LIMIT + 1\n        }).finally(() => {\n            this.loading = false;\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n\n        filterMessages(result, this.state.history);\n\n        //TODO: replace result with one-way data flow\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n        console.log('SCROLL MessagesList.onLoadPrevious scrollBehavior=NONE');\n        this.insertAfter(this.filterMessages(result.messages), { scrollBehavior: ScrollBehaviorEnum.NONE });\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        MessagesList.viewMessages(result.messages);\n\n        return result;\n    };\n\n    replace(separatorMessageId, history, scrollBehavior, callback) {\n        this.setState(\n            { separatorMessageId: separatorMessageId, history: history, scrollBehavior: scrollBehavior },\n            callback\n        );\n    }\n\n    insertBefore(history, callback) {\n        if (history.length === 0) {\n            if (callback) callback();\n            return;\n        }\n\n        this.setState(\n            { history: history.concat(this.state.history), scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION },\n            callback\n        );\n    }\n\n    replaceMessage(oldMessageId, message, scrollBehavior, callback) {\n        if (!message) return;\n\n        this.setState(\n            {\n                history: this.state.history.filter(x => x.id !== oldMessageId).concat([message]),\n                scrollBehavior: scrollBehavior\n            },\n            callback\n        );\n    }\n\n    insertAfter(history, newState, callback) {\n        if (history.length === 0) return;\n\n        this.setState({ history: this.state.history.concat(history), ...newState }, callback);\n    }\n\n    deleteHistory(message_ids, callback) {\n        const { history } = this.state;\n        if (history.length === 0) return;\n\n        let map = new Map(message_ids.map(x => [x, x]));\n\n        this.setState(\n            { history: history.filter(x => !map.has(x.id)), scrollBehavior: ScrollBehaviorEnum.SCROLL_TO_BOTTOM },\n            callback\n        );\n    }\n\n    handleScroll = () => {\n        const { scrollDownVisible, replyHistory, history } = this.state;\n        const list = this.listRef.current;\n\n        // console.log('MessagesLList.handleScroll scrollDown',\n        //     this.suppressHandleScroll,\n        //     this.suppressHandleScrollOnSelectChat,\n        //     this.prevScrollTop,\n        // );\n        this.updateItemsInView();\n        //console.log(`SCROLL HANDLESCROLL list.scrollTop=${list.scrollTop} list.offsetHeight=${list.offsetHeight} list.scrollHeight=${list.scrollHeight} chatId=${this.props.chatId}`);\n\n        if (this.suppressHandleScroll) {\n            this.suppressHandleScroll = false;\n            return;\n        }\n\n        if (this.suppressHandleScrollOnSelectChat) {\n            return;\n        }\n\n        if (list.scrollTop <= 0) {\n            console.log('SCROLL HANDLESCROLL onLoadNext');\n            this.onLoadNext();\n        } else if (list.scrollTop + list.offsetHeight === list.scrollHeight) {\n            if (this.completed && scrollDownVisible) {\n                if (this.prevScrollTop !== list.scrollTop && this.prevScrollTop && this.prevHistory === history) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, this.prevScrollTop, list.scrollTop);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION,\n                        replyHistory: []\n                    });\n                } else if (!replyHistory.length) {\n                    // console.log('MessagesList.handleScroll scrollDown', false, this.completed, scrollDownVisible, replyHistory.length);\n                    this.setState({\n                        scrollDownVisible: false,\n                        scrollBehavior: ScrollBehaviorEnum.KEEP_SCROLL_POSITION\n                    });\n                }\n            }\n\n            console.log('SCROLL HANDLESCROLL onLoadPrevious');\n            this.onLoadPrevious();\n        } else {\n            if (!scrollDownVisible) {\n                this.setState({ scrollDownVisible: true });\n            }\n            //console.log('SCROLL HANDLESCROLL updateItemsInView');\n        }\n\n        this.prevScrollTop = list.scrollTop;\n        this.prevHistory = history;\n    };\n\n    handleScrollBehavior = snapshot => {\n        const { chatId, messageId } = this.props;\n        const { scrollBehavior, history } = this.state;\n        const { scrollTop, scrollHeight, offsetHeight } = snapshot;\n\n        console.log(\n            `SCROLL HANDLESCROLLBEHAVIOR \\\\\n            scrollBehavior=${scrollBehavior} \\\\\n            previousScrollTop=${scrollTop} \\\\\n            previousScrollHeight=${scrollHeight} \\\\\n            previousOffsetHeight=${offsetHeight} \\\\\n            chatId=${chatId}`\n        );\n        if (scrollBehavior === ScrollBehaviorEnum.NONE) {\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_BOTTOM) {\n            this.scrollToBottom();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_MESSAGE) {\n            this.scrollToMessage();\n        } else if (scrollBehavior === ScrollBehaviorEnum.SCROLL_TO_UNREAD) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n\n            let scrolled = false;\n            for (let i = 0; i < history.length; i++) {\n                let itemComponent = this.itemsMap.get(i);\n                let item = ReactDOM.findDOMNode(itemComponent);\n                if (item) {\n                    // console.log(`SCROLL SCROLL_TO_UNREAD item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                    if (itemComponent.props.showUnreadSeparator) {\n                        list.scrollTop = item.offsetTop; // + unread messages margin-top\n                        scrolled = true;\n                        break;\n                    }\n                }\n            }\n\n            if (!scrolled) {\n                this.scrollToBottom();\n            }\n\n            console.log(\n                `SCROLL SCROLL_TO_UNREAD after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        } else if (scrollBehavior === ScrollBehaviorEnum.KEEP_SCROLL_POSITION) {\n            const list = this.listRef.current;\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION before \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n            list.scrollTop = scrollTop + (list.scrollHeight - scrollHeight);\n            console.log(\n                `SCROLL KEEP_SCROLL_POSITION after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                chatId=${chatId}`\n            );\n        }\n    };\n\n    scrollToMessage = () => {\n        const { chatId, messageId } = this.props;\n        const { history } = this.state;\n\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} before \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n\n        let scrolled = false;\n        for (let i = 0; i < history.length; i++) {\n            let itemComponent = this.itemsMap.get(i);\n            let item = ReactDOM.findDOMNode(itemComponent);\n            if (item) {\n                // console.log(`SCROLL SCROLL_TO_MESSAGE message_id=${messageId} item item.scrollTop=${item.scrollTop} showUnreadSeparator=${itemComponent.props.showUnreadSeparator} item.offsetHeight=${item.offsetHeight} item.scrollHeight=${item.scrollHeight}`);\n                if (itemComponent.props.messageId === messageId) {\n                    list.scrollTop = item.offsetTop - list.offsetHeight / 2.0;\n                    scrolled = true;\n                    break;\n                }\n            }\n        }\n\n        if (!scrolled) {\n            this.scrollToBottom();\n        }\n\n        console.log(\n            `SCROLL SCROLL_TO_MESSAGE message_id=${messageId} after \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            chatId=${chatId}`\n        );\n    };\n\n    scrollToBottom = () => {\n        this.suppressHandleScroll = true;\n        const list = this.listRef.current;\n        console.log(\n            `SCROLL SCROLL_TO_BOTTOM before \\\\\n            list.scrollHeight=${list.scrollHeight} \\\\\n            list.offsetHeight=${list.offsetHeight} \\\\\n            list.scrollTop=${list.scrollTop} \\\\\n            chatId=${this.props.chatId}`\n        );\n\n        const nextScrollTop = list.scrollHeight - list.offsetHeight;\n        if (nextScrollTop !== list.scrollTop) {\n            list.scrollTop = list.scrollHeight - list.offsetHeight;\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        } else {\n            console.log(\n                `SCROLL SCROLL_TO_BOTTOM after(already bottom) \\\\\n                list.scrollTop=${list.scrollTop} \\\\\n                list.offsetHeight=${list.offsetHeight} \\\\\n                list.scrollHeight=${list.scrollHeight} \\\\\n                suppressHandleScroll=${this.suppressHandleScroll} \\\\\n                chatId=${this.props.chatId}`\n            );\n        }\n    };\n\n    scrollToStart = async () => {\n        const { chatId } = this.props;\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        this.sessionId = Date.now();\n        this.loading = false;\n        this.completed = false;\n\n        const fromMessageId = 0;\n        const offset = 0;\n        const limit = MESSAGE_SLICE_LIMIT;\n\n        const sessionId = this.sessionId;\n        const result = await TdLibController.send({\n            '@type': 'getChatHistory',\n            chat_id: chat.id,\n            from_message_id: fromMessageId,\n            offset: offset,\n            limit: limit\n        });\n\n        if (sessionId !== this.sessionId) {\n            return;\n        }\n\n        //TODO: replace result with one-way data flow\n\n        if (this.props.chatId !== chatId) {\n            return;\n        }\n\n        if (chat.last_message) {\n            this.completed = result.messages.length > 0 && chat.last_message.id === result.messages[0].id;\n        } else {\n            this.completed = true;\n        }\n        // console.log('MessagesList.scrollToStart scrollDown', false);\n        this.setState({ scrollDownVisible: false, replyHistory: [] });\n\n        MessageStore.setItems(result.messages);\n        result.messages.reverse();\n\n        // calculate separator\n        let separatorMessageId = 0;\n        console.log('[MessagesList] separator_message_id=' + separatorMessageId);\n\n        this.replace(separatorMessageId, result.messages, ScrollBehaviorEnum.SCROLL_TO_BOTTOM);\n\n        // load files\n        const store = FileStore.getStore();\n        loadMessageContents(store, result.messages);\n        loadChatsContent(store, [chatId]);\n\n        MessagesList.viewMessages(result.messages);\n\n        this.loadIncompleteHistory(result);\n    };\n\n    handleListDragEnter = event => {\n        event.preventDefault();\n        event.stopPropagation();\n\n        const { chatId } = this.props;\n        if (!canSendFiles(chatId)) return;\n\n        ApplicationStore.setDragging(true);\n    };\n\n    handleScrollDownClick = event => {\n        const { replyHistory } = this.state;\n\n        if (replyHistory.length > 0) {\n            const lastReply = replyHistory.pop();\n            if (lastReply) {\n                const { chatId, messageId } = lastReply;\n                if (chatId === this.props.chatId) {\n                    openChat(chatId, messageId);\n                }\n            }\n        } else {\n            this.scrollToStart();\n        }\n    };\n\n    render() {\n        const { classes, chatId } = this.props;\n        const { history, separatorMessageId, clearHistory, selectionActive, scrollDownVisible } = this.state;\n\n        // console.log('MessagesList.render scrollDown', this.props.chatId, this.props.messageId, scrollDownVisible, history.length);\n\n        const isChannel = isChannelChat(chatId);\n\n        let prevShowDate = false;\n        this.itemsMap.clear();\n        this.messages = clearHistory\n            ? null\n            : history.map((x, i) => {\n                  const prevMessage = i > 0 ? history[i - 1] : null;\n                  const date = new Date(x.date * 1000);\n                  const prevDate = prevMessage ? new Date(prevMessage.date * 1000) : date;\n                  let showDate = false;\n                  if (\n                      i === 0 ||\n                      date.getFullYear() !== prevDate.getFullYear() ||\n                      date.getMonth() !== prevDate.getMonth() ||\n                      date.getDate() !== prevDate.getDate()\n                  ) {\n                      showDate = true;\n                  }\n\n                  let m = null;\n                  if (isServiceMessage(x)) {\n                      m = (\n                          <ServiceMessage\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  } else {\n                      const showTitle =\n                          prevShowDate ||\n                          isChannel ||\n                          i === 0 ||\n                          (prevMessage &&\n                              (isServiceMessage(prevMessage) ||\n                                  x.sender_user_id !== prevMessage.sender_user_id ||\n                                  x.date - prevMessage.date > MESSAGE_SPLIT_MAX_TIME_S));\n\n                      m = (\n                          <Message\n                              ref={el => this.itemsMap.set(i, el)}\n                              chatId={x.chat_id}\n                              messageId={x.id}\n                              sendingState={x.sending_state}\n                              showTitle={showTitle}\n                              showUnreadSeparator={separatorMessageId === x.id}\n                          />\n                      );\n                  }\n                  //prevShowDate = showDate;\n\n                  return (\n                      <div key={`chat_id=${x.chat_id} message_id=${x.id}`}>\n                          {showDate && <DayMeta date={x.date} />}\n                          {m}\n                      </div>\n                  );\n              });\n\n        return (\n            <div\n                className={classNames(classes.background, 'messages-list', {\n                    'messages-list-selection-active': selectionActive\n                })}\n                onDragEnter={this.handleListDragEnter}>\n                <div ref={this.listRef} className='messages-list-wrapper' onScroll={this.handleScroll}>\n                    <div className='messages-list-top' />\n                    <div ref={this.itemsRef} className='messages-list-items'>\n                        {this.messages}\n                    </div>\n                </div>\n                <Placeholder />\n                {scrollDownVisible && <ScrollDownButton onClick={this.handleScrollDownClick} />}\n                <PinnedMessage chatId={chatId} />\n                <FilesDropTarget />\n                <StickersHint />\n            </div>\n        );\n    }\n}\n\nexport default withStyles(styles, { withTheme: true })(MessagesList);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport copy from 'copy-to-clipboard';\nimport { compose } from 'recompose';\nimport { withTranslation } from 'react-i18next';\nimport { withSnackbar } from 'notistack';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport LinkIcon from '@material-ui/icons/Link';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { NOTIFICATION_AUTO_HIDE_DURATION_MS } from '../../Constants';\nimport OptionStore from '../../Stores/OptionStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\n\nconst styles = theme => ({\n    close: {\n        padding: theme.spacing.unit / 2\n    }\n});\n\nclass ShareStickerSetButton extends React.Component {\n    state = {\n        anchorEl: null\n    };\n\n    handleMenuClick = event => {\n        this.handleOpen(event.currentTarget);\n    };\n\n    handleOpen = anchorEl => {\n        this.setState({ anchorEl });\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null });\n    };\n\n    handleCopyLink = () => {\n        this.handleClose();\n\n        const { t } = this.props;\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        copy(link);\n\n        const key = `${link}_copy_stickers_link`;\n        const message = t('LinkCopied');\n        const action = null;\n\n        this.handleScheduledAction(key, message, action);\n    };\n\n    getStickersLink = stickerSet => {\n        if (!stickerSet) return '';\n\n        const { name } = stickerSet;\n        if (!name) return '';\n\n        const telegramUrlOption = OptionStore.get('t_me_url');\n\n        return (telegramUrlOption ? telegramUrlOption.value : 'https://telegram.org/') + 'addstickers/' + name;\n    };\n\n    handleScheduledAction = (key, message, action) => {\n        if (!key) return;\n\n        const { enqueueSnackbar, classes, t } = this.props;\n        if (!enqueueSnackbar) return;\n\n        const TRANSITION_DELAY = 150;\n        if (\n            ApplicationStore.addScheduledAction(key, NOTIFICATION_AUTO_HIDE_DURATION_MS + 2 * TRANSITION_DELAY, action)\n        ) {\n            enqueueSnackbar(message, {\n                autoHideDuration: NOTIFICATION_AUTO_HIDE_DURATION_MS,\n                action: [\n                    <IconButton\n                        key='close'\n                        aria-label='Close'\n                        color='inherit'\n                        className={classes.close}\n                        onClick={() => ApplicationStore.removeScheduledAction(key)}>\n                        <CloseIcon />\n                    </IconButton>\n                ]\n            });\n        }\n    };\n\n    handleShare = () => {\n        this.handleClose();\n\n        const link = this.getStickersLink(StickerStore.stickerSet);\n        if (!link) return;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { link }\n        });\n    };\n\n    render() {\n        const { classes, t, className } = this.props;\n        const { anchorEl } = this.state;\n\n        return (\n            <>\n                <IconButton\n                    className={classes.iconButton + ' ' + className}\n                    aria-label='Share'\n                    open={Boolean(anchorEl)}\n                    onClick={this.handleMenuClick}>\n                    <MoreIcon />\n                </IconButton>\n                <Menu\n                    id='attach-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    getContentAnchorEl={null}\n                    disableAutoFocusItem\n                    disableRestoreFocus={true}\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'right'\n                    }}\n                    transformOrigin={{\n                        vertical: 'top',\n                        horizontal: 'right'\n                    }}\n                    onClose={this.handleClose}>\n                    <MenuItem onClick={this.handleCopyLink}>\n                        <ListItemIcon>\n                            <LinkIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('CopyLink')} />\n                    </MenuItem>\n                    <MenuItem onClick={this.handleShare}>\n                        <ListItemIcon>\n                            <ShareIcon />\n                        </ListItemIcon>\n                        <ListItemText primary={t('StickersShare')} />\n                    </MenuItem>\n                </Menu>\n            </>\n        );\n    }\n}\n\nShareStickerSetButton.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles, { withTheme: true }),\n    withTranslation(),\n    withSnackbar\n);\n\nexport default enhance(ShareStickerSetButton);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport ShareStickerSetButton from './ShareStickerSetButton';\nimport Sticker from '../Message/Media/Sticker';\nimport StickerPreview from '../ColumnMiddle/StickerPreview';\nimport { loadStickerContent, loadStickerSetContent } from '../../Utils/File';\nimport { STICKER_SMALL_DISPLAY_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport StickerStore from '../../Stores/StickerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './StickerSetDialog.css';\n\nconst styles = theme => ({\n    contentRoot: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        maxHeight: 480,\n        padding: '0 12px 24px',\n        background: 'transparent'\n    },\n    paperRoot: {\n        width: 344\n    },\n    dialogTitleRoot: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'center'\n    },\n    dialogRoot: {\n        color: theme.palette.text.primary\n    },\n    shareButtonRoot: {\n        margin: '-24px -12px -24px 0'\n    },\n    typographyRoot: {\n        flexGrow: 1,\n        flexShrink: 1\n    },\n    disablePointerEvents: {\n        pointerEvents: 'none'\n    }\n});\n\nclass StickerSetDialog extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            stickerSet: StickerStore.stickerSet,\n            stickerId: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        const { stickerSet, stickerId } = this.state;\n\n        return stickerSet !== nextState.stickerSet || stickerId !== nextState.stickerId;\n    }\n\n    componentDidMount() {\n        StickerStore.on('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.on('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    componentWillUnmount() {\n        StickerStore.removeListener('clientUpdateStickerSet', this.handleClientUpdateStickerSet);\n        StickerStore.removeListener('updateInstalledStickerSets', this.handleUpdateInstalledStickerSets);\n    }\n\n    handleUpdateInstalledStickerSets = update => {\n        const { stickerSet } = StickerStore;\n\n        this.setState({ stickerSet });\n    };\n\n    handleClientUpdateStickerSet = update => {\n        const { stickerSet } = update;\n\n        this.setState({ stickerSet });\n\n        if (stickerSet) {\n            const store = FileStore.getStore();\n            loadStickerSetContent(store, stickerSet);\n        }\n    };\n\n    handleClose = () => {\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateStickerSet',\n            stickerSet: null\n        });\n    };\n\n    handleDone = () => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return;\n\n        const { is_installed } = stickerSet;\n\n        TdLibController.send({\n            '@type': 'changeStickerSet',\n            set_id: stickerSet.id,\n            is_installed: !is_installed\n        });\n\n        this.handleClose();\n    };\n\n    loadPreviewContent = stickerId => {\n        const { stickerSet } = this.state;\n        const { stickers } = stickerSet;\n        const sticker = stickers.find(x => x.sticker.id === stickerId);\n        if (!sticker) return;\n\n        const store = FileStore.getStore();\n        loadStickerContent(store, sticker, null);\n\n        const preloadStickers = this.getNeighborStickers(stickerId);\n        preloadStickers.forEach(x => {\n            loadStickerContent(store, x, null);\n        });\n    };\n\n    getNeighborStickers = stickerId => {\n        const { stickerSet } = this.state;\n        if (!stickerSet) return [];\n\n        const { stickers } = stickerSet;\n        if (!stickers) return [];\n\n        const indexes = [];\n        const index = stickers.findIndex(x => x.sticker.id === stickerId);\n        if (index === -1) return [];\n\n        const STICKERS_PER_ROW = 4;\n        const row = Math.floor(index / STICKERS_PER_ROW);\n        const column = index % STICKERS_PER_ROW;\n\n        const prevRow = row - 1;\n        const nextRow = row + 1;\n        const prevColumn = column - 1;\n        const nextColumn = column + 1;\n\n        if (prevRow >= 0) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * prevRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * prevRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * prevRow + nextColumn);\n            }\n        }\n\n        if (prevColumn >= 0) {\n            indexes.push(STICKERS_PER_ROW * row + prevColumn);\n        }\n        if (nextColumn < STICKERS_PER_ROW) {\n            indexes.push(STICKERS_PER_ROW * row + nextColumn);\n        }\n\n        if (nextRow < Math.ceil(stickers.length / STICKERS_PER_ROW)) {\n            if (prevColumn >= 0) {\n                indexes.push(STICKERS_PER_ROW * nextRow + prevColumn);\n            }\n            indexes.push(STICKERS_PER_ROW * nextRow + column);\n            if (nextColumn < STICKERS_PER_ROW) {\n                indexes.push(STICKERS_PER_ROW * nextRow + nextColumn);\n            }\n        }\n\n        return indexes.map(i => stickers[i]);\n    };\n\n    handleMouseOver = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        if (!this.mouseDown) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n    };\n\n    handleMouseDown = event => {\n        const stickerId = Number(event.target.dataset.stickerId);\n        if (!stickerId) return;\n\n        this.setState({ stickerId });\n        this.loadPreviewContent(stickerId);\n\n        this.mouseDown = true;\n        document.addEventListener('mouseup', this.handleMouseUp);\n\n        event.preventDefault();\n        event.stopPropagation();\n        return false;\n    };\n\n    handleMouseUp = () => {\n        this.setState({ stickerId: 0 });\n        this.mouseDown = false;\n        document.removeEventListener('mouseup', this.handleMouseUp);\n    };\n\n    render() {\n        const { t, classes } = this.props;\n        const { stickerSet, stickerId } = this.state;\n        if (!stickerSet) return null;\n\n        const { title, stickers, is_installed } = stickerSet;\n\n        const items = stickers.map(x => (\n            <div\n                className='sticker-set-dialog-item'\n                key={x.sticker.id}\n                data-sticker-id={x.sticker.id}\n                style={{ width: 76, height: 76 }}>\n                <Sticker\n                    key={x.sticker.id}\n                    className='sticker-set-dialog-item-sticker'\n                    preview\n                    sticker={x}\n                    displaySize={STICKER_SMALL_DISPLAY_SIZE}\n                    blur={false}\n                />\n                <div className='sticker-set-dialog-item-emoji'>{x.emoji}</div>\n            </div>\n        ));\n\n        const stickerIndex = stickers.findIndex(x => x.sticker.id === stickerId);\n        const sticker = stickerIndex !== -1 ? stickers[stickerIndex] : null;\n\n        return (\n            <Dialog\n                className={classes.dialogRoot}\n                open\n                transitionDuration={0}\n                onClose={this.handleClose}\n                aria-labelledby='sticker-set-dialog-title-text'\n                classes={{ paper: classes.paperRoot }}>\n                <DialogTitle\n                    id='sticker-set-dialog-title-text'\n                    className={classNames(classes.dialogTitleRoot, {\n                        [classes.disablePointerEvents]: Boolean(sticker)\n                    })}\n                    disableTypography>\n                    <Typography variant='h6' className={classes.typographyRoot} noWrap>\n                        {title}\n                    </Typography>\n                    <ShareStickerSetButton className={classes.shareButtonRoot} />\n                </DialogTitle>\n                <DialogContent\n                    classes={{ root: classes.contentRoot }}\n                    onMouseOver={this.handleMouseOver}\n                    onMouseOut={this.handleMouseOut}\n                    onMouseDown={this.handleMouseDown}>\n                    {items}\n                </DialogContent>\n                <DialogActions className={classNames({ [classes.disablePointerEvents]: Boolean(sticker) })}>\n                    <Button color='primary' onClick={this.handleClose}>\n                        {t('Cancel')}\n                    </Button>\n                    <Button color='primary' onClick={this.handleDone}>\n                        {is_installed ? t('StickersRemove') : t('Add')}\n                    </Button>\n                </DialogActions>\n                {Boolean(sticker) && <StickerPreview sticker={sticker} />}\n            </Dialog>\n        );\n    }\n}\n\nStickerSetDialog.propTypes = {};\n\nconst enhance = compose(\n    withStyles(styles),\n    withTranslation()\n);\n\nexport default enhance(StickerSetDialog);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport ChatInfoDialog from '../Popup/ChatInfoDialog';\nimport Footer from './Footer';\nimport Header from './Header';\nimport HeaderPlayer from '../Player/HeaderPlayer';\nimport MessagesList from './MessagesList';\nimport PinnedMessage from './PinnedMessage';\nimport StickerSetDialog from '../Popup/StickerSetDialog';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport './DialogDetails.css';\n\nclass DialogDetails extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            chatId: ApplicationStore.getChatId(),\n            messageId: ApplicationStore.getMessageId(),\n            selectedCount: 0\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.chatId !== this.state.chatId) {\n            return true;\n        }\n        if (nextState.messageId !== this.state.messageId) {\n            return true;\n        }\n        if (nextState.selectedCount !== this.state.selectedItems) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    componentWillUnmount() {\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateChatId', this.onClientUpdateChatId);\n    }\n\n    onUpdateChatDetailsVisibility = update => {\n        this.forceUpdate();\n    };\n\n    onClientUpdateChatId = update => {\n        this.setState({\n            chatId: update.nextChatId,\n            messageId: update.nextMessageId\n        });\n    };\n\n    scrollToBottom = () => {\n        this.messagesList.scrollToBottom();\n    };\n\n    scrollToStart = () => {\n        this.messagesList.scrollToStart();\n    };\n\n    scrollToMessage = () => {\n        this.messagesList.scrollToMessage();\n    };\n\n    render() {\n        /*let groups = [];\n        if (this.props.history.length > 0){\n            let currentGroup = {\n                key: this.props.history[0].id,\n                date: this.props.history[0].date,\n                senderUserId: this.props.history[0].sender_user_id,\n                messages: [this.props.history[0]]\n            };\n\n            for (let i = 1; i < this.props.history.length; i++){\n                if (this.props.history[i].sender_user_id === currentGroup.senderUserId\n                    && Math.abs(this.props.history[i].date - currentGroup.date) <= 10 * 60\n                    && i % 20 !== 0){\n                    currentGroup.key += '_' + this.props.history[i].id;\n                    currentGroup.messages.push(this.props.history[i]);\n                }\n                else {\n                    groups.push(currentGroup);\n                    currentGroup = {\n                        key: this.props.history[i].id,\n                        date: this.props.history[i].date,\n                        senderUserId: this.props.history[i].sender_user_id,\n                        messages: [this.props.history[i]]\n                    };\n                }\n            }\n            groups.push(currentGroup);\n        }\n\n        this.groups = groups.map(x => {\n            return (<MessageGroup key={x.key} senderUserId={x.senderUserId} messages={x.messages} onSelectChat={this.props.onSelectChat}/>);\n        });*/\n        const { chatId, messageId, selectedCount } = this.state;\n        const { isChatDetailsVisible } = ApplicationStore;\n\n        return (\n            <div className={classNames('dialog-details', { 'dialog-details-third-column': isChatDetailsVisible })}>\n                <HeaderPlayer />\n                <Header chatId={chatId} />\n                <MessagesList innerRef={ref => (this.messagesList = ref)} chatId={chatId} messageId={messageId} />\n                <Footer chatId={chatId} />\n                <StickerSetDialog />\n                <ChatInfoDialog />\n            </div>\n        );\n    }\n}\n\nexport default DialogDetails;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getDateHint, getSenderUserId } from '../../Utils/Message';\nimport UserTile from './UserTile';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaViewerControl.css';\n\nclass MediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, messageId } = this.props;\n\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { date } = message;\n\n        const userId = getSenderUserId(message);\n        const dateHint = getDateHint(date);\n\n        const tileControl = userId ? <UserTile userId={userId} /> : <ChatTile chatId={chatId} />;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    {tileControl}\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} userId={userId} />\n                        </div>\n                        <div className='media-viewer-row meta'>\n                            <span>{dateHint}</span>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default MediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { getText } from '../../Utils/Message';\nimport MessageStore from '../../Stores/MessageStore';\nimport './MediaCaption.css';\n\nclass MediaCaption extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleClick = event => {\n        event.stopPropagation();\n    };\n\n    render() {\n        const { text } = this.props;\n\n        return (\n            <div className='media-caption' onClick={this.handleClick}>\n                <div className='media-caption-text'>{text}</div>\n            </div>\n        );\n    }\n}\n\nMediaCaption.propTypes = {\n    text: PropTypes.array\n};\n\nMediaCaption.defaultProps = {};\n\nexport default MediaCaption;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport FileProgress from './FileProgress';\nimport MediaCaption from './MediaCaption';\nimport { getMediaFile, getMediaPreviewFile } from '../../Utils/File';\nimport { getText, isAnimationMessage, isLottieMessage, isVideoMessage } from '../../Utils/Message';\nimport { isBlurredThumbnail } from '../../Utils/Media';\nimport FileStore from '../../Stores/FileStore';\nimport MessageStore from '../../Stores/MessageStore';\nimport PlayerStore from '../../Stores/PlayerStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewerContent.css';\n\nconst Lottie = React.lazy(() => import('./Lottie'));\n\nclass MediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.videoRef = React.createRef();\n        this.lottieRef = React.createRef();\n\n        const { chatId, messageId, size } = this.props;\n\n        let [width, height, file] = getMediaFile(chatId, messageId, size);\n        file = FileStore.get(file.id) || file;\n\n        let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n        thumbnail = thumbnail ? FileStore.get(thumbnail.id) || thumbnail : null;\n\n        const message = MessageStore.get(chatId, messageId);\n        const text = getText(message);\n\n        this.state = {\n            speed: 1,\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            isPlaying: false,\n            width: width,\n            height: height,\n            file: file,\n            text: text,\n            thumbnailWidth: thumbnailWidth,\n            thumbnailHeight: thumbnailHeight,\n            thumbnail: thumbnail\n        };\n\n        this.updateAnimationData();\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, messageId, size } = props;\n\n        if (chatId !== state.prevChatId || messageId !== state.prevMessageId) {\n            let [width, height, file] = getMediaFile(chatId, messageId, size);\n            file = FileStore.get(file.id) || file;\n\n            let [thumbnailWidth, thumbnailHeight, thumbnail] = getMediaPreviewFile(chatId, messageId);\n            thumbnail = FileStore.get(thumbnail.id) || thumbnail;\n\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n\n            return {\n                speed: 1,\n                prevChatId: chatId,\n                prevMessageId: messageId,\n                isPlaying: false,\n                width: width,\n                height: height,\n                file: file,\n                text: text,\n                thumbnailWidth: thumbnailWidth,\n                thumbnailHeight: thumbnailHeight,\n                thumbnail: thumbnail\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.on('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateDocumentBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        FileStore.removeListener('clientUpdateAnimationThumbnailBlob', this.onClientUpdateMediaThumbnailBlob);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const { chatId, messageId } = this.props;\n\n        if (prevProps.chatId !== chatId || prevProps.messageId !== messageId) {\n            this.updateAnimationData();\n        }\n    }\n\n    onClientUpdateDocumentBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            this.updateAnimationData();\n        }\n    };\n\n    updateAnimationData = async () => {\n        const { chatId, messageId, size } = this.props;\n\n        if (!isLottieMessage(chatId, messageId)) {\n            return;\n        }\n\n        const [width, height, file] = getMediaFile(chatId, messageId, size);\n        const animationData = await this.getAnimationData(file);\n\n        this.setState({ animationData });\n    };\n\n    getAnimationData = file => {\n        return new Promise(resolve => {\n            if (!file) {\n                resolve(null);\n                return;\n            }\n\n            const blob = FileStore.getBlob(file.id);\n            if (!blob) {\n                resolve(null);\n                return;\n            }\n\n            const fileReader = new FileReader();\n            fileReader.onload = event => resolve(JSON.parse(event.target.result));\n            fileReader.onerror = () => resolve(null);\n            fileReader.onabort = () => resolve(null);\n            fileReader.readAsText(blob);\n        });\n    };\n\n    onClientUpdateMediaBlob = update => {\n        const { chatId, messageId, size } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            this.setState({\n                width,\n                height,\n                file\n            });\n        }\n    };\n\n    onClientUpdateMediaThumbnailBlob = update => {\n        const { chatId, messageId } = this.props;\n\n        if (chatId === update.chatId && messageId === update.messageId) {\n            const [width, height, file] = getMediaPreviewFile(chatId, messageId);\n            this.setState({\n                thumbnailWidth: width,\n                thumbnailHeight: height,\n                thumbnail: file\n            });\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chatId, messageId, size } = this.props;\n        const { chat_id, message_id } = update;\n\n        if (chatId === chat_id && messageId === message_id) {\n            const [width, height, file] = getMediaFile(chatId, messageId, size);\n            const message = MessageStore.get(chatId, messageId);\n            const text = getText(message);\n            this.setState({\n                width: width,\n                height: height,\n                file: file,\n                text: text\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n    };\n\n    changeSpeed = speed => {\n        this.setState({\n            speed\n        });\n    };\n\n    render() {\n        const { chatId, messageId } = this.props;\n        const {\n            animationData,\n            width,\n            height,\n            thumbnailWidth,\n            thumbnailHeight,\n            file,\n            text,\n            thumbnail,\n            isPlaying\n        } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob) || '';\n\n        const thumbnailBlob = thumbnail ? FileStore.getBlob(thumbnail.id) || thumbnail.blob : null;\n        const thumbnailSrc = FileStore.getBlobUrl(thumbnailBlob);\n        const isBlurred = isBlurredThumbnail({ width: thumbnailWidth, height: thumbnailHeight });\n\n        const isVideo = isVideoMessage(chatId, messageId);\n        const isAnimation = isAnimationMessage(chatId, messageId);\n        const isLottie = isLottieMessage(chatId, messageId);\n        let videoWidth = width;\n        let videoHeight = height;\n        if (Math.max(videoWidth, videoHeight) > 640) {\n            const scale = 640 / Math.max(videoWidth, videoHeight);\n            videoWidth = videoWidth > videoHeight ? 640 : Math.floor(videoWidth * scale);\n            videoHeight = videoHeight > videoWidth ? 640 : Math.floor(videoHeight * scale);\n        }\n\n        let content = null;\n        if (isVideo) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        ref={this.videoRef}\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        controls\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPlay'\n                            });\n                        }}\n                        onCanPlay={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                player.volume = PlayerStore.volume;\n                            }\n                        }}\n                        onPause={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerPause'\n                            });\n                        }}\n                        onEnded={() => {\n                            TdLibController.clientUpdate({\n                                '@type': 'clientUpdateMediaViewerEnded'\n                            });\n                        }}\n                        onVolumeChange={() => {\n                            const player = this.videoRef.current;\n                            if (player) {\n                                TdLibController.clientUpdate({\n                                    '@type': 'clientUpdateMediaVolume',\n                                    volume: player.volume\n                                });\n                            }\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isAnimation) {\n            content = (\n                <div className='media-viewer-content-wrapper'>\n                    <video\n                        className='media-viewer-content-video-player'\n                        src={src}\n                        onClick={this.handleContentClick}\n                        loop\n                        autoPlay\n                        width={videoWidth}\n                        height={videoHeight}\n                        onPlay={() => {\n                            this.setState({ isPlaying: true });\n                        }}\n                    />\n                    {!isPlaying &&\n                        (!src && thumbnailSrc ? (\n                            <img\n                                className={classNames('media-viewer-content-video-thumbnail', {\n                                    'media-blurred': isBlurred\n                                })}\n                                src={thumbnailSrc}\n                                alt=''\n                                width={videoWidth}\n                                height={videoHeight}\n                            />\n                        ) : (\n                            <div\n                                className='media-viewer-content-video-thumbnail'\n                                style={{\n                                    width: videoWidth,\n                                    height: videoHeight\n                                }}\n                            />\n                        ))}\n                </div>\n            );\n        } else if (isLottie) {\n            const defaultOptions = {\n                loop: true,\n                autoplay: true,\n                //path: src,\n                animationData: animationData,\n                rendererSettings: {\n                    preserveAspectRatio: 'xMidYMid slice'\n                }\n            };\n            const { speed } = this.state;\n\n            content = (\n                <Lottie\n                    ref={this.lottieRef}\n                    speed={speed}\n                    options={defaultOptions}\n                    height='auto'\n                    width={400}\n                    isStopped={false}\n                    isPaused={false}\n                />\n            );\n        } else {\n            content = <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />;\n        }\n\n        return (\n            <div className='media-viewer-content'>\n                <React.Suspense fallback=''>{content}</React.Suspense>\n                {/*<img className='media-viewer-content-image-preview' src={previewSrc} alt='' />*/}\n                <FileProgress file={file} zIndex={2} />\n                {text && text.length > 0 && <MediaCaption text={text} />}\n            </div>\n        );\n    }\n}\n\nMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired\n};\n\nexport default MediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport './MediaViewerButton.css';\n\nclass MediaViewerButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { disabled, onClick } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { disabled, grow, children } = this.props;\n\n        const className = classNames(\n            disabled ? 'media-viewer-button-disabled' : 'media-viewer-button',\n            { grow: grow }\n        );\n\n        return (\n            <div className={className} onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerButton.propTypes = {\n    disabled: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default MediaViewerButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport './MediaViewerFooterText.css';\n\nclass MediaViewerFooterText extends React.Component {\n    render() {\n        const { title, subtitle } = this.props;\n\n        return (\n            <div className=\"media-viewer-footer-text\">\n                <div className=\"media-viewer-footer-text-wrapper\">\n                    <span>{title}</span>\n                    {\n                        Boolean(subtitle) && (\n                            <span>\n                                &nbsp;\n                                {subtitle}\n                            </span>\n                        )}\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterText.propTypes = {\n    title: PropTypes.string,\n    subtitle: PropTypes.string\n};\n\nexport default MediaViewerFooterText;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport './MediaViewerFooterButton.css';\n\nconst styles = theme => ({\n    checked: {\n        color: theme.palette.primary.main\n    }\n});\n\nclass MediaViewerFooterButton extends React.Component {\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick, disabled } = this.props;\n\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { checked, children, classes, disabled, title } = this.props;\n\n        return (\n            <div\n                className={classNames(disabled ? 'media-viewer-footer-button-disabled' : 'media-viewer-footer-button', {\n                    [classes.checked]: checked\n                })}\n                title={title}\n                onClick={this.handleClick}>\n                {children}\n            </div>\n        );\n    }\n}\n\nMediaViewerFooterButton.propTypes = {\n    title: PropTypes.string,\n    disabled: PropTypes.bool,\n    checked: PropTypes.bool,\n    onClick: PropTypes.func\n};\n\nexport default withStyles(styles)(MediaViewerFooterButton);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SaveIcon from '@material-ui/icons/GetApp';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport FileStore from '../../Stores/FileStore';\nimport './MediaViewerFooterButton.css';\n\nconst iconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nclass MediaViewerDownloadButton extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { fileId } = props;\n\n        this.state = {\n            prevPropsFileId: fileId,\n            fileId: fileId,\n            disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { fileId } = props;\n        const { prevPropsFileId } = state;\n\n        if (fileId !== prevPropsFileId) {\n            return {\n                prevPropsFileId: fileId,\n                fileId: fileId,\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.on('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateAnimationBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateDocumentBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdatePhotoBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateMediaBlob);\n        FileStore.removeListener('clientUpdateVideoBlob', this.onClientUpdateMediaBlob);\n    }\n\n    onClientUpdateMediaBlob = update => {\n        const { fileId } = this.state;\n\n        if (fileId === update.fileId) {\n            this.setState({\n                disabled: MediaViewerDownloadButton.saveDisabled(fileId)\n            });\n        }\n    };\n\n    static saveDisabled = fileId => {\n        return !Boolean(FileStore.getBlob(fileId));\n    };\n\n    handleClick = event => {\n        event.stopPropagation();\n\n        const { onClick } = this.props;\n        const { disabled } = this.state;\n        if (disabled) return;\n\n        onClick(event);\n    };\n\n    render() {\n        const { title } = this.props;\n        const { disabled } = this.state;\n\n        return (\n            <MediaViewerFooterButton disabled={disabled} title={title} onClick={this.handleClick}>\n                <SaveIcon style={iconStyle} />\n            </MediaViewerFooterButton>\n        );\n    }\n}\n\nMediaViewerDownloadButton.propTypes = {\n    fileId: PropTypes.number.isRequired,\n    onClick: PropTypes.func.isRequired,\n    title: PropTypes.string\n};\n\nexport default MediaViewerDownloadButton;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { withTranslation } from 'react-i18next';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\nimport SlowMotionVideoIcon from '@material-ui/icons/SlowMotionVideo';\nimport MediaViewerControl from '../Tile/MediaViewerControl';\nimport MediaViewerContent from './MediaViewerContent';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport { setMediaViewerContent } from '../../Actions/Client';\nimport { getSize } from '../../Utils/Common';\nimport {\n    cancelPreloadMediaViewerContent,\n    getMediaFile,\n    loadMediaViewerContent,\n    preloadMediaViewerContent,\n    saveOrDownload\n} from '../../Utils/File';\nimport {\n    filterMessages,\n    isAnimationMessage,\n    isLottieMessage,\n    isMediaContent,\n    isVideoMessage\n} from '../../Utils/Message';\nimport { between } from '../../Utils/Common';\nimport { PHOTO_SIZE, PHOTO_BIG_SIZE, MEDIA_SLICE_LIMIT } from '../../Constants';\nimport MessageStore from '../../Stores/MessageStore';\nimport FileStore from '../../Stores/FileStore';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './MediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    transform: 'scaleX(-1)'\n};\n\nconst iconStyle = {\n    padding: 20\n};\n\nconst navigationIconStyle = {\n    padding: 35\n};\n\nclass MediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.contentRef = React.createRef();\n        this.history = [];\n\n        const { chatId, messageId } = this.props;\n\n        this.state = {\n            speed: 1,\n            background: 'media-viewer-default',\n            prevChatId: chatId,\n            prevMessageId: messageId,\n            currentMessageId: messageId,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false,\n            deleteForAll: true\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        if (nextState.background !== background) {\n            return true;\n        }\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentMessageId !== currentMessageId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        if (nextState.speed !== speed) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n        MessageStore.on('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.on('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.on('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n        MessageStore.removeListener('updateDeleteMessages', this.onUpdateDeleteMessages);\n        MessageStore.removeListener('updateNewMessage', this.onUpdateNewMessage);\n        MessageStore.removeListener('updateMessageContent', this.onUpdateMessageContent);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handleNext();\n        } else if (event.keyCode === 37) {\n            this.handlePrevious();\n        }\n    };\n\n    onUpdateMessageContent = update => {\n        const { chat_id, message_id, new_content, old_content } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (chatId !== chat_id) return;\n\n        const message = MessageStore.get(chat_id, message_id);\n        if (!message) return;\n\n        loadMediaViewerContent([message]);\n\n        const addMessage = isMediaContent(new_content) && !isMediaContent(old_content);\n        if (addMessage) {\n            if (\n                this.history.length >= 2 &&\n                (this.firstSliceLoaded ||\n                    between(message_id, this.history[0].id, this.history[this.history.length - 1].id))\n            ) {\n                let inserted = false;\n                let history = [];\n                for (let i = 0; i < this.history.length; i++) {\n                    if (this.history[i].id > message_id) {\n                        history.push(this.history[i]);\n                    } else {\n                        if (!inserted) {\n                            inserted = true;\n                            history.push(message);\n                        }\n                        history.push(this.history[i]);\n                    }\n                }\n                this.history = history;\n            }\n\n            const index = this.history.findIndex(x => x.id === currentMessageId);\n            this.setState({\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index),\n                totalCount: totalCount + 1\n            });\n        }\n\n        const removeMessage = !isMediaContent(new_content) && isMediaContent(old_content);\n        if (removeMessage) {\n            let oldHistory = this.history;\n            this.history = this.history.filter(x => x.id !== message_id);\n\n            if (currentMessageId === message_id) {\n                const filterMap = new Map();\n                filterMap.set(message_id, message_id);\n\n                this.moveToNextMedia(oldHistory, filterMap);\n                this.setState({\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            } else {\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    totalCount: Math.max(totalCount - 1, 0)\n                });\n            }\n        }\n    };\n\n    onUpdateDeleteMessages = update => {\n        const { chat_id, message_ids, is_permanent } = update;\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        if (!is_permanent) return;\n        if (chatId !== chat_id) return;\n\n        const filterMap = message_ids.reduce((accumulator, currentId) => {\n            accumulator.set(currentId, currentId);\n            return accumulator;\n        }, new Map());\n\n        const oldHistory = this.history;\n        let deletedCount = oldHistory.length;\n\n        this.history = this.history.filter(x => !filterMap.has(x.id));\n        deletedCount -= this.history.length;\n\n        this.setState({ totalCount: Math.max(totalCount - deletedCount, 0) });\n\n        if (!this.history.length) {\n            setMediaViewerContent(null);\n            return;\n        }\n\n        if (filterMap.has(currentMessageId)) {\n            this.moveToNextMedia(oldHistory, filterMap);\n        }\n    };\n\n    onUpdateNewMessage = update => {\n        const { chatId } = this.props;\n        const { currentMessageId, totalCount } = this.state;\n\n        const { message } = update;\n        if (!message) return;\n        if (!isMediaContent(message.content)) return;\n\n        if (message.chat_id !== chatId) return;\n        if (!this.firstSliceLoaded) return;\n\n        this.history = [message].concat(this.history);\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: totalCount + 1\n        });\n    };\n\n    getFilter = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return null;\n\n        const { content } = message;\n        if (!content) return null;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterChatPhoto'\n                };\n            }\n            case 'messagePhoto': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            case 'messageVideo': {\n                return {\n                    '@type': 'searchMessagesFilterPhotoAndVideo'\n                };\n            }\n            default: {\n                return null;\n            }\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId, messageId } = this.props;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: messageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: 2 * MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = result.messages;\n        this.firstSliceLoaded = result.messages.length === 0;\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index)\n        });\n\n        if (index === -1) {\n            this.history = [MessageStore.get(chatId, currentMessageId)];\n            preloadMediaViewerContent(0, this.history);\n        } else {\n            preloadMediaViewerContent(index, this.history);\n\n            const filter = this.getFilter(chatId, messageId);\n            if (!filter) return;\n\n            const maxCount = 1500;\n            let count = 0;\n            while (!this.firstSliceLoaded && count < maxCount) {\n                const result = await TdLibController.send({\n                    '@type': 'searchChatMessages',\n                    chat_id: chatId,\n                    query: '',\n                    sender_user_id: 0,\n                    from_message_id: this.history.length > 0 ? this.history[0].id : 0,\n                    offset: -99,\n                    limit: 99 + 1,\n                    filter: filter\n                });\n                count += result.messages.length;\n\n                filterMessages(result, this.history);\n                MessageStore.setItems(result.messages);\n\n                this.history = result.messages.concat(this.history);\n                this.firstSliceLoaded = result.messages.length === 0;\n\n                const { currentMessageId } = this.state;\n                const index = this.history.findIndex(x => x.id === currentMessageId);\n\n                this.setState({\n                    hasNextMedia: this.hasNextMedia(index),\n                    hasPreviousMedia: this.hasPreviousMedia(index),\n                    firstSliceLoaded: this.firstSliceLoaded,\n                    totalCount: result.total_count\n                });\n            }\n        }\n    };\n\n    handleClose = () => {\n        setMediaViewerContent(null);\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        if (index !== -1) {\n            cancelPreloadMediaViewerContent(index, this.history);\n        }\n    };\n\n    saveAnimation = (animation, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!animation) return;\n\n        const { animation: file, file_name } = animation;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateAnimationBlob(chat_id, id, fileId));\n    };\n\n    saveDocument = (document, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!document) return;\n\n        const { document: file, file_name } = document;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateDocumentBlob(chat_id, id, fileId));\n    };\n\n    saveVideo = (video, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!video) return;\n\n        const { video: file, file_name } = video;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file_name || id, message, () => FileStore.updateVideoBlob(chat_id, id, fileId));\n    };\n\n    savePhoto = (photo, message) => {\n        if (!message) return;\n        const { chat_id, id } = message;\n\n        if (!photo) return;\n\n        const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n        if (!photoSize) return;\n\n        const { photo: file } = photoSize;\n        if (!file) return;\n\n        const { id: fileId } = file;\n\n        saveOrDownload(file, file.id + '.jpg', message, () => FileStore.updatePhotoBlob(chat_id, id, fileId));\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { content } = message;\n        if (!content) return;\n\n        switch (content['@type']) {\n            case 'messageAnimation': {\n                const { animation } = content;\n\n                this.saveAnimation(animation, message);\n                break;\n            }\n            case 'messageChatChangePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageDocument': {\n                const { document } = content;\n\n                this.saveDocument(document, message);\n                break;\n            }\n            case 'messagePhoto': {\n                const { photo } = content;\n\n                this.savePhoto(photo, message);\n                break;\n            }\n            case 'messageText': {\n                const { web_page } = content;\n                if (!web_page) return;\n\n                const { animation, document, photo, video } = web_page;\n\n                if (animation) {\n                    this.saveAnimation(animation, message);\n                    return;\n                }\n\n                if (document) {\n                    this.saveDocument(document, message);\n                    return;\n                }\n\n                if (photo) {\n                    this.savePhoto(photo, message);\n                    return;\n                }\n\n                if (video) {\n                    this.saveVideo(video, message);\n                    return;\n                }\n                break;\n            }\n            case 'messageVideo': {\n                const { video } = content;\n\n                this.saveVideo(video, message);\n                break;\n            }\n        }\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        const { currentMessageId } = this.state;\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: {\n                chatId: chatId,\n                messageIds: [currentMessageId]\n            }\n        });\n    };\n\n    handleDelete = () => {\n        this.handleDialogOpen();\n        return;\n\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n        if (!message.content) return;\n\n        const { photo } = message.content;\n        if (photo) {\n            const photoSize = getSize(photo.sizes, PHOTO_BIG_SIZE);\n            if (photoSize) {\n                let file = photoSize.photo;\n                file = FileStore.get(file.id) || file;\n                if (file) {\n                    const store = FileStore.getReadWriteStore();\n\n                    FileStore.deleteLocalFile(store, file);\n                }\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: 0,\n                limit: MEDIA_SLICE_LIMIT,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.history = this.history.concat(result.messages);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentMessageId } = this.state;\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n        const nextIndex = index - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        const { chatId, messageId } = this.props;\n        const { currentMessageId } = this.state;\n\n        const filter = this.getFilter(chatId, messageId);\n\n        let result = {\n            '@type': 'messages',\n            messages: [],\n            total_count: 0\n        };\n        if (filter) {\n            result = await TdLibController.send({\n                '@type': 'searchChatMessages',\n                chat_id: chatId,\n                query: '',\n                sender_user_id: 0,\n                from_message_id: currentMessageId,\n                offset: -MEDIA_SLICE_LIMIT,\n                limit: MEDIA_SLICE_LIMIT + 1,\n                filter: filter\n            });\n        }\n\n        filterMessages(result, this.history);\n        MessageStore.setItems(result.messages);\n\n        this.firstSliceLoaded = result.messages.length === 0;\n        this.history = result.messages.concat(this.history);\n\n        const index = this.history.findIndex(x => x.id === currentMessageId);\n\n        this.setState({\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            firstSliceLoaded: this.firstSliceLoaded,\n            totalCount: result.total_count\n        });\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentMessageId: this.history[index].id,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        preloadMediaViewerContent(index, this.history);\n        return true;\n    };\n\n    moveToNextMedia = (oldHistory, filterMap) => {\n        const { currentMessageId } = this.state;\n\n        const index = oldHistory.findIndex(x => x.id === currentMessageId);\n        let nextId = 0;\n        for (let i = index - 1; i >= 0; i--) {\n            if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                nextId = oldHistory[i].id;\n                break;\n            }\n        }\n        if (!nextId) {\n            for (let i = index + 1; i < oldHistory.length; i++) {\n                if (filterMap && !filterMap.has(oldHistory[i].id)) {\n                    nextId = oldHistory[i].id;\n                    break;\n                }\n            }\n        }\n\n        if (!nextId) return;\n\n        const nextIndex = this.history.findIndex(x => x.id === nextId);\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            } else if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    handleDialogOpen = () => {\n        this.setState({ deleteConfirmationOpened: true });\n    };\n\n    handleDialogClose = () => {\n        this.setState({ deleteConfirmationOpened: false });\n    };\n\n    handleDone = () => {\n        this.setState({ deleteConfirmationOpened: false });\n\n        const { chatId } = this.props;\n        const { currentMessageId, deleteForAll } = this.state;\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        if (!message) return;\n\n        const { can_be_deleted_only_for_self, can_be_deleted_for_all_users } = message;\n        const canBeDeleted = can_be_deleted_only_for_self || can_be_deleted_for_all_users;\n        if (!canBeDeleted) return;\n\n        TdLibController.send({\n            '@type': 'deleteMessages',\n            chat_id: chatId,\n            message_ids: [currentMessageId],\n            revoke: can_be_deleted_for_all_users && deleteForAll\n        });\n    };\n\n    handleChangeDeleteForAll = event => {\n        this.setState({ deleteForAll: event.target.checked });\n    };\n\n    handleInvertColors = () => {\n        const { background } = this.state;\n\n        let nextBackground = 'media-viewer-default';\n        switch (background) {\n            case 'media-viewer-default': {\n                nextBackground = 'media-viewer-dark';\n                break;\n            }\n            case 'media-viewer-dark': {\n                nextBackground = 'media-viewer-light';\n                break;\n            }\n            case 'media-viewer-light': {\n                nextBackground = 'media-viewer-default';\n                break;\n            }\n        }\n\n        this.setState({\n            background: nextBackground\n        });\n    };\n\n    handleChangeSpeed = () => {\n        if (!this.contentRef) return;\n\n        const { current } = this.contentRef;\n        if (!current) return;\n\n        const { speed } = this.state;\n        const nextSpeed = speed < 1 ? 1 : 0.1;\n\n        this.setState({ speed: nextSpeed });\n\n        current.changeSpeed(nextSpeed);\n    };\n\n    canBeForwarded = (chatId, messageId) => {\n        const message = MessageStore.get(chatId, messageId);\n        if (!message) return false;\n\n        const { can_be_forwarded, content } = message;\n        if (!content) return false;\n\n        switch (content['@type']) {\n            case 'messageChatChangePhoto': {\n                return true;\n            }\n            default: {\n                return can_be_forwarded;\n            }\n        }\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            background,\n            currentMessageId,\n            deleteConfirmationOpened,\n            deleteForAll,\n            firstSliceLoaded,\n            hasNextMedia,\n            hasPreviousMedia,\n            speed,\n            totalCount\n        } = this.state;\n\n        let index = -1;\n        if (totalCount && firstSliceLoaded) {\n            index = this.history.findIndex(x => x.id === currentMessageId);\n        }\n        const maxCount = Math.max(this.history.length, totalCount);\n\n        const message = MessageStore.get(chatId, currentMessageId);\n        const { can_be_deleted_for_all_users, can_be_deleted_only_for_self } = message;\n\n        const canBeDeleted = can_be_deleted_for_all_users || can_be_deleted_only_for_self;\n        const canBeForwarded = this.canBeForwarded(chatId, currentMessageId);\n\n        let deleteConfirmationContent = '';\n        if (isVideoMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            deleteConfirmationContent = t('AreYouSureDeleteGIF');\n        } else {\n            deleteConfirmationContent = t('AreYouSureDeletePhoto');\n        }\n        const deleteConfirmation = deleteConfirmationOpened ? (\n            <Dialog\n                transitionDuration={0}\n                open={deleteConfirmationOpened}\n                onClose={this.handleDialogClose}\n                aria-labelledby='form-dialog-title'>\n                <DialogTitle id='form-dialog-title'>{t('AppName')}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>{deleteConfirmationContent}</DialogContentText>\n                    {can_be_deleted_for_all_users && (\n                        <FormControlLabel\n                            label={t('DeleteForAll')}\n                            control={\n                                <Checkbox color='primary' value='deleteAll' onChange={this.handleChangeDeleteForAll} />\n                            }\n                            checked={deleteForAll}\n                        />\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleDialogClose} color='primary'>\n                        {t('Cancel')}\n                    </Button>\n                    <Button onClick={this.handleDone} color='primary'>\n                        {t('Ok')}\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        ) : null;\n\n        const [width, height, file] = getMediaFile(chatId, currentMessageId, PHOTO_BIG_SIZE);\n\n        const fileId = file ? file.id : 0;\n        let title = t('AttachPhoto');\n        if (isVideoMessage(chatId, currentMessageId)) {\n            title = t('AttachVideo');\n        } else if (isAnimationMessage(chatId, currentMessageId)) {\n            title = t('AttachGif');\n        } else if (isLottieMessage(chatId, currentMessageId)) {\n            title = '';\n        }\n\n        return (\n            <div className={classNames('media-viewer', background)}>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <MediaViewerContent\n                            ref={this.contentRef}\n                            chatId={chatId}\n                            messageId={currentMessageId}\n                            size={PHOTO_BIG_SIZE}\n                            onClick={this.handlePrevious}\n                        />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <MediaViewerControl chatId={chatId} messageId={currentMessageId} />\n                    <MediaViewerFooterText\n                        title={title}\n                        subtitle={maxCount && index >= 0 ? `${maxCount - index} of ${maxCount}` : null}\n                    />\n                    {isLottieMessage(chatId, currentMessageId) && (\n                        <>\n                            <MediaViewerFooterButton\n                                title={t('ChangeSpeed')}\n                                checked={speed < 1}\n                                onClick={this.handleChangeSpeed}>\n                                <SlowMotionVideoIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                            <MediaViewerFooterButton\n                                title={t('InvertBackgroundColor')}\n                                onClick={this.handleInvertColors}>\n                                <InvertColorsIcon style={iconStyle} />\n                            </MediaViewerFooterButton>\n                        </>\n                    )}\n                    <MediaViewerDownloadButton title={t('Save')} fileId={fileId} onClick={this.handleSave} />\n                    <MediaViewerFooterButton\n                        title={t('Forward')}\n                        disabled={!canBeForwarded}\n                        onClick={this.handleForward}>\n                        <ReplyIcon style={forwardIconStyle} />\n                    </MediaViewerFooterButton>\n                    <MediaViewerFooterButton title={t('Delete')} disabled={!canBeDeleted} onClick={this.handleDelete}>\n                        <DeleteIcon style={iconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    messageId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(MediaViewer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FileProgress from './FileProgress';\nimport { getChatUserId } from '../../Utils/Chat';\nimport { PROFILE_PHOTO_BIG_SIZE } from '../../Constants';\nimport FileStore from '../../Stores/FileStore';\nimport './ProfileMediaViewer.css';\n\nclass ProfileMediaViewerContent extends React.Component {\n    constructor(props) {\n        super(props);\n\n        const { chatId, photo } = this.props;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n\n        this.state = {\n            prevChatId: chatId,\n            prevPhoto: photo,\n            width: PROFILE_PHOTO_BIG_SIZE,\n            height: PROFILE_PHOTO_BIG_SIZE,\n            file: file\n        };\n    }\n\n    static getDerivedStateFromProps(props, state) {\n        const { chatId, photo } = props;\n\n        if (chatId !== state.prevChatId || photo !== state.prevPhoto) {\n            return {\n                prevChatId: chatId,\n                prevPhoto: photo,\n                width: PROFILE_PHOTO_BIG_SIZE,\n                height: PROFILE_PHOTO_BIG_SIZE,\n                file: photo.big\n            };\n        }\n\n        return null;\n    }\n\n    componentDidMount() {\n        FileStore.on('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.on('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    componentWillUnmount() {\n        FileStore.removeListener('clientUpdateChatBlob', this.onClientUpdateChatBlob);\n        FileStore.removeListener('clientUpdateUserBlob', this.onClientUpdateUserBlob);\n    }\n\n    onClientUpdateChatBlob = update => {\n        const { chatId, photo } = this.props;\n\n        if (chatId === update.chatId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    onClientUpdateUserBlob = update => {\n        const { chatId, photo } = this.props;\n        const userId = getChatUserId(chatId);\n\n        if (userId === update.userId && photo.big.id === update.fileId) {\n            const file = FileStore.get(update.fileId) || this.state.file;\n            this.setState({\n                file: file\n            });\n        }\n    };\n\n    handleContentClick = event => {\n        if (event) event.stopPropagation();\n\n        this.props.onClick(event);\n    };\n\n    render() {\n        const { width, height, file } = this.state;\n        if (!file) return null;\n\n        const blob = FileStore.getBlob(file.id) || file.blob;\n        const src = FileStore.getBlobUrl(blob);\n\n        console.log('img.render ', src);\n        return (\n            <div className='media-viewer-content'>\n                <img className='media-viewer-content-image' src={src} alt='' onClick={this.handleContentClick} />\n                <FileProgress file={file} />\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerContent.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    photo: PropTypes.object.isRequired\n};\n\nexport default ProfileMediaViewerContent;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ChatTile from './ChatTile';\nimport MessageAuthor from '../Message/MessageAuthor';\nimport './MediaViewerControl.css';\n\nclass ProfileMediaViewerControl extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { chatId, date } = this.props;\n\n        return (\n            <div className='media-viewer-control'>\n                <div className='media-viewer-control-wrapper'>\n                    <ChatTile chatId={chatId} showSavedMessages={false} />\n                    <div className='media-viewer-control-content'>\n                        <div className='media-viewer-row'>\n                            <MessageAuthor chatId={chatId} />\n                        </div>\n                        {date && (\n                            <div className='media-viewer-row meta'>\n                                <span>{date}</span>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewerControl.propTypes = {\n    chatId: PropTypes.number.isRequired,\n    date: PropTypes.string\n};\n\nexport default ProfileMediaViewerControl;\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withTranslation } from 'react-i18next';\nimport CloseIcon from '@material-ui/icons/Close';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MediaViewerDownloadButton from './MediaViewerDownloadButton';\nimport MediaViewerButton from './MediaViewerButton';\nimport MediaViewerFooterText from './MediaViewerFooterText';\nimport MediaViewerFooterButton from './MediaViewerFooterButton';\nimport ProfileMediaViewerContent from './ProfileMediaViewerContent';\nimport ProfileMediaViewerControl from '../Tile/ProfileMediaViewerControl';\nimport { setProfileMediaViewerContent } from '../../Actions/Client';\nimport { getPhotoFromChat, getChatUserId, isPrivateChat } from '../../Utils/Chat';\nimport { getProfilePhotoDateHint, getProfilePhoto } from '../../Utils/User';\nimport { loadProfileMediaViewerContent, preloadProfileMediaViewerContent, saveOrDownload } from '../../Utils/File';\nimport ApplicationStore from '../../Stores/ApplicationStore';\nimport FileStore from '../../Stores/FileStore';\nimport ChatStore from '../../Stores/ChatStore';\nimport TdLibController from '../../Controllers/TdLibController';\nimport './ProfileMediaViewer.css';\n\nconst forwardIconStyle = {\n    padding: 20,\n    color: 'white',\n    transform: 'scaleX(-1)'\n};\n\nconst deleteIconStyle = {\n    padding: 20,\n    color: 'white'\n};\n\nconst navigationIconStyle = {\n    padding: 35,\n    color: 'white'\n};\n\nclass ProfileMediaViewer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.history = [];\n\n        const { chatId, fileId } = this.props;\n\n        this.state = {\n            prevChatId: chatId,\n            prevFileId: fileId,\n            currentIndex: 0,\n            hasNextMedia: false,\n            hasPreviousMedia: false,\n            deleteConfirmationOpened: false\n        };\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        const { chatId, messageId } = this.props;\n        const {\n            currentFileId,\n            hasPreviousMedia,\n            hasNextMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened\n        } = this.state;\n\n        if (nextProps.chatId !== chatId) {\n            return true;\n        }\n\n        if (nextProps.messageId !== messageId) {\n            return true;\n        }\n\n        if (nextState.currentFileId !== currentFileId) {\n            return true;\n        }\n\n        if (nextState.hasPrevousMedia !== hasPreviousMedia) {\n            return true;\n        }\n\n        if (nextState.hasNextMedia !== hasNextMedia) {\n            return true;\n        }\n\n        if (nextState.firstSliceLoaded !== firstSliceLoaded) {\n            return true;\n        }\n\n        if (nextState.totalCount !== totalCount) {\n            return true;\n        }\n\n        if (nextState.deleteConfirmationOpened !== deleteConfirmationOpened) {\n            return true;\n        }\n\n        return false;\n    }\n\n    componentDidMount() {\n        const { chatId } = this.props;\n        const photo = getPhotoFromChat(chatId);\n        loadProfileMediaViewerContent(chatId, [photo]);\n\n        this.loadHistory();\n\n        document.addEventListener('keydown', this.onKeyDown, false);\n    }\n\n    componentWillUnmount() {\n        document.removeEventListener('keydown', this.onKeyDown, false);\n    }\n\n    onKeyDown = event => {\n        if (event.keyCode === 27) {\n            const { deleteConfirmationOpened } = this.state;\n            if (deleteConfirmationOpened) return;\n\n            this.handleClose();\n        } else if (event.keyCode === 39) {\n            this.handlePrevious();\n        } else if (event.keyCode === 37) {\n            this.handleNext();\n        }\n    };\n\n    loadHistory = async () => {\n        const { chatId } = this.props;\n\n        if (!isPrivateChat(chatId)) return;\n\n        const result = await TdLibController.send({\n            '@type': 'getUserProfilePhotos',\n            user_id: getChatUserId(chatId),\n            offset: 0,\n            limit: 100\n        });\n\n        this.history = result.photos;\n        this.firstSliceLoaded = result.photos.length === 0;\n\n        const index = 0;\n\n        this.setState({\n            currentIndex: index,\n            hasNextMedia: this.hasNextMedia(index),\n            hasPreviousMedia: this.hasPreviousMedia(index),\n            totalCount: result.total_count\n        });\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n    };\n\n    handleClose = () => {\n        setProfileMediaViewerContent(null);\n    };\n\n    handleSave = () => {\n        const { chatId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        const chat = ChatStore.get(chatId);\n        if (!chat) return;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        if (!photo) return;\n        if (!photo.big) return;\n\n        const file = FileStore.get(photo.big.id) || photo.big;\n        if (!file) return;\n\n        saveOrDownload(file, file.id + '.jpg', chat, () => FileStore.updateChatPhotoBlob(chatId, file.id));\n    };\n\n    handleForward = () => {\n        const { chatId } = this.props;\n        if (!isPrivateChat(chatId)) return;\n\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        if (index < 0 || index >= this.history.length) return;\n        const photo = getProfilePhoto(this.history[index]);\n        if (!photo) return;\n\n        let { big: file } = photo;\n        file = FileStore.get(file.id) || file;\n        if (!file) return;\n\n        const photoSize = {\n            '@type': 'photoSize',\n            type: 'c',\n            photo: file,\n            width: 640,\n            height: 640\n        };\n\n        TdLibController.clientUpdate({\n            '@type': 'clientUpdateForward',\n            info: { photoSize }\n        });\n    };\n\n    handleDelete = () => {\n        const { chatId, messageId } = this.props;\n        const { currentIndex, totalCount } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const photo =\n            index > 0 && index < this.history.length ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n\n        if (photo) {\n            let file = photo.big;\n            file = FileStore.get(file.id) || file;\n            if (file) {\n                const store = FileStore.getReadWriteStore();\n\n                FileStore.deleteLocalFile(store, file);\n            }\n        }\n    };\n\n    hasPreviousMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index + 1;\n        return nextIndex < this.history.length;\n    };\n\n    handlePrevious = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex + 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === this.history.length - 1) {\n                this.loadPrevious();\n            }\n        });\n    };\n\n    loadPrevious = async () => {\n        return;\n    };\n\n    hasNextMedia = index => {\n        if (index === -1) return false;\n\n        const nextIndex = index - 1;\n        return nextIndex >= 0;\n    };\n\n    handleNext = event => {\n        if (event) {\n            event.stopPropagation();\n        }\n\n        const { currentIndex } = this.state;\n        const nextIndex = currentIndex - 1;\n\n        return this.loadMedia(nextIndex, () => {\n            if (nextIndex === 0) {\n                this.loadNext();\n            }\n        });\n    };\n\n    loadNext = async () => {\n        return;\n    };\n\n    loadMedia = (index, callback) => {\n        if (index < 0) return false;\n        if (index >= this.history.length) return false;\n\n        this.setState(\n            {\n                currentIndex: index,\n                hasNextMedia: this.hasNextMedia(index),\n                hasPreviousMedia: this.hasPreviousMedia(index)\n            },\n            callback\n        );\n\n        const { chatId } = this.props;\n\n        preloadProfileMediaViewerContent(chatId, index, this.history);\n        return true;\n    };\n\n    render() {\n        const { chatId, t } = this.props;\n        const {\n            currentIndex,\n            hasNextMedia,\n            hasPreviousMedia,\n            firstSliceLoaded,\n            totalCount,\n            deleteConfirmationOpened,\n            deleteForAll\n        } = this.state;\n\n        let index = -1;\n        if (totalCount) {\n            index = currentIndex;\n        }\n\n        const deleteConfirmation = null;\n        const inHistory = index >= 0 && index < this.history.length;\n        const photo = inHistory ? getProfilePhoto(this.history[index]) : getPhotoFromChat(chatId);\n        const userProfilePhoto = inHistory ? this.history[index] : null;\n        const { big: file } = photo;\n\n        return (\n            <div className='media-viewer'>\n                {deleteConfirmation}\n                <div className='media-viewer-wrapper' onClick={this.handlePrevious}>\n                    <div className='media-viewer-left-column'>\n                        <div className='media-viewer-button-placeholder' />\n                        <MediaViewerButton disabled={!hasNextMedia} grow onClick={this.handleNext}>\n                            <NavigateBeforeIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n\n                    <div className='media-viewer-content-column'>\n                        <ProfileMediaViewerContent chatId={chatId} photo={photo} onClick={this.handlePrevious} />\n                    </div>\n\n                    <div className='media-viewer-right-column'>\n                        <MediaViewerButton onClick={this.handleClose}>\n                            <CloseIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                        <MediaViewerButton disabled={!hasPreviousMedia} grow onClick={this.handlePrevious}>\n                            <NavigateNextIcon fontSize='large' style={navigationIconStyle} />\n                        </MediaViewerButton>\n                    </div>\n                </div>\n                <div className='media-viewer-footer'>\n                    <ProfileMediaViewerControl chatId={chatId} date={getProfilePhotoDateHint(userProfilePhoto)} />\n                    <MediaViewerFooterText\n                        title={t('AttachPhoto')}\n                        subtitle={totalCount && index >= 0 ? `${index + 1} of ${totalCount}` : null}\n                    />\n                    <MediaViewerDownloadButton title={t('Save')} fileId={file.id} onClick={this.handleSave} />\n                    {isPrivateChat(chatId) && (\n                        <MediaViewerFooterButton\n                            title={t('Forward')}\n                            disabled={!inHistory}\n                            onClick={this.handleForward}>\n                            <ReplyIcon style={forwardIconStyle} />\n                        </MediaViewerFooterButton>\n                    )}\n                    <MediaViewerFooterButton title={t('Delete')} disabled onClick={this.handleDelete}>\n                        <DeleteIcon style={deleteIconStyle} />\n                    </MediaViewerFooterButton>\n                </div>\n            </div>\n        );\n    }\n}\n\nProfileMediaViewer.propTypes = {\n    chatId: PropTypes.number.isRequired\n};\n\nexport default withTranslation()(ProfileMediaViewer);\n","/*\n *  Copyright (c) 2018-present, Evgeny Nadymov\n *\n * This source code is licensed under the GPL v.3.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport React, { Component } from 'react';\nimport classNames from 'classnames';\nimport { compose } from 'recompose';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport withLanguage from '../Language';\nimport withTheme from '../Theme';\nimport withSnackbarNotifications from '../Notifications';\nimport ForwardDialog from './Popup/ForwardDialog';\nimport ChatInfo from './ColumnRight/ChatInfo';\nimport Dialogs from './ColumnLeft/Dialogs';\nimport DialogDetails from './ColumnMiddle/DialogDetails';\nimport Footer from './Footer';\nimport MediaViewer from './Viewer/MediaViewer';\nimport ProfileMediaViewer from './Viewer/ProfileMediaViewer';\nimport { highlightMessage } from '../Actions/Client';\nimport ChatStore from '../Stores/ChatStore';\nimport UserStore from '../Stores/UserStore';\nimport ApplicationStore from '../Stores/ApplicationStore';\nimport TdLibController from '../Controllers/TdLibController';\nimport '../TelegramApp.css';\n\nconst styles = theme => ({\n    page: {\n        background: theme.palette.type === 'dark' ? theme.palette.background.default : '#FFFFFF',\n        color: theme.palette.text.primary\n    }\n});\n\nclass MainPage extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.dialogDetailsRef = React.createRef();\n\n        this.state = {\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible,\n            mediaViewerContent: ApplicationStore.mediaViewerContent,\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent,\n            forwardInfo: null\n        };\n\n        /*this.store = localForage.createInstance({\n                    name: 'tdlib'\n                });*/\n\n        //this.initDB();\n    }\n\n    componentDidMount() {\n        UserStore.on('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.on('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.on('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.on('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.on('clientUpdateProfileMediaViewerContent', this.onClientUpdateProfileMediaViewerContent);\n        ApplicationStore.on('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    componentWillUnmount() {\n        UserStore.removeListener('clientUpdateOpenUser', this.onClientUpdateOpenUser);\n        ChatStore.removeListener('clientUpdateOpenChat', this.onClientUpdateOpenChat);\n\n        ApplicationStore.removeListener('clientUpdateChatDetailsVisibility', this.onClientUpdateChatDetailsVisibility);\n        ApplicationStore.removeListener('clientUpdateMediaViewerContent', this.onClientUpdateMediaViewerContent);\n        ApplicationStore.removeListener(\n            'clientUpdateProfileMediaViewerContent',\n            this.onClientUpdateProfileMediaViewerContent\n        );\n        ApplicationStore.removeListener('clientUpdateForward', this.onClientUpdateForward);\n    }\n\n    onClientUpdateOpenChat = update => {\n        const { chatId, messageId, popup } = update;\n\n        this.handleSelectChat(chatId, messageId, popup);\n    };\n\n    onClientUpdateOpenUser = update => {\n        const { userId, popup } = update;\n\n        this.handleSelectUser(userId, popup);\n    };\n\n    onClientUpdateChatDetailsVisibility = update => {\n        this.setState({\n            isChatDetailsVisible: ApplicationStore.isChatDetailsVisible\n        });\n    };\n\n    onClientUpdateMediaViewerContent = update => {\n        this.setState({ mediaViewerContent: ApplicationStore.mediaViewerContent });\n    };\n\n    onClientUpdateProfileMediaViewerContent = update => {\n        this.setState({\n            profileMediaViewerContent: ApplicationStore.profileMediaViewerContent\n        });\n    };\n\n    onClientUpdateForward = update => {\n        const { info } = update;\n\n        this.setState({ forwardInfo: info });\n    };\n\n    handleSelectChat = (chatId, messageId = null, popup = false) => {\n        const currentChatId = ApplicationStore.getChatId();\n        const currentDialogChatId = ApplicationStore.dialogChatId;\n        const currentMessageId = ApplicationStore.getMessageId();\n\n        if (popup) {\n            if (currentDialogChatId !== chatId) {\n                TdLibController.clientUpdate({\n                    '@type': 'clientUpdateDialogChatId',\n                    chatId\n                });\n            }\n\n            return;\n        }\n\n        if (currentChatId === chatId && messageId && currentMessageId === messageId) {\n            this.dialogDetailsRef.current.scrollToMessage();\n            if (messageId) {\n                highlightMessage(chatId, messageId);\n            }\n        } else if (currentChatId === chatId && !messageId) {\n            this.dialogDetailsRef.current.scrollToStart();\n        } else {\n            TdLibController.setChatId(chatId, messageId);\n        }\n    };\n\n    handleSelectUser = async (userId, popup) => {\n        if (!userId) return;\n\n        const chat = await TdLibController.send({\n            '@type': 'createPrivateChat',\n            user_id: userId,\n            force: true\n        });\n\n        this.handleSelectChat(chat.id, null, popup);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { isChatDetailsVisible, mediaViewerContent, profileMediaViewerContent, forwardInfo } = this.state;\n\n        return (\n            <>\n                <div className={classNames(classes.page, 'page', { 'page-third-column': isChatDetailsVisible })}>\n                    <Dialogs onSelectChat={this.handleSelectChat} />\n                    <DialogDetails ref={this.dialogDetailsRef} />\n                    {isChatDetailsVisible && <ChatInfo />}\n                </div>\n                <Footer />\n                {mediaViewerContent && <MediaViewer {...mediaViewerContent} />}\n                {profileMediaViewerContent && <ProfileMediaViewer {...profileMediaViewerContent} />}\n                {forwardInfo && <ForwardDialog {...forwardInfo} />}\n            </>\n        );\n    }\n}\n\nMainPage.propTypes = {};\n\nconst enhance = compose(\n    withLanguage,\n    withTheme,\n    withStyles(styles),\n    withSnackbarNotifications\n);\n\nexport default enhance(MainPage);\n"],"sourceRoot":""}